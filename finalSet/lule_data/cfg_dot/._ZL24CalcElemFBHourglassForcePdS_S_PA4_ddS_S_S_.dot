digraph "CFG for '_ZL24CalcElemFBHourglassForcePdS_S_PA4_ddS_S_S_' function" {
	label="CFG for '_ZL24CalcElemFBHourglassForcePdS_S_PA4_ddS_S_S_' function";

	Node0x561418c18740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %xd.addr = alloca ptr, align 8\l  %yd.addr = alloca ptr, align 8\l  %zd.addr = alloca ptr, align 8\l  %hourgam.addr = alloca ptr, align 8\l  %coefficient.addr = alloca double, align 8\l  %hgfx.addr = alloca ptr, align 8\l  %hgfy.addr = alloca ptr, align 8\l  %hgfz.addr = alloca ptr, align 8\l  %hxx = alloca [4 x double], align 16\l  %i = alloca i32, align 4\l  %i34 = alloca i32, align 4\l  %i60 = alloca i32, align 4\l  %i109 = alloca i32, align 4\l  %i139 = alloca i32, align 4\l  %i188 = alloca i32, align 4\l  store ptr %xd, ptr %xd.addr, align 8\l  store ptr %yd, ptr %yd.addr, align 8\l  store ptr %zd, ptr %zd.addr, align 8\l  store ptr %hourgam, ptr %hourgam.addr, align 8\l  store double %coefficient, ptr %coefficient.addr, align 8\l  store ptr %hgfx, ptr %hgfx.addr, align 8\l  store ptr %hgfy, ptr %hgfy.addr, align 8\l  store ptr %hgfz, ptr %hgfz.addr, align 8\l  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x561418c18740 -> Node0x561418c19ce0[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x561418c19ce0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %0 = load i32, ptr %i, align 4\l  %cmp = icmp slt i32 %0, 4\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x561418c19ce0:s0 -> Node0x561418c1a050[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x561418c19ce0:s1 -> Node0x561418c1a0a0[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x561418c1a050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %1 = load ptr, ptr %hourgam.addr, align 8\l  %arrayidx = getelementptr inbounds [4 x double], ptr %1, i64 0\l  %2 = load i32, ptr %i, align 4\l  %idxprom = sext i32 %2 to i64\l  %arrayidx1 = getelementptr inbounds [4 x double], ptr %arrayidx, i64 0, i64\l... %idxprom\l  %3 = load double, ptr %arrayidx1, align 8\l  %4 = load ptr, ptr %xd.addr, align 8\l  %arrayidx2 = getelementptr inbounds double, ptr %4, i64 0\l  %5 = load double, ptr %arrayidx2, align 8\l  %6 = load ptr, ptr %hourgam.addr, align 8\l  %arrayidx3 = getelementptr inbounds [4 x double], ptr %6, i64 1\l  %7 = load i32, ptr %i, align 4\l  %idxprom4 = sext i32 %7 to i64\l  %arrayidx5 = getelementptr inbounds [4 x double], ptr %arrayidx3, i64 0, i64\l... %idxprom4\l  %8 = load double, ptr %arrayidx5, align 8\l  %9 = load ptr, ptr %xd.addr, align 8\l  %arrayidx6 = getelementptr inbounds double, ptr %9, i64 1\l  %10 = load double, ptr %arrayidx6, align 8\l  %mul7 = fmul double %8, %10\l  %11 = call double @llvm.fmuladd.f64(double %3, double %5, double %mul7)\l  %12 = load ptr, ptr %hourgam.addr, align 8\l  %arrayidx8 = getelementptr inbounds [4 x double], ptr %12, i64 2\l  %13 = load i32, ptr %i, align 4\l  %idxprom9 = sext i32 %13 to i64\l  %arrayidx10 = getelementptr inbounds [4 x double], ptr %arrayidx8, i64 0,\l... i64 %idxprom9\l  %14 = load double, ptr %arrayidx10, align 8\l  %15 = load ptr, ptr %xd.addr, align 8\l  %arrayidx11 = getelementptr inbounds double, ptr %15, i64 2\l  %16 = load double, ptr %arrayidx11, align 8\l  %17 = call double @llvm.fmuladd.f64(double %14, double %16, double %11)\l  %18 = load ptr, ptr %hourgam.addr, align 8\l  %arrayidx12 = getelementptr inbounds [4 x double], ptr %18, i64 3\l  %19 = load i32, ptr %i, align 4\l  %idxprom13 = sext i32 %19 to i64\l  %arrayidx14 = getelementptr inbounds [4 x double], ptr %arrayidx12, i64 0,\l... i64 %idxprom13\l  %20 = load double, ptr %arrayidx14, align 8\l  %21 = load ptr, ptr %xd.addr, align 8\l  %arrayidx15 = getelementptr inbounds double, ptr %21, i64 3\l  %22 = load double, ptr %arrayidx15, align 8\l  %23 = call double @llvm.fmuladd.f64(double %20, double %22, double %17)\l  %24 = load ptr, ptr %hourgam.addr, align 8\l  %arrayidx16 = getelementptr inbounds [4 x double], ptr %24, i64 4\l  %25 = load i32, ptr %i, align 4\l  %idxprom17 = sext i32 %25 to i64\l  %arrayidx18 = getelementptr inbounds [4 x double], ptr %arrayidx16, i64 0,\l... i64 %idxprom17\l  %26 = load double, ptr %arrayidx18, align 8\l  %27 = load ptr, ptr %xd.addr, align 8\l  %arrayidx19 = getelementptr inbounds double, ptr %27, i64 4\l  %28 = load double, ptr %arrayidx19, align 8\l  %29 = call double @llvm.fmuladd.f64(double %26, double %28, double %23)\l  %30 = load ptr, ptr %hourgam.addr, align 8\l  %arrayidx20 = getelementptr inbounds [4 x double], ptr %30, i64 5\l  %31 = load i32, ptr %i, align 4\l  %idxprom21 = sext i32 %31 to i64\l  %arrayidx22 = getelementptr inbounds [4 x double], ptr %arrayidx20, i64 0,\l... i64 %idxprom21\l  %32 = load double, ptr %arrayidx22, align 8\l  %33 = load ptr, ptr %xd.addr, align 8\l  %arrayidx23 = getelementptr inbounds double, ptr %33, i64 5\l  %34 = load double, ptr %arrayidx23, align 8\l  %35 = call double @llvm.fmuladd.f64(double %32, double %34, double %29)\l  %36 = load ptr, ptr %hourgam.addr, align 8\l  %arrayidx24 = getelementptr inbounds [4 x double], ptr %36, i64 6\l  %37 = load i32, ptr %i, align 4\l  %idxprom25 = sext i32 %37 to i64\l  %arrayidx26 = getelementptr inbounds [4 x double], ptr %arrayidx24, i64 0,\l... i64 %idxprom25\l  %38 = load double, ptr %arrayidx26, align 8\l  %39 = load ptr, ptr %xd.addr, align 8\l  %arrayidx27 = getelementptr inbounds double, ptr %39, i64 6\l  %40 = load double, ptr %arrayidx27, align 8\l  %41 = call double @llvm.fmuladd.f64(double %38, double %40, double %35)\l  %42 = load ptr, ptr %hourgam.addr, align 8\l  %arrayidx28 = getelementptr inbounds [4 x double], ptr %42, i64 7\l  %43 = load i32, ptr %i, align 4\l  %idxprom29 = sext i32 %43 to i64\l  %arrayidx30 = getelementptr inbounds [4 x double], ptr %arrayidx28, i64 0,\l... i64 %idxprom29\l  %44 = load double, ptr %arrayidx30, align 8\l  %45 = load ptr, ptr %xd.addr, align 8\l  %arrayidx31 = getelementptr inbounds double, ptr %45, i64 7\l  %46 = load double, ptr %arrayidx31, align 8\l  %47 = call double @llvm.fmuladd.f64(double %44, double %46, double %41)\l  %48 = load i32, ptr %i, align 4\l  %idxprom32 = sext i32 %48 to i64\l  %arrayidx33 = getelementptr inbounds [4 x double], ptr %hxx, i64 0, i64\l... %idxprom32\l  store double %47, ptr %arrayidx33, align 8\l  br label %for.inc\l}"];
	Node0x561418c1a050 -> Node0x561418c1e840[tooltip="for.body -> for.inc\nProbability 100.00%" ];
	Node0x561418c1e840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %49 = load i32, ptr %i, align 4\l  %inc = add nsw i32 %49, 1\l  store i32 %inc, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x561418c1e840 -> Node0x561418c19ce0[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x561418c1a0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  store i32 0, ptr %i34, align 4\l  br label %for.cond35\l}"];
	Node0x561418c1a0a0 -> Node0x561418c1ec90[tooltip="for.end -> for.cond35\nProbability 100.00%" ];
	Node0x561418c1ec90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond35:\l|  %50 = load i32, ptr %i34, align 4\l  %cmp36 = icmp slt i32 %50, 8\l  br i1 %cmp36, label %for.body37, label %for.end59\l|{<s0>T|<s1>F}}"];
	Node0x561418c1ec90:s0 -> Node0x561418c1eeb0[tooltip="for.cond35 -> for.body37\nProbability 96.88%" ];
	Node0x561418c1ec90:s1 -> Node0x561418c1ef30[tooltip="for.cond35 -> for.end59\nProbability 3.12%" ];
	Node0x561418c1eeb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body37:\l|  %51 = load double, ptr %coefficient.addr, align 8\l  %52 = load ptr, ptr %hourgam.addr, align 8\l  %53 = load i32, ptr %i34, align 4\l  %idxprom38 = sext i32 %53 to i64\l  %arrayidx39 = getelementptr inbounds [4 x double], ptr %52, i64 %idxprom38\l  %arrayidx40 = getelementptr inbounds [4 x double], ptr %arrayidx39, i64 0,\l... i64 0\l  %54 = load double, ptr %arrayidx40, align 8\l  %arrayidx41 = getelementptr inbounds [4 x double], ptr %hxx, i64 0, i64 0\l  %55 = load double, ptr %arrayidx41, align 16\l  %56 = load ptr, ptr %hourgam.addr, align 8\l  %57 = load i32, ptr %i34, align 4\l  %idxprom42 = sext i32 %57 to i64\l  %arrayidx43 = getelementptr inbounds [4 x double], ptr %56, i64 %idxprom42\l  %arrayidx44 = getelementptr inbounds [4 x double], ptr %arrayidx43, i64 0,\l... i64 1\l  %58 = load double, ptr %arrayidx44, align 8\l  %arrayidx45 = getelementptr inbounds [4 x double], ptr %hxx, i64 0, i64 1\l  %59 = load double, ptr %arrayidx45, align 8\l  %mul46 = fmul double %58, %59\l  %60 = call double @llvm.fmuladd.f64(double %54, double %55, double %mul46)\l  %61 = load ptr, ptr %hourgam.addr, align 8\l  %62 = load i32, ptr %i34, align 4\l  %idxprom47 = sext i32 %62 to i64\l  %arrayidx48 = getelementptr inbounds [4 x double], ptr %61, i64 %idxprom47\l  %arrayidx49 = getelementptr inbounds [4 x double], ptr %arrayidx48, i64 0,\l... i64 2\l  %63 = load double, ptr %arrayidx49, align 8\l  %arrayidx50 = getelementptr inbounds [4 x double], ptr %hxx, i64 0, i64 2\l  %64 = load double, ptr %arrayidx50, align 16\l  %65 = call double @llvm.fmuladd.f64(double %63, double %64, double %60)\l  %66 = load ptr, ptr %hourgam.addr, align 8\l  %67 = load i32, ptr %i34, align 4\l  %idxprom51 = sext i32 %67 to i64\l  %arrayidx52 = getelementptr inbounds [4 x double], ptr %66, i64 %idxprom51\l  %arrayidx53 = getelementptr inbounds [4 x double], ptr %arrayidx52, i64 0,\l... i64 3\l  %68 = load double, ptr %arrayidx53, align 8\l  %arrayidx54 = getelementptr inbounds [4 x double], ptr %hxx, i64 0, i64 3\l  %69 = load double, ptr %arrayidx54, align 8\l  %70 = call double @llvm.fmuladd.f64(double %68, double %69, double %65)\l  %mul = fmul double %51, %70\l  %71 = load ptr, ptr %hgfx.addr, align 8\l  %72 = load i32, ptr %i34, align 4\l  %idxprom55 = sext i32 %72 to i64\l  %arrayidx56 = getelementptr inbounds double, ptr %71, i64 %idxprom55\l  store double %mul, ptr %arrayidx56, align 8\l  br label %for.inc57\l}"];
	Node0x561418c1eeb0 -> Node0x561418c20e40[tooltip="for.body37 -> for.inc57\nProbability 100.00%" ];
	Node0x561418c20e40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc57:\l|  %73 = load i32, ptr %i34, align 4\l  %inc58 = add nsw i32 %73, 1\l  store i32 %inc58, ptr %i34, align 4\l  br label %for.cond35, !llvm.loop !8\l}"];
	Node0x561418c20e40 -> Node0x561418c1ec90[tooltip="for.inc57 -> for.cond35\nProbability 100.00%" ];
	Node0x561418c1ef30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end59:\l|  store i32 0, ptr %i60, align 4\l  br label %for.cond61\l}"];
	Node0x561418c1ef30 -> Node0x561418c21340[tooltip="for.end59 -> for.cond61\nProbability 100.00%" ];
	Node0x561418c21340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond61:\l|  %74 = load i32, ptr %i60, align 4\l  %cmp62 = icmp slt i32 %74, 4\l  br i1 %cmp62, label %for.body63, label %for.end108\l|{<s0>T|<s1>F}}"];
	Node0x561418c21340:s0 -> Node0x561418c21560[tooltip="for.cond61 -> for.body63\nProbability 96.88%" ];
	Node0x561418c21340:s1 -> Node0x561418c215e0[tooltip="for.cond61 -> for.end108\nProbability 3.12%" ];
	Node0x561418c21560 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body63:\l|  %75 = load ptr, ptr %hourgam.addr, align 8\l  %arrayidx64 = getelementptr inbounds [4 x double], ptr %75, i64 0\l  %76 = load i32, ptr %i60, align 4\l  %idxprom65 = sext i32 %76 to i64\l  %arrayidx66 = getelementptr inbounds [4 x double], ptr %arrayidx64, i64 0,\l... i64 %idxprom65\l  %77 = load double, ptr %arrayidx66, align 8\l  %78 = load ptr, ptr %yd.addr, align 8\l  %arrayidx67 = getelementptr inbounds double, ptr %78, i64 0\l  %79 = load double, ptr %arrayidx67, align 8\l  %80 = load ptr, ptr %hourgam.addr, align 8\l  %arrayidx69 = getelementptr inbounds [4 x double], ptr %80, i64 1\l  %81 = load i32, ptr %i60, align 4\l  %idxprom70 = sext i32 %81 to i64\l  %arrayidx71 = getelementptr inbounds [4 x double], ptr %arrayidx69, i64 0,\l... i64 %idxprom70\l  %82 = load double, ptr %arrayidx71, align 8\l  %83 = load ptr, ptr %yd.addr, align 8\l  %arrayidx72 = getelementptr inbounds double, ptr %83, i64 1\l  %84 = load double, ptr %arrayidx72, align 8\l  %mul73 = fmul double %82, %84\l  %85 = call double @llvm.fmuladd.f64(double %77, double %79, double %mul73)\l  %86 = load ptr, ptr %hourgam.addr, align 8\l  %arrayidx74 = getelementptr inbounds [4 x double], ptr %86, i64 2\l  %87 = load i32, ptr %i60, align 4\l  %idxprom75 = sext i32 %87 to i64\l  %arrayidx76 = getelementptr inbounds [4 x double], ptr %arrayidx74, i64 0,\l... i64 %idxprom75\l  %88 = load double, ptr %arrayidx76, align 8\l  %89 = load ptr, ptr %yd.addr, align 8\l  %arrayidx77 = getelementptr inbounds double, ptr %89, i64 2\l  %90 = load double, ptr %arrayidx77, align 8\l  %91 = call double @llvm.fmuladd.f64(double %88, double %90, double %85)\l  %92 = load ptr, ptr %hourgam.addr, align 8\l  %arrayidx79 = getelementptr inbounds [4 x double], ptr %92, i64 3\l  %93 = load i32, ptr %i60, align 4\l  %idxprom80 = sext i32 %93 to i64\l  %arrayidx81 = getelementptr inbounds [4 x double], ptr %arrayidx79, i64 0,\l... i64 %idxprom80\l  %94 = load double, ptr %arrayidx81, align 8\l  %95 = load ptr, ptr %yd.addr, align 8\l  %arrayidx82 = getelementptr inbounds double, ptr %95, i64 3\l  %96 = load double, ptr %arrayidx82, align 8\l  %97 = call double @llvm.fmuladd.f64(double %94, double %96, double %91)\l  %98 = load ptr, ptr %hourgam.addr, align 8\l  %arrayidx84 = getelementptr inbounds [4 x double], ptr %98, i64 4\l  %99 = load i32, ptr %i60, align 4\l  %idxprom85 = sext i32 %99 to i64\l  %arrayidx86 = getelementptr inbounds [4 x double], ptr %arrayidx84, i64 0,\l... i64 %idxprom85\l  %100 = load double, ptr %arrayidx86, align 8\l  %101 = load ptr, ptr %yd.addr, align 8\l  %arrayidx87 = getelementptr inbounds double, ptr %101, i64 4\l  %102 = load double, ptr %arrayidx87, align 8\l  %103 = call double @llvm.fmuladd.f64(double %100, double %102, double %97)\l  %104 = load ptr, ptr %hourgam.addr, align 8\l  %arrayidx89 = getelementptr inbounds [4 x double], ptr %104, i64 5\l  %105 = load i32, ptr %i60, align 4\l  %idxprom90 = sext i32 %105 to i64\l  %arrayidx91 = getelementptr inbounds [4 x double], ptr %arrayidx89, i64 0,\l... i64 %idxprom90\l  %106 = load double, ptr %arrayidx91, align 8\l  %107 = load ptr, ptr %yd.addr, align 8\l  %arrayidx92 = getelementptr inbounds double, ptr %107, i64 5\l  %108 = load double, ptr %arrayidx92, align 8\l  %109 = call double @llvm.fmuladd.f64(double %106, double %108, double %103)\l  %110 = load ptr, ptr %hourgam.addr, align 8\l  %arrayidx94 = getelementptr inbounds [4 x double], ptr %110, i64 6\l  %111 = load i32, ptr %i60, align 4\l  %idxprom95 = sext i32 %111 to i64\l  %arrayidx96 = getelementptr inbounds [4 x double], ptr %arrayidx94, i64 0,\l... i64 %idxprom95\l  %112 = load double, ptr %arrayidx96, align 8\l  %113 = load ptr, ptr %yd.addr, align 8\l  %arrayidx97 = getelementptr inbounds double, ptr %113, i64 6\l  %114 = load double, ptr %arrayidx97, align 8\l  %115 = call double @llvm.fmuladd.f64(double %112, double %114, double %109)\l  %116 = load ptr, ptr %hourgam.addr, align 8\l  %arrayidx99 = getelementptr inbounds [4 x double], ptr %116, i64 7\l  %117 = load i32, ptr %i60, align 4\l  %idxprom100 = sext i32 %117 to i64\l  %arrayidx101 = getelementptr inbounds [4 x double], ptr %arrayidx99, i64 0,\l... i64 %idxprom100\l  %118 = load double, ptr %arrayidx101, align 8\l  %119 = load ptr, ptr %yd.addr, align 8\l  %arrayidx102 = getelementptr inbounds double, ptr %119, i64 7\l  %120 = load double, ptr %arrayidx102, align 8\l  %121 = call double @llvm.fmuladd.f64(double %118, double %120, double %115)\l  %122 = load i32, ptr %i60, align 4\l  %idxprom104 = sext i32 %122 to i64\l  %arrayidx105 = getelementptr inbounds [4 x double], ptr %hxx, i64 0, i64\l... %idxprom104\l  store double %121, ptr %arrayidx105, align 8\l  br label %for.inc106\l}"];
	Node0x561418c21560 -> Node0x561418c25e90[tooltip="for.body63 -> for.inc106\nProbability 100.00%" ];
	Node0x561418c25e90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc106:\l|  %123 = load i32, ptr %i60, align 4\l  %inc107 = add nsw i32 %123, 1\l  store i32 %inc107, ptr %i60, align 4\l  br label %for.cond61, !llvm.loop !9\l}"];
	Node0x561418c25e90 -> Node0x561418c21340[tooltip="for.inc106 -> for.cond61\nProbability 100.00%" ];
	Node0x561418c215e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end108:\l|  store i32 0, ptr %i109, align 4\l  br label %for.cond110\l}"];
	Node0x561418c215e0 -> Node0x561418c26390[tooltip="for.end108 -> for.cond110\nProbability 100.00%" ];
	Node0x561418c26390 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond110:\l|  %124 = load i32, ptr %i109, align 4\l  %cmp111 = icmp slt i32 %124, 8\l  br i1 %cmp111, label %for.body112, label %for.end138\l|{<s0>T|<s1>F}}"];
	Node0x561418c26390:s0 -> Node0x561418c26590[tooltip="for.cond110 -> for.body112\nProbability 96.88%" ];
	Node0x561418c26390:s1 -> Node0x561418c26610[tooltip="for.cond110 -> for.end138\nProbability 3.12%" ];
	Node0x561418c26590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body112:\l|  %125 = load double, ptr %coefficient.addr, align 8\l  %126 = load ptr, ptr %hourgam.addr, align 8\l  %127 = load i32, ptr %i109, align 4\l  %idxprom113 = sext i32 %127 to i64\l  %arrayidx114 = getelementptr inbounds [4 x double], ptr %126, i64 %idxprom113\l  %arrayidx115 = getelementptr inbounds [4 x double], ptr %arrayidx114, i64 0,\l... i64 0\l  %128 = load double, ptr %arrayidx115, align 8\l  %arrayidx116 = getelementptr inbounds [4 x double], ptr %hxx, i64 0, i64 0\l  %129 = load double, ptr %arrayidx116, align 16\l  %130 = load ptr, ptr %hourgam.addr, align 8\l  %131 = load i32, ptr %i109, align 4\l  %idxprom118 = sext i32 %131 to i64\l  %arrayidx119 = getelementptr inbounds [4 x double], ptr %130, i64 %idxprom118\l  %arrayidx120 = getelementptr inbounds [4 x double], ptr %arrayidx119, i64 0,\l... i64 1\l  %132 = load double, ptr %arrayidx120, align 8\l  %arrayidx121 = getelementptr inbounds [4 x double], ptr %hxx, i64 0, i64 1\l  %133 = load double, ptr %arrayidx121, align 8\l  %mul122 = fmul double %132, %133\l  %134 = call double @llvm.fmuladd.f64(double %128, double %129, double\l... %mul122)\l  %135 = load ptr, ptr %hourgam.addr, align 8\l  %136 = load i32, ptr %i109, align 4\l  %idxprom123 = sext i32 %136 to i64\l  %arrayidx124 = getelementptr inbounds [4 x double], ptr %135, i64 %idxprom123\l  %arrayidx125 = getelementptr inbounds [4 x double], ptr %arrayidx124, i64 0,\l... i64 2\l  %137 = load double, ptr %arrayidx125, align 8\l  %arrayidx126 = getelementptr inbounds [4 x double], ptr %hxx, i64 0, i64 2\l  %138 = load double, ptr %arrayidx126, align 16\l  %139 = call double @llvm.fmuladd.f64(double %137, double %138, double %134)\l  %140 = load ptr, ptr %hourgam.addr, align 8\l  %141 = load i32, ptr %i109, align 4\l  %idxprom128 = sext i32 %141 to i64\l  %arrayidx129 = getelementptr inbounds [4 x double], ptr %140, i64 %idxprom128\l  %arrayidx130 = getelementptr inbounds [4 x double], ptr %arrayidx129, i64 0,\l... i64 3\l  %142 = load double, ptr %arrayidx130, align 8\l  %arrayidx131 = getelementptr inbounds [4 x double], ptr %hxx, i64 0, i64 3\l  %143 = load double, ptr %arrayidx131, align 8\l  %144 = call double @llvm.fmuladd.f64(double %142, double %143, double %139)\l  %mul133 = fmul double %125, %144\l  %145 = load ptr, ptr %hgfy.addr, align 8\l  %146 = load i32, ptr %i109, align 4\l  %idxprom134 = sext i32 %146 to i64\l  %arrayidx135 = getelementptr inbounds double, ptr %145, i64 %idxprom134\l  store double %mul133, ptr %arrayidx135, align 8\l  br label %for.inc136\l}"];
	Node0x561418c26590 -> Node0x561418c28520[tooltip="for.body112 -> for.inc136\nProbability 100.00%" ];
	Node0x561418c28520 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc136:\l|  %147 = load i32, ptr %i109, align 4\l  %inc137 = add nsw i32 %147, 1\l  store i32 %inc137, ptr %i109, align 4\l  br label %for.cond110, !llvm.loop !10\l}"];
	Node0x561418c28520 -> Node0x561418c26390[tooltip="for.inc136 -> for.cond110\nProbability 100.00%" ];
	Node0x561418c26610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end138:\l|  store i32 0, ptr %i139, align 4\l  br label %for.cond140\l}"];
	Node0x561418c26610 -> Node0x561418c28a20[tooltip="for.end138 -> for.cond140\nProbability 100.00%" ];
	Node0x561418c28a20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond140:\l|  %148 = load i32, ptr %i139, align 4\l  %cmp141 = icmp slt i32 %148, 4\l  br i1 %cmp141, label %for.body142, label %for.end187\l|{<s0>T|<s1>F}}"];
	Node0x561418c28a20:s0 -> Node0x561418c28c40[tooltip="for.cond140 -> for.body142\nProbability 96.88%" ];
	Node0x561418c28a20:s1 -> Node0x561418c28cc0[tooltip="for.cond140 -> for.end187\nProbability 3.12%" ];
	Node0x561418c28c40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body142:\l|  %149 = load ptr, ptr %hourgam.addr, align 8\l  %arrayidx143 = getelementptr inbounds [4 x double], ptr %149, i64 0\l  %150 = load i32, ptr %i139, align 4\l  %idxprom144 = sext i32 %150 to i64\l  %arrayidx145 = getelementptr inbounds [4 x double], ptr %arrayidx143, i64 0,\l... i64 %idxprom144\l  %151 = load double, ptr %arrayidx145, align 8\l  %152 = load ptr, ptr %zd.addr, align 8\l  %arrayidx146 = getelementptr inbounds double, ptr %152, i64 0\l  %153 = load double, ptr %arrayidx146, align 8\l  %154 = load ptr, ptr %hourgam.addr, align 8\l  %arrayidx148 = getelementptr inbounds [4 x double], ptr %154, i64 1\l  %155 = load i32, ptr %i139, align 4\l  %idxprom149 = sext i32 %155 to i64\l  %arrayidx150 = getelementptr inbounds [4 x double], ptr %arrayidx148, i64 0,\l... i64 %idxprom149\l  %156 = load double, ptr %arrayidx150, align 8\l  %157 = load ptr, ptr %zd.addr, align 8\l  %arrayidx151 = getelementptr inbounds double, ptr %157, i64 1\l  %158 = load double, ptr %arrayidx151, align 8\l  %mul152 = fmul double %156, %158\l  %159 = call double @llvm.fmuladd.f64(double %151, double %153, double\l... %mul152)\l  %160 = load ptr, ptr %hourgam.addr, align 8\l  %arrayidx153 = getelementptr inbounds [4 x double], ptr %160, i64 2\l  %161 = load i32, ptr %i139, align 4\l  %idxprom154 = sext i32 %161 to i64\l  %arrayidx155 = getelementptr inbounds [4 x double], ptr %arrayidx153, i64 0,\l... i64 %idxprom154\l  %162 = load double, ptr %arrayidx155, align 8\l  %163 = load ptr, ptr %zd.addr, align 8\l  %arrayidx156 = getelementptr inbounds double, ptr %163, i64 2\l  %164 = load double, ptr %arrayidx156, align 8\l  %165 = call double @llvm.fmuladd.f64(double %162, double %164, double %159)\l  %166 = load ptr, ptr %hourgam.addr, align 8\l  %arrayidx158 = getelementptr inbounds [4 x double], ptr %166, i64 3\l  %167 = load i32, ptr %i139, align 4\l  %idxprom159 = sext i32 %167 to i64\l  %arrayidx160 = getelementptr inbounds [4 x double], ptr %arrayidx158, i64 0,\l... i64 %idxprom159\l  %168 = load double, ptr %arrayidx160, align 8\l  %169 = load ptr, ptr %zd.addr, align 8\l  %arrayidx161 = getelementptr inbounds double, ptr %169, i64 3\l  %170 = load double, ptr %arrayidx161, align 8\l  %171 = call double @llvm.fmuladd.f64(double %168, double %170, double %165)\l  %172 = load ptr, ptr %hourgam.addr, align 8\l  %arrayidx163 = getelementptr inbounds [4 x double], ptr %172, i64 4\l  %173 = load i32, ptr %i139, align 4\l  %idxprom164 = sext i32 %173 to i64\l  %arrayidx165 = getelementptr inbounds [4 x double], ptr %arrayidx163, i64 0,\l... i64 %idxprom164\l  %174 = load double, ptr %arrayidx165, align 8\l  %175 = load ptr, ptr %zd.addr, align 8\l  %arrayidx166 = getelementptr inbounds double, ptr %175, i64 4\l  %176 = load double, ptr %arrayidx166, align 8\l  %177 = call double @llvm.fmuladd.f64(double %174, double %176, double %171)\l  %178 = load ptr, ptr %hourgam.addr, align 8\l  %arrayidx168 = getelementptr inbounds [4 x double], ptr %178, i64 5\l  %179 = load i32, ptr %i139, align 4\l  %idxprom169 = sext i32 %179 to i64\l  %arrayidx170 = getelementptr inbounds [4 x double], ptr %arrayidx168, i64 0,\l... i64 %idxprom169\l  %180 = load double, ptr %arrayidx170, align 8\l  %181 = load ptr, ptr %zd.addr, align 8\l  %arrayidx171 = getelementptr inbounds double, ptr %181, i64 5\l  %182 = load double, ptr %arrayidx171, align 8\l  %183 = call double @llvm.fmuladd.f64(double %180, double %182, double %177)\l  %184 = load ptr, ptr %hourgam.addr, align 8\l  %arrayidx173 = getelementptr inbounds [4 x double], ptr %184, i64 6\l  %185 = load i32, ptr %i139, align 4\l  %idxprom174 = sext i32 %185 to i64\l  %arrayidx175 = getelementptr inbounds [4 x double], ptr %arrayidx173, i64 0,\l... i64 %idxprom174\l  %186 = load double, ptr %arrayidx175, align 8\l  %187 = load ptr, ptr %zd.addr, align 8\l  %arrayidx176 = getelementptr inbounds double, ptr %187, i64 6\l  %188 = load double, ptr %arrayidx176, align 8\l  %189 = call double @llvm.fmuladd.f64(double %186, double %188, double %183)\l  %190 = load ptr, ptr %hourgam.addr, align 8\l  %arrayidx178 = getelementptr inbounds [4 x double], ptr %190, i64 7\l  %191 = load i32, ptr %i139, align 4\l  %idxprom179 = sext i32 %191 to i64\l  %arrayidx180 = getelementptr inbounds [4 x double], ptr %arrayidx178, i64 0,\l... i64 %idxprom179\l  %192 = load double, ptr %arrayidx180, align 8\l  %193 = load ptr, ptr %zd.addr, align 8\l  %arrayidx181 = getelementptr inbounds double, ptr %193, i64 7\l  %194 = load double, ptr %arrayidx181, align 8\l  %195 = call double @llvm.fmuladd.f64(double %192, double %194, double %189)\l  %196 = load i32, ptr %i139, align 4\l  %idxprom183 = sext i32 %196 to i64\l  %arrayidx184 = getelementptr inbounds [4 x double], ptr %hxx, i64 0, i64\l... %idxprom183\l  store double %195, ptr %arrayidx184, align 8\l  br label %for.inc185\l}"];
	Node0x561418c28c40 -> Node0x561418c220a0[tooltip="for.body142 -> for.inc185\nProbability 100.00%" ];
	Node0x561418c220a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc185:\l|  %197 = load i32, ptr %i139, align 4\l  %inc186 = add nsw i32 %197, 1\l  store i32 %inc186, ptr %i139, align 4\l  br label %for.cond140, !llvm.loop !11\l}"];
	Node0x561418c220a0 -> Node0x561418c28a20[tooltip="for.inc185 -> for.cond140\nProbability 100.00%" ];
	Node0x561418c28cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end187:\l|  store i32 0, ptr %i188, align 4\l  br label %for.cond189\l}"];
	Node0x561418c28cc0 -> Node0x561418c23650[tooltip="for.end187 -> for.cond189\nProbability 100.00%" ];
	Node0x561418c23650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond189:\l|  %198 = load i32, ptr %i188, align 4\l  %cmp190 = icmp slt i32 %198, 8\l  br i1 %cmp190, label %for.body191, label %for.end217\l|{<s0>T|<s1>F}}"];
	Node0x561418c23650:s0 -> Node0x561418c23850[tooltip="for.cond189 -> for.body191\nProbability 96.88%" ];
	Node0x561418c23650:s1 -> Node0x561418c238d0[tooltip="for.cond189 -> for.end217\nProbability 3.12%" ];
	Node0x561418c23850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body191:\l|  %199 = load double, ptr %coefficient.addr, align 8\l  %200 = load ptr, ptr %hourgam.addr, align 8\l  %201 = load i32, ptr %i188, align 4\l  %idxprom192 = sext i32 %201 to i64\l  %arrayidx193 = getelementptr inbounds [4 x double], ptr %200, i64 %idxprom192\l  %arrayidx194 = getelementptr inbounds [4 x double], ptr %arrayidx193, i64 0,\l... i64 0\l  %202 = load double, ptr %arrayidx194, align 8\l  %arrayidx195 = getelementptr inbounds [4 x double], ptr %hxx, i64 0, i64 0\l  %203 = load double, ptr %arrayidx195, align 16\l  %204 = load ptr, ptr %hourgam.addr, align 8\l  %205 = load i32, ptr %i188, align 4\l  %idxprom197 = sext i32 %205 to i64\l  %arrayidx198 = getelementptr inbounds [4 x double], ptr %204, i64 %idxprom197\l  %arrayidx199 = getelementptr inbounds [4 x double], ptr %arrayidx198, i64 0,\l... i64 1\l  %206 = load double, ptr %arrayidx199, align 8\l  %arrayidx200 = getelementptr inbounds [4 x double], ptr %hxx, i64 0, i64 1\l  %207 = load double, ptr %arrayidx200, align 8\l  %mul201 = fmul double %206, %207\l  %208 = call double @llvm.fmuladd.f64(double %202, double %203, double\l... %mul201)\l  %209 = load ptr, ptr %hourgam.addr, align 8\l  %210 = load i32, ptr %i188, align 4\l  %idxprom202 = sext i32 %210 to i64\l  %arrayidx203 = getelementptr inbounds [4 x double], ptr %209, i64 %idxprom202\l  %arrayidx204 = getelementptr inbounds [4 x double], ptr %arrayidx203, i64 0,\l... i64 2\l  %211 = load double, ptr %arrayidx204, align 8\l  %arrayidx205 = getelementptr inbounds [4 x double], ptr %hxx, i64 0, i64 2\l  %212 = load double, ptr %arrayidx205, align 16\l  %213 = call double @llvm.fmuladd.f64(double %211, double %212, double %208)\l  %214 = load ptr, ptr %hourgam.addr, align 8\l  %215 = load i32, ptr %i188, align 4\l  %idxprom207 = sext i32 %215 to i64\l  %arrayidx208 = getelementptr inbounds [4 x double], ptr %214, i64 %idxprom207\l  %arrayidx209 = getelementptr inbounds [4 x double], ptr %arrayidx208, i64 0,\l... i64 3\l  %216 = load double, ptr %arrayidx209, align 8\l  %arrayidx210 = getelementptr inbounds [4 x double], ptr %hxx, i64 0, i64 3\l  %217 = load double, ptr %arrayidx210, align 8\l  %218 = call double @llvm.fmuladd.f64(double %216, double %217, double %213)\l  %mul212 = fmul double %199, %218\l  %219 = load ptr, ptr %hgfz.addr, align 8\l  %220 = load i32, ptr %i188, align 4\l  %idxprom213 = sext i32 %220 to i64\l  %arrayidx214 = getelementptr inbounds double, ptr %219, i64 %idxprom213\l  store double %mul212, ptr %arrayidx214, align 8\l  br label %for.inc215\l}"];
	Node0x561418c23850 -> Node0x561418c309f0[tooltip="for.body191 -> for.inc215\nProbability 100.00%" ];
	Node0x561418c309f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc215:\l|  %221 = load i32, ptr %i188, align 4\l  %inc216 = add nsw i32 %221, 1\l  store i32 %inc216, ptr %i188, align 4\l  br label %for.cond189, !llvm.loop !12\l}"];
	Node0x561418c309f0 -> Node0x561418c23650[tooltip="for.inc215 -> for.cond189\nProbability 100.00%" ];
	Node0x561418c238d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end217:\l|  ret void\l}"];
}
