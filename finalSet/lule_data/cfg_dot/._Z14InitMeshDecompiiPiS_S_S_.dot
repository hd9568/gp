digraph "CFG for '_Z14InitMeshDecompiiPiS_S_S_' function" {
	label="CFG for '_Z14InitMeshDecompiiPiS_S_S_' function";

	Node0x555f5b0d9440 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %numRanks.addr = alloca i32, align 4\l  %myRank.addr = alloca i32, align 4\l  %col.addr = alloca ptr, align 8\l  %row.addr = alloca ptr, align 8\l  %plane.addr = alloca ptr, align 8\l  %side.addr = alloca ptr, align 8\l  %testProcs = alloca i32, align 4\l  %dx = alloca i32, align 4\l  %dy = alloca i32, align 4\l  %dz = alloca i32, align 4\l  %myDom = alloca i32, align 4\l  %remainder = alloca i32, align 4\l  store i32 %numRanks, ptr %numRanks.addr, align 4\l  store i32 %myRank, ptr %myRank.addr, align 4\l  store ptr %col, ptr %col.addr, align 8\l  store ptr %row, ptr %row.addr, align 8\l  store ptr %plane, ptr %plane.addr, align 8\l  store ptr %side, ptr %side.addr, align 8\l  %0 = load i32, ptr %numRanks.addr, align 4\l  %conv = sitofp i32 %0 to double\l  %call = call double @cbrt(double noundef %conv) #12\l  %add = fadd double %call, 5.000000e-01\l  %conv1 = fptosi double %add to i32\l  store i32 %conv1, ptr %testProcs, align 4\l  %1 = load i32, ptr %testProcs, align 4\l  %2 = load i32, ptr %testProcs, align 4\l  %mul = mul nsw i32 %1, %2\l  %3 = load i32, ptr %testProcs, align 4\l  %mul2 = mul nsw i32 %mul, %3\l  %4 = load i32, ptr %numRanks.addr, align 4\l  %cmp = icmp ne i32 %mul2, %4\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x555f5b0d9440:s0 -> Node0x555f5b0d9d30[tooltip="entry -> if.then\nProbability 50.00%" ];
	Node0x555f5b0d9440:s1 -> Node0x555f5b0dae90[tooltip="entry -> if.end\nProbability 50.00%" ];
	Node0x555f5b0d9d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then:\l|  %call3 = call i32 (ptr, ...) @printf(ptr noundef @.str.1)\l  %call4 = call i32 @MPI_Abort(ptr noundef @ompi_mpi_comm_world, i32 noundef\l... -1)\l  br label %if.end\l}"];
	Node0x555f5b0d9d30 -> Node0x555f5b0dae90[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x555f5b0dae90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end:\l|  %5 = load i32, ptr %testProcs, align 4\l  store i32 %5, ptr %dx, align 4\l  %6 = load i32, ptr %testProcs, align 4\l  store i32 %6, ptr %dy, align 4\l  %7 = load i32, ptr %testProcs, align 4\l  store i32 %7, ptr %dz, align 4\l  %8 = load i32, ptr %dx, align 4\l  %9 = load i32, ptr %dy, align 4\l  %mul5 = mul nsw i32 %8, %9\l  %10 = load i32, ptr %dz, align 4\l  %mul6 = mul nsw i32 %mul5, %10\l  %11 = load i32, ptr %numRanks.addr, align 4\l  %cmp7 = icmp ne i32 %mul6, %11\l  br i1 %cmp7, label %if.then8, label %if.end11\l|{<s0>T|<s1>F}}"];
	Node0x555f5b0dae90:s0 -> Node0x555f5b0dbab0[tooltip="if.end -> if.then8\nProbability 50.00%" ];
	Node0x555f5b0dae90:s1 -> Node0x555f5b0dbb00[tooltip="if.end -> if.end11\nProbability 50.00%" ];
	Node0x555f5b0dbab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then8:\l|  %call9 = call i32 (ptr, ...) @printf(ptr noundef @.str.2)\l  %call10 = call i32 @MPI_Abort(ptr noundef @ompi_mpi_comm_world, i32 noundef\l... -1)\l  br label %if.end11\l}"];
	Node0x555f5b0dbab0 -> Node0x555f5b0dbb00[tooltip="if.then8 -> if.end11\nProbability 100.00%" ];
	Node0x555f5b0dbb00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end11:\l|  %12 = load i32, ptr %dx, align 4\l  %13 = load i32, ptr %dy, align 4\l  %mul12 = mul nsw i32 %12, %13\l  %14 = load i32, ptr %dz, align 4\l  %mul13 = mul nsw i32 %mul12, %14\l  %15 = load i32, ptr %numRanks.addr, align 4\l  %rem = srem i32 %mul13, %15\l  store i32 %rem, ptr %remainder, align 4\l  %16 = load i32, ptr %myRank.addr, align 4\l  %17 = load i32, ptr %remainder, align 4\l  %cmp14 = icmp slt i32 %16, %17\l  br i1 %cmp14, label %if.then15, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x555f5b0dbb00:s0 -> Node0x555f5b0dc570[tooltip="if.end11 -> if.then15\nProbability 50.00%" ];
	Node0x555f5b0dbb00:s1 -> Node0x555f5b0dc5c0[tooltip="if.end11 -> if.else\nProbability 50.00%" ];
	Node0x555f5b0dc570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then15:\l|  %18 = load i32, ptr %myRank.addr, align 4\l  %19 = load i32, ptr %dx, align 4\l  %20 = load i32, ptr %dy, align 4\l  %mul16 = mul nsw i32 %19, %20\l  %21 = load i32, ptr %dz, align 4\l  %mul17 = mul nsw i32 %mul16, %21\l  %22 = load i32, ptr %numRanks.addr, align 4\l  %div = sdiv i32 %mul17, %22\l  %add18 = add nsw i32 1, %div\l  %mul19 = mul nsw i32 %18, %add18\l  store i32 %mul19, ptr %myDom, align 4\l  br label %if.end30\l}"];
	Node0x555f5b0dc570 -> Node0x555f5b0dcd70[tooltip="if.then15 -> if.end30\nProbability 100.00%" ];
	Node0x555f5b0dc5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.else:\l|  %23 = load i32, ptr %remainder, align 4\l  %24 = load i32, ptr %dx, align 4\l  %25 = load i32, ptr %dy, align 4\l  %mul20 = mul nsw i32 %24, %25\l  %26 = load i32, ptr %dz, align 4\l  %mul21 = mul nsw i32 %mul20, %26\l  %27 = load i32, ptr %numRanks.addr, align 4\l  %div22 = sdiv i32 %mul21, %27\l  %add23 = add nsw i32 1, %div22\l  %mul24 = mul nsw i32 %23, %add23\l  %28 = load i32, ptr %myRank.addr, align 4\l  %29 = load i32, ptr %remainder, align 4\l  %sub = sub nsw i32 %28, %29\l  %30 = load i32, ptr %dx, align 4\l  %31 = load i32, ptr %dy, align 4\l  %mul25 = mul nsw i32 %30, %31\l  %32 = load i32, ptr %dz, align 4\l  %mul26 = mul nsw i32 %mul25, %32\l  %33 = load i32, ptr %numRanks.addr, align 4\l  %div27 = sdiv i32 %mul26, %33\l  %mul28 = mul nsw i32 %sub, %div27\l  %add29 = add nsw i32 %mul24, %mul28\l  store i32 %add29, ptr %myDom, align 4\l  br label %if.end30\l}"];
	Node0x555f5b0dc5c0 -> Node0x555f5b0dcd70[tooltip="if.else -> if.end30\nProbability 100.00%" ];
	Node0x555f5b0dcd70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end30:\l|  %34 = load i32, ptr %myDom, align 4\l  %35 = load i32, ptr %dx, align 4\l  %rem31 = srem i32 %34, %35\l  %36 = load ptr, ptr %col.addr, align 8\l  store i32 %rem31, ptr %36, align 4\l  %37 = load i32, ptr %myDom, align 4\l  %38 = load i32, ptr %dx, align 4\l  %div32 = sdiv i32 %37, %38\l  %39 = load i32, ptr %dy, align 4\l  %rem33 = srem i32 %div32, %39\l  %40 = load ptr, ptr %row.addr, align 8\l  store i32 %rem33, ptr %40, align 4\l  %41 = load i32, ptr %myDom, align 4\l  %42 = load i32, ptr %dx, align 4\l  %43 = load i32, ptr %dy, align 4\l  %mul34 = mul nsw i32 %42, %43\l  %div35 = sdiv i32 %41, %mul34\l  %44 = load ptr, ptr %plane.addr, align 8\l  store i32 %div35, ptr %44, align 4\l  %45 = load i32, ptr %testProcs, align 4\l  %46 = load ptr, ptr %side.addr, align 8\l  store i32 %45, ptr %46, align 4\l  ret void\l}"];
}
