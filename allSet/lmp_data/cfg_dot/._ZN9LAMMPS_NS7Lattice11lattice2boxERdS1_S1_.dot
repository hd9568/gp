digraph "CFG for '_ZN9LAMMPS_NS7Lattice11lattice2boxERdS1_S1_' function" {
	label="CFG for '_ZN9LAMMPS_NS7Lattice11lattice2boxERdS1_S1_' function";

	Node0x5642ff8d2fa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %x.addr = alloca ptr, align 8\l  %y.addr = alloca ptr, align 8\l  %z.addr = alloca ptr, align 8\l  %x1 = alloca double, align 8\l  %y1 = alloca double, align 8\l  %z1 = alloca double, align 8\l  %xnew = alloca double, align 8\l  %ynew = alloca double, align 8\l  %znew = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store ptr %x, ptr %x.addr, align 8\l  store ptr %y, ptr %y.addr, align 8\l  store ptr %z, ptr %z.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %primitive = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 15\l  %arrayidx = getelementptr inbounds [3 x [3 x double]], ptr %primitive, i64\l... 0, i64 0\l  %arrayidx2 = getelementptr inbounds [3 x double], ptr %arrayidx, i64 0, i64 0\l  %0 = load double, ptr %arrayidx2, align 8\l  %1 = load ptr, ptr %x.addr, align 8\l  %2 = load double, ptr %1, align 8\l  %primitive3 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr\l... %this1, i32 0, i32 15\l  %arrayidx4 = getelementptr inbounds [3 x [3 x double]], ptr %primitive3, i64\l... 0, i64 0\l  %arrayidx5 = getelementptr inbounds [3 x double], ptr %arrayidx4, i64 0, i64\l... 1\l  %3 = load double, ptr %arrayidx5, align 8\l  %4 = load ptr, ptr %y.addr, align 8\l  %5 = load double, ptr %4, align 8\l  %mul6 = fmul double %3, %5\l  %6 = call double @llvm.fmuladd.f64(double %0, double %2, double %mul6)\l  %primitive7 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr\l... %this1, i32 0, i32 15\l  %arrayidx8 = getelementptr inbounds [3 x [3 x double]], ptr %primitive7, i64\l... 0, i64 0\l  %arrayidx9 = getelementptr inbounds [3 x double], ptr %arrayidx8, i64 0, i64\l... 2\l  %7 = load double, ptr %arrayidx9, align 8\l  %8 = load ptr, ptr %z.addr, align 8\l  %9 = load double, ptr %8, align 8\l  %10 = call double @llvm.fmuladd.f64(double %7, double %9, double %6)\l  store double %10, ptr %x1, align 8\l  %primitive10 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr\l... %this1, i32 0, i32 15\l  %arrayidx11 = getelementptr inbounds [3 x [3 x double]], ptr %primitive10,\l... i64 0, i64 1\l  %arrayidx12 = getelementptr inbounds [3 x double], ptr %arrayidx11, i64 0,\l... i64 0\l  %11 = load double, ptr %arrayidx12, align 8\l  %12 = load ptr, ptr %x.addr, align 8\l  %13 = load double, ptr %12, align 8\l  %primitive13 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr\l... %this1, i32 0, i32 15\l  %arrayidx14 = getelementptr inbounds [3 x [3 x double]], ptr %primitive13,\l... i64 0, i64 1\l  %arrayidx15 = getelementptr inbounds [3 x double], ptr %arrayidx14, i64 0,\l... i64 1\l  %14 = load double, ptr %arrayidx15, align 8\l  %15 = load ptr, ptr %y.addr, align 8\l  %16 = load double, ptr %15, align 8\l  %mul16 = fmul double %14, %16\l  %17 = call double @llvm.fmuladd.f64(double %11, double %13, double %mul16)\l  %primitive17 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr\l... %this1, i32 0, i32 15\l  %arrayidx18 = getelementptr inbounds [3 x [3 x double]], ptr %primitive17,\l... i64 0, i64 1\l  %arrayidx19 = getelementptr inbounds [3 x double], ptr %arrayidx18, i64 0,\l... i64 2\l  %18 = load double, ptr %arrayidx19, align 8\l  %19 = load ptr, ptr %z.addr, align 8\l  %20 = load double, ptr %19, align 8\l  %21 = call double @llvm.fmuladd.f64(double %18, double %20, double %17)\l  store double %21, ptr %y1, align 8\l  %primitive20 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr\l... %this1, i32 0, i32 15\l  %arrayidx21 = getelementptr inbounds [3 x [3 x double]], ptr %primitive20,\l... i64 0, i64 2\l  %arrayidx22 = getelementptr inbounds [3 x double], ptr %arrayidx21, i64 0,\l... i64 0\l  %22 = load double, ptr %arrayidx22, align 8\l  %23 = load ptr, ptr %x.addr, align 8\l  %24 = load double, ptr %23, align 8\l  %primitive23 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr\l... %this1, i32 0, i32 15\l  %arrayidx24 = getelementptr inbounds [3 x [3 x double]], ptr %primitive23,\l... i64 0, i64 2\l  %arrayidx25 = getelementptr inbounds [3 x double], ptr %arrayidx24, i64 0,\l... i64 1\l  %25 = load double, ptr %arrayidx25, align 8\l  %26 = load ptr, ptr %y.addr, align 8\l  %27 = load double, ptr %26, align 8\l  %mul26 = fmul double %25, %27\l  %28 = call double @llvm.fmuladd.f64(double %22, double %24, double %mul26)\l  %primitive27 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr\l... %this1, i32 0, i32 15\l  %arrayidx28 = getelementptr inbounds [3 x [3 x double]], ptr %primitive27,\l... i64 0, i64 2\l  %arrayidx29 = getelementptr inbounds [3 x double], ptr %arrayidx28, i64 0,\l... i64 2\l  %29 = load double, ptr %arrayidx29, align 8\l  %30 = load ptr, ptr %z.addr, align 8\l  %31 = load double, ptr %30, align 8\l  %32 = call double @llvm.fmuladd.f64(double %29, double %31, double %28)\l  store double %32, ptr %z1, align 8\l  %scale = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1, i32\l... 0, i32 10\l  %33 = load double, ptr %scale, align 8\l  %34 = load double, ptr %x1, align 8\l  %mul = fmul double %34, %33\l  store double %mul, ptr %x1, align 8\l  %scale30 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 10\l  %35 = load double, ptr %scale30, align 8\l  %36 = load double, ptr %y1, align 8\l  %mul31 = fmul double %36, %35\l  store double %mul31, ptr %y1, align 8\l  %scale32 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 10\l  %37 = load double, ptr %scale32, align 8\l  %38 = load double, ptr %z1, align 8\l  %mul33 = fmul double %38, %37\l  store double %mul33, ptr %z1, align 8\l  %rotaterow = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 17\l  %arrayidx34 = getelementptr inbounds [3 x [3 x double]], ptr %rotaterow, i64\l... 0, i64 0\l  %arrayidx35 = getelementptr inbounds [3 x double], ptr %arrayidx34, i64 0,\l... i64 0\l  %39 = load double, ptr %arrayidx35, align 8\l  %40 = load double, ptr %x1, align 8\l  %rotaterow37 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr\l... %this1, i32 0, i32 17\l  %arrayidx38 = getelementptr inbounds [3 x [3 x double]], ptr %rotaterow37,\l... i64 0, i64 0\l  %arrayidx39 = getelementptr inbounds [3 x double], ptr %arrayidx38, i64 0,\l... i64 1\l  %41 = load double, ptr %arrayidx39, align 8\l  %42 = load double, ptr %y1, align 8\l  %mul40 = fmul double %41, %42\l  %43 = call double @llvm.fmuladd.f64(double %39, double %40, double %mul40)\l  %rotaterow41 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr\l... %this1, i32 0, i32 17\l  %arrayidx42 = getelementptr inbounds [3 x [3 x double]], ptr %rotaterow41,\l... i64 0, i64 0\l  %arrayidx43 = getelementptr inbounds [3 x double], ptr %arrayidx42, i64 0,\l... i64 2\l  %44 = load double, ptr %arrayidx43, align 8\l  %45 = load double, ptr %z1, align 8\l  %46 = call double @llvm.fmuladd.f64(double %44, double %45, double %43)\l  store double %46, ptr %xnew, align 8\l  %rotaterow45 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr\l... %this1, i32 0, i32 17\l  %arrayidx46 = getelementptr inbounds [3 x [3 x double]], ptr %rotaterow45,\l... i64 0, i64 1\l  %arrayidx47 = getelementptr inbounds [3 x double], ptr %arrayidx46, i64 0,\l... i64 0\l  %47 = load double, ptr %arrayidx47, align 8\l  %48 = load double, ptr %x1, align 8\l  %rotaterow49 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr\l... %this1, i32 0, i32 17\l  %arrayidx50 = getelementptr inbounds [3 x [3 x double]], ptr %rotaterow49,\l... i64 0, i64 1\l  %arrayidx51 = getelementptr inbounds [3 x double], ptr %arrayidx50, i64 0,\l... i64 1\l  %49 = load double, ptr %arrayidx51, align 8\l  %50 = load double, ptr %y1, align 8\l  %mul52 = fmul double %49, %50\l  %51 = call double @llvm.fmuladd.f64(double %47, double %48, double %mul52)\l  %rotaterow53 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr\l... %this1, i32 0, i32 17\l  %arrayidx54 = getelementptr inbounds [3 x [3 x double]], ptr %rotaterow53,\l... i64 0, i64 1\l  %arrayidx55 = getelementptr inbounds [3 x double], ptr %arrayidx54, i64 0,\l... i64 2\l  %52 = load double, ptr %arrayidx55, align 8\l  %53 = load double, ptr %z1, align 8\l  %54 = call double @llvm.fmuladd.f64(double %52, double %53, double %51)\l  store double %54, ptr %ynew, align 8\l  %rotaterow57 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr\l... %this1, i32 0, i32 17\l  %arrayidx58 = getelementptr inbounds [3 x [3 x double]], ptr %rotaterow57,\l... i64 0, i64 2\l  %arrayidx59 = getelementptr inbounds [3 x double], ptr %arrayidx58, i64 0,\l... i64 0\l  %55 = load double, ptr %arrayidx59, align 8\l  %56 = load double, ptr %x1, align 8\l  %rotaterow61 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr\l... %this1, i32 0, i32 17\l  %arrayidx62 = getelementptr inbounds [3 x [3 x double]], ptr %rotaterow61,\l... i64 0, i64 2\l  %arrayidx63 = getelementptr inbounds [3 x double], ptr %arrayidx62, i64 0,\l... i64 1\l  %57 = load double, ptr %arrayidx63, align 8\l  %58 = load double, ptr %y1, align 8\l  %mul64 = fmul double %57, %58\l  %59 = call double @llvm.fmuladd.f64(double %55, double %56, double %mul64)\l  %rotaterow65 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr\l... %this1, i32 0, i32 17\l  %arrayidx66 = getelementptr inbounds [3 x [3 x double]], ptr %rotaterow65,\l... i64 0, i64 2\l  %arrayidx67 = getelementptr inbounds [3 x double], ptr %arrayidx66, i64 0,\l... i64 2\l  %60 = load double, ptr %arrayidx67, align 8\l  %61 = load double, ptr %z1, align 8\l  %62 = call double @llvm.fmuladd.f64(double %60, double %61, double %59)\l  store double %62, ptr %znew, align 8\l  %63 = load double, ptr %xnew, align 8\l  %xlattice = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 2\l  %64 = load double, ptr %xlattice, align 8\l  %origin = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 11\l  %arrayidx69 = getelementptr inbounds [3 x double], ptr %origin, i64 0, i64 0\l  %65 = load double, ptr %arrayidx69, align 8\l  %66 = call double @llvm.fmuladd.f64(double %64, double %65, double %63)\l  %67 = load ptr, ptr %x.addr, align 8\l  store double %66, ptr %67, align 8\l  %68 = load double, ptr %ynew, align 8\l  %ylattice = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 3\l  %69 = load double, ptr %ylattice, align 8\l  %origin71 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 11\l  %arrayidx72 = getelementptr inbounds [3 x double], ptr %origin71, i64 0, i64\l... 1\l  %70 = load double, ptr %arrayidx72, align 8\l  %71 = call double @llvm.fmuladd.f64(double %69, double %70, double %68)\l  %72 = load ptr, ptr %y.addr, align 8\l  store double %71, ptr %72, align 8\l  %73 = load double, ptr %znew, align 8\l  %zlattice = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 4\l  %74 = load double, ptr %zlattice, align 8\l  %origin74 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 11\l  %arrayidx75 = getelementptr inbounds [3 x double], ptr %origin74, i64 0, i64\l... 2\l  %75 = load double, ptr %arrayidx75, align 8\l  %76 = call double @llvm.fmuladd.f64(double %74, double %75, double %73)\l  %77 = load ptr, ptr %z.addr, align 8\l  store double %76, ptr %77, align 8\l  ret void\l}"];
}
