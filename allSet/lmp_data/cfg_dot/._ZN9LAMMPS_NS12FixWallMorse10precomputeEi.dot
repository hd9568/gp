digraph "CFG for '_ZN9LAMMPS_NS12FixWallMorse10precomputeEi' function" {
	label="CFG for '_ZN9LAMMPS_NS12FixWallMorse10precomputeEi' function";

	Node0x5578b6db2640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %m.addr = alloca i32, align 4\l  %alpha_dr = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store i32 %m, ptr %m.addr, align 4\l  %this1 = load ptr, ptr %this.addr, align 8\l  %epsilon = getelementptr inbounds %\"class.LAMMPS_NS::FixWall\", ptr %this1,\l... i32 0, i32 8\l  %0 = load i32, ptr %m.addr, align 4\l  %idxprom = sext i32 %0 to i64\l  %arrayidx = getelementptr inbounds [6 x double], ptr %epsilon, i64 0, i64\l... %idxprom\l  %1 = load double, ptr %arrayidx, align 8\l  %mul = fmul double 2.000000e+00, %1\l  %alpha = getelementptr inbounds %\"class.LAMMPS_NS::FixWall\", ptr %this1, i32\l... 0, i32 10\l  %2 = load i32, ptr %m.addr, align 4\l  %idxprom2 = sext i32 %2 to i64\l  %arrayidx3 = getelementptr inbounds [6 x double], ptr %alpha, i64 0, i64\l... %idxprom2\l  %3 = load double, ptr %arrayidx3, align 8\l  %mul4 = fmul double %mul, %3\l  %coeff1 = getelementptr inbounds %\"class.LAMMPS_NS::FixWallMorse\", ptr\l... %this1, i32 0, i32 1\l  %4 = load i32, ptr %m.addr, align 4\l  %idxprom5 = sext i32 %4 to i64\l  %arrayidx6 = getelementptr inbounds [6 x double], ptr %coeff1, i64 0, i64\l... %idxprom5\l  store double %mul4, ptr %arrayidx6, align 8\l  %alpha7 = getelementptr inbounds %\"class.LAMMPS_NS::FixWall\", ptr %this1,\l... i32 0, i32 10\l  %5 = load i32, ptr %m.addr, align 4\l  %idxprom8 = sext i32 %5 to i64\l  %arrayidx9 = getelementptr inbounds [6 x double], ptr %alpha7, i64 0, i64\l... %idxprom8\l  %6 = load double, ptr %arrayidx9, align 8\l  %fneg = fneg double %6\l  %cutoff = getelementptr inbounds %\"class.LAMMPS_NS::FixWall\", ptr %this1,\l... i32 0, i32 11\l  %7 = load i32, ptr %m.addr, align 4\l  %idxprom10 = sext i32 %7 to i64\l  %arrayidx11 = getelementptr inbounds [6 x double], ptr %cutoff, i64 0, i64\l... %idxprom10\l  %8 = load double, ptr %arrayidx11, align 8\l  %sigma = getelementptr inbounds %\"class.LAMMPS_NS::FixWall\", ptr %this1, i32\l... 0, i32 9\l  %9 = load i32, ptr %m.addr, align 4\l  %idxprom12 = sext i32 %9 to i64\l  %arrayidx13 = getelementptr inbounds [6 x double], ptr %sigma, i64 0, i64\l... %idxprom12\l  %10 = load double, ptr %arrayidx13, align 8\l  %sub = fsub double %8, %10\l  %mul14 = fmul double %fneg, %sub\l  store double %mul14, ptr %alpha_dr, align 8\l  %epsilon15 = getelementptr inbounds %\"class.LAMMPS_NS::FixWall\", ptr %this1,\l... i32 0, i32 8\l  %11 = load i32, ptr %m.addr, align 4\l  %idxprom16 = sext i32 %11 to i64\l  %arrayidx17 = getelementptr inbounds [6 x double], ptr %epsilon15, i64 0,\l... i64 %idxprom16\l  %12 = load double, ptr %arrayidx17, align 8\l  %13 = load double, ptr %alpha_dr, align 8\l  %mul18 = fmul double 2.000000e+00, %13\l  %call = call double @exp(double noundef %mul18) #8\l  %14 = load double, ptr %alpha_dr, align 8\l  %call19 = call double @exp(double noundef %14) #8\l  %15 = call double @llvm.fmuladd.f64(double -2.000000e+00, double %call19,\l... double %call)\l  %mul21 = fmul double %12, %15\l  %offset = getelementptr inbounds %\"class.LAMMPS_NS::FixWallMorse\", ptr\l... %this1, i32 0, i32 2\l  %16 = load i32, ptr %m.addr, align 4\l  %idxprom22 = sext i32 %16 to i64\l  %arrayidx23 = getelementptr inbounds [6 x double], ptr %offset, i64 0, i64\l... %idxprom22\l  store double %mul21, ptr %arrayidx23, align 8\l  ret void\l}"];
}
