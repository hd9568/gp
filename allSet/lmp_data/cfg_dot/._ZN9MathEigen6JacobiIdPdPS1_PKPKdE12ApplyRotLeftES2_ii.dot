digraph "CFG for '_ZN9MathEigen6JacobiIdPdPS1_PKPKdE12ApplyRotLeftES2_ii' function" {
	label="CFG for '_ZN9MathEigen6JacobiIdPdPS1_PKPKdE12ApplyRotLeftES2_ii' function";

	Node0x5600924dc000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %E.addr = alloca ptr, align 8\l  %i.addr = alloca i32, align 4\l  %j.addr = alloca i32, align 4\l  %v = alloca i32, align 4\l  %Eiv = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store ptr %E, ptr %E.addr, align 8\l  store i32 %i, ptr %i.addr, align 4\l  store i32 %j, ptr %j.addr, align 4\l  %this1 = load ptr, ptr %this.addr, align 8\l  store i32 0, ptr %v, align 4\l  br label %for.cond\l}"];
	Node0x5600924dc000 -> Node0x5600924dc730[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x5600924dc730 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %0 = load i32, ptr %v, align 4\l  %n = getelementptr inbounds %\"class.MathEigen::Jacobi.0\", ptr %this1, i32 0,\l... i32 0\l  %1 = load i32, ptr %n, align 8\l  %cmp = icmp slt i32 %0, %1\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5600924dc730:s0 -> Node0x5600924dcc50[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x5600924dc730:s1 -> Node0x5600924dccd0[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x5600924dcc50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %2 = load ptr, ptr %E.addr, align 8\l  %3 = load i32, ptr %i.addr, align 4\l  %idxprom = sext i32 %3 to i64\l  %arrayidx = getelementptr inbounds ptr, ptr %2, i64 %idxprom\l  %4 = load ptr, ptr %arrayidx, align 8\l  %5 = load i32, ptr %v, align 4\l  %idxprom2 = sext i32 %5 to i64\l  %arrayidx3 = getelementptr inbounds double, ptr %4, i64 %idxprom2\l  %6 = load double, ptr %arrayidx3, align 8\l  store double %6, ptr %Eiv, align 8\l  %c = getelementptr inbounds %\"class.MathEigen::Jacobi.0\", ptr %this1, i32 0,\l... i32 3\l  %7 = load double, ptr %c, align 8\l  %8 = load ptr, ptr %E.addr, align 8\l  %9 = load i32, ptr %i.addr, align 4\l  %idxprom4 = sext i32 %9 to i64\l  %arrayidx5 = getelementptr inbounds ptr, ptr %8, i64 %idxprom4\l  %10 = load ptr, ptr %arrayidx5, align 8\l  %11 = load i32, ptr %v, align 4\l  %idxprom6 = sext i32 %11 to i64\l  %arrayidx7 = getelementptr inbounds double, ptr %10, i64 %idxprom6\l  %12 = load double, ptr %arrayidx7, align 8\l  %s = getelementptr inbounds %\"class.MathEigen::Jacobi.0\", ptr %this1, i32 0,\l... i32 4\l  %13 = load double, ptr %s, align 8\l  %14 = load ptr, ptr %E.addr, align 8\l  %15 = load i32, ptr %j.addr, align 4\l  %idxprom8 = sext i32 %15 to i64\l  %arrayidx9 = getelementptr inbounds ptr, ptr %14, i64 %idxprom8\l  %16 = load ptr, ptr %arrayidx9, align 8\l  %17 = load i32, ptr %v, align 4\l  %idxprom10 = sext i32 %17 to i64\l  %arrayidx11 = getelementptr inbounds double, ptr %16, i64 %idxprom10\l  %18 = load double, ptr %arrayidx11, align 8\l  %mul12 = fmul double %13, %18\l  %neg = fneg double %mul12\l  %19 = call double @llvm.fmuladd.f64(double %7, double %12, double %neg)\l  %20 = load ptr, ptr %E.addr, align 8\l  %21 = load i32, ptr %i.addr, align 4\l  %idxprom13 = sext i32 %21 to i64\l  %arrayidx14 = getelementptr inbounds ptr, ptr %20, i64 %idxprom13\l  %22 = load ptr, ptr %arrayidx14, align 8\l  %23 = load i32, ptr %v, align 4\l  %idxprom15 = sext i32 %23 to i64\l  %arrayidx16 = getelementptr inbounds double, ptr %22, i64 %idxprom15\l  store double %19, ptr %arrayidx16, align 8\l  %s17 = getelementptr inbounds %\"class.MathEigen::Jacobi.0\", ptr %this1, i32\l... 0, i32 4\l  %24 = load double, ptr %s17, align 8\l  %25 = load double, ptr %Eiv, align 8\l  %c18 = getelementptr inbounds %\"class.MathEigen::Jacobi.0\", ptr %this1, i32\l... 0, i32 3\l  %26 = load double, ptr %c18, align 8\l  %27 = load ptr, ptr %E.addr, align 8\l  %28 = load i32, ptr %j.addr, align 4\l  %idxprom19 = sext i32 %28 to i64\l  %arrayidx20 = getelementptr inbounds ptr, ptr %27, i64 %idxprom19\l  %29 = load ptr, ptr %arrayidx20, align 8\l  %30 = load i32, ptr %v, align 4\l  %idxprom21 = sext i32 %30 to i64\l  %arrayidx22 = getelementptr inbounds double, ptr %29, i64 %idxprom21\l  %31 = load double, ptr %arrayidx22, align 8\l  %mul23 = fmul double %26, %31\l  %32 = call double @llvm.fmuladd.f64(double %24, double %25, double %mul23)\l  %33 = load ptr, ptr %E.addr, align 8\l  %34 = load i32, ptr %j.addr, align 4\l  %idxprom24 = sext i32 %34 to i64\l  %arrayidx25 = getelementptr inbounds ptr, ptr %33, i64 %idxprom24\l  %35 = load ptr, ptr %arrayidx25, align 8\l  %36 = load i32, ptr %v, align 4\l  %idxprom26 = sext i32 %36 to i64\l  %arrayidx27 = getelementptr inbounds double, ptr %35, i64 %idxprom26\l  store double %32, ptr %arrayidx27, align 8\l  br label %for.inc\l}"];
	Node0x5600924dcc50 -> Node0x5600924e4f40[tooltip="for.body -> for.inc\nProbability 100.00%" ];
	Node0x5600924e4f40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %37 = load i32, ptr %v, align 4\l  %inc = add nsw i32 %37, 1\l  store i32 %inc, ptr %v, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x5600924e4f40 -> Node0x5600924dc730[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x5600924dccd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  ret void\l}"];
}
