digraph "CFG for '_ZN9LAMMPS_NS16PairLJCutCoulCut11born_matrixEiiiidddRdS1_' function" {
	label="CFG for '_ZN9LAMMPS_NS16PairLJCutCoulCut11born_matrixEiiiidddRdS1_' function";

	Node0x55c2a76368f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %i.addr = alloca i32, align 4\l  %j.addr = alloca i32, align 4\l  %itype.addr = alloca i32, align 4\l  %jtype.addr = alloca i32, align 4\l  %rsq.addr = alloca double, align 8\l  %factor_coul.addr = alloca double, align 8\l  %factor_lj.addr = alloca double, align 8\l  %dupair.addr = alloca ptr, align 8\l  %du2pair.addr = alloca ptr, align 8\l  %rinv = alloca double, align 8\l  %r2inv = alloca double, align 8\l  %r3inv = alloca double, align 8\l  %r6inv = alloca double, align 8\l  %du_lj = alloca double, align 8\l  %du2_lj = alloca double, align 8\l  %du_coul = alloca double, align 8\l  %du2_coul = alloca double, align 8\l  %q = alloca ptr, align 8\l  %qqrd2e = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store i32 %i, ptr %i.addr, align 4\l  store i32 %j, ptr %j.addr, align 4\l  store i32 %itype, ptr %itype.addr, align 4\l  store i32 %jtype, ptr %jtype.addr, align 4\l  store double %rsq, ptr %rsq.addr, align 8\l  store double %factor_coul, ptr %factor_coul.addr, align 8\l  store double %factor_lj, ptr %factor_lj.addr, align 8\l  store ptr %dupair, ptr %dupair.addr, align 8\l  store ptr %du2pair, ptr %du2pair.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %atom = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1, i32\l... 0, i32 6\l  %0 = load ptr, ptr %atom, align 8\l  %1 = load ptr, ptr %0, align 8\l  %q2 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %1, i32 0, i32 41\l  %2 = load ptr, ptr %q2, align 8\l  store ptr %2, ptr %q, align 8\l  %force = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 11\l  %3 = load ptr, ptr %force, align 8\l  %4 = load ptr, ptr %3, align 8\l  %qqrd2e3 = getelementptr inbounds %\"class.LAMMPS_NS::Force\", ptr %4, i32 0,\l... i32 12\l  %5 = load double, ptr %qqrd2e3, align 8\l  store double %5, ptr %qqrd2e, align 8\l  %6 = load double, ptr %rsq.addr, align 8\l  %div = fdiv double 1.000000e+00, %6\l  store double %div, ptr %r2inv, align 8\l  %7 = load double, ptr %r2inv, align 8\l  %call = call double @sqrt(double noundef %7) #9\l  store double %call, ptr %rinv, align 8\l  %8 = load double, ptr %r2inv, align 8\l  %9 = load double, ptr %rinv, align 8\l  %mul = fmul double %8, %9\l  store double %mul, ptr %r3inv, align 8\l  %10 = load double, ptr %r2inv, align 8\l  %11 = load double, ptr %r2inv, align 8\l  %mul4 = fmul double %10, %11\l  %12 = load double, ptr %r2inv, align 8\l  %mul5 = fmul double %mul4, %12\l  store double %mul5, ptr %r6inv, align 8\l  %13 = load double, ptr %r6inv, align 8\l  %14 = load double, ptr %rinv, align 8\l  %mul6 = fmul double %13, %14\l  %lj2 = getelementptr inbounds %\"class.LAMMPS_NS::PairLJCutCoulCut\", ptr\l... %this1, i32 0, i32 10\l  %15 = load ptr, ptr %lj2, align 8\l  %16 = load i32, ptr %itype.addr, align 4\l  %idxprom = sext i32 %16 to i64\l  %arrayidx = getelementptr inbounds ptr, ptr %15, i64 %idxprom\l  %17 = load ptr, ptr %arrayidx, align 8\l  %18 = load i32, ptr %jtype.addr, align 4\l  %idxprom7 = sext i32 %18 to i64\l  %arrayidx8 = getelementptr inbounds double, ptr %17, i64 %idxprom7\l  %19 = load double, ptr %arrayidx8, align 8\l  %lj1 = getelementptr inbounds %\"class.LAMMPS_NS::PairLJCutCoulCut\", ptr\l... %this1, i32 0, i32 9\l  %20 = load ptr, ptr %lj1, align 8\l  %21 = load i32, ptr %itype.addr, align 4\l  %idxprom9 = sext i32 %21 to i64\l  %arrayidx10 = getelementptr inbounds ptr, ptr %20, i64 %idxprom9\l  %22 = load ptr, ptr %arrayidx10, align 8\l  %23 = load i32, ptr %jtype.addr, align 4\l  %idxprom11 = sext i32 %23 to i64\l  %arrayidx12 = getelementptr inbounds double, ptr %22, i64 %idxprom11\l  %24 = load double, ptr %arrayidx12, align 8\l  %25 = load double, ptr %r6inv, align 8\l  %neg = fneg double %24\l  %26 = call double @llvm.fmuladd.f64(double %neg, double %25, double %19)\l  %mul14 = fmul double %mul6, %26\l  store double %mul14, ptr %du_lj, align 8\l  %27 = load double, ptr %r6inv, align 8\l  %28 = load double, ptr %r2inv, align 8\l  %mul15 = fmul double %27, %28\l  %lj116 = getelementptr inbounds %\"class.LAMMPS_NS::PairLJCutCoulCut\", ptr\l... %this1, i32 0, i32 9\l  %29 = load ptr, ptr %lj116, align 8\l  %30 = load i32, ptr %itype.addr, align 4\l  %idxprom17 = sext i32 %30 to i64\l  %arrayidx18 = getelementptr inbounds ptr, ptr %29, i64 %idxprom17\l  %31 = load ptr, ptr %arrayidx18, align 8\l  %32 = load i32, ptr %jtype.addr, align 4\l  %idxprom19 = sext i32 %32 to i64\l  %arrayidx20 = getelementptr inbounds double, ptr %31, i64 %idxprom19\l  %33 = load double, ptr %arrayidx20, align 8\l  %mul21 = fmul double 1.300000e+01, %33\l  %34 = load double, ptr %r6inv, align 8\l  %lj223 = getelementptr inbounds %\"class.LAMMPS_NS::PairLJCutCoulCut\", ptr\l... %this1, i32 0, i32 10\l  %35 = load ptr, ptr %lj223, align 8\l  %36 = load i32, ptr %itype.addr, align 4\l  %idxprom24 = sext i32 %36 to i64\l  %arrayidx25 = getelementptr inbounds ptr, ptr %35, i64 %idxprom24\l  %37 = load ptr, ptr %arrayidx25, align 8\l  %38 = load i32, ptr %jtype.addr, align 4\l  %idxprom26 = sext i32 %38 to i64\l  %arrayidx27 = getelementptr inbounds double, ptr %37, i64 %idxprom26\l  %39 = load double, ptr %arrayidx27, align 8\l  %mul28 = fmul double 7.000000e+00, %39\l  %neg29 = fneg double %mul28\l  %40 = call double @llvm.fmuladd.f64(double %mul21, double %34, double %neg29)\l  %mul30 = fmul double %mul15, %40\l  store double %mul30, ptr %du2_lj, align 8\l  %41 = load double, ptr %qqrd2e, align 8\l  %fneg = fneg double %41\l  %42 = load ptr, ptr %q, align 8\l  %43 = load i32, ptr %i.addr, align 4\l  %idxprom31 = sext i32 %43 to i64\l  %arrayidx32 = getelementptr inbounds double, ptr %42, i64 %idxprom31\l  %44 = load double, ptr %arrayidx32, align 8\l  %mul33 = fmul double %fneg, %44\l  %45 = load ptr, ptr %q, align 8\l  %46 = load i32, ptr %j.addr, align 4\l  %idxprom34 = sext i32 %46 to i64\l  %arrayidx35 = getelementptr inbounds double, ptr %45, i64 %idxprom34\l  %47 = load double, ptr %arrayidx35, align 8\l  %mul36 = fmul double %mul33, %47\l  %48 = load double, ptr %r2inv, align 8\l  %mul37 = fmul double %mul36, %48\l  store double %mul37, ptr %du_coul, align 8\l  %49 = load double, ptr %qqrd2e, align 8\l  %mul38 = fmul double 2.000000e+00, %49\l  %50 = load ptr, ptr %q, align 8\l  %51 = load i32, ptr %i.addr, align 4\l  %idxprom39 = sext i32 %51 to i64\l  %arrayidx40 = getelementptr inbounds double, ptr %50, i64 %idxprom39\l  %52 = load double, ptr %arrayidx40, align 8\l  %mul41 = fmul double %mul38, %52\l  %53 = load ptr, ptr %q, align 8\l  %54 = load i32, ptr %j.addr, align 4\l  %idxprom42 = sext i32 %54 to i64\l  %arrayidx43 = getelementptr inbounds double, ptr %53, i64 %idxprom42\l  %55 = load double, ptr %arrayidx43, align 8\l  %mul44 = fmul double %mul41, %55\l  %56 = load double, ptr %r3inv, align 8\l  %mul45 = fmul double %mul44, %56\l  store double %mul45, ptr %du2_coul, align 8\l  %57 = load double, ptr %factor_lj.addr, align 8\l  %58 = load double, ptr %du_lj, align 8\l  %59 = load double, ptr %factor_coul.addr, align 8\l  %60 = load double, ptr %du_coul, align 8\l  %mul47 = fmul double %59, %60\l  %61 = call double @llvm.fmuladd.f64(double %57, double %58, double %mul47)\l  %62 = load ptr, ptr %dupair.addr, align 8\l  store double %61, ptr %62, align 8\l  %63 = load double, ptr %factor_lj.addr, align 8\l  %64 = load double, ptr %du2_lj, align 8\l  %65 = load double, ptr %factor_coul.addr, align 8\l  %66 = load double, ptr %du2_coul, align 8\l  %mul49 = fmul double %65, %66\l  %67 = call double @llvm.fmuladd.f64(double %63, double %64, double %mul49)\l  %68 = load ptr, ptr %du2pair.addr, align 8\l  store double %67, ptr %68, align 8\l  ret void\l}"];
}
