digraph "CFG for '_ZN9LAMMPS_NS15PairBuckCoulCut11born_matrixEiiiidddRdS1_' function" {
	label="CFG for '_ZN9LAMMPS_NS15PairBuckCoulCut11born_matrixEiiiidddRdS1_' function";

	Node0x5558aabbbdb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %i.addr = alloca i32, align 4\l  %j.addr = alloca i32, align 4\l  %itype.addr = alloca i32, align 4\l  %jtype.addr = alloca i32, align 4\l  %rsq.addr = alloca double, align 8\l  %factor_coul.addr = alloca double, align 8\l  %factor_lj.addr = alloca double, align 8\l  %dupair.addr = alloca ptr, align 8\l  %du2pair.addr = alloca ptr, align 8\l  %rinv = alloca double, align 8\l  %r2inv = alloca double, align 8\l  %r3inv = alloca double, align 8\l  %r6inv = alloca double, align 8\l  %r7inv = alloca double, align 8\l  %r8inv = alloca double, align 8\l  %r = alloca double, align 8\l  %rexp = alloca double, align 8\l  %du_lj = alloca double, align 8\l  %du2_lj = alloca double, align 8\l  %du_coul = alloca double, align 8\l  %du2_coul = alloca double, align 8\l  %q = alloca ptr, align 8\l  %qqrd2e = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store i32 %i, ptr %i.addr, align 4\l  store i32 %j, ptr %j.addr, align 4\l  store i32 %itype, ptr %itype.addr, align 4\l  store i32 %jtype, ptr %jtype.addr, align 4\l  store double %rsq, ptr %rsq.addr, align 8\l  store double %factor_coul, ptr %factor_coul.addr, align 8\l  store double %factor_lj, ptr %factor_lj.addr, align 8\l  store ptr %dupair, ptr %dupair.addr, align 8\l  store ptr %du2pair, ptr %du2pair.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %atom = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1, i32\l... 0, i32 6\l  %0 = load ptr, ptr %atom, align 8\l  %1 = load ptr, ptr %0, align 8\l  %q2 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %1, i32 0, i32 41\l  %2 = load ptr, ptr %q2, align 8\l  store ptr %2, ptr %q, align 8\l  %force = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 11\l  %3 = load ptr, ptr %force, align 8\l  %4 = load ptr, ptr %3, align 8\l  %qqrd2e3 = getelementptr inbounds %\"class.LAMMPS_NS::Force\", ptr %4, i32 0,\l... i32 12\l  %5 = load double, ptr %qqrd2e3, align 8\l  store double %5, ptr %qqrd2e, align 8\l  %6 = load double, ptr %rsq.addr, align 8\l  %call = call double @sqrt(double noundef %6) #9\l  store double %call, ptr %r, align 8\l  %7 = load double, ptr %r, align 8\l  %fneg = fneg double %7\l  %rhoinv = getelementptr inbounds %\"class.LAMMPS_NS::PairBuckCoulCut\", ptr\l... %this1, i32 0, i32 10\l  %8 = load ptr, ptr %rhoinv, align 8\l  %9 = load i32, ptr %itype.addr, align 4\l  %idxprom = sext i32 %9 to i64\l  %arrayidx = getelementptr inbounds ptr, ptr %8, i64 %idxprom\l  %10 = load ptr, ptr %arrayidx, align 8\l  %11 = load i32, ptr %jtype.addr, align 4\l  %idxprom4 = sext i32 %11 to i64\l  %arrayidx5 = getelementptr inbounds double, ptr %10, i64 %idxprom4\l  %12 = load double, ptr %arrayidx5, align 8\l  %mul = fmul double %fneg, %12\l  %call6 = call double @exp(double noundef %mul) #9\l  store double %call6, ptr %rexp, align 8\l  %13 = load double, ptr %rsq.addr, align 8\l  %div = fdiv double 1.000000e+00, %13\l  store double %div, ptr %r2inv, align 8\l  %14 = load double, ptr %r2inv, align 8\l  %call7 = call double @sqrt(double noundef %14) #9\l  store double %call7, ptr %rinv, align 8\l  %15 = load double, ptr %r2inv, align 8\l  %16 = load double, ptr %rinv, align 8\l  %mul8 = fmul double %15, %16\l  store double %mul8, ptr %r3inv, align 8\l  %17 = load double, ptr %r2inv, align 8\l  %18 = load double, ptr %r2inv, align 8\l  %mul9 = fmul double %17, %18\l  %19 = load double, ptr %r2inv, align 8\l  %mul10 = fmul double %mul9, %19\l  store double %mul10, ptr %r6inv, align 8\l  %20 = load double, ptr %r6inv, align 8\l  %21 = load double, ptr %rinv, align 8\l  %mul11 = fmul double %20, %21\l  store double %mul11, ptr %r7inv, align 8\l  %22 = load double, ptr %r6inv, align 8\l  %23 = load double, ptr %r2inv, align 8\l  %mul12 = fmul double %22, %23\l  store double %mul12, ptr %r8inv, align 8\l  %buck2 = getelementptr inbounds %\"class.LAMMPS_NS::PairBuckCoulCut\", ptr\l... %this1, i32 0, i32 12\l  %24 = load ptr, ptr %buck2, align 8\l  %25 = load i32, ptr %itype.addr, align 4\l  %idxprom13 = sext i32 %25 to i64\l  %arrayidx14 = getelementptr inbounds ptr, ptr %24, i64 %idxprom13\l  %26 = load ptr, ptr %arrayidx14, align 8\l  %27 = load i32, ptr %jtype.addr, align 4\l  %idxprom15 = sext i32 %27 to i64\l  %arrayidx16 = getelementptr inbounds double, ptr %26, i64 %idxprom15\l  %28 = load double, ptr %arrayidx16, align 8\l  %29 = load double, ptr %r7inv, align 8\l  %buck1 = getelementptr inbounds %\"class.LAMMPS_NS::PairBuckCoulCut\", ptr\l... %this1, i32 0, i32 11\l  %30 = load ptr, ptr %buck1, align 8\l  %31 = load i32, ptr %itype.addr, align 4\l  %idxprom18 = sext i32 %31 to i64\l  %arrayidx19 = getelementptr inbounds ptr, ptr %30, i64 %idxprom18\l  %32 = load ptr, ptr %arrayidx19, align 8\l  %33 = load i32, ptr %jtype.addr, align 4\l  %idxprom20 = sext i32 %33 to i64\l  %arrayidx21 = getelementptr inbounds double, ptr %32, i64 %idxprom20\l  %34 = load double, ptr %arrayidx21, align 8\l  %35 = load double, ptr %rexp, align 8\l  %mul22 = fmul double %34, %35\l  %neg = fneg double %mul22\l  %36 = call double @llvm.fmuladd.f64(double %28, double %29, double %neg)\l  store double %36, ptr %du_lj, align 8\l  %buck123 = getelementptr inbounds %\"class.LAMMPS_NS::PairBuckCoulCut\", ptr\l... %this1, i32 0, i32 11\l  %37 = load ptr, ptr %buck123, align 8\l  %38 = load i32, ptr %itype.addr, align 4\l  %idxprom24 = sext i32 %38 to i64\l  %arrayidx25 = getelementptr inbounds ptr, ptr %37, i64 %idxprom24\l  %39 = load ptr, ptr %arrayidx25, align 8\l  %40 = load i32, ptr %jtype.addr, align 4\l  %idxprom26 = sext i32 %40 to i64\l  %arrayidx27 = getelementptr inbounds double, ptr %39, i64 %idxprom26\l  %41 = load double, ptr %arrayidx27, align 8\l  %rho = getelementptr inbounds %\"class.LAMMPS_NS::PairBuckCoulCut\", ptr\l... %this1, i32 0, i32 8\l  %42 = load ptr, ptr %rho, align 8\l  %43 = load i32, ptr %itype.addr, align 4\l  %idxprom28 = sext i32 %43 to i64\l  %arrayidx29 = getelementptr inbounds ptr, ptr %42, i64 %idxprom28\l  %44 = load ptr, ptr %arrayidx29, align 8\l  %45 = load i32, ptr %jtype.addr, align 4\l  %idxprom30 = sext i32 %45 to i64\l  %arrayidx31 = getelementptr inbounds double, ptr %44, i64 %idxprom30\l  %46 = load double, ptr %arrayidx31, align 8\l  %div32 = fdiv double %41, %46\l  %47 = load double, ptr %rexp, align 8\l  %buck234 = getelementptr inbounds %\"class.LAMMPS_NS::PairBuckCoulCut\", ptr\l... %this1, i32 0, i32 12\l  %48 = load ptr, ptr %buck234, align 8\l  %49 = load i32, ptr %itype.addr, align 4\l  %idxprom35 = sext i32 %49 to i64\l  %arrayidx36 = getelementptr inbounds ptr, ptr %48, i64 %idxprom35\l  %50 = load ptr, ptr %arrayidx36, align 8\l  %51 = load i32, ptr %jtype.addr, align 4\l  %idxprom37 = sext i32 %51 to i64\l  %arrayidx38 = getelementptr inbounds double, ptr %50, i64 %idxprom37\l  %52 = load double, ptr %arrayidx38, align 8\l  %mul39 = fmul double 7.000000e+00, %52\l  %53 = load double, ptr %r8inv, align 8\l  %mul40 = fmul double %mul39, %53\l  %neg41 = fneg double %mul40\l  %54 = call double @llvm.fmuladd.f64(double %div32, double %47, double %neg41)\l  store double %54, ptr %du2_lj, align 8\l  %55 = load double, ptr %qqrd2e, align 8\l  %fneg42 = fneg double %55\l  %56 = load ptr, ptr %q, align 8\l  %57 = load i32, ptr %i.addr, align 4\l  %idxprom43 = sext i32 %57 to i64\l  %arrayidx44 = getelementptr inbounds double, ptr %56, i64 %idxprom43\l  %58 = load double, ptr %arrayidx44, align 8\l  %mul45 = fmul double %fneg42, %58\l  %59 = load ptr, ptr %q, align 8\l  %60 = load i32, ptr %j.addr, align 4\l  %idxprom46 = sext i32 %60 to i64\l  %arrayidx47 = getelementptr inbounds double, ptr %59, i64 %idxprom46\l  %61 = load double, ptr %arrayidx47, align 8\l  %mul48 = fmul double %mul45, %61\l  %62 = load double, ptr %r2inv, align 8\l  %mul49 = fmul double %mul48, %62\l  store double %mul49, ptr %du_coul, align 8\l  %63 = load double, ptr %qqrd2e, align 8\l  %mul50 = fmul double 2.000000e+00, %63\l  %64 = load ptr, ptr %q, align 8\l  %65 = load i32, ptr %i.addr, align 4\l  %idxprom51 = sext i32 %65 to i64\l  %arrayidx52 = getelementptr inbounds double, ptr %64, i64 %idxprom51\l  %66 = load double, ptr %arrayidx52, align 8\l  %mul53 = fmul double %mul50, %66\l  %67 = load ptr, ptr %q, align 8\l  %68 = load i32, ptr %j.addr, align 4\l  %idxprom54 = sext i32 %68 to i64\l  %arrayidx55 = getelementptr inbounds double, ptr %67, i64 %idxprom54\l  %69 = load double, ptr %arrayidx55, align 8\l  %mul56 = fmul double %mul53, %69\l  %70 = load double, ptr %r3inv, align 8\l  %mul57 = fmul double %mul56, %70\l  store double %mul57, ptr %du2_coul, align 8\l  %71 = load double, ptr %factor_lj.addr, align 8\l  %72 = load double, ptr %du_lj, align 8\l  %73 = load double, ptr %factor_coul.addr, align 8\l  %74 = load double, ptr %du_coul, align 8\l  %mul59 = fmul double %73, %74\l  %75 = call double @llvm.fmuladd.f64(double %71, double %72, double %mul59)\l  %76 = load ptr, ptr %dupair.addr, align 8\l  store double %75, ptr %76, align 8\l  %77 = load double, ptr %factor_lj.addr, align 8\l  %78 = load double, ptr %du2_lj, align 8\l  %79 = load double, ptr %factor_coul.addr, align 8\l  %80 = load double, ptr %du2_coul, align 8\l  %mul61 = fmul double %79, %80\l  %81 = call double @llvm.fmuladd.f64(double %77, double %78, double %mul61)\l  %82 = load ptr, ptr %du2pair.addr, align 8\l  store double %81, ptr %82, align 8\l  ret void\l}"];
}
