digraph "CFG for '_ZNK9LAMMPS_NS7MinHFTN14compute_to_tr_Eddddbddd' function" {
	label="CFG for '_ZNK9LAMMPS_NS7MinHFTN14compute_to_tr_Eddddbddd' function";

	Node0x556e8458cfd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %retval = alloca double, align 8\l  %this.addr = alloca ptr, align 8\l  %dPP.addr = alloca double, align 8\l  %dPD.addr = alloca double, align 8\l  %dDD.addr = alloca double, align 8\l  %dTrustRadius.addr = alloca double, align 8\l  %bConsiderBothRoots.addr = alloca i8, align 1\l  %dDHD.addr = alloca double, align 8\l  %dPdotHD.addr = alloca double, align 8\l  %dGradDotD.addr = alloca double, align 8\l  %dTRsqrd = alloca double, align 8\l  %dDiscr = alloca double, align 8\l  %dRootPos = alloca double, align 8\l  %dRootNeg = alloca double, align 8\l  %dTmpTerm = alloca double, align 8\l  %dCgRedPos = alloca double, align 8\l  %dCgRedNeg = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store double %dPP, ptr %dPP.addr, align 8\l  store double %dPD, ptr %dPD.addr, align 8\l  store double %dDD, ptr %dDD.addr, align 8\l  store double %dTrustRadius, ptr %dTrustRadius.addr, align 8\l  %frombool = zext i1 %bConsiderBothRoots to i8\l  store i8 %frombool, ptr %bConsiderBothRoots.addr, align 1\l  store double %dDHD, ptr %dDHD.addr, align 8\l  store double %dPdotHD, ptr %dPdotHD.addr, align 8\l  store double %dGradDotD, ptr %dGradDotD.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %0 = load double, ptr %dDD.addr, align 8\l  %cmp = fcmp ole double %0, 0.000000e+00\l  br i1 %cmp, label %if.then, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x556e8458cfd0:s0 -> Node0x556e84592d90[tooltip="entry -> if.then\nProbability 50.00%" ];
	Node0x556e8458cfd0:s1 -> Node0x556e84592e00[tooltip="entry -> lor.lhs.false\nProbability 50.00%" ];
	Node0x556e84592e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{lor.lhs.false:\l|  %1 = load double, ptr %dPP.addr, align 8\l  %cmp2 = fcmp olt double %1, 0.000000e+00\l  br i1 %cmp2, label %if.then, label %lor.lhs.false3\l|{<s0>T|<s1>F}}"];
	Node0x556e84592e00:s0 -> Node0x556e84592d90[tooltip="lor.lhs.false -> if.then\nProbability 50.00%" ];
	Node0x556e84592e00:s1 -> Node0x556e84592fa0[tooltip="lor.lhs.false -> lor.lhs.false3\nProbability 50.00%" ];
	Node0x556e84592fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{lor.lhs.false3:\l|  %2 = load double, ptr %dTrustRadius.addr, align 8\l  %cmp4 = fcmp olt double %2, 0.000000e+00\l  br i1 %cmp4, label %if.then, label %lor.lhs.false5\l|{<s0>T|<s1>F}}"];
	Node0x556e84592fa0:s0 -> Node0x556e84592d90[tooltip="lor.lhs.false3 -> if.then\nProbability 50.00%" ];
	Node0x556e84592fa0:s1 -> Node0x556e84593200[tooltip="lor.lhs.false3 -> lor.lhs.false5\nProbability 50.00%" ];
	Node0x556e84593200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{lor.lhs.false5:\l|  %3 = load double, ptr %dTrustRadius.addr, align 8\l  %4 = load double, ptr %dTrustRadius.addr, align 8\l  %mul = fmul double %3, %4\l  %5 = load double, ptr %dPP.addr, align 8\l  %cmp6 = fcmp olt double %mul, %5\l  br i1 %cmp6, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x556e84593200:s0 -> Node0x556e84592d90[tooltip="lor.lhs.false5 -> if.then\nProbability 50.00%" ];
	Node0x556e84593200:s1 -> Node0x556e84593610[tooltip="lor.lhs.false5 -> if.end\nProbability 50.00%" ];
	Node0x556e84592d90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.then:\l|  %call = call i32 (ptr, ...) @printf(ptr noundef @.str.2)\l  store double 0.000000e+00, ptr %retval, align 8\l  br label %return\l}"];
	Node0x556e84592d90 -> Node0x556e84593960[tooltip="if.then -> return\nProbability 100.00%" ];
	Node0x556e84593610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{if.end:\l|  %6 = load double, ptr %dTrustRadius.addr, align 8\l  %7 = load double, ptr %dTrustRadius.addr, align 8\l  %mul7 = fmul double %6, %7\l  store double %mul7, ptr %dTRsqrd, align 8\l  %8 = load double, ptr %dPD.addr, align 8\l  %9 = load double, ptr %dPD.addr, align 8\l  %10 = load double, ptr %dDD.addr, align 8\l  %11 = load double, ptr %dPP.addr, align 8\l  %12 = load double, ptr %dTRsqrd, align 8\l  %sub = fsub double %11, %12\l  %mul9 = fmul double %10, %sub\l  %neg = fneg double %mul9\l  %13 = call double @llvm.fmuladd.f64(double %8, double %9, double %neg)\l  store double %13, ptr %dDiscr, align 8\l  %14 = load double, ptr %dDiscr, align 8\l  %cmp10 = fcmp ogt double 0.000000e+00, %14\l  br i1 %cmp10, label %cond.true, label %cond.false\l|{<s0>T|<s1>F}}"];
	Node0x556e84593610:s0 -> Node0x556e84594340[tooltip="if.end -> cond.true\nProbability 50.00%" ];
	Node0x556e84593610:s1 -> Node0x556e84594390[tooltip="if.end -> cond.false\nProbability 50.00%" ];
	Node0x556e84594340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{cond.true:\l|  br label %cond.end\l}"];
	Node0x556e84594340 -> Node0x556e84594490[tooltip="cond.true -> cond.end\nProbability 100.00%" ];
	Node0x556e84594390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{cond.false:\l|  %15 = load double, ptr %dDiscr, align 8\l  br label %cond.end\l}"];
	Node0x556e84594390 -> Node0x556e84594490[tooltip="cond.false -> cond.end\nProbability 100.00%" ];
	Node0x556e84594490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{cond.end:\l|  %cond = phi double [ 0.000000e+00, %cond.true ], [ %15, %cond.false ]\l  store double %cond, ptr %dDiscr, align 8\l  %16 = load double, ptr %dDiscr, align 8\l  %call11 = call double @sqrt(double noundef %16) #11\l  store double %call11, ptr %dDiscr, align 8\l  %17 = load double, ptr %dPD.addr, align 8\l  %fneg = fneg double %17\l  %18 = load double, ptr %dDiscr, align 8\l  %add = fadd double %fneg, %18\l  %19 = load double, ptr %dDD.addr, align 8\l  %div = fdiv double %add, %19\l  store double %div, ptr %dRootPos, align 8\l  %20 = load double, ptr %dPD.addr, align 8\l  %fneg12 = fneg double %20\l  %21 = load double, ptr %dDiscr, align 8\l  %sub13 = fsub double %fneg12, %21\l  %22 = load double, ptr %dDD.addr, align 8\l  %div14 = fdiv double %sub13, %22\l  store double %div14, ptr %dRootNeg, align 8\l  %23 = load i8, ptr %bConsiderBothRoots.addr, align 1\l  %tobool = trunc i8 %23 to i1\l  br i1 %tobool, label %if.end16, label %if.then15\l|{<s0>T|<s1>F}}"];
	Node0x556e84594490:s0 -> Node0x556e84595600[tooltip="cond.end -> if.end16\nProbability 50.00%" ];
	Node0x556e84594490:s1 -> Node0x556e84595650[tooltip="cond.end -> if.then15\nProbability 50.00%" ];
	Node0x556e84595650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.then15:\l|  %24 = load double, ptr %dRootPos, align 8\l  store double %24, ptr %retval, align 8\l  br label %return\l}"];
	Node0x556e84595650 -> Node0x556e84593960[tooltip="if.then15 -> return\nProbability 100.00%" ];
	Node0x556e84595600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.end16:\l|  %25 = load double, ptr %dGradDotD.addr, align 8\l  %26 = load double, ptr %dPdotHD.addr, align 8\l  %add17 = fadd double %25, %26\l  store double %add17, ptr %dTmpTerm, align 8\l  %27 = load double, ptr %dRootPos, align 8\l  %28 = load double, ptr %dTmpTerm, align 8\l  %29 = load double, ptr %dRootPos, align 8\l  %mul19 = fmul double 5.000000e-01, %29\l  %30 = load double, ptr %dRootPos, align 8\l  %mul20 = fmul double %mul19, %30\l  %31 = load double, ptr %dDHD.addr, align 8\l  %mul21 = fmul double %mul20, %31\l  %32 = call double @llvm.fmuladd.f64(double %27, double %28, double %mul21)\l  store double %32, ptr %dCgRedPos, align 8\l  %33 = load double, ptr %dRootNeg, align 8\l  %34 = load double, ptr %dTmpTerm, align 8\l  %35 = load double, ptr %dRootNeg, align 8\l  %mul23 = fmul double 5.000000e-01, %35\l  %36 = load double, ptr %dRootNeg, align 8\l  %mul24 = fmul double %mul23, %36\l  %37 = load double, ptr %dDHD.addr, align 8\l  %mul25 = fmul double %mul24, %37\l  %38 = call double @llvm.fmuladd.f64(double %33, double %34, double %mul25)\l  store double %38, ptr %dCgRedNeg, align 8\l  %39 = load double, ptr %dCgRedPos, align 8\l  %fneg26 = fneg double %39\l  %40 = load double, ptr %dCgRedNeg, align 8\l  %fneg27 = fneg double %40\l  %cmp28 = fcmp ogt double %fneg26, %fneg27\l  br i1 %cmp28, label %if.then29, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x556e84595600:s0 -> Node0x556e84596b20[tooltip="if.end16 -> if.then29\nProbability 50.00%" ];
	Node0x556e84595600:s1 -> Node0x556e84596b70[tooltip="if.end16 -> if.else\nProbability 50.00%" ];
	Node0x556e84596b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{if.then29:\l|  %41 = load double, ptr %dRootPos, align 8\l  store double %41, ptr %retval, align 8\l  br label %return\l}"];
	Node0x556e84596b20 -> Node0x556e84593960[tooltip="if.then29 -> return\nProbability 100.00%" ];
	Node0x556e84596b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{if.else:\l|  %42 = load double, ptr %dRootNeg, align 8\l  store double %42, ptr %retval, align 8\l  br label %return\l}"];
	Node0x556e84596b70 -> Node0x556e84593960[tooltip="if.else -> return\nProbability 100.00%" ];
	Node0x556e84593960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{return:\l|  %43 = load double, ptr %retval, align 8\l  ret double %43\l}"];
}
