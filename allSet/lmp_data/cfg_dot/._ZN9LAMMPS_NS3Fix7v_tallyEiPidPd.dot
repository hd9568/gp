digraph "CFG for '_ZN9LAMMPS_NS3Fix7v_tallyEiPidPd' function" {
	label="CFG for '_ZN9LAMMPS_NS3Fix7v_tallyEiPidPd' function";

	Node0x555c10ed2d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %n.addr = alloca i32, align 4\l  %list.addr = alloca ptr, align 8\l  %total.addr = alloca double, align 8\l  %v.addr = alloca ptr, align 8\l  %m = alloca i32, align 4\l  %fraction = alloca double, align 8\l  %fraction20 = alloca double, align 8\l  %i = alloca i32, align 4\l  store ptr %this, ptr %this.addr, align 8\l  store i32 %n, ptr %n.addr, align 4\l  store ptr %list, ptr %list.addr, align 8\l  store double %total, ptr %total.addr, align 8\l  store ptr %v, ptr %v.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %vflag_global = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1,\l... i32 0, i32 86\l  %0 = load i32, ptr %vflag_global, align 8\l  %tobool = icmp ne i32 %0, 0\l  br i1 %tobool, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x555c10ed2d20:s0 -> Node0x555c10ed3bb0[tooltip="entry -> if.then\nProbability 62.50%" ];
	Node0x555c10ed2d20:s1 -> Node0x555c10ed3c20[tooltip="entry -> if.end\nProbability 37.50%" ];
	Node0x555c10ed3bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.then:\l|  %1 = load i32, ptr %n.addr, align 4\l  %conv = sitofp i32 %1 to double\l  %2 = load double, ptr %total.addr, align 8\l  %div = fdiv double %conv, %2\l  store double %div, ptr %fraction, align 8\l  %3 = load double, ptr %fraction, align 8\l  %4 = load ptr, ptr %v.addr, align 8\l  %arrayidx = getelementptr inbounds double, ptr %4, i64 0\l  %5 = load double, ptr %arrayidx, align 8\l  %virial = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32 0,\l... i32 66\l  %arrayidx2 = getelementptr inbounds [6 x double], ptr %virial, i64 0, i64 0\l  %6 = load double, ptr %arrayidx2, align 8\l  %7 = call double @llvm.fmuladd.f64(double %3, double %5, double %6)\l  store double %7, ptr %arrayidx2, align 8\l  %8 = load double, ptr %fraction, align 8\l  %9 = load ptr, ptr %v.addr, align 8\l  %arrayidx3 = getelementptr inbounds double, ptr %9, i64 1\l  %10 = load double, ptr %arrayidx3, align 8\l  %virial4 = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32\l... 0, i32 66\l  %arrayidx5 = getelementptr inbounds [6 x double], ptr %virial4, i64 0, i64 1\l  %11 = load double, ptr %arrayidx5, align 8\l  %12 = call double @llvm.fmuladd.f64(double %8, double %10, double %11)\l  store double %12, ptr %arrayidx5, align 8\l  %13 = load double, ptr %fraction, align 8\l  %14 = load ptr, ptr %v.addr, align 8\l  %arrayidx6 = getelementptr inbounds double, ptr %14, i64 2\l  %15 = load double, ptr %arrayidx6, align 8\l  %virial7 = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32\l... 0, i32 66\l  %arrayidx8 = getelementptr inbounds [6 x double], ptr %virial7, i64 0, i64 2\l  %16 = load double, ptr %arrayidx8, align 8\l  %17 = call double @llvm.fmuladd.f64(double %13, double %15, double %16)\l  store double %17, ptr %arrayidx8, align 8\l  %18 = load double, ptr %fraction, align 8\l  %19 = load ptr, ptr %v.addr, align 8\l  %arrayidx9 = getelementptr inbounds double, ptr %19, i64 3\l  %20 = load double, ptr %arrayidx9, align 8\l  %virial10 = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32\l... 0, i32 66\l  %arrayidx11 = getelementptr inbounds [6 x double], ptr %virial10, i64 0, i64\l... 3\l  %21 = load double, ptr %arrayidx11, align 8\l  %22 = call double @llvm.fmuladd.f64(double %18, double %20, double %21)\l  store double %22, ptr %arrayidx11, align 8\l  %23 = load double, ptr %fraction, align 8\l  %24 = load ptr, ptr %v.addr, align 8\l  %arrayidx12 = getelementptr inbounds double, ptr %24, i64 4\l  %25 = load double, ptr %arrayidx12, align 8\l  %virial13 = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32\l... 0, i32 66\l  %arrayidx14 = getelementptr inbounds [6 x double], ptr %virial13, i64 0, i64\l... 4\l  %26 = load double, ptr %arrayidx14, align 8\l  %27 = call double @llvm.fmuladd.f64(double %23, double %25, double %26)\l  store double %27, ptr %arrayidx14, align 8\l  %28 = load double, ptr %fraction, align 8\l  %29 = load ptr, ptr %v.addr, align 8\l  %arrayidx15 = getelementptr inbounds double, ptr %29, i64 5\l  %30 = load double, ptr %arrayidx15, align 8\l  %virial16 = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32\l... 0, i32 66\l  %arrayidx17 = getelementptr inbounds [6 x double], ptr %virial16, i64 0, i64\l... 5\l  %31 = load double, ptr %arrayidx17, align 8\l  %32 = call double @llvm.fmuladd.f64(double %28, double %30, double %31)\l  store double %32, ptr %arrayidx17, align 8\l  br label %if.end\l}"];
	Node0x555c10ed3bb0 -> Node0x555c10ed3c20[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x555c10ed3c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{if.end:\l|  %vflag_atom = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1,\l... i32 0, i32 87\l  %33 = load i32, ptr %vflag_atom, align 4\l  %tobool18 = icmp ne i32 %33, 0\l  br i1 %tobool18, label %if.then19, label %if.end52\l|{<s0>T|<s1>F}}"];
	Node0x555c10ed3c20:s0 -> Node0x555c10ed66b0[tooltip="if.end -> if.then19\nProbability 62.50%" ];
	Node0x555c10ed3c20:s1 -> Node0x555c10ed6730[tooltip="if.end -> if.end52\nProbability 37.50%" ];
	Node0x555c10ed66b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.then19:\l|  %34 = load double, ptr %total.addr, align 8\l  %div21 = fdiv double 1.000000e+00, %34\l  store double %div21, ptr %fraction20, align 8\l  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x555c10ed66b0 -> Node0x555c10ed6af0[tooltip="if.then19 -> for.cond\nProbability 100.00%" ];
	Node0x555c10ed6af0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %35 = load i32, ptr %i, align 4\l  %36 = load i32, ptr %n.addr, align 4\l  %cmp = icmp slt i32 %35, %36\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x555c10ed6af0:s0 -> Node0x555c10ed6d70[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x555c10ed6af0:s1 -> Node0x555c10ed6df0[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x555c10ed6d70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %37 = load ptr, ptr %list.addr, align 8\l  %38 = load i32, ptr %i, align 4\l  %idxprom = sext i32 %38 to i64\l  %arrayidx22 = getelementptr inbounds i32, ptr %37, i64 %idxprom\l  %39 = load i32, ptr %arrayidx22, align 4\l  store i32 %39, ptr %m, align 4\l  %40 = load double, ptr %fraction20, align 8\l  %41 = load ptr, ptr %v.addr, align 8\l  %arrayidx23 = getelementptr inbounds double, ptr %41, i64 0\l  %42 = load double, ptr %arrayidx23, align 8\l  %vatom = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32 0,\l... i32 68\l  %43 = load ptr, ptr %vatom, align 8\l  %44 = load i32, ptr %m, align 4\l  %idxprom24 = sext i32 %44 to i64\l  %arrayidx25 = getelementptr inbounds ptr, ptr %43, i64 %idxprom24\l  %45 = load ptr, ptr %arrayidx25, align 8\l  %arrayidx26 = getelementptr inbounds double, ptr %45, i64 0\l  %46 = load double, ptr %arrayidx26, align 8\l  %47 = call double @llvm.fmuladd.f64(double %40, double %42, double %46)\l  store double %47, ptr %arrayidx26, align 8\l  %48 = load double, ptr %fraction20, align 8\l  %49 = load ptr, ptr %v.addr, align 8\l  %arrayidx27 = getelementptr inbounds double, ptr %49, i64 1\l  %50 = load double, ptr %arrayidx27, align 8\l  %vatom28 = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32\l... 0, i32 68\l  %51 = load ptr, ptr %vatom28, align 8\l  %52 = load i32, ptr %m, align 4\l  %idxprom29 = sext i32 %52 to i64\l  %arrayidx30 = getelementptr inbounds ptr, ptr %51, i64 %idxprom29\l  %53 = load ptr, ptr %arrayidx30, align 8\l  %arrayidx31 = getelementptr inbounds double, ptr %53, i64 1\l  %54 = load double, ptr %arrayidx31, align 8\l  %55 = call double @llvm.fmuladd.f64(double %48, double %50, double %54)\l  store double %55, ptr %arrayidx31, align 8\l  %56 = load double, ptr %fraction20, align 8\l  %57 = load ptr, ptr %v.addr, align 8\l  %arrayidx32 = getelementptr inbounds double, ptr %57, i64 2\l  %58 = load double, ptr %arrayidx32, align 8\l  %vatom33 = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32\l... 0, i32 68\l  %59 = load ptr, ptr %vatom33, align 8\l  %60 = load i32, ptr %m, align 4\l  %idxprom34 = sext i32 %60 to i64\l  %arrayidx35 = getelementptr inbounds ptr, ptr %59, i64 %idxprom34\l  %61 = load ptr, ptr %arrayidx35, align 8\l  %arrayidx36 = getelementptr inbounds double, ptr %61, i64 2\l  %62 = load double, ptr %arrayidx36, align 8\l  %63 = call double @llvm.fmuladd.f64(double %56, double %58, double %62)\l  store double %63, ptr %arrayidx36, align 8\l  %64 = load double, ptr %fraction20, align 8\l  %65 = load ptr, ptr %v.addr, align 8\l  %arrayidx37 = getelementptr inbounds double, ptr %65, i64 3\l  %66 = load double, ptr %arrayidx37, align 8\l  %vatom38 = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32\l... 0, i32 68\l  %67 = load ptr, ptr %vatom38, align 8\l  %68 = load i32, ptr %m, align 4\l  %idxprom39 = sext i32 %68 to i64\l  %arrayidx40 = getelementptr inbounds ptr, ptr %67, i64 %idxprom39\l  %69 = load ptr, ptr %arrayidx40, align 8\l  %arrayidx41 = getelementptr inbounds double, ptr %69, i64 3\l  %70 = load double, ptr %arrayidx41, align 8\l  %71 = call double @llvm.fmuladd.f64(double %64, double %66, double %70)\l  store double %71, ptr %arrayidx41, align 8\l  %72 = load double, ptr %fraction20, align 8\l  %73 = load ptr, ptr %v.addr, align 8\l  %arrayidx42 = getelementptr inbounds double, ptr %73, i64 4\l  %74 = load double, ptr %arrayidx42, align 8\l  %vatom43 = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32\l... 0, i32 68\l  %75 = load ptr, ptr %vatom43, align 8\l  %76 = load i32, ptr %m, align 4\l  %idxprom44 = sext i32 %76 to i64\l  %arrayidx45 = getelementptr inbounds ptr, ptr %75, i64 %idxprom44\l  %77 = load ptr, ptr %arrayidx45, align 8\l  %arrayidx46 = getelementptr inbounds double, ptr %77, i64 4\l  %78 = load double, ptr %arrayidx46, align 8\l  %79 = call double @llvm.fmuladd.f64(double %72, double %74, double %78)\l  store double %79, ptr %arrayidx46, align 8\l  %80 = load double, ptr %fraction20, align 8\l  %81 = load ptr, ptr %v.addr, align 8\l  %arrayidx47 = getelementptr inbounds double, ptr %81, i64 5\l  %82 = load double, ptr %arrayidx47, align 8\l  %vatom48 = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32\l... 0, i32 68\l  %83 = load ptr, ptr %vatom48, align 8\l  %84 = load i32, ptr %m, align 4\l  %idxprom49 = sext i32 %84 to i64\l  %arrayidx50 = getelementptr inbounds ptr, ptr %83, i64 %idxprom49\l  %85 = load ptr, ptr %arrayidx50, align 8\l  %arrayidx51 = getelementptr inbounds double, ptr %85, i64 5\l  %86 = load double, ptr %arrayidx51, align 8\l  %87 = call double @llvm.fmuladd.f64(double %80, double %82, double %86)\l  store double %87, ptr %arrayidx51, align 8\l  br label %for.inc\l}"];
	Node0x555c10ed6d70 -> Node0x555c10edb540[tooltip="for.body -> for.inc\nProbability 100.00%" ];
	Node0x555c10edb540 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %88 = load i32, ptr %i, align 4\l  %inc = add nsw i32 %88, 1\l  store i32 %inc, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x555c10edb540 -> Node0x555c10ed6af0[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x555c10ed6df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  br label %if.end52\l}"];
	Node0x555c10ed6df0 -> Node0x555c10ed6730[tooltip="for.end -> if.end52\nProbability 100.00%" ];
	Node0x555c10ed6730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{if.end52:\l|  ret void\l}"];
}
