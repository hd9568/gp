digraph "CFG for '_ZN9LAMMPS_NS8PairBorn6singleEiiiidddRd' function" {
	label="CFG for '_ZN9LAMMPS_NS8PairBorn6singleEiiiidddRd' function";

	Node0x55bd04197ad0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %.addr = alloca i32, align 4\l  %.addr1 = alloca i32, align 4\l  %itype.addr = alloca i32, align 4\l  %jtype.addr = alloca i32, align 4\l  %rsq.addr = alloca double, align 8\l  %.addr2 = alloca double, align 8\l  %factor_lj.addr = alloca double, align 8\l  %fforce.addr = alloca ptr, align 8\l  %r2inv = alloca double, align 8\l  %r6inv = alloca double, align 8\l  %r = alloca double, align 8\l  %rexp = alloca double, align 8\l  %forceborn = alloca double, align 8\l  %phiborn = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store i32 %0, ptr %.addr, align 4\l  store i32 %1, ptr %.addr1, align 4\l  store i32 %itype, ptr %itype.addr, align 4\l  store i32 %jtype, ptr %jtype.addr, align 4\l  store double %rsq, ptr %rsq.addr, align 8\l  store double %2, ptr %.addr2, align 8\l  store double %factor_lj, ptr %factor_lj.addr, align 8\l  store ptr %fforce, ptr %fforce.addr, align 8\l  %this3 = load ptr, ptr %this.addr, align 8\l  %3 = load double, ptr %rsq.addr, align 8\l  %div = fdiv double 1.000000e+00, %3\l  store double %div, ptr %r2inv, align 8\l  %4 = load double, ptr %r2inv, align 8\l  %5 = load double, ptr %r2inv, align 8\l  %mul = fmul double %4, %5\l  %6 = load double, ptr %r2inv, align 8\l  %mul4 = fmul double %mul, %6\l  store double %mul4, ptr %r6inv, align 8\l  %7 = load double, ptr %rsq.addr, align 8\l  %call = call double @sqrt(double noundef %7) #9\l  store double %call, ptr %r, align 8\l  %sigma = getelementptr inbounds %\"class.LAMMPS_NS::PairBorn\", ptr %this3,\l... i32 0, i32 5\l  %8 = load ptr, ptr %sigma, align 8\l  %9 = load i32, ptr %itype.addr, align 4\l  %idxprom = sext i32 %9 to i64\l  %arrayidx = getelementptr inbounds ptr, ptr %8, i64 %idxprom\l  %10 = load ptr, ptr %arrayidx, align 8\l  %11 = load i32, ptr %jtype.addr, align 4\l  %idxprom5 = sext i32 %11 to i64\l  %arrayidx6 = getelementptr inbounds double, ptr %10, i64 %idxprom5\l  %12 = load double, ptr %arrayidx6, align 8\l  %13 = load double, ptr %r, align 8\l  %sub = fsub double %12, %13\l  %rhoinv = getelementptr inbounds %\"class.LAMMPS_NS::PairBorn\", ptr %this3,\l... i32 0, i32 8\l  %14 = load ptr, ptr %rhoinv, align 8\l  %15 = load i32, ptr %itype.addr, align 4\l  %idxprom7 = sext i32 %15 to i64\l  %arrayidx8 = getelementptr inbounds ptr, ptr %14, i64 %idxprom7\l  %16 = load ptr, ptr %arrayidx8, align 8\l  %17 = load i32, ptr %jtype.addr, align 4\l  %idxprom9 = sext i32 %17 to i64\l  %arrayidx10 = getelementptr inbounds double, ptr %16, i64 %idxprom9\l  %18 = load double, ptr %arrayidx10, align 8\l  %mul11 = fmul double %sub, %18\l  %call12 = call double @exp(double noundef %mul11) #9\l  store double %call12, ptr %rexp, align 8\l  %born1 = getelementptr inbounds %\"class.LAMMPS_NS::PairBorn\", ptr %this3,\l... i32 0, i32 9\l  %19 = load ptr, ptr %born1, align 8\l  %20 = load i32, ptr %itype.addr, align 4\l  %idxprom13 = sext i32 %20 to i64\l  %arrayidx14 = getelementptr inbounds ptr, ptr %19, i64 %idxprom13\l  %21 = load ptr, ptr %arrayidx14, align 8\l  %22 = load i32, ptr %jtype.addr, align 4\l  %idxprom15 = sext i32 %22 to i64\l  %arrayidx16 = getelementptr inbounds double, ptr %21, i64 %idxprom15\l  %23 = load double, ptr %arrayidx16, align 8\l  %24 = load double, ptr %r, align 8\l  %mul17 = fmul double %23, %24\l  %25 = load double, ptr %rexp, align 8\l  %born2 = getelementptr inbounds %\"class.LAMMPS_NS::PairBorn\", ptr %this3,\l... i32 0, i32 10\l  %26 = load ptr, ptr %born2, align 8\l  %27 = load i32, ptr %itype.addr, align 4\l  %idxprom19 = sext i32 %27 to i64\l  %arrayidx20 = getelementptr inbounds ptr, ptr %26, i64 %idxprom19\l  %28 = load ptr, ptr %arrayidx20, align 8\l  %29 = load i32, ptr %jtype.addr, align 4\l  %idxprom21 = sext i32 %29 to i64\l  %arrayidx22 = getelementptr inbounds double, ptr %28, i64 %idxprom21\l  %30 = load double, ptr %arrayidx22, align 8\l  %31 = load double, ptr %r6inv, align 8\l  %mul23 = fmul double %30, %31\l  %neg = fneg double %mul23\l  %32 = call double @llvm.fmuladd.f64(double %mul17, double %25, double %neg)\l  %born3 = getelementptr inbounds %\"class.LAMMPS_NS::PairBorn\", ptr %this3,\l... i32 0, i32 11\l  %33 = load ptr, ptr %born3, align 8\l  %34 = load i32, ptr %itype.addr, align 4\l  %idxprom24 = sext i32 %34 to i64\l  %arrayidx25 = getelementptr inbounds ptr, ptr %33, i64 %idxprom24\l  %35 = load ptr, ptr %arrayidx25, align 8\l  %36 = load i32, ptr %jtype.addr, align 4\l  %idxprom26 = sext i32 %36 to i64\l  %arrayidx27 = getelementptr inbounds double, ptr %35, i64 %idxprom26\l  %37 = load double, ptr %arrayidx27, align 8\l  %38 = load double, ptr %r2inv, align 8\l  %mul28 = fmul double %37, %38\l  %39 = load double, ptr %r6inv, align 8\l  %40 = call double @llvm.fmuladd.f64(double %mul28, double %39, double %32)\l  store double %40, ptr %forceborn, align 8\l  %41 = load double, ptr %factor_lj.addr, align 8\l  %42 = load double, ptr %forceborn, align 8\l  %mul30 = fmul double %41, %42\l  %43 = load double, ptr %r2inv, align 8\l  %mul31 = fmul double %mul30, %43\l  %44 = load ptr, ptr %fforce.addr, align 8\l  store double %mul31, ptr %44, align 8\l  %a = getelementptr inbounds %\"class.LAMMPS_NS::PairBorn\", ptr %this3, i32 0,\l... i32 3\l  %45 = load ptr, ptr %a, align 8\l  %46 = load i32, ptr %itype.addr, align 4\l  %idxprom32 = sext i32 %46 to i64\l  %arrayidx33 = getelementptr inbounds ptr, ptr %45, i64 %idxprom32\l  %47 = load ptr, ptr %arrayidx33, align 8\l  %48 = load i32, ptr %jtype.addr, align 4\l  %idxprom34 = sext i32 %48 to i64\l  %arrayidx35 = getelementptr inbounds double, ptr %47, i64 %idxprom34\l  %49 = load double, ptr %arrayidx35, align 8\l  %50 = load double, ptr %rexp, align 8\l  %c = getelementptr inbounds %\"class.LAMMPS_NS::PairBorn\", ptr %this3, i32 0,\l... i32 6\l  %51 = load ptr, ptr %c, align 8\l  %52 = load i32, ptr %itype.addr, align 4\l  %idxprom37 = sext i32 %52 to i64\l  %arrayidx38 = getelementptr inbounds ptr, ptr %51, i64 %idxprom37\l  %53 = load ptr, ptr %arrayidx38, align 8\l  %54 = load i32, ptr %jtype.addr, align 4\l  %idxprom39 = sext i32 %54 to i64\l  %arrayidx40 = getelementptr inbounds double, ptr %53, i64 %idxprom39\l  %55 = load double, ptr %arrayidx40, align 8\l  %56 = load double, ptr %r6inv, align 8\l  %mul41 = fmul double %55, %56\l  %neg42 = fneg double %mul41\l  %57 = call double @llvm.fmuladd.f64(double %49, double %50, double %neg42)\l  %d = getelementptr inbounds %\"class.LAMMPS_NS::PairBorn\", ptr %this3, i32 0,\l... i32 7\l  %58 = load ptr, ptr %d, align 8\l  %59 = load i32, ptr %itype.addr, align 4\l  %idxprom43 = sext i32 %59 to i64\l  %arrayidx44 = getelementptr inbounds ptr, ptr %58, i64 %idxprom43\l  %60 = load ptr, ptr %arrayidx44, align 8\l  %61 = load i32, ptr %jtype.addr, align 4\l  %idxprom45 = sext i32 %61 to i64\l  %arrayidx46 = getelementptr inbounds double, ptr %60, i64 %idxprom45\l  %62 = load double, ptr %arrayidx46, align 8\l  %63 = load double, ptr %r2inv, align 8\l  %mul47 = fmul double %62, %63\l  %64 = load double, ptr %r6inv, align 8\l  %65 = call double @llvm.fmuladd.f64(double %mul47, double %64, double %57)\l  %offset = getelementptr inbounds %\"class.LAMMPS_NS::PairBorn\", ptr %this3,\l... i32 0, i32 12\l  %66 = load ptr, ptr %offset, align 8\l  %67 = load i32, ptr %itype.addr, align 4\l  %idxprom49 = sext i32 %67 to i64\l  %arrayidx50 = getelementptr inbounds ptr, ptr %66, i64 %idxprom49\l  %68 = load ptr, ptr %arrayidx50, align 8\l  %69 = load i32, ptr %jtype.addr, align 4\l  %idxprom51 = sext i32 %69 to i64\l  %arrayidx52 = getelementptr inbounds double, ptr %68, i64 %idxprom51\l  %70 = load double, ptr %arrayidx52, align 8\l  %sub53 = fsub double %65, %70\l  store double %sub53, ptr %phiborn, align 8\l  %71 = load double, ptr %factor_lj.addr, align 8\l  %72 = load double, ptr %phiborn, align 8\l  %mul54 = fmul double %71, %72\l  ret double %mul54\l}"];
}
