digraph "CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRlRdS6_S6_S6_S6_S6_S6_EEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSB_' function" {
	label="CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRlRdS6_S6_S6_S6_S6_S6_EEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSB_' function";

	Node0x556728e25720 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr.i158 = alloca ptr, align 8\l  %val.addr.i159 = alloca double, align 8\l  %this.addr.i155 = alloca ptr, align 8\l  %val.addr.i156 = alloca double, align 8\l  %this.addr.i152 = alloca ptr, align 8\l  %val.addr.i153 = alloca double, align 8\l  %this.addr.i149 = alloca ptr, align 8\l  %val.addr.i150 = alloca double, align 8\l  %this.addr.i146 = alloca ptr, align 8\l  %val.addr.i147 = alloca double, align 8\l  %this.addr.i143 = alloca ptr, align 8\l  %val.addr.i144 = alloca double, align 8\l  %this.addr.i140 = alloca ptr, align 8\l  %val.addr.i141 = alloca double, align 8\l  %this.addr.i137 = alloca ptr, align 8\l  %val.addr.i138 = alloca double, align 8\l  %this.addr.i134 = alloca ptr, align 8\l  %val.addr.i135 = alloca double, align 8\l  %this.addr.i131 = alloca ptr, align 8\l  %val.addr.i132 = alloca double, align 8\l  %this.addr.i128 = alloca ptr, align 8\l  %val.addr.i129 = alloca double, align 8\l  %this.addr.i125 = alloca ptr, align 8\l  %val.addr.i126 = alloca double, align 8\l  %this.addr.i122 = alloca ptr, align 8\l  %val.addr.i123 = alloca double, align 8\l  %this.addr.i119 = alloca ptr, align 8\l  %val.addr.i120 = alloca double, align 8\l  %retval.i109 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i110 = alloca ptr, align 8\l  %arg.i111 = alloca ptr, align 8\l  %ref.tmp.i112 = alloca double, align 8\l  %ref.tmp1.i113 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i114 = alloca i8, align 1\l  %formattable_const.i115 = alloca i8, align 1\l  %formattable_pointer.i116 = alloca i8, align 1\l  %formattable.i117 = alloca i8, align 1\l  %retval.i99 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i100 = alloca ptr, align 8\l  %arg.i101 = alloca ptr, align 8\l  %ref.tmp.i102 = alloca double, align 8\l  %ref.tmp1.i103 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i104 = alloca i8, align 1\l  %formattable_const.i105 = alloca i8, align 1\l  %formattable_pointer.i106 = alloca i8, align 1\l  %formattable.i107 = alloca i8, align 1\l  %retval.i89 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i90 = alloca ptr, align 8\l  %arg.i91 = alloca ptr, align 8\l  %ref.tmp.i92 = alloca double, align 8\l  %ref.tmp1.i93 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i94 = alloca i8, align 1\l  %formattable_const.i95 = alloca i8, align 1\l  %formattable_pointer.i96 = alloca i8, align 1\l  %formattable.i97 = alloca i8, align 1\l  %retval.i79 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i80 = alloca ptr, align 8\l  %arg.i81 = alloca ptr, align 8\l  %ref.tmp.i82 = alloca double, align 8\l  %ref.tmp1.i83 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i84 = alloca i8, align 1\l  %formattable_const.i85 = alloca i8, align 1\l  %formattable_pointer.i86 = alloca i8, align 1\l  %formattable.i87 = alloca i8, align 1\l  %retval.i69 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i70 = alloca ptr, align 8\l  %arg.i71 = alloca ptr, align 8\l  %ref.tmp.i72 = alloca double, align 8\l  %ref.tmp1.i73 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i74 = alloca i8, align 1\l  %formattable_const.i75 = alloca i8, align 1\l  %formattable_pointer.i76 = alloca i8, align 1\l  %formattable.i77 = alloca i8, align 1\l  %retval.i59 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i60 = alloca ptr, align 8\l  %arg.i61 = alloca ptr, align 8\l  %ref.tmp.i62 = alloca double, align 8\l  %ref.tmp1.i63 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i64 = alloca i8, align 1\l  %formattable_const.i65 = alloca i8, align 1\l  %formattable_pointer.i66 = alloca i8, align 1\l  %formattable.i67 = alloca i8, align 1\l  %retval.i49 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i50 = alloca ptr, align 8\l  %arg.i51 = alloca ptr, align 8\l  %ref.tmp.i52 = alloca double, align 8\l  %ref.tmp1.i53 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i54 = alloca i8, align 1\l  %formattable_const.i55 = alloca i8, align 1\l  %formattable_pointer.i56 = alloca i8, align 1\l  %formattable.i57 = alloca i8, align 1\l  %this.addr.i46 = alloca ptr, align 8\l  %val.addr.i47 = alloca i64, align 8\l  %this.addr.i43 = alloca ptr, align 8\l  %val.addr.i44 = alloca i64, align 8\l  %retval.i39 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i40 = alloca ptr, align 8\l  %arg.i = alloca ptr, align 8\l  %ref.tmp.i41 = alloca i64, align 8\l  %ref.tmp1.i = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i = alloca i8, align 1\l  %formattable_const.i = alloca i8, align 1\l  %formattable_pointer.i = alloca i8, align 1\l  %formattable.i = alloca i8, align 1\l  %this.addr.i38 = alloca ptr, align 8\l  %.addr.i = alloca ptr, align 8\l  %.addr1.i = alloca i32, align 4\l  %.addr2.i = alloca i32, align 4\l  %.addr3.i = alloca ptr, align 8\l  %.addr4.i = alloca ptr, align 8\l  %.addr5.i = alloca ptr, align 8\l  %.addr6.i = alloca ptr, align 8\l  %.addr7.i = alloca ptr, align 8\l  %.addr8.i = alloca ptr, align 8\l  %.addr9.i = alloca ptr, align 8\l  %.addr10.i = alloca ptr, align 8\l  %this.addr.i36 = alloca ptr, align 8\l  %init.addr.i = alloca ptr, align 8\l  %init.addr2.i = alloca ptr, align 8\l  %init.addr4.i = alloca ptr, align 8\l  %init.addr6.i = alloca ptr, align 8\l  %init.addr8.i = alloca ptr, align 8\l  %init.addr10.i = alloca ptr, align 8\l  %init.addr12.i = alloca ptr, align 8\l  %init.addr14.i = alloca ptr, align 8\l  %retval.i33 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i34 = alloca ptr, align 8\l  %retval.i30 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i31 = alloca ptr, align 8\l  %retval.i27 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i28 = alloca ptr, align 8\l  %retval.i24 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i25 = alloca ptr, align 8\l  %retval.i21 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i22 = alloca ptr, align 8\l  %retval.i18 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i19 = alloca ptr, align 8\l  %retval.i16 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i17 = alloca ptr, align 8\l  %retval.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i = alloca ptr, align 8\l  %this.addr.i = alloca ptr, align 8\l  %args.addr.i = alloca ptr, align 8\l  %args.addr2.i = alloca ptr, align 8\l  %args.addr4.i = alloca ptr, align 8\l  %args.addr6.i = alloca ptr, align 8\l  %args.addr8.i = alloca ptr, align 8\l  %args.addr10.i = alloca ptr, align 8\l  %args.addr12.i = alloca ptr, align 8\l  %args.addr14.i = alloca ptr, align 8\l  %ref.tmp.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp17.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp21.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp25.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp29.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp33.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp37.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp41.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %args.addr = alloca ptr, align 8\l  %args.addr2 = alloca ptr, align 8\l  %args.addr4 = alloca ptr, align 8\l  %args.addr6 = alloca ptr, align 8\l  %args.addr8 = alloca ptr, align 8\l  %args.addr10 = alloca ptr, align 8\l  %args.addr12 = alloca ptr, align 8\l  %args.addr14 = alloca ptr, align 8\l  store ptr %args, ptr %args.addr, align 8\l  store ptr %args1, ptr %args.addr2, align 8\l  store ptr %args3, ptr %args.addr4, align 8\l  store ptr %args5, ptr %args.addr6, align 8\l  store ptr %args7, ptr %args.addr8, align 8\l  store ptr %args9, ptr %args.addr10, align 8\l  store ptr %args11, ptr %args.addr12, align 8\l  store ptr %args13, ptr %args.addr14, align 8\l  %0 = load ptr, ptr %args.addr, align 8\l  %1 = load ptr, ptr %args.addr2, align 8\l  %2 = load ptr, ptr %args.addr4, align 8\l  %3 = load ptr, ptr %args.addr6, align 8\l  %4 = load ptr, ptr %args.addr8, align 8\l  %5 = load ptr, ptr %args.addr10, align 8\l  %6 = load ptr, ptr %args.addr12, align 8\l  %7 = load ptr, ptr %args.addr14, align 8\l  store ptr %agg.result, ptr %this.addr.i, align 8\l  store ptr %0, ptr %args.addr.i, align 8\l  store ptr %1, ptr %args.addr2.i, align 8\l  store ptr %2, ptr %args.addr4.i, align 8\l  store ptr %3, ptr %args.addr6.i, align 8\l  store ptr %4, ptr %args.addr8.i, align 8\l  store ptr %5, ptr %args.addr10.i, align 8\l  store ptr %6, ptr %args.addr12.i, align 8\l  store ptr %7, ptr %args.addr14.i, align 8\l  %this15.i = load ptr, ptr %this.addr.i, align 8\l  %8 = load ptr, ptr %args.addr.i, align 8\l  store ptr %8, ptr %val.addr.i, align 8\l  %9 = load ptr, ptr %val.addr.i, align 8\l  store ptr %9, ptr %val.addr.i40, align 8\l  %10 = load ptr, ptr %val.addr.i40, align 8\l  %11 = load i64, ptr %10, align 8\l  store ptr %ref.tmp1.i, ptr %this.addr.i43, align 8\l  store i64 %11, ptr %val.addr.i44, align 8\l  %this1.i45 = load ptr, ptr %this.addr.i43, align 8\l  %12 = load i64, ptr %val.addr.i44, align 8\l  store i64 %12, ptr %ref.tmp.i41, align 8\l  store ptr %ref.tmp.i41, ptr %arg.i, align 8\l  store i8 1, ptr %formattable_char.i, align 1\l  store i8 1, ptr %formattable_const.i, align 1\l  store i8 1, ptr %formattable_pointer.i, align 1\l  store i8 1, ptr %formattable.i, align 1\l  %13 = load ptr, ptr %arg.i, align 8\l  %14 = load i64, ptr %13, align 8\l  store ptr %retval.i39, ptr %this.addr.i46, align 8\l  store i64 %14, ptr %val.addr.i47, align 8\l  %this1.i48 = load ptr, ptr %this.addr.i46, align 8\l  %15 = load i64, ptr %val.addr.i47, align 8\l  store i64 %15, ptr %this1.i48, align 16\l  %16 = load \{ i64, i64 \}, ptr %retval.i39, align 16\l  %17 = extractvalue \{ i64, i64 \} %16, 0\l  store i64 %17, ptr %retval.i, align 16\l  %18 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i, i32 0, i32 1\l  %19 = extractvalue \{ i64, i64 \} %16, 1\l  store i64 %19, ptr %18, align 8\l  %20 = load \{ i64, i64 \}, ptr %retval.i, align 16\l  %21 = extractvalue \{ i64, i64 \} %20, 0\l  store i64 %21, ptr %ref.tmp.i, align 16\l  %22 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp.i, i32 0, i32 1\l  %23 = extractvalue \{ i64, i64 \} %20, 1\l  store i64 %23, ptr %22, align 8\l  %24 = load ptr, ptr %args.addr2.i, align 8\l  store ptr %24, ptr %val.addr.i34, align 8\l  %25 = load ptr, ptr %val.addr.i34, align 8\l  store ptr %25, ptr %val.addr.i50, align 8\l  %26 = load ptr, ptr %val.addr.i50, align 8\l  %27 = load double, ptr %26, align 8\l  store ptr %ref.tmp1.i53, ptr %this.addr.i137, align 8\l  store double %27, ptr %val.addr.i138, align 8\l  %this1.i139 = load ptr, ptr %this.addr.i137, align 8\l  %28 = load double, ptr %val.addr.i138, align 8\l  store double %28, ptr %ref.tmp.i52, align 8\l  store ptr %ref.tmp.i52, ptr %arg.i51, align 8\l  store i8 1, ptr %formattable_char.i54, align 1\l  store i8 1, ptr %formattable_const.i55, align 1\l  store i8 1, ptr %formattable_pointer.i56, align 1\l  store i8 1, ptr %formattable.i57, align 1\l  %29 = load ptr, ptr %arg.i51, align 8\l  %30 = load double, ptr %29, align 8\l  store ptr %retval.i49, ptr %this.addr.i158, align 8\l  store double %30, ptr %val.addr.i159, align 8\l  %this1.i160 = load ptr, ptr %this.addr.i158, align 8\l  %31 = load double, ptr %val.addr.i159, align 8\l  store double %31, ptr %this1.i160, align 16\l  %32 = load \{ i64, i64 \}, ptr %retval.i49, align 16\l  %33 = extractvalue \{ i64, i64 \} %32, 0\l  store i64 %33, ptr %retval.i33, align 16\l  %34 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i33, i32 0, i32 1\l  %35 = extractvalue \{ i64, i64 \} %32, 1\l  store i64 %35, ptr %34, align 8\l  %36 = load \{ i64, i64 \}, ptr %retval.i33, align 16\l  %37 = extractvalue \{ i64, i64 \} %36, 0\l  store i64 %37, ptr %ref.tmp17.i, align 16\l  %38 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp17.i, i32 0, i32 1\l  %39 = extractvalue \{ i64, i64 \} %36, 1\l  store i64 %39, ptr %38, align 8\l  %40 = load ptr, ptr %args.addr4.i, align 8\l  store ptr %40, ptr %val.addr.i31, align 8\l  %41 = load ptr, ptr %val.addr.i31, align 8\l  store ptr %41, ptr %val.addr.i60, align 8\l  %42 = load ptr, ptr %val.addr.i60, align 8\l  %43 = load double, ptr %42, align 8\l  store ptr %ref.tmp1.i63, ptr %this.addr.i134, align 8\l  store double %43, ptr %val.addr.i135, align 8\l  %this1.i136 = load ptr, ptr %this.addr.i134, align 8\l  %44 = load double, ptr %val.addr.i135, align 8\l  store double %44, ptr %ref.tmp.i62, align 8\l  store ptr %ref.tmp.i62, ptr %arg.i61, align 8\l  store i8 1, ptr %formattable_char.i64, align 1\l  store i8 1, ptr %formattable_const.i65, align 1\l  store i8 1, ptr %formattable_pointer.i66, align 1\l  store i8 1, ptr %formattable.i67, align 1\l  %45 = load ptr, ptr %arg.i61, align 8\l  %46 = load double, ptr %45, align 8\l  store ptr %retval.i59, ptr %this.addr.i155, align 8\l  store double %46, ptr %val.addr.i156, align 8\l  %this1.i157 = load ptr, ptr %this.addr.i155, align 8\l  %47 = load double, ptr %val.addr.i156, align 8\l  store double %47, ptr %this1.i157, align 16\l  %48 = load \{ i64, i64 \}, ptr %retval.i59, align 16\l  %49 = extractvalue \{ i64, i64 \} %48, 0\l  store i64 %49, ptr %retval.i30, align 16\l  %50 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i30, i32 0, i32 1\l  %51 = extractvalue \{ i64, i64 \} %48, 1\l  store i64 %51, ptr %50, align 8\l  %52 = load \{ i64, i64 \}, ptr %retval.i30, align 16\l  %53 = extractvalue \{ i64, i64 \} %52, 0\l  store i64 %53, ptr %ref.tmp21.i, align 16\l  %54 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp21.i, i32 0, i32 1\l  %55 = extractvalue \{ i64, i64 \} %52, 1\l  store i64 %55, ptr %54, align 8\l  %56 = load ptr, ptr %args.addr6.i, align 8\l  store ptr %56, ptr %val.addr.i28, align 8\l  %57 = load ptr, ptr %val.addr.i28, align 8\l  store ptr %57, ptr %val.addr.i70, align 8\l  %58 = load ptr, ptr %val.addr.i70, align 8\l  %59 = load double, ptr %58, align 8\l  store ptr %ref.tmp1.i73, ptr %this.addr.i131, align 8\l  store double %59, ptr %val.addr.i132, align 8\l  %this1.i133 = load ptr, ptr %this.addr.i131, align 8\l  %60 = load double, ptr %val.addr.i132, align 8\l  store double %60, ptr %ref.tmp.i72, align 8\l  store ptr %ref.tmp.i72, ptr %arg.i71, align 8\l  store i8 1, ptr %formattable_char.i74, align 1\l  store i8 1, ptr %formattable_const.i75, align 1\l  store i8 1, ptr %formattable_pointer.i76, align 1\l  store i8 1, ptr %formattable.i77, align 1\l  %61 = load ptr, ptr %arg.i71, align 8\l  %62 = load double, ptr %61, align 8\l  store ptr %retval.i69, ptr %this.addr.i152, align 8\l  store double %62, ptr %val.addr.i153, align 8\l  %this1.i154 = load ptr, ptr %this.addr.i152, align 8\l  %63 = load double, ptr %val.addr.i153, align 8\l  store double %63, ptr %this1.i154, align 16\l  %64 = load \{ i64, i64 \}, ptr %retval.i69, align 16\l  %65 = extractvalue \{ i64, i64 \} %64, 0\l  store i64 %65, ptr %retval.i27, align 16\l  %66 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i27, i32 0, i32 1\l  %67 = extractvalue \{ i64, i64 \} %64, 1\l  store i64 %67, ptr %66, align 8\l  %68 = load \{ i64, i64 \}, ptr %retval.i27, align 16\l  %69 = extractvalue \{ i64, i64 \} %68, 0\l  store i64 %69, ptr %ref.tmp25.i, align 16\l  %70 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp25.i, i32 0, i32 1\l  %71 = extractvalue \{ i64, i64 \} %68, 1\l  store i64 %71, ptr %70, align 8\l  %72 = load ptr, ptr %args.addr8.i, align 8\l  store ptr %72, ptr %val.addr.i25, align 8\l  %73 = load ptr, ptr %val.addr.i25, align 8\l  store ptr %73, ptr %val.addr.i80, align 8\l  %74 = load ptr, ptr %val.addr.i80, align 8\l  %75 = load double, ptr %74, align 8\l  store ptr %ref.tmp1.i83, ptr %this.addr.i128, align 8\l  store double %75, ptr %val.addr.i129, align 8\l  %this1.i130 = load ptr, ptr %this.addr.i128, align 8\l  %76 = load double, ptr %val.addr.i129, align 8\l  store double %76, ptr %ref.tmp.i82, align 8\l  store ptr %ref.tmp.i82, ptr %arg.i81, align 8\l  store i8 1, ptr %formattable_char.i84, align 1\l  store i8 1, ptr %formattable_const.i85, align 1\l  store i8 1, ptr %formattable_pointer.i86, align 1\l  store i8 1, ptr %formattable.i87, align 1\l  %77 = load ptr, ptr %arg.i81, align 8\l  %78 = load double, ptr %77, align 8\l  store ptr %retval.i79, ptr %this.addr.i149, align 8\l  store double %78, ptr %val.addr.i150, align 8\l  %this1.i151 = load ptr, ptr %this.addr.i149, align 8\l  %79 = load double, ptr %val.addr.i150, align 8\l  store double %79, ptr %this1.i151, align 16\l  %80 = load \{ i64, i64 \}, ptr %retval.i79, align 16\l  %81 = extractvalue \{ i64, i64 \} %80, 0\l  store i64 %81, ptr %retval.i24, align 16\l  %82 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i24, i32 0, i32 1\l  %83 = extractvalue \{ i64, i64 \} %80, 1\l  store i64 %83, ptr %82, align 8\l  %84 = load \{ i64, i64 \}, ptr %retval.i24, align 16\l  %85 = extractvalue \{ i64, i64 \} %84, 0\l  store i64 %85, ptr %ref.tmp29.i, align 16\l  %86 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp29.i, i32 0, i32 1\l  %87 = extractvalue \{ i64, i64 \} %84, 1\l  store i64 %87, ptr %86, align 8\l  %88 = load ptr, ptr %args.addr10.i, align 8\l  store ptr %88, ptr %val.addr.i22, align 8\l  %89 = load ptr, ptr %val.addr.i22, align 8\l  store ptr %89, ptr %val.addr.i90, align 8\l  %90 = load ptr, ptr %val.addr.i90, align 8\l  %91 = load double, ptr %90, align 8\l  store ptr %ref.tmp1.i93, ptr %this.addr.i125, align 8\l  store double %91, ptr %val.addr.i126, align 8\l  %this1.i127 = load ptr, ptr %this.addr.i125, align 8\l  %92 = load double, ptr %val.addr.i126, align 8\l  store double %92, ptr %ref.tmp.i92, align 8\l  store ptr %ref.tmp.i92, ptr %arg.i91, align 8\l  store i8 1, ptr %formattable_char.i94, align 1\l  store i8 1, ptr %formattable_const.i95, align 1\l  store i8 1, ptr %formattable_pointer.i96, align 1\l  store i8 1, ptr %formattable.i97, align 1\l  %93 = load ptr, ptr %arg.i91, align 8\l  %94 = load double, ptr %93, align 8\l  store ptr %retval.i89, ptr %this.addr.i146, align 8\l  store double %94, ptr %val.addr.i147, align 8\l  %this1.i148 = load ptr, ptr %this.addr.i146, align 8\l  %95 = load double, ptr %val.addr.i147, align 8\l  store double %95, ptr %this1.i148, align 16\l  %96 = load \{ i64, i64 \}, ptr %retval.i89, align 16\l  %97 = extractvalue \{ i64, i64 \} %96, 0\l  store i64 %97, ptr %retval.i21, align 16\l  %98 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i21, i32 0, i32 1\l  %99 = extractvalue \{ i64, i64 \} %96, 1\l  store i64 %99, ptr %98, align 8\l  %100 = load \{ i64, i64 \}, ptr %retval.i21, align 16\l  %101 = extractvalue \{ i64, i64 \} %100, 0\l  store i64 %101, ptr %ref.tmp33.i, align 16\l  %102 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp33.i, i32 0, i32 1\l  %103 = extractvalue \{ i64, i64 \} %100, 1\l  store i64 %103, ptr %102, align 8\l  %104 = load ptr, ptr %args.addr12.i, align 8\l  store ptr %104, ptr %val.addr.i19, align 8\l  %105 = load ptr, ptr %val.addr.i19, align 8\l  store ptr %105, ptr %val.addr.i100, align 8\l  %106 = load ptr, ptr %val.addr.i100, align 8\l  %107 = load double, ptr %106, align 8\l  store ptr %ref.tmp1.i103, ptr %this.addr.i122, align 8\l  store double %107, ptr %val.addr.i123, align 8\l  %this1.i124 = load ptr, ptr %this.addr.i122, align 8\l  %108 = load double, ptr %val.addr.i123, align 8\l  store double %108, ptr %ref.tmp.i102, align 8\l  store ptr %ref.tmp.i102, ptr %arg.i101, align 8\l  store i8 1, ptr %formattable_char.i104, align 1\l  store i8 1, ptr %formattable_const.i105, align 1\l  store i8 1, ptr %formattable_pointer.i106, align 1\l  store i8 1, ptr %formattable.i107, align 1\l  %109 = load ptr, ptr %arg.i101, align 8\l  %110 = load double, ptr %109, align 8\l  store ptr %retval.i99, ptr %this.addr.i143, align 8\l  store double %110, ptr %val.addr.i144, align 8\l  %this1.i145 = load ptr, ptr %this.addr.i143, align 8\l  %111 = load double, ptr %val.addr.i144, align 8\l  store double %111, ptr %this1.i145, align 16\l  %112 = load \{ i64, i64 \}, ptr %retval.i99, align 16\l  %113 = extractvalue \{ i64, i64 \} %112, 0\l  store i64 %113, ptr %retval.i18, align 16\l  %114 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i18, i32 0, i32 1\l  %115 = extractvalue \{ i64, i64 \} %112, 1\l  store i64 %115, ptr %114, align 8\l  %116 = load \{ i64, i64 \}, ptr %retval.i18, align 16\l  %117 = extractvalue \{ i64, i64 \} %116, 0\l  store i64 %117, ptr %ref.tmp37.i, align 16\l  %118 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp37.i, i32 0, i32 1\l  %119 = extractvalue \{ i64, i64 \} %116, 1\l  store i64 %119, ptr %118, align 8\l  %120 = load ptr, ptr %args.addr14.i, align 8\l  store ptr %120, ptr %val.addr.i17, align 8\l  %121 = load ptr, ptr %val.addr.i17, align 8\l  store ptr %121, ptr %val.addr.i110, align 8\l  %122 = load ptr, ptr %val.addr.i110, align 8\l  %123 = load double, ptr %122, align 8\l  store ptr %ref.tmp1.i113, ptr %this.addr.i119, align 8\l  store double %123, ptr %val.addr.i120, align 8\l  %this1.i121 = load ptr, ptr %this.addr.i119, align 8\l  %124 = load double, ptr %val.addr.i120, align 8\l  store double %124, ptr %ref.tmp.i112, align 8\l  store ptr %ref.tmp.i112, ptr %arg.i111, align 8\l  store i8 1, ptr %formattable_char.i114, align 1\l  store i8 1, ptr %formattable_const.i115, align 1\l  store i8 1, ptr %formattable_pointer.i116, align 1\l  store i8 1, ptr %formattable.i117, align 1\l  %125 = load ptr, ptr %arg.i111, align 8\l  %126 = load double, ptr %125, align 8\l  store ptr %retval.i109, ptr %this.addr.i140, align 8\l  store double %126, ptr %val.addr.i141, align 8\l  %this1.i142 = load ptr, ptr %this.addr.i140, align 8\l  %127 = load double, ptr %val.addr.i141, align 8\l  store double %127, ptr %this1.i142, align 16\l  %128 = load \{ i64, i64 \}, ptr %retval.i109, align 16\l  %129 = extractvalue \{ i64, i64 \} %128, 0\l  store i64 %129, ptr %retval.i16, align 16\l  %130 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i16, i32 0, i32 1\l  %131 = extractvalue \{ i64, i64 \} %128, 1\l  store i64 %131, ptr %130, align 8\l  %132 = load \{ i64, i64 \}, ptr %retval.i16, align 16\l  %133 = extractvalue \{ i64, i64 \} %132, 0\l  store i64 %133, ptr %ref.tmp41.i, align 16\l  %134 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp41.i, i32 0, i32 1\l  %135 = extractvalue \{ i64, i64 \} %132, 1\l  store i64 %135, ptr %134, align 8\l  store ptr %this15.i, ptr %this.addr.i36, align 8\l  store ptr %ref.tmp.i, ptr %init.addr.i, align 8\l  store ptr %ref.tmp17.i, ptr %init.addr2.i, align 8\l  store ptr %ref.tmp21.i, ptr %init.addr4.i, align 8\l  store ptr %ref.tmp25.i, ptr %init.addr6.i, align 8\l  store ptr %ref.tmp29.i, ptr %init.addr8.i, align 8\l  store ptr %ref.tmp33.i, ptr %init.addr10.i, align 8\l  store ptr %ref.tmp37.i, ptr %init.addr12.i, align 8\l  store ptr %ref.tmp41.i, ptr %init.addr14.i, align 8\l  %this15.i37 = load ptr, ptr %this.addr.i36, align 8\l  %136 = load ptr, ptr %init.addr.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %this15.i37, ptr align 16\l... %136, i64 16, i1 false)\l  %arrayinit.element.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %this15.i37, i64 1\l  %137 = load ptr, ptr %init.addr2.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element.i, ptr\l... align 16 %137, i64 16, i1 false)\l  %arrayinit.element16.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element.i, i64 1\l  %138 = load ptr, ptr %init.addr4.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element16.i, ptr\l... align 16 %138, i64 16, i1 false)\l  %arrayinit.element17.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element16.i, i64 1\l  %139 = load ptr, ptr %init.addr6.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element17.i, ptr\l... align 16 %139, i64 16, i1 false)\l  %arrayinit.element18.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element17.i, i64 1\l  %140 = load ptr, ptr %init.addr8.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element18.i, ptr\l... align 16 %140, i64 16, i1 false)\l  %arrayinit.element19.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element18.i, i64 1\l  %141 = load ptr, ptr %init.addr10.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element19.i, ptr\l... align 16 %141, i64 16, i1 false)\l  %arrayinit.element20.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element19.i, i64 1\l  %142 = load ptr, ptr %init.addr12.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element20.i, ptr\l... align 16 %142, i64 16, i1 false)\l  %arrayinit.element21.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element20.i, i64 1\l  %143 = load ptr, ptr %init.addr14.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element21.i, ptr\l... align 16 %143, i64 16, i1 false)\l  store ptr %this15.i, ptr %this.addr.i38, align 8\l  %this1.i = load ptr, ptr %this.addr.i38, align 8\l  %144 = load ptr, ptr %args.addr.i, align 8\l  %145 = load ptr, ptr %args.addr2.i, align 8\l  %146 = load ptr, ptr %args.addr4.i, align 8\l  %147 = load ptr, ptr %args.addr6.i, align 8\l  %148 = load ptr, ptr %args.addr8.i, align 8\l  %149 = load ptr, ptr %args.addr10.i, align 8\l  %150 = load ptr, ptr %args.addr12.i, align 8\l  %151 = load ptr, ptr %args.addr14.i, align 8\l  store ptr null, ptr %.addr.i, align 8\l  store i32 0, ptr %.addr1.i, align 4\l  store i32 0, ptr %.addr2.i, align 4\l  store ptr %144, ptr %.addr3.i, align 8\l  store ptr %145, ptr %.addr4.i, align 8\l  store ptr %146, ptr %.addr5.i, align 8\l  store ptr %147, ptr %.addr6.i, align 8\l  store ptr %148, ptr %.addr7.i, align 8\l  store ptr %149, ptr %.addr8.i, align 8\l  store ptr %150, ptr %.addr9.i, align 8\l  store ptr %151, ptr %.addr10.i, align 8\l  ret void\l}"];
}
