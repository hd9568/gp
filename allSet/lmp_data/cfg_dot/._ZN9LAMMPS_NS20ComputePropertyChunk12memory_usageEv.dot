digraph "CFG for '_ZN9LAMMPS_NS20ComputePropertyChunk12memory_usageEv' function" {
	label="CFG for '_ZN9LAMMPS_NS20ComputePropertyChunk12memory_usageEv' function";

	Node0x55b160518d10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %bytes = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %call = call noundef double @_ZN9LAMMPS_NS12ComputeChunk12memory_usageEv(ptr\l... noundef nonnull align 8 dereferenceable(600) %this1)\l  store double %call, ptr %bytes, align 8\l  %nchunk = getelementptr inbounds %\"class.LAMMPS_NS::ComputeChunk\", ptr\l... %this1, i32 0, i32 2\l  %0 = load i32, ptr %nchunk, align 8\l  %conv = sext i32 %0 to i64\l  %nvalues = getelementptr inbounds %\"class.LAMMPS_NS::ComputePropertyChunk\",\l... ptr %this1, i32 0, i32 2\l  %1 = load i32, ptr %nvalues, align 8\l  %conv2 = sext i32 %1 to i64\l  %mul = mul nsw i64 %conv, %conv2\l  %mul3 = mul i64 %mul, 8\l  %conv4 = uitofp i64 %mul3 to double\l  %2 = load double, ptr %bytes, align 8\l  %add = fadd double %2, %conv4\l  store double %add, ptr %bytes, align 8\l  %countflag = getelementptr inbounds\l... %\"class.LAMMPS_NS::ComputePropertyChunk\", ptr %this1, i32 0, i32 3\l  %3 = load i32, ptr %countflag, align 4\l  %tobool = icmp ne i32 %3, 0\l  br i1 %tobool, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x55b160518d10:s0 -> Node0x55b160519ce0[tooltip="entry -> if.then\nProbability 62.50%" ];
	Node0x55b160518d10:s1 -> Node0x55b160519d50[tooltip="entry -> if.end\nProbability 37.50%" ];
	Node0x55b160519ce0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.then:\l|  %nchunk5 = getelementptr inbounds %\"class.LAMMPS_NS::ComputeChunk\", ptr\l... %this1, i32 0, i32 2\l  %4 = load i32, ptr %nchunk5, align 8\l  %conv6 = sitofp i32 %4 to double\l  %mul7 = fmul double %conv6, 2.000000e+00\l  %5 = load double, ptr %bytes, align 8\l  %6 = call double @llvm.fmuladd.f64(double %mul7, double 4.000000e+00, double\l... %5)\l  store double %6, ptr %bytes, align 8\l  br label %if.end\l}"];
	Node0x55b160519ce0 -> Node0x55b160519d50[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x55b160519d50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end:\l|  %7 = load double, ptr %bytes, align 8\l  ret double %7\l}"];
}
