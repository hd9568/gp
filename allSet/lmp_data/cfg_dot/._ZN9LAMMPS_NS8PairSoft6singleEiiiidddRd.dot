digraph "CFG for '_ZN9LAMMPS_NS8PairSoft6singleEiiiidddRd' function" {
	label="CFG for '_ZN9LAMMPS_NS8PairSoft6singleEiiiidddRd' function";

	Node0x55bdb0412b30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %.addr = alloca i32, align 4\l  %.addr1 = alloca i32, align 4\l  %itype.addr = alloca i32, align 4\l  %jtype.addr = alloca i32, align 4\l  %rsq.addr = alloca double, align 8\l  %.addr2 = alloca double, align 8\l  %factor_lj.addr = alloca double, align 8\l  %fforce.addr = alloca ptr, align 8\l  %r = alloca double, align 8\l  %arg = alloca double, align 8\l  %philj = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store i32 %0, ptr %.addr, align 4\l  store i32 %1, ptr %.addr1, align 4\l  store i32 %itype, ptr %itype.addr, align 4\l  store i32 %jtype, ptr %jtype.addr, align 4\l  store double %rsq, ptr %rsq.addr, align 8\l  store double %2, ptr %.addr2, align 8\l  store double %factor_lj, ptr %factor_lj.addr, align 8\l  store ptr %fforce, ptr %fforce.addr, align 8\l  %this3 = load ptr, ptr %this.addr, align 8\l  %3 = load double, ptr %rsq.addr, align 8\l  %call = call double @sqrt(double noundef %3) #9\l  store double %call, ptr %r, align 8\l  %4 = load double, ptr %r, align 8\l  %mul = fmul double 0x400921FB54442D18, %4\l  %cut = getelementptr inbounds %\"class.LAMMPS_NS::PairSoft\", ptr %this3, i32\l... 0, i32 3\l  %5 = load ptr, ptr %cut, align 8\l  %6 = load i32, ptr %itype.addr, align 4\l  %idxprom = sext i32 %6 to i64\l  %arrayidx = getelementptr inbounds ptr, ptr %5, i64 %idxprom\l  %7 = load ptr, ptr %arrayidx, align 8\l  %8 = load i32, ptr %jtype.addr, align 4\l  %idxprom4 = sext i32 %8 to i64\l  %arrayidx5 = getelementptr inbounds double, ptr %7, i64 %idxprom4\l  %9 = load double, ptr %arrayidx5, align 8\l  %div = fdiv double %mul, %9\l  store double %div, ptr %arg, align 8\l  %10 = load double, ptr %factor_lj.addr, align 8\l  %prefactor = getelementptr inbounds %\"class.LAMMPS_NS::PairSoft\", ptr\l... %this3, i32 0, i32 2\l  %11 = load ptr, ptr %prefactor, align 8\l  %12 = load i32, ptr %itype.addr, align 4\l  %idxprom6 = sext i32 %12 to i64\l  %arrayidx7 = getelementptr inbounds ptr, ptr %11, i64 %idxprom6\l  %13 = load ptr, ptr %arrayidx7, align 8\l  %14 = load i32, ptr %jtype.addr, align 4\l  %idxprom8 = sext i32 %14 to i64\l  %arrayidx9 = getelementptr inbounds double, ptr %13, i64 %idxprom8\l  %15 = load double, ptr %arrayidx9, align 8\l  %mul10 = fmul double %10, %15\l  %16 = load double, ptr %arg, align 8\l  %call11 = call double @sin(double noundef %16) #9\l  %mul12 = fmul double %mul10, %call11\l  %mul13 = fmul double %mul12, 0x400921FB54442D18\l  %cut14 = getelementptr inbounds %\"class.LAMMPS_NS::PairSoft\", ptr %this3,\l... i32 0, i32 3\l  %17 = load ptr, ptr %cut14, align 8\l  %18 = load i32, ptr %itype.addr, align 4\l  %idxprom15 = sext i32 %18 to i64\l  %arrayidx16 = getelementptr inbounds ptr, ptr %17, i64 %idxprom15\l  %19 = load ptr, ptr %arrayidx16, align 8\l  %20 = load i32, ptr %jtype.addr, align 4\l  %idxprom17 = sext i32 %20 to i64\l  %arrayidx18 = getelementptr inbounds double, ptr %19, i64 %idxprom17\l  %21 = load double, ptr %arrayidx18, align 8\l  %div19 = fdiv double %mul13, %21\l  %22 = load double, ptr %r, align 8\l  %div20 = fdiv double %div19, %22\l  %23 = load ptr, ptr %fforce.addr, align 8\l  store double %div20, ptr %23, align 8\l  %prefactor21 = getelementptr inbounds %\"class.LAMMPS_NS::PairSoft\", ptr\l... %this3, i32 0, i32 2\l  %24 = load ptr, ptr %prefactor21, align 8\l  %25 = load i32, ptr %itype.addr, align 4\l  %idxprom22 = sext i32 %25 to i64\l  %arrayidx23 = getelementptr inbounds ptr, ptr %24, i64 %idxprom22\l  %26 = load ptr, ptr %arrayidx23, align 8\l  %27 = load i32, ptr %jtype.addr, align 4\l  %idxprom24 = sext i32 %27 to i64\l  %arrayidx25 = getelementptr inbounds double, ptr %26, i64 %idxprom24\l  %28 = load double, ptr %arrayidx25, align 8\l  %29 = load double, ptr %arg, align 8\l  %call26 = call double @cos(double noundef %29) #9\l  %add = fadd double 1.000000e+00, %call26\l  %mul27 = fmul double %28, %add\l  store double %mul27, ptr %philj, align 8\l  %30 = load double, ptr %factor_lj.addr, align 8\l  %31 = load double, ptr %philj, align 8\l  %mul28 = fmul double %30, %31\l  ret double %mul28\l}"];
}
