digraph "CFG for '_ZN9LAMMPS_NS4Comm10rendezvousEiiPciiPiPFiiS1_RiRS2_RS1_PvEiS5_iS6_i' function" {
	label="CFG for '_ZN9LAMMPS_NS4Comm10rendezvousEiiPciiPiPFiiS1_RiRS2_RS1_PvEiS5_iS6_i' function";

	Node0x5626be2091a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %retval = alloca i32, align 4\l  %this.addr = alloca ptr, align 8\l  %which.addr = alloca i32, align 4\l  %n.addr = alloca i32, align 4\l  %inbuf.addr = alloca ptr, align 8\l  %insize.addr = alloca i32, align 4\l  %inorder.addr = alloca i32, align 4\l  %procs.addr = alloca ptr, align 8\l  %callback.addr = alloca ptr, align 8\l  %outorder.addr = alloca i32, align 4\l  %outbuf.addr = alloca ptr, align 8\l  %outsize.addr = alloca i32, align 4\l  %ptr.addr = alloca ptr, align 8\l  %statflag.addr = alloca i32, align 4\l  store ptr %this, ptr %this.addr, align 8\l  store i32 %which, ptr %which.addr, align 4\l  store i32 %n, ptr %n.addr, align 4\l  store ptr %inbuf, ptr %inbuf.addr, align 8\l  store i32 %insize, ptr %insize.addr, align 4\l  store i32 %inorder, ptr %inorder.addr, align 4\l  store ptr %procs, ptr %procs.addr, align 8\l  store ptr %callback, ptr %callback.addr, align 8\l  store i32 %outorder, ptr %outorder.addr, align 4\l  store ptr %outbuf, ptr %outbuf.addr, align 8\l  store i32 %outsize, ptr %outsize.addr, align 4\l  store ptr %ptr, ptr %ptr.addr, align 8\l  store i32 %statflag, ptr %statflag.addr, align 4\l  %this1 = load ptr, ptr %this.addr, align 8\l  %0 = load i32, ptr %which.addr, align 4\l  %cmp = icmp eq i32 %0, 0\l  br i1 %cmp, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x5626be2091a0:s0 -> Node0x5626be20ac80[tooltip="entry -> if.then\nProbability 37.50%" ];
	Node0x5626be2091a0:s1 -> Node0x5626be20acf0[tooltip="entry -> if.else\nProbability 62.50%" ];
	Node0x5626be20ac80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.then:\l|  %1 = load i32, ptr %n.addr, align 4\l  %2 = load ptr, ptr %inbuf.addr, align 8\l  %3 = load i32, ptr %insize.addr, align 4\l  %4 = load i32, ptr %inorder.addr, align 4\l  %5 = load ptr, ptr %procs.addr, align 8\l  %6 = load ptr, ptr %callback.addr, align 8\l  %7 = load i32, ptr %outorder.addr, align 4\l  %8 = load ptr, ptr %outbuf.addr, align 8\l  %9 = load i32, ptr %outsize.addr, align 4\l  %10 = load ptr, ptr %ptr.addr, align 8\l  %11 = load i32, ptr %statflag.addr, align 4\l  %call = call noundef i32\l... @_ZN9LAMMPS_NS4Comm20rendezvous_irregularEiPciiPiPFiiS1_RiRS2_RS1_PvEiS5_iS6_i\l...(ptr noundef nonnull align 8 dereferenceable(600) %this1, i32 noundef %1, ptr\l... noundef %2, i32 noundef %3, i32 noundef %4, ptr noundef %5, ptr noundef %6,\l... i32 noundef %7, ptr noundef nonnull align 8 dereferenceable(8) %8, i32\l... noundef %9, ptr noundef %10, i32 noundef %11)\l  store i32 %call, ptr %retval, align 4\l  br label %return\l}"];
	Node0x5626be20ac80 -> Node0x5626be20b890[tooltip="if.then -> return\nProbability 100.00%" ];
	Node0x5626be20acf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.else:\l|  %12 = load i32, ptr %n.addr, align 4\l  %13 = load ptr, ptr %inbuf.addr, align 8\l  %14 = load i32, ptr %insize.addr, align 4\l  %15 = load i32, ptr %inorder.addr, align 4\l  %16 = load ptr, ptr %procs.addr, align 8\l  %17 = load ptr, ptr %callback.addr, align 8\l  %18 = load i32, ptr %outorder.addr, align 4\l  %19 = load ptr, ptr %outbuf.addr, align 8\l  %20 = load i32, ptr %outsize.addr, align 4\l  %21 = load ptr, ptr %ptr.addr, align 8\l  %22 = load i32, ptr %statflag.addr, align 4\l  %call2 = call noundef i32\l... @_ZN9LAMMPS_NS4Comm18rendezvous_all2allEiPciiPiPFiiS1_RiRS2_RS1_PvEiS5_iS6_i(p\l...tr noundef nonnull align 8 dereferenceable(600) %this1, i32 noundef %12, ptr\l... noundef %13, i32 noundef %14, i32 noundef %15, ptr noundef %16, ptr noundef\l... %17, i32 noundef %18, ptr noundef nonnull align 8 dereferenceable(8) %19, i32\l... noundef %20, ptr noundef %21, i32 noundef %22)\l  store i32 %call2, ptr %retval, align 4\l  br label %return\l}"];
	Node0x5626be20acf0 -> Node0x5626be20b890[tooltip="if.else -> return\nProbability 100.00%" ];
	Node0x5626be20b890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{return:\l|  %23 = load i32, ptr %retval, align 4\l  ret i32 %23\l}"];
}
