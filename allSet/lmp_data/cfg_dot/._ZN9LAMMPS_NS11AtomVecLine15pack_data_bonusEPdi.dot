digraph "CFG for '_ZN9LAMMPS_NS11AtomVecLine15pack_data_bonusEPdi' function" {
	label="CFG for '_ZN9LAMMPS_NS11AtomVecLine15pack_data_bonusEPdi' function";

	Node0x562ebb8e09b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %buf.addr = alloca ptr, align 8\l  %.addr = alloca i32, align 4\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %length = alloca double, align 8\l  %theta = alloca double, align 8\l  %xc = alloca double, align 8\l  %yc = alloca double, align 8\l  %x1 = alloca double, align 8\l  %x2 = alloca double, align 8\l  %y1 = alloca double, align 8\l  %y2 = alloca double, align 8\l  %x = alloca ptr, align 8\l  %tag = alloca ptr, align 8\l  %nlocal = alloca i32, align 4\l  %m = alloca i32, align 4\l  %ref.tmp = alloca %\"union.LAMMPS_NS::ubuf\", align 8\l  store ptr %this, ptr %this.addr, align 8\l  store ptr %buf, ptr %buf.addr, align 8\l  store i32 %0, ptr %.addr, align 4\l  %this1 = load ptr, ptr %this.addr, align 8\l  %atom = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1, i32\l... 0, i32 6\l  %1 = load ptr, ptr %atom, align 8\l  %2 = load ptr, ptr %1, align 8\l  %x3 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %2, i32 0, i32 37\l  %3 = load ptr, ptr %x3, align 8\l  store ptr %3, ptr %x, align 8\l  %atom4 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %4 = load ptr, ptr %atom4, align 8\l  %5 = load ptr, ptr %4, align 8\l  %tag5 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %5, i32 0, i32\l... 33\l  %6 = load ptr, ptr %tag5, align 8\l  store ptr %6, ptr %tag, align 8\l  %atom6 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %7 = load ptr, ptr %atom6, align 8\l  %8 = load ptr, ptr %7, align 8\l  %nlocal7 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %8, i32 0,\l... i32 4\l  %9 = load i32, ptr %nlocal7, align 8\l  store i32 %9, ptr %nlocal, align 4\l  store i32 0, ptr %m, align 4\l  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x562ebb8e09b0 -> Node0x562ebb8e2650[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x562ebb8e2650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %10 = load i32, ptr %i, align 4\l  %11 = load i32, ptr %nlocal, align 4\l  %cmp = icmp slt i32 %10, %11\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x562ebb8e2650:s0 -> Node0x562ebb8e28f0[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x562ebb8e2650:s1 -> Node0x562ebb8e2970[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x562ebb8e28f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %line = getelementptr inbounds %\"class.LAMMPS_NS::AtomVecLine\", ptr\l... %this1, i32 0, i32 3\l  %12 = load ptr, ptr %line, align 8\l  %13 = load i32, ptr %i, align 4\l  %idxprom = sext i32 %13 to i64\l  %arrayidx = getelementptr inbounds i32, ptr %12, i64 %idxprom\l  %14 = load i32, ptr %arrayidx, align 4\l  %cmp8 = icmp slt i32 %14, 0\l  br i1 %cmp8, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x562ebb8e28f0:s0 -> Node0x562ebb8e2f00[tooltip="for.body -> if.then\nProbability 37.50%" ];
	Node0x562ebb8e28f0:s1 -> Node0x562ebb8e2f70[tooltip="for.body -> if.end\nProbability 62.50%" ];
	Node0x562ebb8e2f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.then:\l|  br label %for.inc\l}"];
	Node0x562ebb8e2f00 -> Node0x562ebb8e3090[tooltip="if.then -> for.inc\nProbability 100.00%" ];
	Node0x562ebb8e2f70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.end:\l|  %15 = load ptr, ptr %buf.addr, align 8\l  %tobool = icmp ne ptr %15, null\l  br i1 %tobool, label %if.then9, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x562ebb8e2f70:s0 -> Node0x562ebb8e32a0[tooltip="if.end -> if.then9\nProbability 62.50%" ];
	Node0x562ebb8e2f70:s1 -> Node0x562ebb8e3320[tooltip="if.end -> if.else\nProbability 37.50%" ];
	Node0x562ebb8e32a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.then9:\l|  %16 = load ptr, ptr %tag, align 8\l  %17 = load i32, ptr %i, align 4\l  %idxprom10 = sext i32 %17 to i64\l  %arrayidx11 = getelementptr inbounds i32, ptr %16, i64 %idxprom10\l  call void @_ZN9LAMMPS_NS4ubufC2ERKi(ptr noundef nonnull align 8\l... dereferenceable(8) %ref.tmp, ptr noundef nonnull align 4 dereferenceable(4)\l... %arrayidx11)\l  %18 = load double, ptr %ref.tmp, align 8\l  %19 = load ptr, ptr %buf.addr, align 8\l  %20 = load i32, ptr %m, align 4\l  %inc = add nsw i32 %20, 1\l  store i32 %inc, ptr %m, align 4\l  %idxprom12 = sext i32 %20 to i64\l  %arrayidx13 = getelementptr inbounds double, ptr %19, i64 %idxprom12\l  store double %18, ptr %arrayidx13, align 8\l  %line14 = getelementptr inbounds %\"class.LAMMPS_NS::AtomVecLine\", ptr\l... %this1, i32 0, i32 3\l  %21 = load ptr, ptr %line14, align 8\l  %22 = load i32, ptr %i, align 4\l  %idxprom15 = sext i32 %22 to i64\l  %arrayidx16 = getelementptr inbounds i32, ptr %21, i64 %idxprom15\l  %23 = load i32, ptr %arrayidx16, align 4\l  store i32 %23, ptr %j, align 4\l  %bonus = getelementptr inbounds %\"class.LAMMPS_NS::AtomVecLine\", ptr %this1,\l... i32 0, i32 1\l  %24 = load ptr, ptr %bonus, align 8\l  %25 = load i32, ptr %j, align 4\l  %idxprom17 = sext i32 %25 to i64\l  %arrayidx18 = getelementptr inbounds\l... %\"struct.LAMMPS_NS::AtomVecLine::Bonus\", ptr %24, i64 %idxprom17\l  %length19 = getelementptr inbounds %\"struct.LAMMPS_NS::AtomVecLine::Bonus\",\l... ptr %arrayidx18, i32 0, i32 0\l  %26 = load double, ptr %length19, align 8\l  store double %26, ptr %length, align 8\l  %bonus20 = getelementptr inbounds %\"class.LAMMPS_NS::AtomVecLine\", ptr\l... %this1, i32 0, i32 1\l  %27 = load ptr, ptr %bonus20, align 8\l  %28 = load i32, ptr %j, align 4\l  %idxprom21 = sext i32 %28 to i64\l  %arrayidx22 = getelementptr inbounds\l... %\"struct.LAMMPS_NS::AtomVecLine::Bonus\", ptr %27, i64 %idxprom21\l  %theta23 = getelementptr inbounds %\"struct.LAMMPS_NS::AtomVecLine::Bonus\",\l... ptr %arrayidx22, i32 0, i32 1\l  %29 = load double, ptr %theta23, align 8\l  store double %29, ptr %theta, align 8\l  %30 = load ptr, ptr %x, align 8\l  %31 = load i32, ptr %i, align 4\l  %idxprom24 = sext i32 %31 to i64\l  %arrayidx25 = getelementptr inbounds ptr, ptr %30, i64 %idxprom24\l  %32 = load ptr, ptr %arrayidx25, align 8\l  %arrayidx26 = getelementptr inbounds double, ptr %32, i64 0\l  %33 = load double, ptr %arrayidx26, align 8\l  store double %33, ptr %xc, align 8\l  %34 = load ptr, ptr %x, align 8\l  %35 = load i32, ptr %i, align 4\l  %idxprom27 = sext i32 %35 to i64\l  %arrayidx28 = getelementptr inbounds ptr, ptr %34, i64 %idxprom27\l  %36 = load ptr, ptr %arrayidx28, align 8\l  %arrayidx29 = getelementptr inbounds double, ptr %36, i64 1\l  %37 = load double, ptr %arrayidx29, align 8\l  store double %37, ptr %yc, align 8\l  %38 = load double, ptr %xc, align 8\l  %39 = load double, ptr %theta, align 8\l  %call = call double @cos(double noundef %39) #12\l  %mul = fmul double 5.000000e-01, %call\l  %40 = load double, ptr %length, align 8\l  %neg = fneg double %mul\l  %41 = call double @llvm.fmuladd.f64(double %neg, double %40, double %38)\l  store double %41, ptr %x1, align 8\l  %42 = load double, ptr %yc, align 8\l  %43 = load double, ptr %theta, align 8\l  %call31 = call double @sin(double noundef %43) #12\l  %mul32 = fmul double 5.000000e-01, %call31\l  %44 = load double, ptr %length, align 8\l  %neg34 = fneg double %mul32\l  %45 = call double @llvm.fmuladd.f64(double %neg34, double %44, double %42)\l  store double %45, ptr %y1, align 8\l  %46 = load double, ptr %xc, align 8\l  %47 = load double, ptr %theta, align 8\l  %call35 = call double @cos(double noundef %47) #12\l  %mul36 = fmul double 5.000000e-01, %call35\l  %48 = load double, ptr %length, align 8\l  %49 = call double @llvm.fmuladd.f64(double %mul36, double %48, double %46)\l  store double %49, ptr %x2, align 8\l  %50 = load double, ptr %yc, align 8\l  %51 = load double, ptr %theta, align 8\l  %call38 = call double @sin(double noundef %51) #12\l  %mul39 = fmul double 5.000000e-01, %call38\l  %52 = load double, ptr %length, align 8\l  %53 = call double @llvm.fmuladd.f64(double %mul39, double %52, double %50)\l  store double %53, ptr %y2, align 8\l  %54 = load double, ptr %x1, align 8\l  %55 = load ptr, ptr %buf.addr, align 8\l  %56 = load i32, ptr %m, align 4\l  %inc41 = add nsw i32 %56, 1\l  store i32 %inc41, ptr %m, align 4\l  %idxprom42 = sext i32 %56 to i64\l  %arrayidx43 = getelementptr inbounds double, ptr %55, i64 %idxprom42\l  store double %54, ptr %arrayidx43, align 8\l  %57 = load double, ptr %y1, align 8\l  %58 = load ptr, ptr %buf.addr, align 8\l  %59 = load i32, ptr %m, align 4\l  %inc44 = add nsw i32 %59, 1\l  store i32 %inc44, ptr %m, align 4\l  %idxprom45 = sext i32 %59 to i64\l  %arrayidx46 = getelementptr inbounds double, ptr %58, i64 %idxprom45\l  store double %57, ptr %arrayidx46, align 8\l  %60 = load double, ptr %x2, align 8\l  %61 = load ptr, ptr %buf.addr, align 8\l  %62 = load i32, ptr %m, align 4\l  %inc47 = add nsw i32 %62, 1\l  store i32 %inc47, ptr %m, align 4\l  %idxprom48 = sext i32 %62 to i64\l  %arrayidx49 = getelementptr inbounds double, ptr %61, i64 %idxprom48\l  store double %60, ptr %arrayidx49, align 8\l  %63 = load double, ptr %y2, align 8\l  %64 = load ptr, ptr %buf.addr, align 8\l  %65 = load i32, ptr %m, align 4\l  %inc50 = add nsw i32 %65, 1\l  store i32 %inc50, ptr %m, align 4\l  %idxprom51 = sext i32 %65 to i64\l  %arrayidx52 = getelementptr inbounds double, ptr %64, i64 %idxprom51\l  store double %63, ptr %arrayidx52, align 8\l  br label %if.end53\l}"];
	Node0x562ebb8e32a0 -> Node0x562ebb8e8770[tooltip="if.then9 -> if.end53\nProbability 100.00%" ];
	Node0x562ebb8e3320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.else:\l|  %size_data_bonus = getelementptr inbounds %\"class.LAMMPS_NS::AtomVec\", ptr\l... %this1, i32 0, i32 23\l  %66 = load i32, ptr %size_data_bonus, align 8\l  %67 = load i32, ptr %m, align 4\l  %add = add nsw i32 %67, %66\l  store i32 %add, ptr %m, align 4\l  br label %if.end53\l}"];
	Node0x562ebb8e3320 -> Node0x562ebb8e8770[tooltip="if.else -> if.end53\nProbability 100.00%" ];
	Node0x562ebb8e8770 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.end53:\l|  br label %for.inc\l}"];
	Node0x562ebb8e8770 -> Node0x562ebb8e3090[tooltip="if.end53 -> for.inc\nProbability 100.00%" ];
	Node0x562ebb8e3090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %68 = load i32, ptr %i, align 4\l  %inc54 = add nsw i32 %68, 1\l  store i32 %inc54, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x562ebb8e3090 -> Node0x562ebb8e2650[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x562ebb8e2970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  %69 = load i32, ptr %m, align 4\l  ret i32 %69\l}"];
}
