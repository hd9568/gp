digraph "CFG for '_ZN9LAMMPS_NS8PairBuck11born_matrixEiiiidddRdS1_' function" {
	label="CFG for '_ZN9LAMMPS_NS8PairBuck11born_matrixEiiiidddRdS1_' function";

	Node0x5564f36517b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %.addr = alloca i32, align 4\l  %.addr1 = alloca i32, align 4\l  %itype.addr = alloca i32, align 4\l  %jtype.addr = alloca i32, align 4\l  %rsq.addr = alloca double, align 8\l  %.addr2 = alloca double, align 8\l  %factor_lj.addr = alloca double, align 8\l  %dupair.addr = alloca ptr, align 8\l  %du2pair.addr = alloca ptr, align 8\l  %rinv = alloca double, align 8\l  %r2inv = alloca double, align 8\l  %r6inv = alloca double, align 8\l  %r7inv = alloca double, align 8\l  %r8inv = alloca double, align 8\l  %du = alloca double, align 8\l  %du2 = alloca double, align 8\l  %r = alloca double, align 8\l  %rexp = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store i32 %0, ptr %.addr, align 4\l  store i32 %1, ptr %.addr1, align 4\l  store i32 %itype, ptr %itype.addr, align 4\l  store i32 %jtype, ptr %jtype.addr, align 4\l  store double %rsq, ptr %rsq.addr, align 8\l  store double %2, ptr %.addr2, align 8\l  store double %factor_lj, ptr %factor_lj.addr, align 8\l  store ptr %dupair, ptr %dupair.addr, align 8\l  store ptr %du2pair, ptr %du2pair.addr, align 8\l  %this3 = load ptr, ptr %this.addr, align 8\l  %3 = load double, ptr %rsq.addr, align 8\l  %call = call double @sqrt(double noundef %3) #9\l  store double %call, ptr %r, align 8\l  %4 = load double, ptr %r, align 8\l  %fneg = fneg double %4\l  %rhoinv = getelementptr inbounds %\"class.LAMMPS_NS::PairBuck\", ptr %this3,\l... i32 0, i32 6\l  %5 = load ptr, ptr %rhoinv, align 8\l  %6 = load i32, ptr %itype.addr, align 4\l  %idxprom = sext i32 %6 to i64\l  %arrayidx = getelementptr inbounds ptr, ptr %5, i64 %idxprom\l  %7 = load ptr, ptr %arrayidx, align 8\l  %8 = load i32, ptr %jtype.addr, align 4\l  %idxprom4 = sext i32 %8 to i64\l  %arrayidx5 = getelementptr inbounds double, ptr %7, i64 %idxprom4\l  %9 = load double, ptr %arrayidx5, align 8\l  %mul = fmul double %fneg, %9\l  %call6 = call double @exp(double noundef %mul) #9\l  store double %call6, ptr %rexp, align 8\l  %10 = load double, ptr %rsq.addr, align 8\l  %div = fdiv double 1.000000e+00, %10\l  store double %div, ptr %r2inv, align 8\l  %11 = load double, ptr %r2inv, align 8\l  %call7 = call double @sqrt(double noundef %11) #9\l  store double %call7, ptr %rinv, align 8\l  %12 = load double, ptr %r2inv, align 8\l  %13 = load double, ptr %r2inv, align 8\l  %mul8 = fmul double %12, %13\l  %14 = load double, ptr %r2inv, align 8\l  %mul9 = fmul double %mul8, %14\l  store double %mul9, ptr %r6inv, align 8\l  %15 = load double, ptr %r6inv, align 8\l  %16 = load double, ptr %rinv, align 8\l  %mul10 = fmul double %15, %16\l  store double %mul10, ptr %r7inv, align 8\l  %17 = load double, ptr %r6inv, align 8\l  %18 = load double, ptr %r2inv, align 8\l  %mul11 = fmul double %17, %18\l  store double %mul11, ptr %r8inv, align 8\l  %buck2 = getelementptr inbounds %\"class.LAMMPS_NS::PairBuck\", ptr %this3,\l... i32 0, i32 8\l  %19 = load ptr, ptr %buck2, align 8\l  %20 = load i32, ptr %itype.addr, align 4\l  %idxprom12 = sext i32 %20 to i64\l  %arrayidx13 = getelementptr inbounds ptr, ptr %19, i64 %idxprom12\l  %21 = load ptr, ptr %arrayidx13, align 8\l  %22 = load i32, ptr %jtype.addr, align 4\l  %idxprom14 = sext i32 %22 to i64\l  %arrayidx15 = getelementptr inbounds double, ptr %21, i64 %idxprom14\l  %23 = load double, ptr %arrayidx15, align 8\l  %24 = load double, ptr %r7inv, align 8\l  %buck1 = getelementptr inbounds %\"class.LAMMPS_NS::PairBuck\", ptr %this3,\l... i32 0, i32 7\l  %25 = load ptr, ptr %buck1, align 8\l  %26 = load i32, ptr %itype.addr, align 4\l  %idxprom17 = sext i32 %26 to i64\l  %arrayidx18 = getelementptr inbounds ptr, ptr %25, i64 %idxprom17\l  %27 = load ptr, ptr %arrayidx18, align 8\l  %28 = load i32, ptr %jtype.addr, align 4\l  %idxprom19 = sext i32 %28 to i64\l  %arrayidx20 = getelementptr inbounds double, ptr %27, i64 %idxprom19\l  %29 = load double, ptr %arrayidx20, align 8\l  %30 = load double, ptr %rexp, align 8\l  %mul21 = fmul double %29, %30\l  %neg = fneg double %mul21\l  %31 = call double @llvm.fmuladd.f64(double %23, double %24, double %neg)\l  store double %31, ptr %du, align 8\l  %buck122 = getelementptr inbounds %\"class.LAMMPS_NS::PairBuck\", ptr %this3,\l... i32 0, i32 7\l  %32 = load ptr, ptr %buck122, align 8\l  %33 = load i32, ptr %itype.addr, align 4\l  %idxprom23 = sext i32 %33 to i64\l  %arrayidx24 = getelementptr inbounds ptr, ptr %32, i64 %idxprom23\l  %34 = load ptr, ptr %arrayidx24, align 8\l  %35 = load i32, ptr %jtype.addr, align 4\l  %idxprom25 = sext i32 %35 to i64\l  %arrayidx26 = getelementptr inbounds double, ptr %34, i64 %idxprom25\l  %36 = load double, ptr %arrayidx26, align 8\l  %rho = getelementptr inbounds %\"class.LAMMPS_NS::PairBuck\", ptr %this3, i32\l... 0, i32 4\l  %37 = load ptr, ptr %rho, align 8\l  %38 = load i32, ptr %itype.addr, align 4\l  %idxprom27 = sext i32 %38 to i64\l  %arrayidx28 = getelementptr inbounds ptr, ptr %37, i64 %idxprom27\l  %39 = load ptr, ptr %arrayidx28, align 8\l  %40 = load i32, ptr %jtype.addr, align 4\l  %idxprom29 = sext i32 %40 to i64\l  %arrayidx30 = getelementptr inbounds double, ptr %39, i64 %idxprom29\l  %41 = load double, ptr %arrayidx30, align 8\l  %div31 = fdiv double %36, %41\l  %42 = load double, ptr %rexp, align 8\l  %buck233 = getelementptr inbounds %\"class.LAMMPS_NS::PairBuck\", ptr %this3,\l... i32 0, i32 8\l  %43 = load ptr, ptr %buck233, align 8\l  %44 = load i32, ptr %itype.addr, align 4\l  %idxprom34 = sext i32 %44 to i64\l  %arrayidx35 = getelementptr inbounds ptr, ptr %43, i64 %idxprom34\l  %45 = load ptr, ptr %arrayidx35, align 8\l  %46 = load i32, ptr %jtype.addr, align 4\l  %idxprom36 = sext i32 %46 to i64\l  %arrayidx37 = getelementptr inbounds double, ptr %45, i64 %idxprom36\l  %47 = load double, ptr %arrayidx37, align 8\l  %mul38 = fmul double 7.000000e+00, %47\l  %48 = load double, ptr %r8inv, align 8\l  %mul39 = fmul double %mul38, %48\l  %neg40 = fneg double %mul39\l  %49 = call double @llvm.fmuladd.f64(double %div31, double %42, double %neg40)\l  store double %49, ptr %du2, align 8\l  %50 = load double, ptr %factor_lj.addr, align 8\l  %51 = load double, ptr %du, align 8\l  %mul41 = fmul double %50, %51\l  %52 = load ptr, ptr %dupair.addr, align 8\l  store double %mul41, ptr %52, align 8\l  %53 = load double, ptr %factor_lj.addr, align 8\l  %54 = load double, ptr %du2, align 8\l  %mul42 = fmul double %53, %54\l  %55 = load ptr, ptr %du2pair.addr, align 8\l  store double %mul42, ptr %55, align 8\l  ret void\l}"];
}
