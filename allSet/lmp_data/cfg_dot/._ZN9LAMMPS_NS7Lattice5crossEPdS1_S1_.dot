digraph "CFG for '_ZN9LAMMPS_NS7Lattice5crossEPdS1_S1_' function" {
	label="CFG for '_ZN9LAMMPS_NS7Lattice5crossEPdS1_S1_' function";

	Node0x5642ff898010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %x.addr = alloca ptr, align 8\l  %y.addr = alloca ptr, align 8\l  %z.addr = alloca ptr, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store ptr %x, ptr %x.addr, align 8\l  store ptr %y, ptr %y.addr, align 8\l  store ptr %z, ptr %z.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %0 = load ptr, ptr %x.addr, align 8\l  %arrayidx = getelementptr inbounds double, ptr %0, i64 1\l  %1 = load double, ptr %arrayidx, align 8\l  %2 = load ptr, ptr %y.addr, align 8\l  %arrayidx2 = getelementptr inbounds double, ptr %2, i64 2\l  %3 = load double, ptr %arrayidx2, align 8\l  %4 = load ptr, ptr %x.addr, align 8\l  %arrayidx3 = getelementptr inbounds double, ptr %4, i64 2\l  %5 = load double, ptr %arrayidx3, align 8\l  %6 = load ptr, ptr %y.addr, align 8\l  %arrayidx4 = getelementptr inbounds double, ptr %6, i64 1\l  %7 = load double, ptr %arrayidx4, align 8\l  %mul5 = fmul double %5, %7\l  %neg = fneg double %mul5\l  %8 = call double @llvm.fmuladd.f64(double %1, double %3, double %neg)\l  %9 = load ptr, ptr %z.addr, align 8\l  %arrayidx6 = getelementptr inbounds double, ptr %9, i64 0\l  store double %8, ptr %arrayidx6, align 8\l  %10 = load ptr, ptr %x.addr, align 8\l  %arrayidx7 = getelementptr inbounds double, ptr %10, i64 2\l  %11 = load double, ptr %arrayidx7, align 8\l  %12 = load ptr, ptr %y.addr, align 8\l  %arrayidx8 = getelementptr inbounds double, ptr %12, i64 0\l  %13 = load double, ptr %arrayidx8, align 8\l  %14 = load ptr, ptr %x.addr, align 8\l  %arrayidx9 = getelementptr inbounds double, ptr %14, i64 0\l  %15 = load double, ptr %arrayidx9, align 8\l  %16 = load ptr, ptr %y.addr, align 8\l  %arrayidx10 = getelementptr inbounds double, ptr %16, i64 2\l  %17 = load double, ptr %arrayidx10, align 8\l  %mul11 = fmul double %15, %17\l  %neg12 = fneg double %mul11\l  %18 = call double @llvm.fmuladd.f64(double %11, double %13, double %neg12)\l  %19 = load ptr, ptr %z.addr, align 8\l  %arrayidx13 = getelementptr inbounds double, ptr %19, i64 1\l  store double %18, ptr %arrayidx13, align 8\l  %20 = load ptr, ptr %x.addr, align 8\l  %arrayidx14 = getelementptr inbounds double, ptr %20, i64 0\l  %21 = load double, ptr %arrayidx14, align 8\l  %22 = load ptr, ptr %y.addr, align 8\l  %arrayidx15 = getelementptr inbounds double, ptr %22, i64 1\l  %23 = load double, ptr %arrayidx15, align 8\l  %24 = load ptr, ptr %x.addr, align 8\l  %arrayidx16 = getelementptr inbounds double, ptr %24, i64 1\l  %25 = load double, ptr %arrayidx16, align 8\l  %26 = load ptr, ptr %y.addr, align 8\l  %arrayidx17 = getelementptr inbounds double, ptr %26, i64 0\l  %27 = load double, ptr %arrayidx17, align 8\l  %mul18 = fmul double %25, %27\l  %neg19 = fneg double %mul18\l  %28 = call double @llvm.fmuladd.f64(double %21, double %23, double %neg19)\l  %29 = load ptr, ptr %z.addr, align 8\l  %arrayidx20 = getelementptr inbounds double, ptr %29, i64 2\l  store double %28, ptr %arrayidx20, align 8\l  ret void\l}"];
}
