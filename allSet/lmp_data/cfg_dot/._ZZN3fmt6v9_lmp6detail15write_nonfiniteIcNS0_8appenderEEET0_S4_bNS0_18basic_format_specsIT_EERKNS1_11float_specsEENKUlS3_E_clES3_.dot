digraph "CFG for '_ZZN3fmt6v9_lmp6detail15write_nonfiniteIcNS0_8appenderEEET0_S4_bNS0_18basic_format_specsIT_EERKNS1_11float_specsEENKUlS3_E_clES3_' function" {
	label="CFG for '_ZZN3fmt6v9_lmp6detail15write_nonfiniteIcNS0_8appenderEEET0_S4_bNS0_18basic_format_specsIT_EERKNS1_11float_specsEENKUlS3_E_clES3_' function";

	Node0x556bfeba1e90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %retval = alloca %\"class.fmt::v9_lmp::appender\", align 8\l  %it = alloca %\"class.fmt::v9_lmp::appender\", align 8\l  %this.addr = alloca ptr, align 8\l  %ref.tmp = alloca i8, align 1\l  %ref.tmp3 = alloca %\"class.fmt::v9_lmp::appender\", align 8\l  %agg.tmp = alloca %\"class.fmt::v9_lmp::appender\", align 8\l  %coerce.dive = getelementptr inbounds %\"class.fmt::v9_lmp::appender\", ptr\l... %it, i32 0, i32 0\l  %coerce.dive1 = getelementptr inbounds %\"class.std::back_insert_iterator\",\l... ptr %coerce.dive, i32 0, i32 0\l  store ptr %it.coerce, ptr %coerce.dive1, align 8\l  store ptr %this, ptr %this.addr, align 8\l  %this2 = load ptr, ptr %this.addr, align 8\l  %0 = getelementptr inbounds %class.anon, ptr %this2, i32 0, i32 0\l  %1 = load i8, ptr %0, align 8\l  %tobool = icmp ne i8 %1, 0\l  br i1 %tobool, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x556bfeba1e90:s0 -> Node0x556bfeba28e0[tooltip="entry -> if.then\nProbability 62.50%" ];
	Node0x556bfeba1e90:s1 -> Node0x556bfeba2950[tooltip="entry -> if.end\nProbability 37.50%" ];
	Node0x556bfeba28e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.then:\l|  %2 = getelementptr inbounds %class.anon, ptr %this2, i32 0, i32 0\l  %3 = load i8, ptr %2, align 8\l  %call = call noundef signext i8\l... @_ZN3fmt6v9_lmp6detail4signIcNS0_4sign4typeEEET_T0_(i8 noundef zeroext %3)\l  store i8 %call, ptr %ref.tmp, align 1\l  %call4 = call ptr @_ZN3fmt6v9_lmp8appenderppEi(ptr noundef nonnull align 8\l... dereferenceable(8) %it, i32 noundef 0) #3\l  %coerce.dive5 = getelementptr inbounds %\"class.fmt::v9_lmp::appender\", ptr\l... %ref.tmp3, i32 0, i32 0\l  %coerce.dive6 = getelementptr inbounds %\"class.std::back_insert_iterator\",\l... ptr %coerce.dive5, i32 0, i32 0\l  store ptr %call4, ptr %coerce.dive6, align 8\l  %call7 = call noundef nonnull align 8 dereferenceable(8) ptr\l... @_ZNSt20back_insert_iteratorIN3fmt6v9_lmp6detail6bufferIcEEEdeEv(ptr noundef\l... nonnull align 8 dereferenceable(8) %ref.tmp3)\l  %call8 = call noundef nonnull align 8 dereferenceable(8) ptr\l... @_ZNSt20back_insert_iteratorIN3fmt6v9_lmp6detail6bufferIcEEEaSEOc(ptr noundef\l... nonnull align 8 dereferenceable(8) %call7, ptr noundef nonnull align 1\l... dereferenceable(1) %ref.tmp)\l  br label %if.end\l}"];
	Node0x556bfeba28e0 -> Node0x556bfeba2950[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x556bfeba2950 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end:\l|  %4 = getelementptr inbounds %class.anon, ptr %this2, i32 0, i32 1\l  %5 = load ptr, ptr %4, align 8\l  %6 = getelementptr inbounds %class.anon, ptr %this2, i32 0, i32 1\l  %7 = load ptr, ptr %6, align 8\l  %add.ptr = getelementptr inbounds i8, ptr %7, i64 3\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp, ptr align 8 %it, i64\l... 8, i1 false)\l  %coerce.dive9 = getelementptr inbounds %\"class.fmt::v9_lmp::appender\", ptr\l... %agg.tmp, i32 0, i32 0\l  %coerce.dive10 = getelementptr inbounds %\"class.std::back_insert_iterator\",\l... ptr %coerce.dive9, i32 0, i32 0\l  %8 = load ptr, ptr %coerce.dive10, align 8\l  %call11 = call ptr\l... @_ZN3fmt6v9_lmp6detail8copy_strIcPKcEENS0_8appenderET0_S6_S5_(ptr noundef %5,\l... ptr noundef %add.ptr, ptr %8)\l  %coerce.dive12 = getelementptr inbounds %\"class.fmt::v9_lmp::appender\", ptr\l... %retval, i32 0, i32 0\l  %coerce.dive13 = getelementptr inbounds %\"class.std::back_insert_iterator\",\l... ptr %coerce.dive12, i32 0, i32 0\l  store ptr %call11, ptr %coerce.dive13, align 8\l  %coerce.dive14 = getelementptr inbounds %\"class.fmt::v9_lmp::appender\", ptr\l... %retval, i32 0, i32 0\l  %coerce.dive15 = getelementptr inbounds %\"class.std::back_insert_iterator\",\l... ptr %coerce.dive14, i32 0, i32 0\l  %9 = load ptr, ptr %coerce.dive15, align 8\l  ret ptr %9\l}"];
}
