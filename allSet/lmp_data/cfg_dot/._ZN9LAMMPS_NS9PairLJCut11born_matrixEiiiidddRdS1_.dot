digraph "CFG for '_ZN9LAMMPS_NS9PairLJCut11born_matrixEiiiidddRdS1_' function" {
	label="CFG for '_ZN9LAMMPS_NS9PairLJCut11born_matrixEiiiidddRdS1_' function";

	Node0x5599308eceb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %.addr = alloca i32, align 4\l  %.addr1 = alloca i32, align 4\l  %itype.addr = alloca i32, align 4\l  %jtype.addr = alloca i32, align 4\l  %rsq.addr = alloca double, align 8\l  %.addr2 = alloca double, align 8\l  %factor_lj.addr = alloca double, align 8\l  %dupair.addr = alloca ptr, align 8\l  %du2pair.addr = alloca ptr, align 8\l  %rinv = alloca double, align 8\l  %r2inv = alloca double, align 8\l  %r6inv = alloca double, align 8\l  %du = alloca double, align 8\l  %du2 = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store i32 %0, ptr %.addr, align 4\l  store i32 %1, ptr %.addr1, align 4\l  store i32 %itype, ptr %itype.addr, align 4\l  store i32 %jtype, ptr %jtype.addr, align 4\l  store double %rsq, ptr %rsq.addr, align 8\l  store double %2, ptr %.addr2, align 8\l  store double %factor_lj, ptr %factor_lj.addr, align 8\l  store ptr %dupair, ptr %dupair.addr, align 8\l  store ptr %du2pair, ptr %du2pair.addr, align 8\l  %this3 = load ptr, ptr %this.addr, align 8\l  %3 = load double, ptr %rsq.addr, align 8\l  %div = fdiv double 1.000000e+00, %3\l  store double %div, ptr %r2inv, align 8\l  %4 = load double, ptr %r2inv, align 8\l  %call = call double @sqrt(double noundef %4) #10\l  store double %call, ptr %rinv, align 8\l  %5 = load double, ptr %r2inv, align 8\l  %6 = load double, ptr %r2inv, align 8\l  %mul = fmul double %5, %6\l  %7 = load double, ptr %r2inv, align 8\l  %mul4 = fmul double %mul, %7\l  store double %mul4, ptr %r6inv, align 8\l  %8 = load double, ptr %r6inv, align 8\l  %9 = load double, ptr %rinv, align 8\l  %mul5 = fmul double %8, %9\l  %lj2 = getelementptr inbounds %\"class.LAMMPS_NS::PairLJCut\", ptr %this3, i32\l... 0, i32 6\l  %10 = load ptr, ptr %lj2, align 8\l  %11 = load i32, ptr %itype.addr, align 4\l  %idxprom = sext i32 %11 to i64\l  %arrayidx = getelementptr inbounds ptr, ptr %10, i64 %idxprom\l  %12 = load ptr, ptr %arrayidx, align 8\l  %13 = load i32, ptr %jtype.addr, align 4\l  %idxprom6 = sext i32 %13 to i64\l  %arrayidx7 = getelementptr inbounds double, ptr %12, i64 %idxprom6\l  %14 = load double, ptr %arrayidx7, align 8\l  %lj1 = getelementptr inbounds %\"class.LAMMPS_NS::PairLJCut\", ptr %this3, i32\l... 0, i32 5\l  %15 = load ptr, ptr %lj1, align 8\l  %16 = load i32, ptr %itype.addr, align 4\l  %idxprom8 = sext i32 %16 to i64\l  %arrayidx9 = getelementptr inbounds ptr, ptr %15, i64 %idxprom8\l  %17 = load ptr, ptr %arrayidx9, align 8\l  %18 = load i32, ptr %jtype.addr, align 4\l  %idxprom10 = sext i32 %18 to i64\l  %arrayidx11 = getelementptr inbounds double, ptr %17, i64 %idxprom10\l  %19 = load double, ptr %arrayidx11, align 8\l  %20 = load double, ptr %r6inv, align 8\l  %neg = fneg double %19\l  %21 = call double @llvm.fmuladd.f64(double %neg, double %20, double %14)\l  %mul13 = fmul double %mul5, %21\l  store double %mul13, ptr %du, align 8\l  %22 = load double, ptr %r6inv, align 8\l  %23 = load double, ptr %r2inv, align 8\l  %mul14 = fmul double %22, %23\l  %lj115 = getelementptr inbounds %\"class.LAMMPS_NS::PairLJCut\", ptr %this3,\l... i32 0, i32 5\l  %24 = load ptr, ptr %lj115, align 8\l  %25 = load i32, ptr %itype.addr, align 4\l  %idxprom16 = sext i32 %25 to i64\l  %arrayidx17 = getelementptr inbounds ptr, ptr %24, i64 %idxprom16\l  %26 = load ptr, ptr %arrayidx17, align 8\l  %27 = load i32, ptr %jtype.addr, align 4\l  %idxprom18 = sext i32 %27 to i64\l  %arrayidx19 = getelementptr inbounds double, ptr %26, i64 %idxprom18\l  %28 = load double, ptr %arrayidx19, align 8\l  %mul20 = fmul double 1.300000e+01, %28\l  %29 = load double, ptr %r6inv, align 8\l  %lj222 = getelementptr inbounds %\"class.LAMMPS_NS::PairLJCut\", ptr %this3,\l... i32 0, i32 6\l  %30 = load ptr, ptr %lj222, align 8\l  %31 = load i32, ptr %itype.addr, align 4\l  %idxprom23 = sext i32 %31 to i64\l  %arrayidx24 = getelementptr inbounds ptr, ptr %30, i64 %idxprom23\l  %32 = load ptr, ptr %arrayidx24, align 8\l  %33 = load i32, ptr %jtype.addr, align 4\l  %idxprom25 = sext i32 %33 to i64\l  %arrayidx26 = getelementptr inbounds double, ptr %32, i64 %idxprom25\l  %34 = load double, ptr %arrayidx26, align 8\l  %mul27 = fmul double 7.000000e+00, %34\l  %neg28 = fneg double %mul27\l  %35 = call double @llvm.fmuladd.f64(double %mul20, double %29, double %neg28)\l  %mul29 = fmul double %mul14, %35\l  store double %mul29, ptr %du2, align 8\l  %36 = load double, ptr %factor_lj.addr, align 8\l  %37 = load double, ptr %du, align 8\l  %mul30 = fmul double %36, %37\l  %38 = load ptr, ptr %dupair.addr, align 8\l  store double %mul30, ptr %38, align 8\l  %39 = load double, ptr %factor_lj.addr, align 8\l  %40 = load double, ptr %du2, align 8\l  %mul31 = fmul double %39, %40\l  %41 = load ptr, ptr %du2pair.addr, align 8\l  store double %mul31, ptr %41, align 8\l  ret void\l}"];
}
