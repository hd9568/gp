digraph "CFG for '_ZN9LAMMPS_NS11MathSpecial8exp2_x86Ed' function" {
	label="CFG for '_ZN9LAMMPS_NS11MathSpecial8exp2_x86Ed' function";

	Node0x5556d674b730 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %x.addr = alloca double, align 8\l  %ipart = alloca double, align 8\l  %fpart = alloca double, align 8\l  %px = alloca double, align 8\l  %qx = alloca double, align 8\l  %epart = alloca %union.udi_t, align 8\l  store double %x, ptr %x.addr, align 8\l  %0 = load double, ptr %x.addr, align 8\l  %add = fadd double %0, 5.000000e-01\l  %1 = call double @llvm.floor.f64(double %add)\l  store double %1, ptr %ipart, align 8\l  %2 = load double, ptr %x.addr, align 8\l  %3 = load double, ptr %ipart, align 8\l  %sub = fsub double %2, %3\l  store double %sub, ptr %fpart, align 8\l  %i0 = getelementptr inbounds %struct.anon, ptr %epart, i32 0, i32 0\l  store i32 0, ptr %i0, align 8\l  %4 = load double, ptr %ipart, align 8\l  %conv = fptosi double %4 to i32\l  %add1 = add nsw i32 %conv, 1023\l  %shl = shl i32 %add1, 20\l  %i1 = getelementptr inbounds %struct.anon, ptr %epart, i32 0, i32 1\l  store i32 %shl, ptr %i1, align 4\l  %5 = load double, ptr %fpart, align 8\l  %6 = load double, ptr %fpart, align 8\l  %mul = fmul double %5, %6\l  store double %mul, ptr %x.addr, align 8\l  %7 = load double, ptr @_ZL9fm_exp2_p, align 16\l  store double %7, ptr %px, align 8\l  %8 = load double, ptr %px, align 8\l  %9 = load double, ptr %x.addr, align 8\l  %10 = load double, ptr getelementptr inbounds ([3 x double], ptr\l... @_ZL9fm_exp2_p, i64 0, i64 1), align 8\l  %11 = call double @llvm.fmuladd.f64(double %8, double %9, double %10)\l  store double %11, ptr %px, align 8\l  %12 = load double, ptr %x.addr, align 8\l  %13 = load double, ptr @_ZL9fm_exp2_q, align 16\l  %add3 = fadd double %12, %13\l  store double %add3, ptr %qx, align 8\l  %14 = load double, ptr %px, align 8\l  %15 = load double, ptr %x.addr, align 8\l  %16 = load double, ptr getelementptr inbounds ([3 x double], ptr\l... @_ZL9fm_exp2_p, i64 0, i64 2), align 16\l  %17 = call double @llvm.fmuladd.f64(double %14, double %15, double %16)\l  store double %17, ptr %px, align 8\l  %18 = load double, ptr %qx, align 8\l  %19 = load double, ptr %x.addr, align 8\l  %20 = load double, ptr getelementptr inbounds ([2 x double], ptr\l... @_ZL9fm_exp2_q, i64 0, i64 1), align 8\l  %21 = call double @llvm.fmuladd.f64(double %18, double %19, double %20)\l  store double %21, ptr %qx, align 8\l  %22 = load double, ptr %px, align 8\l  %23 = load double, ptr %fpart, align 8\l  %mul6 = fmul double %22, %23\l  store double %mul6, ptr %px, align 8\l  %24 = load double, ptr %px, align 8\l  %25 = load double, ptr %qx, align 8\l  %26 = load double, ptr %px, align 8\l  %sub7 = fsub double %25, %26\l  %div = fdiv double %24, %sub7\l  %27 = call double @llvm.fmuladd.f64(double 2.000000e+00, double %div, double\l... 1.000000e+00)\l  store double %27, ptr %x.addr, align 8\l  %28 = load double, ptr %epart, align 8\l  %29 = load double, ptr %x.addr, align 8\l  %mul9 = fmul double %28, %29\l  ret double %mul9\l}"];
}
