digraph "CFG for '_ZN9LAMMPS_NS5Group5omegaEPdPA3_dS1_' function" {
	label="CFG for '_ZN9LAMMPS_NS5Group5omegaEPdPA3_dS1_' function";

	Node0x55ba304ac5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %angmom.addr = alloca ptr, align 8\l  %inertia.addr = alloca ptr, align 8\l  %w.addr = alloca ptr, align 8\l  %idiag = alloca [3 x double], align 16\l  %ex = alloca [3 x double], align 16\l  %ey = alloca [3 x double], align 16\l  %ez = alloca [3 x double], align 16\l  %cross = alloca [3 x double], align 16\l  %evectors = alloca [3 x [3 x double]], align 16\l  %inverse = alloca [3 x [3 x double]], align 16\l  %determinant = alloca double, align 8\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %ierror = alloca i32, align 4\l  %ref.tmp = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %ref.tmp221 = alloca %\"class.std::allocator\", align 1\l  %exn.slot = alloca ptr, align 8\l  %ehselector.slot = alloca i32, align 4\l  %ref.tmp222 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %ref.tmp223 = alloca %\"class.std::allocator\", align 1\l  %max = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store ptr %angmom, ptr %angmom.addr, align 8\l  store ptr %inertia, ptr %inertia.addr, align 8\l  store ptr %w, ptr %w.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %0 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx = getelementptr inbounds [3 x double], ptr %0, i64 0\l  %arrayidx2 = getelementptr inbounds [3 x double], ptr %arrayidx, i64 0, i64 0\l  %1 = load double, ptr %arrayidx2, align 8\l  %2 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx3 = getelementptr inbounds [3 x double], ptr %2, i64 1\l  %arrayidx4 = getelementptr inbounds [3 x double], ptr %arrayidx3, i64 0, i64\l... 1\l  %3 = load double, ptr %arrayidx4, align 8\l  %mul = fmul double %1, %3\l  %4 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx5 = getelementptr inbounds [3 x double], ptr %4, i64 2\l  %arrayidx6 = getelementptr inbounds [3 x double], ptr %arrayidx5, i64 0, i64\l... 2\l  %5 = load double, ptr %arrayidx6, align 8\l  %6 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx8 = getelementptr inbounds [3 x double], ptr %6, i64 0\l  %arrayidx9 = getelementptr inbounds [3 x double], ptr %arrayidx8, i64 0, i64\l... 1\l  %7 = load double, ptr %arrayidx9, align 8\l  %8 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx10 = getelementptr inbounds [3 x double], ptr %8, i64 1\l  %arrayidx11 = getelementptr inbounds [3 x double], ptr %arrayidx10, i64 0,\l... i64 2\l  %9 = load double, ptr %arrayidx11, align 8\l  %mul12 = fmul double %7, %9\l  %10 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx13 = getelementptr inbounds [3 x double], ptr %10, i64 2\l  %arrayidx14 = getelementptr inbounds [3 x double], ptr %arrayidx13, i64 0,\l... i64 0\l  %11 = load double, ptr %arrayidx14, align 8\l  %mul15 = fmul double %mul12, %11\l  %12 = call double @llvm.fmuladd.f64(double %mul, double %5, double %mul15)\l  %13 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx16 = getelementptr inbounds [3 x double], ptr %13, i64 0\l  %arrayidx17 = getelementptr inbounds [3 x double], ptr %arrayidx16, i64 0,\l... i64 2\l  %14 = load double, ptr %arrayidx17, align 8\l  %15 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx18 = getelementptr inbounds [3 x double], ptr %15, i64 1\l  %arrayidx19 = getelementptr inbounds [3 x double], ptr %arrayidx18, i64 0,\l... i64 0\l  %16 = load double, ptr %arrayidx19, align 8\l  %mul20 = fmul double %14, %16\l  %17 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx21 = getelementptr inbounds [3 x double], ptr %17, i64 2\l  %arrayidx22 = getelementptr inbounds [3 x double], ptr %arrayidx21, i64 0,\l... i64 1\l  %18 = load double, ptr %arrayidx22, align 8\l  %19 = call double @llvm.fmuladd.f64(double %mul20, double %18, double %12)\l  %20 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx24 = getelementptr inbounds [3 x double], ptr %20, i64 0\l  %arrayidx25 = getelementptr inbounds [3 x double], ptr %arrayidx24, i64 0,\l... i64 0\l  %21 = load double, ptr %arrayidx25, align 8\l  %22 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx26 = getelementptr inbounds [3 x double], ptr %22, i64 1\l  %arrayidx27 = getelementptr inbounds [3 x double], ptr %arrayidx26, i64 0,\l... i64 2\l  %23 = load double, ptr %arrayidx27, align 8\l  %mul28 = fmul double %21, %23\l  %24 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx29 = getelementptr inbounds [3 x double], ptr %24, i64 2\l  %arrayidx30 = getelementptr inbounds [3 x double], ptr %arrayidx29, i64 0,\l... i64 1\l  %25 = load double, ptr %arrayidx30, align 8\l  %neg = fneg double %mul28\l  %26 = call double @llvm.fmuladd.f64(double %neg, double %25, double %19)\l  %27 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx32 = getelementptr inbounds [3 x double], ptr %27, i64 0\l  %arrayidx33 = getelementptr inbounds [3 x double], ptr %arrayidx32, i64 0,\l... i64 1\l  %28 = load double, ptr %arrayidx33, align 8\l  %29 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx34 = getelementptr inbounds [3 x double], ptr %29, i64 1\l  %arrayidx35 = getelementptr inbounds [3 x double], ptr %arrayidx34, i64 0,\l... i64 0\l  %30 = load double, ptr %arrayidx35, align 8\l  %mul36 = fmul double %28, %30\l  %31 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx37 = getelementptr inbounds [3 x double], ptr %31, i64 2\l  %arrayidx38 = getelementptr inbounds [3 x double], ptr %arrayidx37, i64 0,\l... i64 2\l  %32 = load double, ptr %arrayidx38, align 8\l  %neg40 = fneg double %mul36\l  %33 = call double @llvm.fmuladd.f64(double %neg40, double %32, double %26)\l  %34 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx41 = getelementptr inbounds [3 x double], ptr %34, i64 2\l  %arrayidx42 = getelementptr inbounds [3 x double], ptr %arrayidx41, i64 0,\l... i64 0\l  %35 = load double, ptr %arrayidx42, align 8\l  %36 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx43 = getelementptr inbounds [3 x double], ptr %36, i64 1\l  %arrayidx44 = getelementptr inbounds [3 x double], ptr %arrayidx43, i64 0,\l... i64 1\l  %37 = load double, ptr %arrayidx44, align 8\l  %mul45 = fmul double %35, %37\l  %38 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx46 = getelementptr inbounds [3 x double], ptr %38, i64 0\l  %arrayidx47 = getelementptr inbounds [3 x double], ptr %arrayidx46, i64 0,\l... i64 2\l  %39 = load double, ptr %arrayidx47, align 8\l  %neg49 = fneg double %mul45\l  %40 = call double @llvm.fmuladd.f64(double %neg49, double %39, double %33)\l  store double %40, ptr %determinant, align 8\l  %41 = load double, ptr %determinant, align 8\l  %cmp = fcmp ogt double %41, 0x3EB0C6F7A0B5ED8D\l  br i1 %cmp, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x55ba304ac5d0:s0 -> Node0x55ba304b4ba0[tooltip="entry -> if.then\nProbability 50.00%" ];
	Node0x55ba304ac5d0:s1 -> Node0x55ba304b4bf0[tooltip="entry -> if.else\nProbability 50.00%" ];
	Node0x55ba304b4ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{if.then:\l|  %42 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx50 = getelementptr inbounds [3 x double], ptr %42, i64 1\l  %arrayidx51 = getelementptr inbounds [3 x double], ptr %arrayidx50, i64 0,\l... i64 1\l  %43 = load double, ptr %arrayidx51, align 8\l  %44 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx52 = getelementptr inbounds [3 x double], ptr %44, i64 2\l  %arrayidx53 = getelementptr inbounds [3 x double], ptr %arrayidx52, i64 0,\l... i64 2\l  %45 = load double, ptr %arrayidx53, align 8\l  %46 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx55 = getelementptr inbounds [3 x double], ptr %46, i64 1\l  %arrayidx56 = getelementptr inbounds [3 x double], ptr %arrayidx55, i64 0,\l... i64 2\l  %47 = load double, ptr %arrayidx56, align 8\l  %48 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx57 = getelementptr inbounds [3 x double], ptr %48, i64 2\l  %arrayidx58 = getelementptr inbounds [3 x double], ptr %arrayidx57, i64 0,\l... i64 1\l  %49 = load double, ptr %arrayidx58, align 8\l  %mul59 = fmul double %47, %49\l  %neg60 = fneg double %mul59\l  %50 = call double @llvm.fmuladd.f64(double %43, double %45, double %neg60)\l  %arrayidx61 = getelementptr inbounds [3 x [3 x double]], ptr %inverse, i64\l... 0, i64 0\l  %arrayidx62 = getelementptr inbounds [3 x double], ptr %arrayidx61, i64 0,\l... i64 0\l  store double %50, ptr %arrayidx62, align 16\l  %51 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx63 = getelementptr inbounds [3 x double], ptr %51, i64 0\l  %arrayidx64 = getelementptr inbounds [3 x double], ptr %arrayidx63, i64 0,\l... i64 1\l  %52 = load double, ptr %arrayidx64, align 8\l  %53 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx65 = getelementptr inbounds [3 x double], ptr %53, i64 2\l  %arrayidx66 = getelementptr inbounds [3 x double], ptr %arrayidx65, i64 0,\l... i64 2\l  %54 = load double, ptr %arrayidx66, align 8\l  %55 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx68 = getelementptr inbounds [3 x double], ptr %55, i64 0\l  %arrayidx69 = getelementptr inbounds [3 x double], ptr %arrayidx68, i64 0,\l... i64 2\l  %56 = load double, ptr %arrayidx69, align 8\l  %57 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx70 = getelementptr inbounds [3 x double], ptr %57, i64 2\l  %arrayidx71 = getelementptr inbounds [3 x double], ptr %arrayidx70, i64 0,\l... i64 1\l  %58 = load double, ptr %arrayidx71, align 8\l  %mul72 = fmul double %56, %58\l  %neg73 = fneg double %mul72\l  %59 = call double @llvm.fmuladd.f64(double %52, double %54, double %neg73)\l  %fneg = fneg double %59\l  %arrayidx74 = getelementptr inbounds [3 x [3 x double]], ptr %inverse, i64\l... 0, i64 0\l  %arrayidx75 = getelementptr inbounds [3 x double], ptr %arrayidx74, i64 0,\l... i64 1\l  store double %fneg, ptr %arrayidx75, align 8\l  %60 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx76 = getelementptr inbounds [3 x double], ptr %60, i64 0\l  %arrayidx77 = getelementptr inbounds [3 x double], ptr %arrayidx76, i64 0,\l... i64 1\l  %61 = load double, ptr %arrayidx77, align 8\l  %62 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx78 = getelementptr inbounds [3 x double], ptr %62, i64 1\l  %arrayidx79 = getelementptr inbounds [3 x double], ptr %arrayidx78, i64 0,\l... i64 2\l  %63 = load double, ptr %arrayidx79, align 8\l  %64 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx81 = getelementptr inbounds [3 x double], ptr %64, i64 0\l  %arrayidx82 = getelementptr inbounds [3 x double], ptr %arrayidx81, i64 0,\l... i64 2\l  %65 = load double, ptr %arrayidx82, align 8\l  %66 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx83 = getelementptr inbounds [3 x double], ptr %66, i64 1\l  %arrayidx84 = getelementptr inbounds [3 x double], ptr %arrayidx83, i64 0,\l... i64 1\l  %67 = load double, ptr %arrayidx84, align 8\l  %mul85 = fmul double %65, %67\l  %neg86 = fneg double %mul85\l  %68 = call double @llvm.fmuladd.f64(double %61, double %63, double %neg86)\l  %arrayidx87 = getelementptr inbounds [3 x [3 x double]], ptr %inverse, i64\l... 0, i64 0\l  %arrayidx88 = getelementptr inbounds [3 x double], ptr %arrayidx87, i64 0,\l... i64 2\l  store double %68, ptr %arrayidx88, align 16\l  %69 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx89 = getelementptr inbounds [3 x double], ptr %69, i64 1\l  %arrayidx90 = getelementptr inbounds [3 x double], ptr %arrayidx89, i64 0,\l... i64 0\l  %70 = load double, ptr %arrayidx90, align 8\l  %71 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx91 = getelementptr inbounds [3 x double], ptr %71, i64 2\l  %arrayidx92 = getelementptr inbounds [3 x double], ptr %arrayidx91, i64 0,\l... i64 2\l  %72 = load double, ptr %arrayidx92, align 8\l  %73 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx94 = getelementptr inbounds [3 x double], ptr %73, i64 1\l  %arrayidx95 = getelementptr inbounds [3 x double], ptr %arrayidx94, i64 0,\l... i64 2\l  %74 = load double, ptr %arrayidx95, align 8\l  %75 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx96 = getelementptr inbounds [3 x double], ptr %75, i64 2\l  %arrayidx97 = getelementptr inbounds [3 x double], ptr %arrayidx96, i64 0,\l... i64 0\l  %76 = load double, ptr %arrayidx97, align 8\l  %mul98 = fmul double %74, %76\l  %neg99 = fneg double %mul98\l  %77 = call double @llvm.fmuladd.f64(double %70, double %72, double %neg99)\l  %fneg100 = fneg double %77\l  %arrayidx101 = getelementptr inbounds [3 x [3 x double]], ptr %inverse, i64\l... 0, i64 1\l  %arrayidx102 = getelementptr inbounds [3 x double], ptr %arrayidx101, i64 0,\l... i64 0\l  store double %fneg100, ptr %arrayidx102, align 8\l  %78 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx103 = getelementptr inbounds [3 x double], ptr %78, i64 0\l  %arrayidx104 = getelementptr inbounds [3 x double], ptr %arrayidx103, i64 0,\l... i64 0\l  %79 = load double, ptr %arrayidx104, align 8\l  %80 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx105 = getelementptr inbounds [3 x double], ptr %80, i64 2\l  %arrayidx106 = getelementptr inbounds [3 x double], ptr %arrayidx105, i64 0,\l... i64 2\l  %81 = load double, ptr %arrayidx106, align 8\l  %82 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx108 = getelementptr inbounds [3 x double], ptr %82, i64 0\l  %arrayidx109 = getelementptr inbounds [3 x double], ptr %arrayidx108, i64 0,\l... i64 2\l  %83 = load double, ptr %arrayidx109, align 8\l  %84 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx110 = getelementptr inbounds [3 x double], ptr %84, i64 2\l  %arrayidx111 = getelementptr inbounds [3 x double], ptr %arrayidx110, i64 0,\l... i64 0\l  %85 = load double, ptr %arrayidx111, align 8\l  %mul112 = fmul double %83, %85\l  %neg113 = fneg double %mul112\l  %86 = call double @llvm.fmuladd.f64(double %79, double %81, double %neg113)\l  %arrayidx114 = getelementptr inbounds [3 x [3 x double]], ptr %inverse, i64\l... 0, i64 1\l  %arrayidx115 = getelementptr inbounds [3 x double], ptr %arrayidx114, i64 0,\l... i64 1\l  store double %86, ptr %arrayidx115, align 8\l  %87 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx116 = getelementptr inbounds [3 x double], ptr %87, i64 0\l  %arrayidx117 = getelementptr inbounds [3 x double], ptr %arrayidx116, i64 0,\l... i64 0\l  %88 = load double, ptr %arrayidx117, align 8\l  %89 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx118 = getelementptr inbounds [3 x double], ptr %89, i64 1\l  %arrayidx119 = getelementptr inbounds [3 x double], ptr %arrayidx118, i64 0,\l... i64 2\l  %90 = load double, ptr %arrayidx119, align 8\l  %91 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx121 = getelementptr inbounds [3 x double], ptr %91, i64 0\l  %arrayidx122 = getelementptr inbounds [3 x double], ptr %arrayidx121, i64 0,\l... i64 2\l  %92 = load double, ptr %arrayidx122, align 8\l  %93 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx123 = getelementptr inbounds [3 x double], ptr %93, i64 1\l  %arrayidx124 = getelementptr inbounds [3 x double], ptr %arrayidx123, i64 0,\l... i64 0\l  %94 = load double, ptr %arrayidx124, align 8\l  %mul125 = fmul double %92, %94\l  %neg126 = fneg double %mul125\l  %95 = call double @llvm.fmuladd.f64(double %88, double %90, double %neg126)\l  %fneg127 = fneg double %95\l  %arrayidx128 = getelementptr inbounds [3 x [3 x double]], ptr %inverse, i64\l... 0, i64 1\l  %arrayidx129 = getelementptr inbounds [3 x double], ptr %arrayidx128, i64 0,\l... i64 2\l  store double %fneg127, ptr %arrayidx129, align 8\l  %96 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx130 = getelementptr inbounds [3 x double], ptr %96, i64 1\l  %arrayidx131 = getelementptr inbounds [3 x double], ptr %arrayidx130, i64 0,\l... i64 0\l  %97 = load double, ptr %arrayidx131, align 8\l  %98 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx132 = getelementptr inbounds [3 x double], ptr %98, i64 2\l  %arrayidx133 = getelementptr inbounds [3 x double], ptr %arrayidx132, i64 0,\l... i64 1\l  %99 = load double, ptr %arrayidx133, align 8\l  %100 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx135 = getelementptr inbounds [3 x double], ptr %100, i64 1\l  %arrayidx136 = getelementptr inbounds [3 x double], ptr %arrayidx135, i64 0,\l... i64 1\l  %101 = load double, ptr %arrayidx136, align 8\l  %102 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx137 = getelementptr inbounds [3 x double], ptr %102, i64 2\l  %arrayidx138 = getelementptr inbounds [3 x double], ptr %arrayidx137, i64 0,\l... i64 0\l  %103 = load double, ptr %arrayidx138, align 8\l  %mul139 = fmul double %101, %103\l  %neg140 = fneg double %mul139\l  %104 = call double @llvm.fmuladd.f64(double %97, double %99, double %neg140)\l  %arrayidx141 = getelementptr inbounds [3 x [3 x double]], ptr %inverse, i64\l... 0, i64 2\l  %arrayidx142 = getelementptr inbounds [3 x double], ptr %arrayidx141, i64 0,\l... i64 0\l  store double %104, ptr %arrayidx142, align 16\l  %105 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx143 = getelementptr inbounds [3 x double], ptr %105, i64 0\l  %arrayidx144 = getelementptr inbounds [3 x double], ptr %arrayidx143, i64 0,\l... i64 0\l  %106 = load double, ptr %arrayidx144, align 8\l  %107 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx145 = getelementptr inbounds [3 x double], ptr %107, i64 2\l  %arrayidx146 = getelementptr inbounds [3 x double], ptr %arrayidx145, i64 0,\l... i64 1\l  %108 = load double, ptr %arrayidx146, align 8\l  %109 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx148 = getelementptr inbounds [3 x double], ptr %109, i64 0\l  %arrayidx149 = getelementptr inbounds [3 x double], ptr %arrayidx148, i64 0,\l... i64 1\l  %110 = load double, ptr %arrayidx149, align 8\l  %111 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx150 = getelementptr inbounds [3 x double], ptr %111, i64 2\l  %arrayidx151 = getelementptr inbounds [3 x double], ptr %arrayidx150, i64 0,\l... i64 0\l  %112 = load double, ptr %arrayidx151, align 8\l  %mul152 = fmul double %110, %112\l  %neg153 = fneg double %mul152\l  %113 = call double @llvm.fmuladd.f64(double %106, double %108, double\l... %neg153)\l  %fneg154 = fneg double %113\l  %arrayidx155 = getelementptr inbounds [3 x [3 x double]], ptr %inverse, i64\l... 0, i64 2\l  %arrayidx156 = getelementptr inbounds [3 x double], ptr %arrayidx155, i64 0,\l... i64 1\l  store double %fneg154, ptr %arrayidx156, align 8\l  %114 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx157 = getelementptr inbounds [3 x double], ptr %114, i64 0\l  %arrayidx158 = getelementptr inbounds [3 x double], ptr %arrayidx157, i64 0,\l... i64 0\l  %115 = load double, ptr %arrayidx158, align 8\l  %116 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx159 = getelementptr inbounds [3 x double], ptr %116, i64 1\l  %arrayidx160 = getelementptr inbounds [3 x double], ptr %arrayidx159, i64 0,\l... i64 1\l  %117 = load double, ptr %arrayidx160, align 8\l  %118 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx162 = getelementptr inbounds [3 x double], ptr %118, i64 0\l  %arrayidx163 = getelementptr inbounds [3 x double], ptr %arrayidx162, i64 0,\l... i64 1\l  %119 = load double, ptr %arrayidx163, align 8\l  %120 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx164 = getelementptr inbounds [3 x double], ptr %120, i64 1\l  %arrayidx165 = getelementptr inbounds [3 x double], ptr %arrayidx164, i64 0,\l... i64 0\l  %121 = load double, ptr %arrayidx165, align 8\l  %mul166 = fmul double %119, %121\l  %neg167 = fneg double %mul166\l  %122 = call double @llvm.fmuladd.f64(double %115, double %117, double\l... %neg167)\l  %arrayidx168 = getelementptr inbounds [3 x [3 x double]], ptr %inverse, i64\l... 0, i64 2\l  %arrayidx169 = getelementptr inbounds [3 x double], ptr %arrayidx168, i64 0,\l... i64 2\l  store double %122, ptr %arrayidx169, align 16\l  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x55ba304b4ba0 -> Node0x55ba304bf560[tooltip="if.then -> for.cond\nProbability 100.00%" ];
	Node0x55ba304bf560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.cond:\l|  %123 = load i32, ptr %i, align 4\l  %cmp170 = icmp slt i32 %123, 3\l  br i1 %cmp170, label %for.body, label %for.end179\l|{<s0>T|<s1>F}}"];
	Node0x55ba304bf560:s0 -> Node0x55ba304bf760[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x55ba304bf560:s1 -> Node0x55ba304bf7e0[tooltip="for.cond -> for.end179\nProbability 3.12%" ];
	Node0x55ba304bf760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.body:\l|  store i32 0, ptr %j, align 4\l  br label %for.cond171\l}"];
	Node0x55ba304bf760 -> Node0x55ba304b70c0[tooltip="for.body -> for.cond171\nProbability 100.00%" ];
	Node0x55ba304b70c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond171:\l|  %124 = load i32, ptr %j, align 4\l  %cmp172 = icmp slt i32 %124, 3\l  br i1 %cmp172, label %for.body173, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x55ba304b70c0:s0 -> Node0x55ba304b72c0[tooltip="for.cond171 -> for.body173\nProbability 96.88%" ];
	Node0x55ba304b70c0:s1 -> Node0x55ba304b7340[tooltip="for.cond171 -> for.end\nProbability 3.12%" ];
	Node0x55ba304b72c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body173:\l|  %125 = load double, ptr %determinant, align 8\l  %126 = load i32, ptr %i, align 4\l  %idxprom = sext i32 %126 to i64\l  %arrayidx174 = getelementptr inbounds [3 x [3 x double]], ptr %inverse, i64\l... 0, i64 %idxprom\l  %127 = load i32, ptr %j, align 4\l  %idxprom175 = sext i32 %127 to i64\l  %arrayidx176 = getelementptr inbounds [3 x double], ptr %arrayidx174, i64 0,\l... i64 %idxprom175\l  %128 = load double, ptr %arrayidx176, align 8\l  %div = fdiv double %128, %125\l  store double %div, ptr %arrayidx176, align 8\l  br label %for.inc\l}"];
	Node0x55ba304b72c0 -> Node0x55ba304b7ac0[tooltip="for.body173 -> for.inc\nProbability 100.00%" ];
	Node0x55ba304b7ac0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %129 = load i32, ptr %j, align 4\l  %inc = add nsw i32 %129, 1\l  store i32 %inc, ptr %j, align 4\l  br label %for.cond171, !llvm.loop !6\l}"];
	Node0x55ba304b7ac0 -> Node0x55ba304b70c0[tooltip="for.inc -> for.cond171\nProbability 100.00%" ];
	Node0x55ba304b7340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  br label %for.inc177\l}"];
	Node0x55ba304b7340 -> Node0x55ba304c1420[tooltip="for.end -> for.inc177\nProbability 100.00%" ];
	Node0x55ba304c1420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.inc177:\l|  %130 = load i32, ptr %i, align 4\l  %inc178 = add nsw i32 %130, 1\l  store i32 %inc178, ptr %i, align 4\l  br label %for.cond, !llvm.loop !8\l}"];
	Node0x55ba304c1420 -> Node0x55ba304bf560[tooltip="for.inc177 -> for.cond\nProbability 100.00%" ];
	Node0x55ba304bf7e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{for.end179:\l|  %arrayidx180 = getelementptr inbounds [3 x [3 x double]], ptr %inverse,\l... i64 0, i64 0\l  %arrayidx181 = getelementptr inbounds [3 x double], ptr %arrayidx180, i64 0,\l... i64 0\l  %131 = load double, ptr %arrayidx181, align 16\l  %132 = load ptr, ptr %angmom.addr, align 8\l  %arrayidx182 = getelementptr inbounds double, ptr %132, i64 0\l  %133 = load double, ptr %arrayidx182, align 8\l  %arrayidx184 = getelementptr inbounds [3 x [3 x double]], ptr %inverse, i64\l... 0, i64 0\l  %arrayidx185 = getelementptr inbounds [3 x double], ptr %arrayidx184, i64 0,\l... i64 1\l  %134 = load double, ptr %arrayidx185, align 8\l  %135 = load ptr, ptr %angmom.addr, align 8\l  %arrayidx186 = getelementptr inbounds double, ptr %135, i64 1\l  %136 = load double, ptr %arrayidx186, align 8\l  %mul187 = fmul double %134, %136\l  %137 = call double @llvm.fmuladd.f64(double %131, double %133, double\l... %mul187)\l  %arrayidx188 = getelementptr inbounds [3 x [3 x double]], ptr %inverse, i64\l... 0, i64 0\l  %arrayidx189 = getelementptr inbounds [3 x double], ptr %arrayidx188, i64 0,\l... i64 2\l  %138 = load double, ptr %arrayidx189, align 16\l  %139 = load ptr, ptr %angmom.addr, align 8\l  %arrayidx190 = getelementptr inbounds double, ptr %139, i64 2\l  %140 = load double, ptr %arrayidx190, align 8\l  %141 = call double @llvm.fmuladd.f64(double %138, double %140, double %137)\l  %142 = load ptr, ptr %w.addr, align 8\l  %arrayidx192 = getelementptr inbounds double, ptr %142, i64 0\l  store double %141, ptr %arrayidx192, align 8\l  %arrayidx193 = getelementptr inbounds [3 x [3 x double]], ptr %inverse, i64\l... 0, i64 1\l  %arrayidx194 = getelementptr inbounds [3 x double], ptr %arrayidx193, i64 0,\l... i64 0\l  %143 = load double, ptr %arrayidx194, align 8\l  %144 = load ptr, ptr %angmom.addr, align 8\l  %arrayidx195 = getelementptr inbounds double, ptr %144, i64 0\l  %145 = load double, ptr %arrayidx195, align 8\l  %arrayidx197 = getelementptr inbounds [3 x [3 x double]], ptr %inverse, i64\l... 0, i64 1\l  %arrayidx198 = getelementptr inbounds [3 x double], ptr %arrayidx197, i64 0,\l... i64 1\l  %146 = load double, ptr %arrayidx198, align 8\l  %147 = load ptr, ptr %angmom.addr, align 8\l  %arrayidx199 = getelementptr inbounds double, ptr %147, i64 1\l  %148 = load double, ptr %arrayidx199, align 8\l  %mul200 = fmul double %146, %148\l  %149 = call double @llvm.fmuladd.f64(double %143, double %145, double\l... %mul200)\l  %arrayidx201 = getelementptr inbounds [3 x [3 x double]], ptr %inverse, i64\l... 0, i64 1\l  %arrayidx202 = getelementptr inbounds [3 x double], ptr %arrayidx201, i64 0,\l... i64 2\l  %150 = load double, ptr %arrayidx202, align 8\l  %151 = load ptr, ptr %angmom.addr, align 8\l  %arrayidx203 = getelementptr inbounds double, ptr %151, i64 2\l  %152 = load double, ptr %arrayidx203, align 8\l  %153 = call double @llvm.fmuladd.f64(double %150, double %152, double %149)\l  %154 = load ptr, ptr %w.addr, align 8\l  %arrayidx205 = getelementptr inbounds double, ptr %154, i64 1\l  store double %153, ptr %arrayidx205, align 8\l  %arrayidx206 = getelementptr inbounds [3 x [3 x double]], ptr %inverse, i64\l... 0, i64 2\l  %arrayidx207 = getelementptr inbounds [3 x double], ptr %arrayidx206, i64 0,\l... i64 0\l  %155 = load double, ptr %arrayidx207, align 16\l  %156 = load ptr, ptr %angmom.addr, align 8\l  %arrayidx208 = getelementptr inbounds double, ptr %156, i64 0\l  %157 = load double, ptr %arrayidx208, align 8\l  %arrayidx210 = getelementptr inbounds [3 x [3 x double]], ptr %inverse, i64\l... 0, i64 2\l  %arrayidx211 = getelementptr inbounds [3 x double], ptr %arrayidx210, i64 0,\l... i64 1\l  %158 = load double, ptr %arrayidx211, align 8\l  %159 = load ptr, ptr %angmom.addr, align 8\l  %arrayidx212 = getelementptr inbounds double, ptr %159, i64 1\l  %160 = load double, ptr %arrayidx212, align 8\l  %mul213 = fmul double %158, %160\l  %161 = call double @llvm.fmuladd.f64(double %155, double %157, double\l... %mul213)\l  %arrayidx214 = getelementptr inbounds [3 x [3 x double]], ptr %inverse, i64\l... 0, i64 2\l  %arrayidx215 = getelementptr inbounds [3 x double], ptr %arrayidx214, i64 0,\l... i64 2\l  %162 = load double, ptr %arrayidx215, align 16\l  %163 = load ptr, ptr %angmom.addr, align 8\l  %arrayidx216 = getelementptr inbounds double, ptr %163, i64 2\l  %164 = load double, ptr %arrayidx216, align 8\l  %165 = call double @llvm.fmuladd.f64(double %162, double %164, double %161)\l  %166 = load ptr, ptr %w.addr, align 8\l  %arrayidx218 = getelementptr inbounds double, ptr %166, i64 2\l  store double %165, ptr %arrayidx218, align 8\l  br label %if.end301\l}"];
	Node0x55ba304bf7e0 -> Node0x55ba304c4dc0[tooltip="for.end179 -> if.end301\nProbability 100.00%" ];
	Node0x55ba304b4bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{if.else:\l|  %167 = load ptr, ptr %inertia.addr, align 8\l  %arraydecay = getelementptr inbounds [3 x double], ptr %idiag, i64 0, i64 0\l  %arraydecay219 = getelementptr inbounds [3 x [3 x double]], ptr %evectors,\l... i64 0, i64 0\l  %call = call noundef i32 @_ZN9MathEigen7jacobi3EPA3_KdPdPA3_d(ptr noundef\l... %167, ptr noundef %arraydecay, ptr noundef %arraydecay219)\l  store i32 %call, ptr %ierror, align 4\l  %168 = load i32, ptr %ierror, align 4\l  %tobool = icmp ne i32 %168, 0\l  br i1 %tobool, label %if.then220, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x55ba304b4bf0:s0 -> Node0x55ba304c54a0[tooltip="if.else -> if.then220\nProbability 0.00%" ];
	Node0x55ba304b4bf0:s1 -> Node0x55ba304c54f0[tooltip="if.else -> if.end\nProbability 100.00%" ];
	Node0x55ba304c54a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70" fontname="Courier",label="{if.then220:\l|  %error = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 3\l  %169 = load ptr, ptr %error, align 8\l  %170 = load ptr, ptr %169, align 8\l  call void @_ZNSaIcEC1Ev(ptr noundef nonnull align 1 dereferenceable(1)\l... %ref.tmp221) #15\l  invoke void\l... @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_(ptr\l... noundef nonnull align 8 dereferenceable(32) %ref.tmp, ptr noundef @.str.1,\l... ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp221)\l          to label %invoke.cont unwind label %lpad\l}"];
	Node0x55ba304c54a0 -> Node0x55ba304c5970[tooltip="if.then220 -> invoke.cont\nProbability 50.00%" ];
	Node0x55ba304c54a0 -> Node0x55ba304c59f0[tooltip="if.then220 -> lpad\nProbability 50.00%" ];
	Node0x55ba304c5970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070" fontname="Courier",label="{invoke.cont:\l|  call void @_ZNSaIcEC1Ev(ptr noundef nonnull align 1 dereferenceable(1)\l... %ref.tmp223) #15\l  invoke void\l... @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_(ptr\l... noundef nonnull align 8 dereferenceable(32) %ref.tmp222, ptr noundef\l... @.str.74, ptr noundef nonnull align 1 dereferenceable(1) %ref.tmp223)\l          to label %invoke.cont225 unwind label %lpad224\l}"];
	Node0x55ba304c5970 -> Node0x55ba304c5d10[tooltip="invoke.cont -> invoke.cont225\nProbability 50.00%" ];
	Node0x55ba304c5970 -> Node0x55ba304c5d60[tooltip="invoke.cont -> lpad224\nProbability 50.00%" ];
	Node0x55ba304c5d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470" fontname="Courier",label="{invoke.cont225:\l|  invoke void\l... @_ZN9LAMMPS_NS5Error3allERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE\l...EiS8_(ptr noundef nonnull align 8 dereferenceable(196) %170, ptr noundef\l... nonnull align 8 dereferenceable(32) %ref.tmp, i32 noundef 1725, ptr noundef\l... nonnull align 8 dereferenceable(32) %ref.tmp222) #16\l          to label %invoke.cont227 unwind label %lpad226\l}"];
	Node0x55ba304c5d10 -> Node0x55ba304c5cc0[tooltip="invoke.cont225 -> invoke.cont227\nProbability 0.00%" ];
	Node0x55ba304c5d10 -> Node0x55ba304c6080[tooltip="invoke.cont225 -> lpad226\nProbability 100.00%" ];
	Node0x55ba304c5cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#3d50c370" fontname="Courier",label="{invoke.cont227:\l|  unreachable\l}"];
	Node0x55ba304c59f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070" fontname="Courier",label="{lpad:\l|  %171 = landingpad \{ ptr, i32 \}\l          cleanup\l  %172 = extractvalue \{ ptr, i32 \} %171, 0\l  store ptr %172, ptr %exn.slot, align 8\l  %173 = extractvalue \{ ptr, i32 \} %171, 1\l  store i32 %173, ptr %ehselector.slot, align 4\l  br label %ehcleanup229\l}"];
	Node0x55ba304c59f0 -> Node0x55ba304c6640[tooltip="lpad -> ehcleanup229\nProbability 100.00%" ];
	Node0x55ba304c5d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470" fontname="Courier",label="{lpad224:\l|  %174 = landingpad \{ ptr, i32 \}\l          cleanup\l  %175 = extractvalue \{ ptr, i32 \} %174, 0\l  store ptr %175, ptr %exn.slot, align 8\l  %176 = extractvalue \{ ptr, i32 \} %174, 1\l  store i32 %176, ptr %ehselector.slot, align 4\l  br label %ehcleanup\l}"];
	Node0x55ba304c5d60 -> Node0x55ba304c6990[tooltip="lpad224 -> ehcleanup\nProbability 100.00%" ];
	Node0x55ba304c6080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470" fontname="Courier",label="{lpad226:\l|  %177 = landingpad \{ ptr, i32 \}\l          cleanup\l  %178 = extractvalue \{ ptr, i32 \} %177, 0\l  store ptr %178, ptr %exn.slot, align 8\l  %179 = extractvalue \{ ptr, i32 \} %177, 1\l  store i32 %179, ptr %ehselector.slot, align 4\l  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(ptr\l... noundef nonnull align 8 dereferenceable(32) %ref.tmp222) #15\l  br label %ehcleanup\l}"];
	Node0x55ba304c6080 -> Node0x55ba304c6990[tooltip="lpad226 -> ehcleanup\nProbability 100.00%" ];
	Node0x55ba304c6990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070" fontname="Courier",label="{ehcleanup:\l|  call void @_ZNSaIcED1Ev(ptr noundef nonnull align 1 dereferenceable(1)\l... %ref.tmp223) #15\l  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(ptr\l... noundef nonnull align 8 dereferenceable(32) %ref.tmp) #15\l  br label %ehcleanup229\l}"];
	Node0x55ba304c6990 -> Node0x55ba304c6640[tooltip="ehcleanup -> ehcleanup229\nProbability 100.00%" ];
	Node0x55ba304c6640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70" fontname="Courier",label="{ehcleanup229:\l|  call void @_ZNSaIcED1Ev(ptr noundef nonnull align 1 dereferenceable(1)\l... %ref.tmp221) #15\l  br label %eh.resume\l}"];
	Node0x55ba304c6640 -> Node0x55ba304c7240[tooltip="ehcleanup229 -> eh.resume\nProbability 100.00%" ];
	Node0x55ba304c54f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{if.end:\l|  %arrayidx230 = getelementptr inbounds [3 x [3 x double]], ptr %evectors,\l... i64 0, i64 0\l  %arrayidx231 = getelementptr inbounds [3 x double], ptr %arrayidx230, i64 0,\l... i64 0\l  %180 = load double, ptr %arrayidx231, align 16\l  %arrayidx232 = getelementptr inbounds [3 x double], ptr %ex, i64 0, i64 0\l  store double %180, ptr %arrayidx232, align 16\l  %arrayidx233 = getelementptr inbounds [3 x [3 x double]], ptr %evectors, i64\l... 0, i64 1\l  %arrayidx234 = getelementptr inbounds [3 x double], ptr %arrayidx233, i64 0,\l... i64 0\l  %181 = load double, ptr %arrayidx234, align 8\l  %arrayidx235 = getelementptr inbounds [3 x double], ptr %ex, i64 0, i64 1\l  store double %181, ptr %arrayidx235, align 8\l  %arrayidx236 = getelementptr inbounds [3 x [3 x double]], ptr %evectors, i64\l... 0, i64 2\l  %arrayidx237 = getelementptr inbounds [3 x double], ptr %arrayidx236, i64 0,\l... i64 0\l  %182 = load double, ptr %arrayidx237, align 16\l  %arrayidx238 = getelementptr inbounds [3 x double], ptr %ex, i64 0, i64 2\l  store double %182, ptr %arrayidx238, align 16\l  %arrayidx239 = getelementptr inbounds [3 x [3 x double]], ptr %evectors, i64\l... 0, i64 0\l  %arrayidx240 = getelementptr inbounds [3 x double], ptr %arrayidx239, i64 0,\l... i64 1\l  %183 = load double, ptr %arrayidx240, align 8\l  %arrayidx241 = getelementptr inbounds [3 x double], ptr %ey, i64 0, i64 0\l  store double %183, ptr %arrayidx241, align 16\l  %arrayidx242 = getelementptr inbounds [3 x [3 x double]], ptr %evectors, i64\l... 0, i64 1\l  %arrayidx243 = getelementptr inbounds [3 x double], ptr %arrayidx242, i64 0,\l... i64 1\l  %184 = load double, ptr %arrayidx243, align 8\l  %arrayidx244 = getelementptr inbounds [3 x double], ptr %ey, i64 0, i64 1\l  store double %184, ptr %arrayidx244, align 8\l  %arrayidx245 = getelementptr inbounds [3 x [3 x double]], ptr %evectors, i64\l... 0, i64 2\l  %arrayidx246 = getelementptr inbounds [3 x double], ptr %arrayidx245, i64 0,\l... i64 1\l  %185 = load double, ptr %arrayidx246, align 8\l  %arrayidx247 = getelementptr inbounds [3 x double], ptr %ey, i64 0, i64 2\l  store double %185, ptr %arrayidx247, align 16\l  %arrayidx248 = getelementptr inbounds [3 x [3 x double]], ptr %evectors, i64\l... 0, i64 0\l  %arrayidx249 = getelementptr inbounds [3 x double], ptr %arrayidx248, i64 0,\l... i64 2\l  %186 = load double, ptr %arrayidx249, align 16\l  %arrayidx250 = getelementptr inbounds [3 x double], ptr %ez, i64 0, i64 0\l  store double %186, ptr %arrayidx250, align 16\l  %arrayidx251 = getelementptr inbounds [3 x [3 x double]], ptr %evectors, i64\l... 0, i64 1\l  %arrayidx252 = getelementptr inbounds [3 x double], ptr %arrayidx251, i64 0,\l... i64 2\l  %187 = load double, ptr %arrayidx252, align 8\l  %arrayidx253 = getelementptr inbounds [3 x double], ptr %ez, i64 0, i64 1\l  store double %187, ptr %arrayidx253, align 8\l  %arrayidx254 = getelementptr inbounds [3 x [3 x double]], ptr %evectors, i64\l... 0, i64 2\l  %arrayidx255 = getelementptr inbounds [3 x double], ptr %arrayidx254, i64 0,\l... i64 2\l  %188 = load double, ptr %arrayidx255, align 16\l  %arrayidx256 = getelementptr inbounds [3 x double], ptr %ez, i64 0, i64 2\l  store double %188, ptr %arrayidx256, align 16\l  %arraydecay257 = getelementptr inbounds [3 x double], ptr %ex, i64 0, i64 0\l  %arraydecay258 = getelementptr inbounds [3 x double], ptr %ey, i64 0, i64 0\l  %arraydecay259 = getelementptr inbounds [3 x double], ptr %cross, i64 0, i64\l... 0\l  call void @_ZN9MathExtra6cross3EPKdS1_Pd(ptr noundef %arraydecay257, ptr\l... noundef %arraydecay258, ptr noundef %arraydecay259)\l  %arraydecay260 = getelementptr inbounds [3 x double], ptr %cross, i64 0, i64\l... 0\l  %arraydecay261 = getelementptr inbounds [3 x double], ptr %ez, i64 0, i64 0\l  %call262 = call noundef double @_ZN9MathExtra4dot3EPKdS1_(ptr noundef\l... %arraydecay260, ptr noundef %arraydecay261)\l  %cmp263 = fcmp olt double %call262, 0.000000e+00\l  br i1 %cmp263, label %if.then264, label %if.end266\l|{<s0>T|<s1>F}}"];
	Node0x55ba304c54f0:s0 -> Node0x55ba304c9fa0[tooltip="if.end -> if.then264\nProbability 50.00%" ];
	Node0x55ba304c54f0:s1 -> Node0x55ba304c9ff0[tooltip="if.end -> if.end266\nProbability 50.00%" ];
	Node0x55ba304c9fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70" fontname="Courier",label="{if.then264:\l|  %arraydecay265 = getelementptr inbounds [3 x double], ptr %ez, i64 0, i64 0\l  call void @_ZN9MathExtra7negate3EPd(ptr noundef %arraydecay265)\l  br label %if.end266\l}"];
	Node0x55ba304c9fa0 -> Node0x55ba304c9ff0[tooltip="if.then264 -> if.end266\nProbability 100.00%" ];
	Node0x55ba304c9ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{if.end266:\l|  %arrayidx267 = getelementptr inbounds [3 x double], ptr %idiag, i64 0, i64\l... 0\l  %189 = load double, ptr %arrayidx267, align 16\l  %arrayidx268 = getelementptr inbounds [3 x double], ptr %idiag, i64 0, i64 1\l  %190 = load double, ptr %arrayidx268, align 8\l  %cmp269 = fcmp ogt double %189, %190\l  br i1 %cmp269, label %cond.true, label %cond.false\l|{<s0>T|<s1>F}}"];
	Node0x55ba304c9ff0:s0 -> Node0x55ba304ca810[tooltip="if.end266 -> cond.true\nProbability 50.00%" ];
	Node0x55ba304c9ff0:s1 -> Node0x55ba304ca890[tooltip="if.end266 -> cond.false\nProbability 50.00%" ];
	Node0x55ba304ca810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70" fontname="Courier",label="{cond.true:\l|  %arrayidx270 = getelementptr inbounds [3 x double], ptr %idiag, i64 0, i64\l... 0\l  %191 = load double, ptr %arrayidx270, align 16\l  br label %cond.end\l}"];
	Node0x55ba304ca810 -> Node0x55ba304bb9b0[tooltip="cond.true -> cond.end\nProbability 100.00%" ];
	Node0x55ba304ca890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70" fontname="Courier",label="{cond.false:\l|  %arrayidx271 = getelementptr inbounds [3 x double], ptr %idiag, i64 0, i64\l... 1\l  %192 = load double, ptr %arrayidx271, align 8\l  br label %cond.end\l}"];
	Node0x55ba304ca890 -> Node0x55ba304bb9b0[tooltip="cond.false -> cond.end\nProbability 100.00%" ];
	Node0x55ba304bb9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{cond.end:\l|  %cond = phi double [ %191, %cond.true ], [ %192, %cond.false ]\l  store double %cond, ptr %max, align 8\l  %193 = load double, ptr %max, align 8\l  %arrayidx272 = getelementptr inbounds [3 x double], ptr %idiag, i64 0, i64 2\l  %194 = load double, ptr %arrayidx272, align 16\l  %cmp273 = fcmp ogt double %193, %194\l  br i1 %cmp273, label %cond.true274, label %cond.false275\l|{<s0>T|<s1>F}}"];
	Node0x55ba304bb9b0:s0 -> Node0x55ba304bbfe0[tooltip="cond.end -> cond.true274\nProbability 50.00%" ];
	Node0x55ba304bb9b0:s1 -> Node0x55ba304bc0c0[tooltip="cond.end -> cond.false275\nProbability 50.00%" ];
	Node0x55ba304bbfe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70" fontname="Courier",label="{cond.true274:\l|  %195 = load double, ptr %max, align 8\l  br label %cond.end277\l}"];
	Node0x55ba304bbfe0 -> Node0x55ba304bc2d0[tooltip="cond.true274 -> cond.end277\nProbability 100.00%" ];
	Node0x55ba304bc0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70" fontname="Courier",label="{cond.false275:\l|  %arrayidx276 = getelementptr inbounds [3 x double], ptr %idiag, i64 0, i64\l... 2\l  %196 = load double, ptr %arrayidx276, align 16\l  br label %cond.end277\l}"];
	Node0x55ba304bc0c0 -> Node0x55ba304bc2d0[tooltip="cond.false275 -> cond.end277\nProbability 100.00%" ];
	Node0x55ba304bc2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{cond.end277:\l|  %cond278 = phi double [ %195, %cond.true274 ], [ %196, %cond.false275 ]\l  store double %cond278, ptr %max, align 8\l  %arrayidx279 = getelementptr inbounds [3 x double], ptr %idiag, i64 0, i64 0\l  %197 = load double, ptr %arrayidx279, align 16\l  %198 = load double, ptr %max, align 8\l  %mul280 = fmul double 0x3EB0C6F7A0B5ED8D, %198\l  %cmp281 = fcmp olt double %197, %mul280\l  br i1 %cmp281, label %if.then282, label %if.end284\l|{<s0>T|<s1>F}}"];
	Node0x55ba304bc2d0:s0 -> Node0x55ba304ccba0[tooltip="cond.end277 -> if.then282\nProbability 50.00%" ];
	Node0x55ba304bc2d0:s1 -> Node0x55ba304ccc80[tooltip="cond.end277 -> if.end284\nProbability 50.00%" ];
	Node0x55ba304ccba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70" fontname="Courier",label="{if.then282:\l|  %arrayidx283 = getelementptr inbounds [3 x double], ptr %idiag, i64 0, i64\l... 0\l  store double 0.000000e+00, ptr %arrayidx283, align 16\l  br label %if.end284\l}"];
	Node0x55ba304ccba0 -> Node0x55ba304ccc80[tooltip="if.then282 -> if.end284\nProbability 100.00%" ];
	Node0x55ba304ccc80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{if.end284:\l|  %arrayidx285 = getelementptr inbounds [3 x double], ptr %idiag, i64 0, i64\l... 1\l  %199 = load double, ptr %arrayidx285, align 8\l  %200 = load double, ptr %max, align 8\l  %mul286 = fmul double 0x3EB0C6F7A0B5ED8D, %200\l  %cmp287 = fcmp olt double %199, %mul286\l  br i1 %cmp287, label %if.then288, label %if.end290\l|{<s0>T|<s1>F}}"];
	Node0x55ba304ccc80:s0 -> Node0x55ba304cd360[tooltip="if.end284 -> if.then288\nProbability 50.00%" ];
	Node0x55ba304ccc80:s1 -> Node0x55ba304cd3e0[tooltip="if.end284 -> if.end290\nProbability 50.00%" ];
	Node0x55ba304cd360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70" fontname="Courier",label="{if.then288:\l|  %arrayidx289 = getelementptr inbounds [3 x double], ptr %idiag, i64 0, i64\l... 1\l  store double 0.000000e+00, ptr %arrayidx289, align 8\l  br label %if.end290\l}"];
	Node0x55ba304cd360 -> Node0x55ba304cd3e0[tooltip="if.then288 -> if.end290\nProbability 100.00%" ];
	Node0x55ba304cd3e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{if.end290:\l|  %arrayidx291 = getelementptr inbounds [3 x double], ptr %idiag, i64 0, i64\l... 2\l  %201 = load double, ptr %arrayidx291, align 16\l  %202 = load double, ptr %max, align 8\l  %mul292 = fmul double 0x3EB0C6F7A0B5ED8D, %202\l  %cmp293 = fcmp olt double %201, %mul292\l  br i1 %cmp293, label %if.then294, label %if.end296\l|{<s0>T|<s1>F}}"];
	Node0x55ba304cd3e0:s0 -> Node0x55ba304cda60[tooltip="if.end290 -> if.then294\nProbability 50.00%" ];
	Node0x55ba304cd3e0:s1 -> Node0x55ba304cdae0[tooltip="if.end290 -> if.end296\nProbability 50.00%" ];
	Node0x55ba304cda60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70" fontname="Courier",label="{if.then294:\l|  %arrayidx295 = getelementptr inbounds [3 x double], ptr %idiag, i64 0, i64\l... 2\l  store double 0.000000e+00, ptr %arrayidx295, align 16\l  br label %if.end296\l}"];
	Node0x55ba304cda60 -> Node0x55ba304cdae0[tooltip="if.then294 -> if.end296\nProbability 100.00%" ];
	Node0x55ba304cdae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{if.end296:\l|  %203 = load ptr, ptr %angmom.addr, align 8\l  %arraydecay297 = getelementptr inbounds [3 x double], ptr %ex, i64 0, i64 0\l  %arraydecay298 = getelementptr inbounds [3 x double], ptr %ey, i64 0, i64 0\l  %arraydecay299 = getelementptr inbounds [3 x double], ptr %ez, i64 0, i64 0\l  %arraydecay300 = getelementptr inbounds [3 x double], ptr %idiag, i64 0, i64\l... 0\l  %204 = load ptr, ptr %w.addr, align 8\l  call void @_ZN9MathExtra15angmom_to_omegaEPdS0_S0_S0_S0_S0_(ptr noundef\l... %203, ptr noundef %arraydecay297, ptr noundef %arraydecay298, ptr noundef\l... %arraydecay299, ptr noundef %arraydecay300, ptr noundef %204)\l  br label %if.end301\l}"];
	Node0x55ba304cdae0 -> Node0x55ba304c4dc0[tooltip="if.end296 -> if.end301\nProbability 100.00%" ];
	Node0x55ba304c4dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70" fontname="Courier",label="{if.end301:\l|  ret void\l}"];
	Node0x55ba304c7240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70" fontname="Courier",label="{eh.resume:\l|  %exn = load ptr, ptr %exn.slot, align 8\l  %sel = load i32, ptr %ehselector.slot, align 4\l  %lpad.val = insertvalue \{ ptr, i32 \} poison, ptr %exn, 0\l  %lpad.val302 = insertvalue \{ ptr, i32 \} %lpad.val, i32 %sel, 1\l  resume \{ ptr, i32 \} %lpad.val302\l}"];
}
