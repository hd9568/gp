digraph "CFG for '_ZN9LAMMPS_NS6Domain13closest_imageEPKdi' function" {
	label="CFG for '_ZN9LAMMPS_NS6Domain13closest_imageEPKdi' function";

	Node0x561837d3cc00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{entry:\l|  %retval = alloca i32, align 4\l  %this.addr = alloca ptr, align 8\l  %pos.addr = alloca ptr, align 8\l  %j.addr = alloca i32, align 4\l  %sametag = alloca ptr, align 8\l  %x = alloca ptr, align 8\l  %closest = alloca i32, align 4\l  %delx = alloca double, align 8\l  %dely = alloca double, align 8\l  %delz = alloca double, align 8\l  %rsqmin = alloca double, align 8\l  %rsq = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store ptr %pos, ptr %pos.addr, align 8\l  store i32 %j, ptr %j.addr, align 4\l  %this1 = load ptr, ptr %this.addr, align 8\l  %0 = load i32, ptr %j.addr, align 4\l  %cmp = icmp slt i32 %0, 0\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x561837d3cc00:s0 -> Node0x561837d3fbe0[tooltip="entry -> if.then\nProbability 37.50%" ];
	Node0x561837d3cc00:s1 -> Node0x561837d3fc50[tooltip="entry -> if.end\nProbability 62.50%" ];
	Node0x561837d3fbe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{if.then:\l|  %1 = load i32, ptr %j.addr, align 4\l  store i32 %1, ptr %retval, align 4\l  br label %return\l}"];
	Node0x561837d3fbe0 -> Node0x561837d3fe90[tooltip="if.then -> return\nProbability 100.00%" ];
	Node0x561837d3fc50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.end:\l|  %atom = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %2 = load ptr, ptr %atom, align 8\l  %3 = load ptr, ptr %2, align 8\l  %sametag2 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %3, i32 0,\l... i32 224\l  %4 = load ptr, ptr %sametag2, align 8\l  store ptr %4, ptr %sametag, align 8\l  %atom3 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %5 = load ptr, ptr %atom3, align 8\l  %6 = load ptr, ptr %5, align 8\l  %x4 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %6, i32 0, i32 37\l  %7 = load ptr, ptr %x4, align 8\l  store ptr %7, ptr %x, align 8\l  %8 = load i32, ptr %j.addr, align 4\l  store i32 %8, ptr %closest, align 4\l  %9 = load ptr, ptr %pos.addr, align 8\l  %arrayidx = getelementptr inbounds double, ptr %9, i64 0\l  %10 = load double, ptr %arrayidx, align 8\l  %11 = load ptr, ptr %x, align 8\l  %12 = load i32, ptr %j.addr, align 4\l  %idxprom = sext i32 %12 to i64\l  %arrayidx5 = getelementptr inbounds ptr, ptr %11, i64 %idxprom\l  %13 = load ptr, ptr %arrayidx5, align 8\l  %arrayidx6 = getelementptr inbounds double, ptr %13, i64 0\l  %14 = load double, ptr %arrayidx6, align 8\l  %sub = fsub double %10, %14\l  store double %sub, ptr %delx, align 8\l  %15 = load ptr, ptr %pos.addr, align 8\l  %arrayidx7 = getelementptr inbounds double, ptr %15, i64 1\l  %16 = load double, ptr %arrayidx7, align 8\l  %17 = load ptr, ptr %x, align 8\l  %18 = load i32, ptr %j.addr, align 4\l  %idxprom8 = sext i32 %18 to i64\l  %arrayidx9 = getelementptr inbounds ptr, ptr %17, i64 %idxprom8\l  %19 = load ptr, ptr %arrayidx9, align 8\l  %arrayidx10 = getelementptr inbounds double, ptr %19, i64 1\l  %20 = load double, ptr %arrayidx10, align 8\l  %sub11 = fsub double %16, %20\l  store double %sub11, ptr %dely, align 8\l  %21 = load ptr, ptr %pos.addr, align 8\l  %arrayidx12 = getelementptr inbounds double, ptr %21, i64 2\l  %22 = load double, ptr %arrayidx12, align 8\l  %23 = load ptr, ptr %x, align 8\l  %24 = load i32, ptr %j.addr, align 4\l  %idxprom13 = sext i32 %24 to i64\l  %arrayidx14 = getelementptr inbounds ptr, ptr %23, i64 %idxprom13\l  %25 = load ptr, ptr %arrayidx14, align 8\l  %arrayidx15 = getelementptr inbounds double, ptr %25, i64 2\l  %26 = load double, ptr %arrayidx15, align 8\l  %sub16 = fsub double %22, %26\l  store double %sub16, ptr %delz, align 8\l  %27 = load double, ptr %delx, align 8\l  %28 = load double, ptr %delx, align 8\l  %29 = load double, ptr %dely, align 8\l  %30 = load double, ptr %dely, align 8\l  %mul17 = fmul double %29, %30\l  %31 = call double @llvm.fmuladd.f64(double %27, double %28, double %mul17)\l  %32 = load double, ptr %delz, align 8\l  %33 = load double, ptr %delz, align 8\l  %34 = call double @llvm.fmuladd.f64(double %32, double %33, double %31)\l  store double %34, ptr %rsqmin, align 8\l  br label %while.cond\l}"];
	Node0x561837d3fc50 -> Node0x561837d42660[tooltip="if.end -> while.cond\nProbability 100.00%" ];
	Node0x561837d42660 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{while.cond:\l|  %35 = load ptr, ptr %sametag, align 8\l  %36 = load i32, ptr %j.addr, align 4\l  %idxprom18 = sext i32 %36 to i64\l  %arrayidx19 = getelementptr inbounds i32, ptr %35, i64 %idxprom18\l  %37 = load i32, ptr %arrayidx19, align 4\l  %cmp20 = icmp sge i32 %37, 0\l  br i1 %cmp20, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x561837d42660:s0 -> Node0x561837d42a70[tooltip="while.cond -> while.body\nProbability 96.88%" ];
	Node0x561837d42660:s1 -> Node0x561837d42af0[tooltip="while.cond -> while.end\nProbability 3.12%" ];
	Node0x561837d42a70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{while.body:\l|  %38 = load ptr, ptr %sametag, align 8\l  %39 = load i32, ptr %j.addr, align 4\l  %idxprom21 = sext i32 %39 to i64\l  %arrayidx22 = getelementptr inbounds i32, ptr %38, i64 %idxprom21\l  %40 = load i32, ptr %arrayidx22, align 4\l  store i32 %40, ptr %j.addr, align 4\l  %41 = load ptr, ptr %pos.addr, align 8\l  %arrayidx23 = getelementptr inbounds double, ptr %41, i64 0\l  %42 = load double, ptr %arrayidx23, align 8\l  %43 = load ptr, ptr %x, align 8\l  %44 = load i32, ptr %j.addr, align 4\l  %idxprom24 = sext i32 %44 to i64\l  %arrayidx25 = getelementptr inbounds ptr, ptr %43, i64 %idxprom24\l  %45 = load ptr, ptr %arrayidx25, align 8\l  %arrayidx26 = getelementptr inbounds double, ptr %45, i64 0\l  %46 = load double, ptr %arrayidx26, align 8\l  %sub27 = fsub double %42, %46\l  store double %sub27, ptr %delx, align 8\l  %47 = load ptr, ptr %pos.addr, align 8\l  %arrayidx28 = getelementptr inbounds double, ptr %47, i64 1\l  %48 = load double, ptr %arrayidx28, align 8\l  %49 = load ptr, ptr %x, align 8\l  %50 = load i32, ptr %j.addr, align 4\l  %idxprom29 = sext i32 %50 to i64\l  %arrayidx30 = getelementptr inbounds ptr, ptr %49, i64 %idxprom29\l  %51 = load ptr, ptr %arrayidx30, align 8\l  %arrayidx31 = getelementptr inbounds double, ptr %51, i64 1\l  %52 = load double, ptr %arrayidx31, align 8\l  %sub32 = fsub double %48, %52\l  store double %sub32, ptr %dely, align 8\l  %53 = load ptr, ptr %pos.addr, align 8\l  %arrayidx33 = getelementptr inbounds double, ptr %53, i64 2\l  %54 = load double, ptr %arrayidx33, align 8\l  %55 = load ptr, ptr %x, align 8\l  %56 = load i32, ptr %j.addr, align 4\l  %idxprom34 = sext i32 %56 to i64\l  %arrayidx35 = getelementptr inbounds ptr, ptr %55, i64 %idxprom34\l  %57 = load ptr, ptr %arrayidx35, align 8\l  %arrayidx36 = getelementptr inbounds double, ptr %57, i64 2\l  %58 = load double, ptr %arrayidx36, align 8\l  %sub37 = fsub double %54, %58\l  store double %sub37, ptr %delz, align 8\l  %59 = load double, ptr %delx, align 8\l  %60 = load double, ptr %delx, align 8\l  %61 = load double, ptr %dely, align 8\l  %62 = load double, ptr %dely, align 8\l  %mul38 = fmul double %61, %62\l  %63 = call double @llvm.fmuladd.f64(double %59, double %60, double %mul38)\l  %64 = load double, ptr %delz, align 8\l  %65 = load double, ptr %delz, align 8\l  %66 = call double @llvm.fmuladd.f64(double %64, double %65, double %63)\l  store double %66, ptr %rsq, align 8\l  %67 = load double, ptr %rsq, align 8\l  %68 = load double, ptr %rsqmin, align 8\l  %cmp39 = fcmp olt double %67, %68\l  br i1 %cmp39, label %if.then40, label %if.end41\l|{<s0>T|<s1>F}}"];
	Node0x561837d42a70:s0 -> Node0x561837d459a0[tooltip="while.body -> if.then40\nProbability 50.00%" ];
	Node0x561837d42a70:s1 -> Node0x561837d459f0[tooltip="while.body -> if.end41\nProbability 50.00%" ];
	Node0x561837d459a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then40:\l|  %69 = load double, ptr %rsq, align 8\l  store double %69, ptr %rsqmin, align 8\l  %70 = load i32, ptr %j.addr, align 4\l  store i32 %70, ptr %closest, align 4\l  br label %if.end41\l}"];
	Node0x561837d459a0 -> Node0x561837d459f0[tooltip="if.then40 -> if.end41\nProbability 100.00%" ];
	Node0x561837d459f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end41:\l|  br label %while.cond, !llvm.loop !6\l}"];
	Node0x561837d459f0 -> Node0x561837d42660[tooltip="if.end41 -> while.cond\nProbability 100.00%" ];
	Node0x561837d42af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{while.end:\l|  %71 = load i32, ptr %closest, align 4\l  store i32 %71, ptr %retval, align 4\l  br label %return\l}"];
	Node0x561837d42af0 -> Node0x561837d3fe90[tooltip="while.end -> return\nProbability 100.00%" ];
	Node0x561837d3fe90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{return:\l|  %72 = load i32, ptr %retval, align 4\l  ret i32 %72\l}"];
}
