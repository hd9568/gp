digraph "CFG for '_ZN9LAMMPS_NS11FixMinimize12memory_usageEv' function" {
	label="CFG for '_ZN9LAMMPS_NS11FixMinimize12memory_usageEv' function";

	Node0x5624a1c20b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %bytes = alloca double, align 8\l  %m = alloca i32, align 4\l  store ptr %this, ptr %this.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  store double 0.000000e+00, ptr %bytes, align 8\l  store i32 0, ptr %m, align 4\l  br label %for.cond\l}"];
	Node0x5624a1c20b30 -> Node0x5624a1c20ed0[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x5624a1c20ed0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %0 = load i32, ptr %m, align 4\l  %nvector = getelementptr inbounds %\"class.LAMMPS_NS::FixMinimize\", ptr\l... %this1, i32 0, i32 1\l  %1 = load i32, ptr %nvector, align 8\l  %cmp = icmp slt i32 %0, %1\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5624a1c20ed0:s0 -> Node0x5624a1c21250[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x5624a1c20ed0:s1 -> Node0x5624a1c212d0[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x5624a1c21250 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %atom = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %2 = load ptr, ptr %atom, align 8\l  %3 = load ptr, ptr %2, align 8\l  %nmax = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %3, i32 0, i32 6\l  %4 = load i32, ptr %nmax, align 8\l  %conv = sitofp i32 %4 to double\l  %peratom = getelementptr inbounds %\"class.LAMMPS_NS::FixMinimize\", ptr\l... %this1, i32 0, i32 2\l  %5 = load ptr, ptr %peratom, align 8\l  %6 = load i32, ptr %m, align 4\l  %idxprom = sext i32 %6 to i64\l  %arrayidx = getelementptr inbounds i32, ptr %5, i64 %idxprom\l  %7 = load i32, ptr %arrayidx, align 4\l  %conv2 = sitofp i32 %7 to double\l  %mul = fmul double %conv, %conv2\l  %8 = load double, ptr %bytes, align 8\l  %9 = call double @llvm.fmuladd.f64(double %mul, double 8.000000e+00, double\l... %8)\l  store double %9, ptr %bytes, align 8\l  br label %for.inc\l}"];
	Node0x5624a1c21250 -> Node0x5624a1c22070[tooltip="for.body -> for.inc\nProbability 100.00%" ];
	Node0x5624a1c22070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %10 = load i32, ptr %m, align 4\l  %inc = add nsw i32 %10, 1\l  store i32 %inc, ptr %m, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x5624a1c22070 -> Node0x5624a1c20ed0[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x5624a1c212d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  %11 = load double, ptr %bytes, align 8\l  ret double %11\l}"];
}
