digraph "CFG for '_ZN9MathExtra8quatquatEPdS0_S0_' function" {
	label="CFG for '_ZN9MathExtra8quatquatEPdS0_S0_' function";

	Node0x55ac3c276ae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %a.addr = alloca ptr, align 8\l  %b.addr = alloca ptr, align 8\l  %c.addr = alloca ptr, align 8\l  store ptr %a, ptr %a.addr, align 8\l  store ptr %b, ptr %b.addr, align 8\l  store ptr %c, ptr %c.addr, align 8\l  %0 = load ptr, ptr %a.addr, align 8\l  %arrayidx = getelementptr inbounds double, ptr %0, i64 0\l  %1 = load double, ptr %arrayidx, align 8\l  %2 = load ptr, ptr %b.addr, align 8\l  %arrayidx1 = getelementptr inbounds double, ptr %2, i64 0\l  %3 = load double, ptr %arrayidx1, align 8\l  %4 = load ptr, ptr %a.addr, align 8\l  %arrayidx2 = getelementptr inbounds double, ptr %4, i64 1\l  %5 = load double, ptr %arrayidx2, align 8\l  %6 = load ptr, ptr %b.addr, align 8\l  %arrayidx3 = getelementptr inbounds double, ptr %6, i64 1\l  %7 = load double, ptr %arrayidx3, align 8\l  %mul4 = fmul double %5, %7\l  %neg = fneg double %mul4\l  %8 = call double @llvm.fmuladd.f64(double %1, double %3, double %neg)\l  %9 = load ptr, ptr %a.addr, align 8\l  %arrayidx5 = getelementptr inbounds double, ptr %9, i64 2\l  %10 = load double, ptr %arrayidx5, align 8\l  %11 = load ptr, ptr %b.addr, align 8\l  %arrayidx6 = getelementptr inbounds double, ptr %11, i64 2\l  %12 = load double, ptr %arrayidx6, align 8\l  %neg7 = fneg double %10\l  %13 = call double @llvm.fmuladd.f64(double %neg7, double %12, double %8)\l  %14 = load ptr, ptr %a.addr, align 8\l  %arrayidx8 = getelementptr inbounds double, ptr %14, i64 3\l  %15 = load double, ptr %arrayidx8, align 8\l  %16 = load ptr, ptr %b.addr, align 8\l  %arrayidx9 = getelementptr inbounds double, ptr %16, i64 3\l  %17 = load double, ptr %arrayidx9, align 8\l  %neg10 = fneg double %15\l  %18 = call double @llvm.fmuladd.f64(double %neg10, double %17, double %13)\l  %19 = load ptr, ptr %c.addr, align 8\l  %arrayidx11 = getelementptr inbounds double, ptr %19, i64 0\l  store double %18, ptr %arrayidx11, align 8\l  %20 = load ptr, ptr %a.addr, align 8\l  %arrayidx12 = getelementptr inbounds double, ptr %20, i64 0\l  %21 = load double, ptr %arrayidx12, align 8\l  %22 = load ptr, ptr %b.addr, align 8\l  %arrayidx13 = getelementptr inbounds double, ptr %22, i64 1\l  %23 = load double, ptr %arrayidx13, align 8\l  %24 = load ptr, ptr %b.addr, align 8\l  %arrayidx14 = getelementptr inbounds double, ptr %24, i64 0\l  %25 = load double, ptr %arrayidx14, align 8\l  %26 = load ptr, ptr %a.addr, align 8\l  %arrayidx15 = getelementptr inbounds double, ptr %26, i64 1\l  %27 = load double, ptr %arrayidx15, align 8\l  %mul16 = fmul double %25, %27\l  %28 = call double @llvm.fmuladd.f64(double %21, double %23, double %mul16)\l  %29 = load ptr, ptr %a.addr, align 8\l  %arrayidx17 = getelementptr inbounds double, ptr %29, i64 2\l  %30 = load double, ptr %arrayidx17, align 8\l  %31 = load ptr, ptr %b.addr, align 8\l  %arrayidx18 = getelementptr inbounds double, ptr %31, i64 3\l  %32 = load double, ptr %arrayidx18, align 8\l  %33 = call double @llvm.fmuladd.f64(double %30, double %32, double %28)\l  %34 = load ptr, ptr %a.addr, align 8\l  %arrayidx19 = getelementptr inbounds double, ptr %34, i64 3\l  %35 = load double, ptr %arrayidx19, align 8\l  %36 = load ptr, ptr %b.addr, align 8\l  %arrayidx20 = getelementptr inbounds double, ptr %36, i64 2\l  %37 = load double, ptr %arrayidx20, align 8\l  %neg21 = fneg double %35\l  %38 = call double @llvm.fmuladd.f64(double %neg21, double %37, double %33)\l  %39 = load ptr, ptr %c.addr, align 8\l  %arrayidx22 = getelementptr inbounds double, ptr %39, i64 1\l  store double %38, ptr %arrayidx22, align 8\l  %40 = load ptr, ptr %a.addr, align 8\l  %arrayidx23 = getelementptr inbounds double, ptr %40, i64 0\l  %41 = load double, ptr %arrayidx23, align 8\l  %42 = load ptr, ptr %b.addr, align 8\l  %arrayidx24 = getelementptr inbounds double, ptr %42, i64 2\l  %43 = load double, ptr %arrayidx24, align 8\l  %44 = load ptr, ptr %b.addr, align 8\l  %arrayidx25 = getelementptr inbounds double, ptr %44, i64 0\l  %45 = load double, ptr %arrayidx25, align 8\l  %46 = load ptr, ptr %a.addr, align 8\l  %arrayidx26 = getelementptr inbounds double, ptr %46, i64 2\l  %47 = load double, ptr %arrayidx26, align 8\l  %mul27 = fmul double %45, %47\l  %48 = call double @llvm.fmuladd.f64(double %41, double %43, double %mul27)\l  %49 = load ptr, ptr %a.addr, align 8\l  %arrayidx28 = getelementptr inbounds double, ptr %49, i64 3\l  %50 = load double, ptr %arrayidx28, align 8\l  %51 = load ptr, ptr %b.addr, align 8\l  %arrayidx29 = getelementptr inbounds double, ptr %51, i64 1\l  %52 = load double, ptr %arrayidx29, align 8\l  %53 = call double @llvm.fmuladd.f64(double %50, double %52, double %48)\l  %54 = load ptr, ptr %a.addr, align 8\l  %arrayidx30 = getelementptr inbounds double, ptr %54, i64 1\l  %55 = load double, ptr %arrayidx30, align 8\l  %56 = load ptr, ptr %b.addr, align 8\l  %arrayidx31 = getelementptr inbounds double, ptr %56, i64 3\l  %57 = load double, ptr %arrayidx31, align 8\l  %neg32 = fneg double %55\l  %58 = call double @llvm.fmuladd.f64(double %neg32, double %57, double %53)\l  %59 = load ptr, ptr %c.addr, align 8\l  %arrayidx33 = getelementptr inbounds double, ptr %59, i64 2\l  store double %58, ptr %arrayidx33, align 8\l  %60 = load ptr, ptr %a.addr, align 8\l  %arrayidx34 = getelementptr inbounds double, ptr %60, i64 0\l  %61 = load double, ptr %arrayidx34, align 8\l  %62 = load ptr, ptr %b.addr, align 8\l  %arrayidx35 = getelementptr inbounds double, ptr %62, i64 3\l  %63 = load double, ptr %arrayidx35, align 8\l  %64 = load ptr, ptr %b.addr, align 8\l  %arrayidx36 = getelementptr inbounds double, ptr %64, i64 0\l  %65 = load double, ptr %arrayidx36, align 8\l  %66 = load ptr, ptr %a.addr, align 8\l  %arrayidx37 = getelementptr inbounds double, ptr %66, i64 3\l  %67 = load double, ptr %arrayidx37, align 8\l  %mul38 = fmul double %65, %67\l  %68 = call double @llvm.fmuladd.f64(double %61, double %63, double %mul38)\l  %69 = load ptr, ptr %a.addr, align 8\l  %arrayidx39 = getelementptr inbounds double, ptr %69, i64 1\l  %70 = load double, ptr %arrayidx39, align 8\l  %71 = load ptr, ptr %b.addr, align 8\l  %arrayidx40 = getelementptr inbounds double, ptr %71, i64 2\l  %72 = load double, ptr %arrayidx40, align 8\l  %73 = call double @llvm.fmuladd.f64(double %70, double %72, double %68)\l  %74 = load ptr, ptr %a.addr, align 8\l  %arrayidx41 = getelementptr inbounds double, ptr %74, i64 2\l  %75 = load double, ptr %arrayidx41, align 8\l  %76 = load ptr, ptr %b.addr, align 8\l  %arrayidx42 = getelementptr inbounds double, ptr %76, i64 1\l  %77 = load double, ptr %arrayidx42, align 8\l  %neg43 = fneg double %75\l  %78 = call double @llvm.fmuladd.f64(double %neg43, double %77, double %73)\l  %79 = load ptr, ptr %c.addr, align 8\l  %arrayidx44 = getelementptr inbounds double, ptr %79, i64 3\l  store double %78, ptr %arrayidx44, align 8\l  ret void\l}"];
}
