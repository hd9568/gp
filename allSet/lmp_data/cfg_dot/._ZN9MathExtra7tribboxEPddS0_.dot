digraph "CFG for '_ZN9MathExtra7tribboxEPddS0_' function" {
	label="CFG for '_ZN9MathExtra7tribboxEPddS0_' function";

	Node0x558373673310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %h.addr = alloca ptr, align 8\l  %radius.addr = alloca double, align 8\l  %dist.addr = alloca ptr, align 8\l  %lx = alloca double, align 8\l  %ly = alloca double, align 8\l  %lz = alloca double, align 8\l  %yz = alloca double, align 8\l  %xz = alloca double, align 8\l  %xy = alloca double, align 8\l  store ptr %h, ptr %h.addr, align 8\l  store double %radius, ptr %radius.addr, align 8\l  store ptr %dist, ptr %dist.addr, align 8\l  %0 = load ptr, ptr %h.addr, align 8\l  %arrayidx = getelementptr inbounds double, ptr %0, i64 0\l  %1 = load double, ptr %arrayidx, align 8\l  store double %1, ptr %lx, align 8\l  %2 = load ptr, ptr %h.addr, align 8\l  %arrayidx1 = getelementptr inbounds double, ptr %2, i64 1\l  %3 = load double, ptr %arrayidx1, align 8\l  store double %3, ptr %ly, align 8\l  %4 = load ptr, ptr %h.addr, align 8\l  %arrayidx2 = getelementptr inbounds double, ptr %4, i64 2\l  %5 = load double, ptr %arrayidx2, align 8\l  store double %5, ptr %lz, align 8\l  %6 = load ptr, ptr %h.addr, align 8\l  %arrayidx3 = getelementptr inbounds double, ptr %6, i64 3\l  %7 = load double, ptr %arrayidx3, align 8\l  store double %7, ptr %yz, align 8\l  %8 = load ptr, ptr %h.addr, align 8\l  %arrayidx4 = getelementptr inbounds double, ptr %8, i64 4\l  %9 = load double, ptr %arrayidx4, align 8\l  store double %9, ptr %xz, align 8\l  %10 = load ptr, ptr %h.addr, align 8\l  %arrayidx5 = getelementptr inbounds double, ptr %10, i64 5\l  %11 = load double, ptr %arrayidx5, align 8\l  store double %11, ptr %xy, align 8\l  %12 = load double, ptr %radius.addr, align 8\l  %13 = load double, ptr %ly, align 8\l  %14 = load double, ptr %ly, align 8\l  %mul = fmul double %13, %14\l  %15 = load double, ptr %lz, align 8\l  %mul6 = fmul double %mul, %15\l  %16 = load double, ptr %lz, align 8\l  %17 = load double, ptr %ly, align 8\l  %18 = load double, ptr %ly, align 8\l  %mul8 = fmul double %17, %18\l  %19 = load double, ptr %xz, align 8\l  %mul9 = fmul double %mul8, %19\l  %20 = load double, ptr %xz, align 8\l  %mul10 = fmul double %mul9, %20\l  %21 = call double @llvm.fmuladd.f64(double %mul6, double %16, double %mul10)\l  %22 = load double, ptr %ly, align 8\l  %mul11 = fmul double 2.000000e+00, %22\l  %23 = load double, ptr %xy, align 8\l  %mul12 = fmul double %mul11, %23\l  %24 = load double, ptr %xz, align 8\l  %mul13 = fmul double %mul12, %24\l  %25 = load double, ptr %yz, align 8\l  %neg = fneg double %mul13\l  %26 = call double @llvm.fmuladd.f64(double %neg, double %25, double %21)\l  %27 = load double, ptr %lz, align 8\l  %28 = load double, ptr %lz, align 8\l  %mul15 = fmul double %27, %28\l  %29 = load double, ptr %xy, align 8\l  %mul16 = fmul double %mul15, %29\l  %30 = load double, ptr %xy, align 8\l  %31 = call double @llvm.fmuladd.f64(double %mul16, double %30, double %26)\l  %32 = load double, ptr %xy, align 8\l  %33 = load double, ptr %xy, align 8\l  %mul18 = fmul double %32, %33\l  %34 = load double, ptr %yz, align 8\l  %mul19 = fmul double %mul18, %34\l  %35 = load double, ptr %yz, align 8\l  %36 = call double @llvm.fmuladd.f64(double %mul19, double %35, double %31)\l  %call = call double @sqrt(double noundef %36) #6\l  %mul21 = fmul double %12, %call\l  %37 = load double, ptr %lx, align 8\l  %38 = load double, ptr %ly, align 8\l  %mul22 = fmul double %37, %38\l  %39 = load double, ptr %lz, align 8\l  %mul23 = fmul double %mul22, %39\l  %div = fdiv double %mul21, %mul23\l  %40 = load ptr, ptr %dist.addr, align 8\l  %arrayidx24 = getelementptr inbounds double, ptr %40, i64 0\l  store double %div, ptr %arrayidx24, align 8\l  %41 = load double, ptr %radius.addr, align 8\l  %42 = load double, ptr %lz, align 8\l  %43 = load double, ptr %lz, align 8\l  %44 = load double, ptr %yz, align 8\l  %45 = load double, ptr %yz, align 8\l  %mul26 = fmul double %44, %45\l  %46 = call double @llvm.fmuladd.f64(double %42, double %43, double %mul26)\l  %call27 = call double @sqrt(double noundef %46) #6\l  %mul28 = fmul double %41, %call27\l  %47 = load double, ptr %ly, align 8\l  %48 = load double, ptr %lz, align 8\l  %mul29 = fmul double %47, %48\l  %div30 = fdiv double %mul28, %mul29\l  %49 = load ptr, ptr %dist.addr, align 8\l  %arrayidx31 = getelementptr inbounds double, ptr %49, i64 1\l  store double %div30, ptr %arrayidx31, align 8\l  %50 = load double, ptr %radius.addr, align 8\l  %51 = load double, ptr %lz, align 8\l  %div32 = fdiv double %50, %51\l  %52 = load ptr, ptr %dist.addr, align 8\l  %arrayidx33 = getelementptr inbounds double, ptr %52, i64 2\l  store double %div32, ptr %arrayidx33, align 8\l  ret void\l}"];
}
