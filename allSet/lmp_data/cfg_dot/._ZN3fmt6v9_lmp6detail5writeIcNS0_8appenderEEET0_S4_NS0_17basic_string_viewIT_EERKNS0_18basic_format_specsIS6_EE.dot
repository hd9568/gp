digraph "CFG for '_ZN3fmt6v9_lmp6detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_18basic_format_specsIS6_EE' function" {
	label="CFG for '_ZN3fmt6v9_lmp6detail5writeIcNS0_8appenderEEET0_S4_NS0_17basic_string_viewIT_EERKNS0_18basic_format_specsIS6_EE' function";

	Node0x55fec36b52c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %retval = alloca %\"class.fmt::v9_lmp::appender\", align 8\l  %out = alloca %\"class.fmt::v9_lmp::appender\", align 8\l  %s = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %specs.addr = alloca ptr, align 8\l  %data = alloca ptr, align 8\l  %size = alloca i64, align 8\l  %agg.tmp = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %is_debug = alloca i8, align 1\l  %width = alloca i64, align 8\l  %ref.tmp = alloca %\"class.fmt::v9_lmp::detail::counting_iterator\", align 8\l  %agg.tmp15 = alloca %\"class.fmt::v9_lmp::detail::counting_iterator\", align 8\l  %agg.tmp16 = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %agg.tmp21 = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %agg.tmp25 = alloca %\"class.fmt::v9_lmp::appender\", align 8\l  %ref.tmp26 = alloca %class.anon.118, align 8\l  %coerce.dive = getelementptr inbounds %\"class.fmt::v9_lmp::appender\", ptr\l... %out, i32 0, i32 0\l  %coerce.dive1 = getelementptr inbounds %\"class.std::back_insert_iterator\",\l... ptr %coerce.dive, i32 0, i32 0\l  store ptr %out.coerce, ptr %coerce.dive1, align 8\l  %0 = getelementptr inbounds \{ ptr, i64 \}, ptr %s, i32 0, i32 0\l  store ptr %s.coerce0, ptr %0, align 8\l  %1 = getelementptr inbounds \{ ptr, i64 \}, ptr %s, i32 0, i32 1\l  store i64 %s.coerce1, ptr %1, align 8\l  store ptr %specs, ptr %specs.addr, align 8\l  %call = call noundef ptr @_ZNK3fmt6v9_lmp17basic_string_viewIcE4dataEv(ptr\l... noundef nonnull align 8 dereferenceable(16) %s) #17\l  store ptr %call, ptr %data, align 8\l  %call2 = call noundef i64 @_ZNK3fmt6v9_lmp17basic_string_viewIcE4sizeEv(ptr\l... noundef nonnull align 8 dereferenceable(16) %s) #17\l  store i64 %call2, ptr %size, align 8\l  %2 = load ptr, ptr %specs.addr, align 8\l  %precision = getelementptr inbounds\l... %\"struct.fmt::v9_lmp::basic_format_specs\", ptr %2, i32 0, i32 1\l  %3 = load i32, ptr %precision, align 4\l  %cmp = icmp sge i32 %3, 0\l  br i1 %cmp, label %land.lhs.true, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x55fec36b52c0:s0 -> Node0x55fec36b5730[tooltip="entry -> land.lhs.true\nProbability 50.00%" ];
	Node0x55fec36b52c0:s1 -> Node0x55fec36b6a90[tooltip="entry -> if.end\nProbability 50.00%" ];
	Node0x55fec36b5730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{land.lhs.true:\l|  %4 = load ptr, ptr %specs.addr, align 8\l  %precision3 = getelementptr inbounds\l... %\"struct.fmt::v9_lmp::basic_format_specs\", ptr %4, i32 0, i32 1\l  %5 = load i32, ptr %precision3, align 4\l  %call4 = call noundef i32\l... @_ZN3fmt6v9_lmp6detail11to_unsignedIiEENSt13make_unsignedIT_E4typeES4_(i32\l... noundef %5)\l  %conv = zext i32 %call4 to i64\l  %6 = load i64, ptr %size, align 8\l  %cmp5 = icmp ult i64 %conv, %6\l  br i1 %cmp5, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x55fec36b5730:s0 -> Node0x55fec36b6d80[tooltip="land.lhs.true -> if.then\nProbability 50.00%" ];
	Node0x55fec36b5730:s1 -> Node0x55fec36b6a90[tooltip="land.lhs.true -> if.end\nProbability 50.00%" ];
	Node0x55fec36b6d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.then:\l|  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp, ptr align 8 %s, i64\l... 16, i1 false)\l  %7 = load ptr, ptr %specs.addr, align 8\l  %precision6 = getelementptr inbounds\l... %\"struct.fmt::v9_lmp::basic_format_specs\", ptr %7, i32 0, i32 1\l  %8 = load i32, ptr %precision6, align 4\l  %call7 = call noundef i32\l... @_ZN3fmt6v9_lmp6detail11to_unsignedIiEENSt13make_unsignedIT_E4typeES4_(i32\l... noundef %8)\l  %conv8 = zext i32 %call7 to i64\l  %9 = getelementptr inbounds \{ ptr, i64 \}, ptr %agg.tmp, i32 0, i32 0\l  %10 = load ptr, ptr %9, align 8\l  %11 = getelementptr inbounds \{ ptr, i64 \}, ptr %agg.tmp, i32 0, i32 1\l  %12 = load i64, ptr %11, align 8\l  %call9 = call noundef i64\l... @_ZN3fmt6v9_lmp6detail16code_point_indexENS0_17basic_string_viewIcEEm(ptr\l... %10, i64 %12, i64 noundef %conv8)\l  store i64 %call9, ptr %size, align 8\l  br label %if.end\l}"];
	Node0x55fec36b6d80 -> Node0x55fec36b6a90[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x55fec36b6a90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end:\l|  %13 = load ptr, ptr %specs.addr, align 8\l  %type = getelementptr inbounds %\"struct.fmt::v9_lmp::basic_format_specs\",\l... ptr %13, i32 0, i32 2\l  %14 = load i8, ptr %type, align 4\l  %cmp10 = icmp eq i8 %14, 18\l  %frombool = zext i1 %cmp10 to i8\l  store i8 %frombool, ptr %is_debug, align 1\l  store i64 0, ptr %width, align 8\l  %15 = load ptr, ptr %specs.addr, align 8\l  %width11 = getelementptr inbounds %\"struct.fmt::v9_lmp::basic_format_specs\",\l... ptr %15, i32 0, i32 0\l  %16 = load i32, ptr %width11, align 4\l  %cmp12 = icmp ne i32 %16, 0\l  br i1 %cmp12, label %if.then13, label %if.end24\l|{<s0>T|<s1>F}}"];
	Node0x55fec36b6a90:s0 -> Node0x55fec36b74b0[tooltip="if.end -> if.then13\nProbability 62.50%" ];
	Node0x55fec36b6a90:s1 -> Node0x55fec36b8150[tooltip="if.end -> if.end24\nProbability 37.50%" ];
	Node0x55fec36b74b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.then13:\l|  %17 = load i8, ptr %is_debug, align 1\l  %tobool = trunc i8 %17 to i1\l  br i1 %tobool, label %if.then14, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x55fec36b74b0:s0 -> Node0x55fec36b8390[tooltip="if.then13 -> if.then14\nProbability 50.00%" ];
	Node0x55fec36b74b0:s1 -> Node0x55fec36b8410[tooltip="if.then13 -> if.else\nProbability 50.00%" ];
	Node0x55fec36b8390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.then14:\l|  call void @_ZN3fmt6v9_lmp6detail17counting_iteratorC2Ev(ptr noundef\l... nonnull align 8 dereferenceable(8) %agg.tmp15)\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp16, ptr align 8 %s, i64\l... 16, i1 false)\l  %coerce.dive17 = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::counting_iterator\", ptr %agg.tmp15, i32 0, i32 0\l  %18 = load i64, ptr %coerce.dive17, align 8\l  %19 = getelementptr inbounds \{ ptr, i64 \}, ptr %agg.tmp16, i32 0, i32 0\l  %20 = load ptr, ptr %19, align 8\l  %21 = getelementptr inbounds \{ ptr, i64 \}, ptr %agg.tmp16, i32 0, i32 1\l  %22 = load i64, ptr %21, align 8\l  %call18 = call i64\l... @_ZN3fmt6v9_lmp6detail20write_escaped_stringIcNS1_17counting_iteratorEEET0_S4_\l...NS0_17basic_string_viewIT_EE(i64 %18, ptr %20, i64 %22)\l  %coerce.dive19 = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::counting_iterator\", ptr %ref.tmp, i32 0, i32 0\l  store i64 %call18, ptr %coerce.dive19, align 8\l  %call20 = call noundef i64\l... @_ZNK3fmt6v9_lmp6detail17counting_iterator5countEv(ptr noundef nonnull align\l... 8 dereferenceable(8) %ref.tmp)\l  store i64 %call20, ptr %width, align 8\l  br label %if.end23\l}"];
	Node0x55fec36b8390 -> Node0x55fec36b69d0[tooltip="if.then14 -> if.end23\nProbability 100.00%" ];
	Node0x55fec36b8410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.else:\l|  %23 = load ptr, ptr %data, align 8\l  %24 = load i64, ptr %size, align 8\l  call void @_ZN3fmt6v9_lmp17basic_string_viewIcEC2EPKcm(ptr noundef nonnull\l... align 8 dereferenceable(16) %agg.tmp21, ptr noundef %23, i64 noundef %24) #17\l  %25 = getelementptr inbounds \{ ptr, i64 \}, ptr %agg.tmp21, i32 0, i32 0\l  %26 = load ptr, ptr %25, align 8\l  %27 = getelementptr inbounds \{ ptr, i64 \}, ptr %agg.tmp21, i32 0, i32 1\l  %28 = load i64, ptr %27, align 8\l  %call22 = call noundef i64\l... @_ZN3fmt6v9_lmp6detail13compute_widthENS0_17basic_string_viewIcEE(ptr %26,\l... i64 %28)\l  store i64 %call22, ptr %width, align 8\l  br label %if.end23\l}"];
	Node0x55fec36b8410 -> Node0x55fec36b69d0[tooltip="if.else -> if.end23\nProbability 100.00%" ];
	Node0x55fec36b69d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.end23:\l|  br label %if.end24\l}"];
	Node0x55fec36b69d0 -> Node0x55fec36b8150[tooltip="if.end23 -> if.end24\nProbability 100.00%" ];
	Node0x55fec36b8150 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end24:\l|  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp25, ptr align 8 %out,\l... i64 8, i1 false)\l  %29 = load ptr, ptr %specs.addr, align 8\l  %30 = load i64, ptr %size, align 8\l  %31 = load i64, ptr %width, align 8\l  %32 = getelementptr inbounds %class.anon.118, ptr %ref.tmp26, i32 0, i32 0\l  %33 = load i8, ptr %is_debug, align 1\l  %tobool27 = trunc i8 %33 to i1\l  %frombool28 = zext i1 %tobool27 to i8\l  store i8 %frombool28, ptr %32, align 8\l  %34 = getelementptr inbounds %class.anon.118, ptr %ref.tmp26, i32 0, i32 1\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %34, ptr align 8 %s, i64 16, i1\l... false)\l  %35 = getelementptr inbounds %class.anon.118, ptr %ref.tmp26, i32 0, i32 2\l  %36 = load ptr, ptr %data, align 8\l  store ptr %36, ptr %35, align 8\l  %37 = getelementptr inbounds %class.anon.118, ptr %ref.tmp26, i32 0, i32 3\l  %38 = load i64, ptr %size, align 8\l  store i64 %38, ptr %37, align 8\l  %coerce.dive29 = getelementptr inbounds %\"class.fmt::v9_lmp::appender\", ptr\l... %agg.tmp25, i32 0, i32 0\l  %coerce.dive30 = getelementptr inbounds %\"class.std::back_insert_iterator\",\l... ptr %coerce.dive29, i32 0, i32 0\l  %39 = load ptr, ptr %coerce.dive30, align 8\l  %call31 = call ptr\l... @_ZN3fmt6v9_lmp6detail12write_paddedILNS0_5align4typeE1ENS0_8appenderEcZNS1_5w\l...riteIcS5_EET0_S7_NS0_17basic_string_viewIT_EERKNS0_18basic_format_specsIS9_EEEU\l...lS5_E_EES7_S7_RKNSB_IT1_EEmmOT2_(ptr %39, ptr noundef nonnull align 4\l... dereferenceable(16) %29, i64 noundef %30, i64 noundef %31, ptr noundef\l... nonnull align 8 dereferenceable(40) %ref.tmp26)\l  %coerce.dive32 = getelementptr inbounds %\"class.fmt::v9_lmp::appender\", ptr\l... %retval, i32 0, i32 0\l  %coerce.dive33 = getelementptr inbounds %\"class.std::back_insert_iterator\",\l... ptr %coerce.dive32, i32 0, i32 0\l  store ptr %call31, ptr %coerce.dive33, align 8\l  %coerce.dive34 = getelementptr inbounds %\"class.fmt::v9_lmp::appender\", ptr\l... %retval, i32 0, i32 0\l  %coerce.dive35 = getelementptr inbounds %\"class.std::back_insert_iterator\",\l... ptr %coerce.dive34, i32 0, i32 0\l  %40 = load ptr, ptr %coerce.dive35, align 8\l  ret ptr %40\l}"];
}
