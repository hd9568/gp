digraph "CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERlRiSB_EEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSI_' function" {
	label="CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERlRiSB_EEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSI_' function";

	Node0x558416874000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %.addr.i = alloca ptr, align 8\l  %.addr1.i = alloca i32, align 4\l  %.addr2.i = alloca i32, align 4\l  %.addr3.i = alloca ptr, align 8\l  %.addr4.i = alloca ptr, align 8\l  %.addr5.i = alloca ptr, align 8\l  %.addr6.i = alloca ptr, align 8\l  %this.addr.i84.i = alloca ptr, align 8\l  %this.addr.i83.i = alloca ptr, align 8\l  %init.addr.i.i = alloca ptr, align 8\l  %init.addr2.i.i = alloca ptr, align 8\l  %init.addr4.i.i = alloca ptr, align 8\l  %init.addr6.i.i = alloca ptr, align 8\l  %val.i.i62.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i3.i63.i = alloca ptr, align 8\l  %retval.i.i64.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i.i65.i = alloca ptr, align 8\l  %val.addr.i.i66.i = alloca ptr, align 8\l  %retval.i67.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i68.i = alloca ptr, align 8\l  %arg.i69.i = alloca ptr, align 8\l  %ref.tmp.i70.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %ref.tmp1.i71.i = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i72.i = alloca i8, align 1\l  %formattable_const.i73.i = alloca i8, align 1\l  %formattable_pointer.i74.i = alloca i8, align 1\l  %formattable.i75.i = alloca i8, align 1\l  %agg.tmp.i76.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %val.i.i.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i3.i.i = alloca ptr, align 8\l  %retval.i.i.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i.i.i = alloca ptr, align 8\l  %val.addr.i.i.i = alloca ptr, align 8\l  %retval.i53.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i54.i = alloca ptr, align 8\l  %arg.i55.i = alloca ptr, align 8\l  %ref.tmp.i56.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %ref.tmp1.i57.i = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i58.i = alloca i8, align 1\l  %formattable_const.i59.i = alloca i8, align 1\l  %formattable_pointer.i60.i = alloca i8, align 1\l  %formattable.i61.i = alloca i8, align 1\l  %agg.tmp.i.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %retval.i50.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i51.i = alloca ptr, align 8\l  %retval.i48.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i49.i = alloca ptr, align 8\l  %this.addr.i45.i = alloca ptr, align 8\l  %val.addr.i46.i = alloca i64, align 8\l  %this.addr.i42.i = alloca ptr, align 8\l  %val.addr.i43.i = alloca i64, align 8\l  %retval.i32.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i33.i = alloca ptr, align 8\l  %arg.i34.i = alloca ptr, align 8\l  %ref.tmp.i35.i = alloca i64, align 8\l  %ref.tmp1.i36.i = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i37.i = alloca i8, align 1\l  %formattable_const.i38.i = alloca i8, align 1\l  %formattable_pointer.i39.i = alloca i8, align 1\l  %formattable.i40.i = alloca i8, align 1\l  %retval.i30.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i31.i = alloca ptr, align 8\l  %this.addr.i27.i = alloca ptr, align 8\l  %val.addr.i28.i = alloca i32, align 4\l  %this.addr.i.i = alloca ptr, align 8\l  %val.addr.i26.i = alloca i32, align 4\l  %retval.i23.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i24.i = alloca ptr, align 8\l  %arg.i.i = alloca ptr, align 8\l  %ref.tmp.i.i = alloca i32, align 4\l  %ref.tmp1.i.i = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i.i = alloca i8, align 1\l  %formattable_const.i.i = alloca i8, align 1\l  %formattable_pointer.i.i = alloca i8, align 1\l  %formattable.i.i = alloca i8, align 1\l  %retval.i.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i.i = alloca ptr, align 8\l  %this.addr.i = alloca ptr, align 8\l  %args.addr.i = alloca ptr, align 8\l  %args.addr2.i = alloca ptr, align 8\l  %args.addr4.i = alloca ptr, align 8\l  %args.addr6.i = alloca ptr, align 8\l  %ref.tmp.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp9.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp13.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp17.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %args.addr = alloca ptr, align 8\l  %args.addr2 = alloca ptr, align 8\l  %args.addr4 = alloca ptr, align 8\l  %args.addr6 = alloca ptr, align 8\l  store ptr %args, ptr %args.addr, align 8\l  store ptr %args1, ptr %args.addr2, align 8\l  store ptr %args3, ptr %args.addr4, align 8\l  store ptr %args5, ptr %args.addr6, align 8\l  %0 = load ptr, ptr %args.addr, align 8\l  %1 = load ptr, ptr %args.addr2, align 8\l  %2 = load ptr, ptr %args.addr4, align 8\l  %3 = load ptr, ptr %args.addr6, align 8\l  store ptr %agg.result, ptr %this.addr.i, align 8\l  store ptr %0, ptr %args.addr.i, align 8\l  store ptr %1, ptr %args.addr2.i, align 8\l  store ptr %2, ptr %args.addr4.i, align 8\l  store ptr %3, ptr %args.addr6.i, align 8\l  %this7.i = load ptr, ptr %this.addr.i, align 8\l  %4 = load ptr, ptr %args.addr.i, align 8\l  store ptr %4, ptr %val.addr.i51.i, align 8\l  %5 = load ptr, ptr %val.addr.i51.i, align 8\l  store ptr %5, ptr %val.addr.i54.i, align 8\l  %6 = load ptr, ptr %val.addr.i54.i, align 8\l  store ptr %ref.tmp1.i57.i, ptr %this.addr.i.i.i, align 8\l  store ptr %6, ptr %val.addr.i.i.i, align 8\l  %this1.i.i.i = load ptr, ptr %this.addr.i.i.i, align 8\l  %7 = load ptr, ptr %val.addr.i.i.i, align 8\l  %call.i.i.i = call \{ ptr, i64 \}\l... @_ZN3fmt6v9_lmp6detail14to_string_viewIcSt11char_traitsIcESaIcEEENS0_17basic_s\l...tring_viewIT_EERKNSt7__cxx1112basic_stringIS7_T0_T1_EE(ptr noundef nonnull\l... align 8 dereferenceable(32) %7)\l  %8 = extractvalue \{ ptr, i64 \} %call.i.i.i, 0\l  store ptr %8, ptr %retval.i.i.i, align 8\l  %9 = getelementptr inbounds \{ ptr, i64 \}, ptr %retval.i.i.i, i32 0, i32 1\l  %10 = extractvalue \{ ptr, i64 \} %call.i.i.i, 1\l  store i64 %10, ptr %9, align 8\l  %11 = load \{ ptr, i64 \}, ptr %retval.i.i.i, align 8\l  %12 = extractvalue \{ ptr, i64 \} %11, 0\l  store ptr %12, ptr %ref.tmp.i56.i, align 8\l  %13 = getelementptr inbounds \{ ptr, i64 \}, ptr %ref.tmp.i56.i, i32 0, i32 1\l  %14 = extractvalue \{ ptr, i64 \} %11, 1\l  store i64 %14, ptr %13, align 8\l  store ptr %ref.tmp.i56.i, ptr %arg.i55.i, align 8\l  store i8 1, ptr %formattable_char.i58.i, align 1\l  store i8 1, ptr %formattable_const.i59.i, align 1\l  store i8 1, ptr %formattable_pointer.i60.i, align 1\l  store i8 1, ptr %formattable.i61.i, align 1\l  %15 = load ptr, ptr %arg.i55.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp.i.i, ptr align 8 %15,\l... i64 16, i1 false)\l  %16 = load ptr, ptr %agg.tmp.i.i, align 8\l  %17 = getelementptr inbounds \{ ptr, i64 \}, ptr %agg.tmp.i.i, i32 0, i32 1\l  %18 = load i64, ptr %17, align 8\l  store ptr %16, ptr %val.i.i.i, align 8\l  %19 = getelementptr inbounds \{ ptr, i64 \}, ptr %val.i.i.i, i32 0, i32 1\l  store i64 %18, ptr %19, align 8\l  store ptr %retval.i53.i, ptr %this.addr.i3.i.i, align 8\l  %this1.i4.i.i = load ptr, ptr %this.addr.i3.i.i, align 8\l  %call.i5.i.i = call noundef ptr\l... @_ZNK3fmt6v9_lmp17basic_string_viewIcE4dataEv(ptr noundef nonnull align 8\l... dereferenceable(16) %val.i.i.i) #18\l  store ptr %call.i5.i.i, ptr %this1.i4.i.i, align 16\l  %call2.i.i.i = call noundef i64\l... @_ZNK3fmt6v9_lmp17basic_string_viewIcE4sizeEv(ptr noundef nonnull align 8\l... dereferenceable(16) %val.i.i.i) #18\l  %size.i.i.i = getelementptr inbounds\l... %\"struct.fmt::v9_lmp::detail::string_value\", ptr %this1.i4.i.i, i32 0, i32 1\l  store i64 %call2.i.i.i, ptr %size.i.i.i, align 8\l  %20 = load \{ i64, i64 \}, ptr %retval.i53.i, align 16\l  %21 = extractvalue \{ i64, i64 \} %20, 0\l  store i64 %21, ptr %retval.i50.i, align 16\l  %22 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i50.i, i32 0, i32 1\l  %23 = extractvalue \{ i64, i64 \} %20, 1\l  store i64 %23, ptr %22, align 8\l  %24 = load \{ i64, i64 \}, ptr %retval.i50.i, align 16\l  %25 = extractvalue \{ i64, i64 \} %24, 0\l  store i64 %25, ptr %ref.tmp.i, align 16\l  %26 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp.i, i32 0, i32 1\l  %27 = extractvalue \{ i64, i64 \} %24, 1\l  store i64 %27, ptr %26, align 8\l  %28 = load ptr, ptr %args.addr2.i, align 8\l  store ptr %28, ptr %val.addr.i31.i, align 8\l  %29 = load ptr, ptr %val.addr.i31.i, align 8\l  store ptr %29, ptr %val.addr.i33.i, align 8\l  %30 = load ptr, ptr %val.addr.i33.i, align 8\l  %31 = load i64, ptr %30, align 8\l  store ptr %ref.tmp1.i36.i, ptr %this.addr.i42.i, align 8\l  store i64 %31, ptr %val.addr.i43.i, align 8\l  %this1.i44.i = load ptr, ptr %this.addr.i42.i, align 8\l  %32 = load i64, ptr %val.addr.i43.i, align 8\l  store i64 %32, ptr %ref.tmp.i35.i, align 8\l  store ptr %ref.tmp.i35.i, ptr %arg.i34.i, align 8\l  store i8 1, ptr %formattable_char.i37.i, align 1\l  store i8 1, ptr %formattable_const.i38.i, align 1\l  store i8 1, ptr %formattable_pointer.i39.i, align 1\l  store i8 1, ptr %formattable.i40.i, align 1\l  %33 = load ptr, ptr %arg.i34.i, align 8\l  %34 = load i64, ptr %33, align 8\l  store ptr %retval.i32.i, ptr %this.addr.i45.i, align 8\l  store i64 %34, ptr %val.addr.i46.i, align 8\l  %this1.i47.i = load ptr, ptr %this.addr.i45.i, align 8\l  %35 = load i64, ptr %val.addr.i46.i, align 8\l  store i64 %35, ptr %this1.i47.i, align 16\l  %36 = load \{ i64, i64 \}, ptr %retval.i32.i, align 16\l  %37 = extractvalue \{ i64, i64 \} %36, 0\l  store i64 %37, ptr %retval.i30.i, align 16\l  %38 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i30.i, i32 0, i32 1\l  %39 = extractvalue \{ i64, i64 \} %36, 1\l  store i64 %39, ptr %38, align 8\l  %40 = load \{ i64, i64 \}, ptr %retval.i30.i, align 16\l  %41 = extractvalue \{ i64, i64 \} %40, 0\l  store i64 %41, ptr %ref.tmp9.i, align 16\l  %42 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp9.i, i32 0, i32 1\l  %43 = extractvalue \{ i64, i64 \} %40, 1\l  store i64 %43, ptr %42, align 8\l  %44 = load ptr, ptr %args.addr4.i, align 8\l  store ptr %44, ptr %val.addr.i.i, align 8\l  %45 = load ptr, ptr %val.addr.i.i, align 8\l  store ptr %45, ptr %val.addr.i24.i, align 8\l  %46 = load ptr, ptr %val.addr.i24.i, align 8\l  %47 = load i32, ptr %46, align 4\l  store ptr %ref.tmp1.i.i, ptr %this.addr.i.i, align 8\l  store i32 %47, ptr %val.addr.i26.i, align 4\l  %this1.i.i = load ptr, ptr %this.addr.i.i, align 8\l  %48 = load i32, ptr %val.addr.i26.i, align 4\l  store i32 %48, ptr %ref.tmp.i.i, align 4\l  store ptr %ref.tmp.i.i, ptr %arg.i.i, align 8\l  store i8 1, ptr %formattable_char.i.i, align 1\l  store i8 1, ptr %formattable_const.i.i, align 1\l  store i8 1, ptr %formattable_pointer.i.i, align 1\l  store i8 1, ptr %formattable.i.i, align 1\l  %49 = load ptr, ptr %arg.i.i, align 8\l  %50 = load i32, ptr %49, align 4\l  store ptr %retval.i23.i, ptr %this.addr.i27.i, align 8\l  store i32 %50, ptr %val.addr.i28.i, align 4\l  %this1.i29.i = load ptr, ptr %this.addr.i27.i, align 8\l  %51 = load i32, ptr %val.addr.i28.i, align 4\l  store i32 %51, ptr %this1.i29.i, align 16\l  %52 = load \{ i64, i64 \}, ptr %retval.i23.i, align 16\l  %53 = extractvalue \{ i64, i64 \} %52, 0\l  store i64 %53, ptr %retval.i.i, align 16\l  %54 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i.i, i32 0, i32 1\l  %55 = extractvalue \{ i64, i64 \} %52, 1\l  store i64 %55, ptr %54, align 8\l  %56 = load \{ i64, i64 \}, ptr %retval.i.i, align 16\l  %57 = extractvalue \{ i64, i64 \} %56, 0\l  store i64 %57, ptr %ref.tmp13.i, align 16\l  %58 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp13.i, i32 0, i32 1\l  %59 = extractvalue \{ i64, i64 \} %56, 1\l  store i64 %59, ptr %58, align 8\l  %60 = load ptr, ptr %args.addr6.i, align 8\l  store ptr %60, ptr %val.addr.i49.i, align 8\l  %61 = load ptr, ptr %val.addr.i49.i, align 8\l  store ptr %61, ptr %val.addr.i68.i, align 8\l  %62 = load ptr, ptr %val.addr.i68.i, align 8\l  store ptr %ref.tmp1.i71.i, ptr %this.addr.i.i65.i, align 8\l  store ptr %62, ptr %val.addr.i.i66.i, align 8\l  %this1.i.i77.i = load ptr, ptr %this.addr.i.i65.i, align 8\l  %63 = load ptr, ptr %val.addr.i.i66.i, align 8\l  %call.i.i78.i = call \{ ptr, i64 \}\l... @_ZN3fmt6v9_lmp6detail14to_string_viewIcSt11char_traitsIcESaIcEEENS0_17basic_s\l...tring_viewIT_EERKNSt7__cxx1112basic_stringIS7_T0_T1_EE(ptr noundef nonnull\l... align 8 dereferenceable(32) %63)\l  %64 = extractvalue \{ ptr, i64 \} %call.i.i78.i, 0\l  store ptr %64, ptr %retval.i.i64.i, align 8\l  %65 = getelementptr inbounds \{ ptr, i64 \}, ptr %retval.i.i64.i, i32 0, i32 1\l  %66 = extractvalue \{ ptr, i64 \} %call.i.i78.i, 1\l  store i64 %66, ptr %65, align 8\l  %67 = load \{ ptr, i64 \}, ptr %retval.i.i64.i, align 8\l  %68 = extractvalue \{ ptr, i64 \} %67, 0\l  store ptr %68, ptr %ref.tmp.i70.i, align 8\l  %69 = getelementptr inbounds \{ ptr, i64 \}, ptr %ref.tmp.i70.i, i32 0, i32 1\l  %70 = extractvalue \{ ptr, i64 \} %67, 1\l  store i64 %70, ptr %69, align 8\l  store ptr %ref.tmp.i70.i, ptr %arg.i69.i, align 8\l  store i8 1, ptr %formattable_char.i72.i, align 1\l  store i8 1, ptr %formattable_const.i73.i, align 1\l  store i8 1, ptr %formattable_pointer.i74.i, align 1\l  store i8 1, ptr %formattable.i75.i, align 1\l  %71 = load ptr, ptr %arg.i69.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp.i76.i, ptr align 8\l... %71, i64 16, i1 false)\l  %72 = load ptr, ptr %agg.tmp.i76.i, align 8\l  %73 = getelementptr inbounds \{ ptr, i64 \}, ptr %agg.tmp.i76.i, i32 0, i32 1\l  %74 = load i64, ptr %73, align 8\l  store ptr %72, ptr %val.i.i62.i, align 8\l  %75 = getelementptr inbounds \{ ptr, i64 \}, ptr %val.i.i62.i, i32 0, i32 1\l  store i64 %74, ptr %75, align 8\l  store ptr %retval.i67.i, ptr %this.addr.i3.i63.i, align 8\l  %this1.i4.i79.i = load ptr, ptr %this.addr.i3.i63.i, align 8\l  %call.i5.i80.i = call noundef ptr\l... @_ZNK3fmt6v9_lmp17basic_string_viewIcE4dataEv(ptr noundef nonnull align 8\l... dereferenceable(16) %val.i.i62.i) #18\l  store ptr %call.i5.i80.i, ptr %this1.i4.i79.i, align 16\l  %call2.i.i81.i = call noundef i64\l... @_ZNK3fmt6v9_lmp17basic_string_viewIcE4sizeEv(ptr noundef nonnull align 8\l... dereferenceable(16) %val.i.i62.i) #18\l  %size.i.i82.i = getelementptr inbounds\l... %\"struct.fmt::v9_lmp::detail::string_value\", ptr %this1.i4.i79.i, i32 0, i32 1\l  store i64 %call2.i.i81.i, ptr %size.i.i82.i, align 8\l  %76 = load \{ i64, i64 \}, ptr %retval.i67.i, align 16\l  %77 = extractvalue \{ i64, i64 \} %76, 0\l  store i64 %77, ptr %retval.i48.i, align 16\l  %78 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i48.i, i32 0, i32 1\l  %79 = extractvalue \{ i64, i64 \} %76, 1\l  store i64 %79, ptr %78, align 8\l  %80 = load \{ i64, i64 \}, ptr %retval.i48.i, align 16\l  %81 = extractvalue \{ i64, i64 \} %80, 0\l  store i64 %81, ptr %ref.tmp17.i, align 16\l  %82 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp17.i, i32 0, i32 1\l  %83 = extractvalue \{ i64, i64 \} %80, 1\l  store i64 %83, ptr %82, align 8\l  store ptr %this7.i, ptr %this.addr.i83.i, align 8\l  store ptr %ref.tmp.i, ptr %init.addr.i.i, align 8\l  store ptr %ref.tmp9.i, ptr %init.addr2.i.i, align 8\l  store ptr %ref.tmp13.i, ptr %init.addr4.i.i, align 8\l  store ptr %ref.tmp17.i, ptr %init.addr6.i.i, align 8\l  %this7.i.i = load ptr, ptr %this.addr.i83.i, align 8\l  %84 = load ptr, ptr %init.addr.i.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %this7.i.i, ptr align 16 %84,\l... i64 16, i1 false)\l  %arrayinit.element.i.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %this7.i.i, i64 1\l  %85 = load ptr, ptr %init.addr2.i.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element.i.i, ptr\l... align 16 %85, i64 16, i1 false)\l  %arrayinit.element8.i.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element.i.i, i64 1\l  %86 = load ptr, ptr %init.addr4.i.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element8.i.i, ptr\l... align 16 %86, i64 16, i1 false)\l  %arrayinit.element9.i.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element8.i.i, i64 1\l  %87 = load ptr, ptr %init.addr6.i.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element9.i.i, ptr\l... align 16 %87, i64 16, i1 false)\l  store ptr %this7.i, ptr %this.addr.i84.i, align 8\l  %this1.i85.i = load ptr, ptr %this.addr.i84.i, align 8\l  %88 = load ptr, ptr %args.addr.i, align 8\l  %89 = load ptr, ptr %args.addr2.i, align 8\l  %90 = load ptr, ptr %args.addr4.i, align 8\l  %91 = load ptr, ptr %args.addr6.i, align 8\l  store ptr null, ptr %.addr.i, align 8\l  store i32 0, ptr %.addr1.i, align 4\l  store i32 0, ptr %.addr2.i, align 4\l  store ptr %88, ptr %.addr3.i, align 8\l  store ptr %89, ptr %.addr4.i, align 8\l  store ptr %90, ptr %.addr5.i, align 8\l  store ptr %91, ptr %.addr6.i, align 8\l  ret void\l}"];
}
