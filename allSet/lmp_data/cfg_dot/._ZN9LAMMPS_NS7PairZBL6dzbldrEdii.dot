digraph "CFG for '_ZN9LAMMPS_NS7PairZBL6dzbldrEdii' function" {
	label="CFG for '_ZN9LAMMPS_NS7PairZBL6dzbldrEdii' function";

	Node0x55e995838e80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %r.addr = alloca double, align 8\l  %i.addr = alloca i32, align 4\l  %j.addr = alloca i32, align 4\l  %d1aij = alloca double, align 8\l  %d2aij = alloca double, align 8\l  %d3aij = alloca double, align 8\l  %d4aij = alloca double, align 8\l  %zzeij = alloca double, align 8\l  %rinv = alloca double, align 8\l  %e1 = alloca double, align 8\l  %e2 = alloca double, align 8\l  %e3 = alloca double, align 8\l  %e4 = alloca double, align 8\l  %sum = alloca double, align 8\l  %sum_p = alloca double, align 8\l  %result = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store double %r, ptr %r.addr, align 8\l  store i32 %i, ptr %i.addr, align 4\l  store i32 %j, ptr %j.addr, align 4\l  %this1 = load ptr, ptr %this.addr, align 8\l  %d1a = getelementptr inbounds %\"class.LAMMPS_NS::PairZBL\", ptr %this1, i32\l... 0, i32 6\l  %0 = load ptr, ptr %d1a, align 8\l  %1 = load i32, ptr %i.addr, align 4\l  %idxprom = sext i32 %1 to i64\l  %arrayidx = getelementptr inbounds ptr, ptr %0, i64 %idxprom\l  %2 = load ptr, ptr %arrayidx, align 8\l  %3 = load i32, ptr %j.addr, align 4\l  %idxprom2 = sext i32 %3 to i64\l  %arrayidx3 = getelementptr inbounds double, ptr %2, i64 %idxprom2\l  %4 = load double, ptr %arrayidx3, align 8\l  store double %4, ptr %d1aij, align 8\l  %d2a = getelementptr inbounds %\"class.LAMMPS_NS::PairZBL\", ptr %this1, i32\l... 0, i32 7\l  %5 = load ptr, ptr %d2a, align 8\l  %6 = load i32, ptr %i.addr, align 4\l  %idxprom4 = sext i32 %6 to i64\l  %arrayidx5 = getelementptr inbounds ptr, ptr %5, i64 %idxprom4\l  %7 = load ptr, ptr %arrayidx5, align 8\l  %8 = load i32, ptr %j.addr, align 4\l  %idxprom6 = sext i32 %8 to i64\l  %arrayidx7 = getelementptr inbounds double, ptr %7, i64 %idxprom6\l  %9 = load double, ptr %arrayidx7, align 8\l  store double %9, ptr %d2aij, align 8\l  %d3a = getelementptr inbounds %\"class.LAMMPS_NS::PairZBL\", ptr %this1, i32\l... 0, i32 8\l  %10 = load ptr, ptr %d3a, align 8\l  %11 = load i32, ptr %i.addr, align 4\l  %idxprom8 = sext i32 %11 to i64\l  %arrayidx9 = getelementptr inbounds ptr, ptr %10, i64 %idxprom8\l  %12 = load ptr, ptr %arrayidx9, align 8\l  %13 = load i32, ptr %j.addr, align 4\l  %idxprom10 = sext i32 %13 to i64\l  %arrayidx11 = getelementptr inbounds double, ptr %12, i64 %idxprom10\l  %14 = load double, ptr %arrayidx11, align 8\l  store double %14, ptr %d3aij, align 8\l  %d4a = getelementptr inbounds %\"class.LAMMPS_NS::PairZBL\", ptr %this1, i32\l... 0, i32 9\l  %15 = load ptr, ptr %d4a, align 8\l  %16 = load i32, ptr %i.addr, align 4\l  %idxprom12 = sext i32 %16 to i64\l  %arrayidx13 = getelementptr inbounds ptr, ptr %15, i64 %idxprom12\l  %17 = load ptr, ptr %arrayidx13, align 8\l  %18 = load i32, ptr %j.addr, align 4\l  %idxprom14 = sext i32 %18 to i64\l  %arrayidx15 = getelementptr inbounds double, ptr %17, i64 %idxprom14\l  %19 = load double, ptr %arrayidx15, align 8\l  store double %19, ptr %d4aij, align 8\l  %zze = getelementptr inbounds %\"class.LAMMPS_NS::PairZBL\", ptr %this1, i32\l... 0, i32 10\l  %20 = load ptr, ptr %zze, align 8\l  %21 = load i32, ptr %i.addr, align 4\l  %idxprom16 = sext i32 %21 to i64\l  %arrayidx17 = getelementptr inbounds ptr, ptr %20, i64 %idxprom16\l  %22 = load ptr, ptr %arrayidx17, align 8\l  %23 = load i32, ptr %j.addr, align 4\l  %idxprom18 = sext i32 %23 to i64\l  %arrayidx19 = getelementptr inbounds double, ptr %22, i64 %idxprom18\l  %24 = load double, ptr %arrayidx19, align 8\l  store double %24, ptr %zzeij, align 8\l  %25 = load double, ptr %r.addr, align 8\l  %div = fdiv double 1.000000e+00, %25\l  store double %div, ptr %rinv, align 8\l  %26 = load double, ptr %d1aij, align 8\l  %fneg = fneg double %26\l  %27 = load double, ptr %r.addr, align 8\l  %mul = fmul double %fneg, %27\l  %call = call double @exp(double noundef %mul) #8\l  store double %call, ptr %e1, align 8\l  %28 = load double, ptr %d2aij, align 8\l  %fneg20 = fneg double %28\l  %29 = load double, ptr %r.addr, align 8\l  %mul21 = fmul double %fneg20, %29\l  %call22 = call double @exp(double noundef %mul21) #8\l  store double %call22, ptr %e2, align 8\l  %30 = load double, ptr %d3aij, align 8\l  %fneg23 = fneg double %30\l  %31 = load double, ptr %r.addr, align 8\l  %mul24 = fmul double %fneg23, %31\l  %call25 = call double @exp(double noundef %mul24) #8\l  store double %call25, ptr %e3, align 8\l  %32 = load double, ptr %d4aij, align 8\l  %fneg26 = fneg double %32\l  %33 = load double, ptr %r.addr, align 8\l  %mul27 = fmul double %fneg26, %33\l  %call28 = call double @exp(double noundef %mul27) #8\l  store double %call28, ptr %e4, align 8\l  %34 = load double, ptr %e1, align 8\l  %mul29 = fmul double 2.817000e-02, %34\l  store double %mul29, ptr %sum, align 8\l  %35 = load double, ptr %e2, align 8\l  %36 = load double, ptr %sum, align 8\l  %37 = call double @llvm.fmuladd.f64(double 2.802200e-01, double %35, double\l... %36)\l  store double %37, ptr %sum, align 8\l  %38 = load double, ptr %e3, align 8\l  %39 = load double, ptr %sum, align 8\l  %40 = call double @llvm.fmuladd.f64(double 5.098600e-01, double %38, double\l... %39)\l  store double %40, ptr %sum, align 8\l  %41 = load double, ptr %e4, align 8\l  %42 = load double, ptr %sum, align 8\l  %43 = call double @llvm.fmuladd.f64(double 1.817500e-01, double %41, double\l... %42)\l  store double %43, ptr %sum, align 8\l  %44 = load double, ptr %d1aij, align 8\l  %mul33 = fmul double -2.817000e-02, %44\l  %45 = load double, ptr %e1, align 8\l  %mul34 = fmul double %mul33, %45\l  store double %mul34, ptr %sum_p, align 8\l  %46 = load double, ptr %d2aij, align 8\l  %mul35 = fmul double 2.802200e-01, %46\l  %47 = load double, ptr %e2, align 8\l  %48 = load double, ptr %sum_p, align 8\l  %neg = fneg double %mul35\l  %49 = call double @llvm.fmuladd.f64(double %neg, double %47, double %48)\l  store double %49, ptr %sum_p, align 8\l  %50 = load double, ptr %d3aij, align 8\l  %mul37 = fmul double 5.098600e-01, %50\l  %51 = load double, ptr %e3, align 8\l  %52 = load double, ptr %sum_p, align 8\l  %neg39 = fneg double %mul37\l  %53 = call double @llvm.fmuladd.f64(double %neg39, double %51, double %52)\l  store double %53, ptr %sum_p, align 8\l  %54 = load double, ptr %d4aij, align 8\l  %mul40 = fmul double 1.817500e-01, %54\l  %55 = load double, ptr %e4, align 8\l  %56 = load double, ptr %sum_p, align 8\l  %neg42 = fneg double %mul40\l  %57 = call double @llvm.fmuladd.f64(double %neg42, double %55, double %56)\l  store double %57, ptr %sum_p, align 8\l  %58 = load double, ptr %zzeij, align 8\l  %59 = load double, ptr %sum_p, align 8\l  %60 = load double, ptr %sum, align 8\l  %61 = load double, ptr %rinv, align 8\l  %neg44 = fneg double %60\l  %62 = call double @llvm.fmuladd.f64(double %neg44, double %61, double %59)\l  %mul45 = fmul double %58, %62\l  %63 = load double, ptr %rinv, align 8\l  %mul46 = fmul double %mul45, %63\l  store double %mul46, ptr %result, align 8\l  %64 = load double, ptr %result, align 8\l  ret double %64\l}"];
}
