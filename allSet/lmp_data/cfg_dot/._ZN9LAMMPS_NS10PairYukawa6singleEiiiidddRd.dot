digraph "CFG for '_ZN9LAMMPS_NS10PairYukawa6singleEiiiidddRd' function" {
	label="CFG for '_ZN9LAMMPS_NS10PairYukawa6singleEiiiidddRd' function";

	Node0x562561dd0cd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %.addr = alloca i32, align 4\l  %.addr1 = alloca i32, align 4\l  %itype.addr = alloca i32, align 4\l  %jtype.addr = alloca i32, align 4\l  %rsq.addr = alloca double, align 8\l  %.addr2 = alloca double, align 8\l  %factor_lj.addr = alloca double, align 8\l  %fforce.addr = alloca ptr, align 8\l  %r2inv = alloca double, align 8\l  %r = alloca double, align 8\l  %rinv = alloca double, align 8\l  %screening = alloca double, align 8\l  %forceyukawa = alloca double, align 8\l  %phi = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store i32 %0, ptr %.addr, align 4\l  store i32 %1, ptr %.addr1, align 4\l  store i32 %itype, ptr %itype.addr, align 4\l  store i32 %jtype, ptr %jtype.addr, align 4\l  store double %rsq, ptr %rsq.addr, align 8\l  store double %2, ptr %.addr2, align 8\l  store double %factor_lj, ptr %factor_lj.addr, align 8\l  store ptr %fforce, ptr %fforce.addr, align 8\l  %this3 = load ptr, ptr %this.addr, align 8\l  %3 = load double, ptr %rsq.addr, align 8\l  %div = fdiv double 1.000000e+00, %3\l  store double %div, ptr %r2inv, align 8\l  %4 = load double, ptr %rsq.addr, align 8\l  %call = call double @sqrt(double noundef %4) #8\l  store double %call, ptr %r, align 8\l  %5 = load double, ptr %r, align 8\l  %div4 = fdiv double 1.000000e+00, %5\l  store double %div4, ptr %rinv, align 8\l  %kappa = getelementptr inbounds %\"class.LAMMPS_NS::PairYukawa\", ptr %this3,\l... i32 0, i32 2\l  %6 = load double, ptr %kappa, align 8\l  %fneg = fneg double %6\l  %7 = load double, ptr %r, align 8\l  %mul = fmul double %fneg, %7\l  %call5 = call double @exp(double noundef %mul) #8\l  store double %call5, ptr %screening, align 8\l  %a = getelementptr inbounds %\"class.LAMMPS_NS::PairYukawa\", ptr %this3, i32\l... 0, i32 5\l  %8 = load ptr, ptr %a, align 8\l  %9 = load i32, ptr %itype.addr, align 4\l  %idxprom = sext i32 %9 to i64\l  %arrayidx = getelementptr inbounds ptr, ptr %8, i64 %idxprom\l  %10 = load ptr, ptr %arrayidx, align 8\l  %11 = load i32, ptr %jtype.addr, align 4\l  %idxprom6 = sext i32 %11 to i64\l  %arrayidx7 = getelementptr inbounds double, ptr %10, i64 %idxprom6\l  %12 = load double, ptr %arrayidx7, align 8\l  %13 = load double, ptr %screening, align 8\l  %mul8 = fmul double %12, %13\l  %kappa9 = getelementptr inbounds %\"class.LAMMPS_NS::PairYukawa\", ptr %this3,\l... i32 0, i32 2\l  %14 = load double, ptr %kappa9, align 8\l  %15 = load double, ptr %rinv, align 8\l  %add = fadd double %14, %15\l  %mul10 = fmul double %mul8, %add\l  store double %mul10, ptr %forceyukawa, align 8\l  %16 = load double, ptr %factor_lj.addr, align 8\l  %17 = load double, ptr %forceyukawa, align 8\l  %mul11 = fmul double %16, %17\l  %18 = load double, ptr %r2inv, align 8\l  %mul12 = fmul double %mul11, %18\l  %19 = load ptr, ptr %fforce.addr, align 8\l  store double %mul12, ptr %19, align 8\l  %a13 = getelementptr inbounds %\"class.LAMMPS_NS::PairYukawa\", ptr %this3,\l... i32 0, i32 5\l  %20 = load ptr, ptr %a13, align 8\l  %21 = load i32, ptr %itype.addr, align 4\l  %idxprom14 = sext i32 %21 to i64\l  %arrayidx15 = getelementptr inbounds ptr, ptr %20, i64 %idxprom14\l  %22 = load ptr, ptr %arrayidx15, align 8\l  %23 = load i32, ptr %jtype.addr, align 4\l  %idxprom16 = sext i32 %23 to i64\l  %arrayidx17 = getelementptr inbounds double, ptr %22, i64 %idxprom16\l  %24 = load double, ptr %arrayidx17, align 8\l  %25 = load double, ptr %screening, align 8\l  %mul18 = fmul double %24, %25\l  %26 = load double, ptr %rinv, align 8\l  %offset = getelementptr inbounds %\"class.LAMMPS_NS::PairYukawa\", ptr %this3,\l... i32 0, i32 6\l  %27 = load ptr, ptr %offset, align 8\l  %28 = load i32, ptr %itype.addr, align 4\l  %idxprom20 = sext i32 %28 to i64\l  %arrayidx21 = getelementptr inbounds ptr, ptr %27, i64 %idxprom20\l  %29 = load ptr, ptr %arrayidx21, align 8\l  %30 = load i32, ptr %jtype.addr, align 4\l  %idxprom22 = sext i32 %30 to i64\l  %arrayidx23 = getelementptr inbounds double, ptr %29, i64 %idxprom22\l  %31 = load double, ptr %arrayidx23, align 8\l  %neg = fneg double %31\l  %32 = call double @llvm.fmuladd.f64(double %mul18, double %26, double %neg)\l  store double %32, ptr %phi, align 8\l  %33 = load double, ptr %factor_lj.addr, align 8\l  %34 = load double, ptr %phi, align 8\l  %mul24 = fmul double %33, %34\l  ret double %mul24\l}"];
}
