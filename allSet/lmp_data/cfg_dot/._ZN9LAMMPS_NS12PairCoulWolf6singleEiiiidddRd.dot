digraph "CFG for '_ZN9LAMMPS_NS12PairCoulWolf6singleEiiiidddRd' function" {
	label="CFG for '_ZN9LAMMPS_NS12PairCoulWolf6singleEiiiidddRd' function";

	Node0x55aa33a154b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %i.addr = alloca i32, align 4\l  %j.addr = alloca i32, align 4\l  %.addr = alloca i32, align 4\l  %.addr1 = alloca i32, align 4\l  %rsq.addr = alloca double, align 8\l  %factor_coul.addr = alloca double, align 8\l  %.addr2 = alloca double, align 8\l  %fforce.addr = alloca ptr, align 8\l  %r = alloca double, align 8\l  %prefactor = alloca double, align 8\l  %forcecoul = alloca double, align 8\l  %phicoul = alloca double, align 8\l  %e_shift = alloca double, align 8\l  %f_shift = alloca double, align 8\l  %dvdrr = alloca double, align 8\l  %erfcc = alloca double, align 8\l  %erfcd = alloca double, align 8\l  %eng = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store i32 %i, ptr %i.addr, align 4\l  store i32 %j, ptr %j.addr, align 4\l  store i32 %0, ptr %.addr, align 4\l  store i32 %1, ptr %.addr1, align 4\l  store double %rsq, ptr %rsq.addr, align 8\l  store double %factor_coul, ptr %factor_coul.addr, align 8\l  store double %2, ptr %.addr2, align 8\l  store ptr %fforce, ptr %fforce.addr, align 8\l  %this3 = load ptr, ptr %this.addr, align 8\l  %alf = getelementptr inbounds %\"class.LAMMPS_NS::PairCoulWolf\", ptr %this3,\l... i32 0, i32 3\l  %3 = load double, ptr %alf, align 8\l  %cut_coul = getelementptr inbounds %\"class.LAMMPS_NS::PairCoulWolf\", ptr\l... %this3, i32 0, i32 1\l  %4 = load double, ptr %cut_coul, align 8\l  %mul = fmul double %3, %4\l  %call = call double @erfc(double noundef %mul) #8\l  %cut_coul4 = getelementptr inbounds %\"class.LAMMPS_NS::PairCoulWolf\", ptr\l... %this3, i32 0, i32 1\l  %5 = load double, ptr %cut_coul4, align 8\l  %div = fdiv double %call, %5\l  store double %div, ptr %e_shift, align 8\l  %6 = load double, ptr %e_shift, align 8\l  %alf5 = getelementptr inbounds %\"class.LAMMPS_NS::PairCoulWolf\", ptr %this3,\l... i32 0, i32 3\l  %7 = load double, ptr %alf5, align 8\l  %mul6 = fmul double 2.000000e+00, %7\l  %div7 = fdiv double %mul6, 0x3FFC5BF891B4EF6B\l  %alf8 = getelementptr inbounds %\"class.LAMMPS_NS::PairCoulWolf\", ptr %this3,\l... i32 0, i32 3\l  %8 = load double, ptr %alf8, align 8\l  %fneg = fneg double %8\l  %alf9 = getelementptr inbounds %\"class.LAMMPS_NS::PairCoulWolf\", ptr %this3,\l... i32 0, i32 3\l  %9 = load double, ptr %alf9, align 8\l  %mul10 = fmul double %fneg, %9\l  %cut_coul11 = getelementptr inbounds %\"class.LAMMPS_NS::PairCoulWolf\", ptr\l... %this3, i32 0, i32 1\l  %10 = load double, ptr %cut_coul11, align 8\l  %mul12 = fmul double %mul10, %10\l  %cut_coul13 = getelementptr inbounds %\"class.LAMMPS_NS::PairCoulWolf\", ptr\l... %this3, i32 0, i32 1\l  %11 = load double, ptr %cut_coul13, align 8\l  %mul14 = fmul double %mul12, %11\l  %call15 = call double @exp(double noundef %mul14) #8\l  %12 = call double @llvm.fmuladd.f64(double %div7, double %call15, double %6)\l  %fneg17 = fneg double %12\l  %cut_coul18 = getelementptr inbounds %\"class.LAMMPS_NS::PairCoulWolf\", ptr\l... %this3, i32 0, i32 1\l  %13 = load double, ptr %cut_coul18, align 8\l  %div19 = fdiv double %fneg17, %13\l  store double %div19, ptr %f_shift, align 8\l  %14 = load double, ptr %rsq.addr, align 8\l  %cut_coulsq = getelementptr inbounds %\"class.LAMMPS_NS::PairCoulWolf\", ptr\l... %this3, i32 0, i32 2\l  %15 = load double, ptr %cut_coulsq, align 8\l  %cmp = fcmp olt double %14, %15\l  br i1 %cmp, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x55aa33a154b0:s0 -> Node0x55aa33a189b0[tooltip="entry -> if.then\nProbability 50.00%" ];
	Node0x55aa33a154b0:s1 -> Node0x55aa33a18a20[tooltip="entry -> if.else\nProbability 50.00%" ];
	Node0x55aa33a189b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then:\l|  %16 = load double, ptr %rsq.addr, align 8\l  %call20 = call double @sqrt(double noundef %16) #8\l  store double %call20, ptr %r, align 8\l  %force = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this3,\l... i32 0, i32 11\l  %17 = load ptr, ptr %force, align 8\l  %18 = load ptr, ptr %17, align 8\l  %qqrd2e = getelementptr inbounds %\"class.LAMMPS_NS::Force\", ptr %18, i32 0,\l... i32 12\l  %19 = load double, ptr %qqrd2e, align 8\l  %atom = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this3, i32\l... 0, i32 6\l  %20 = load ptr, ptr %atom, align 8\l  %21 = load ptr, ptr %20, align 8\l  %q = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %21, i32 0, i32 41\l  %22 = load ptr, ptr %q, align 8\l  %23 = load i32, ptr %i.addr, align 4\l  %idxprom = sext i32 %23 to i64\l  %arrayidx = getelementptr inbounds double, ptr %22, i64 %idxprom\l  %24 = load double, ptr %arrayidx, align 8\l  %mul21 = fmul double %19, %24\l  %atom22 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this3,\l... i32 0, i32 6\l  %25 = load ptr, ptr %atom22, align 8\l  %26 = load ptr, ptr %25, align 8\l  %q23 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %26, i32 0, i32\l... 41\l  %27 = load ptr, ptr %q23, align 8\l  %28 = load i32, ptr %j.addr, align 4\l  %idxprom24 = sext i32 %28 to i64\l  %arrayidx25 = getelementptr inbounds double, ptr %27, i64 %idxprom24\l  %29 = load double, ptr %arrayidx25, align 8\l  %mul26 = fmul double %mul21, %29\l  %30 = load double, ptr %r, align 8\l  %div27 = fdiv double %mul26, %30\l  store double %div27, ptr %prefactor, align 8\l  %alf28 = getelementptr inbounds %\"class.LAMMPS_NS::PairCoulWolf\", ptr\l... %this3, i32 0, i32 3\l  %31 = load double, ptr %alf28, align 8\l  %32 = load double, ptr %r, align 8\l  %mul29 = fmul double %31, %32\l  %call30 = call double @erfc(double noundef %mul29) #8\l  store double %call30, ptr %erfcc, align 8\l  %alf31 = getelementptr inbounds %\"class.LAMMPS_NS::PairCoulWolf\", ptr\l... %this3, i32 0, i32 3\l  %33 = load double, ptr %alf31, align 8\l  %fneg32 = fneg double %33\l  %alf33 = getelementptr inbounds %\"class.LAMMPS_NS::PairCoulWolf\", ptr\l... %this3, i32 0, i32 3\l  %34 = load double, ptr %alf33, align 8\l  %mul34 = fmul double %fneg32, %34\l  %35 = load double, ptr %r, align 8\l  %mul35 = fmul double %mul34, %35\l  %36 = load double, ptr %r, align 8\l  %mul36 = fmul double %mul35, %36\l  %call37 = call double @exp(double noundef %mul36) #8\l  store double %call37, ptr %erfcd, align 8\l  %37 = load double, ptr %erfcc, align 8\l  %38 = load double, ptr %rsq.addr, align 8\l  %div38 = fdiv double %37, %38\l  %alf39 = getelementptr inbounds %\"class.LAMMPS_NS::PairCoulWolf\", ptr\l... %this3, i32 0, i32 3\l  %39 = load double, ptr %alf39, align 8\l  %mul40 = fmul double 2.000000e+00, %39\l  %div41 = fdiv double %mul40, 0x3FFC5BF891B4EF6B\l  %40 = load double, ptr %erfcd, align 8\l  %mul42 = fmul double %div41, %40\l  %41 = load double, ptr %r, align 8\l  %div43 = fdiv double %mul42, %41\l  %add = fadd double %div38, %div43\l  %42 = load double, ptr %f_shift, align 8\l  %add44 = fadd double %add, %42\l  store double %add44, ptr %dvdrr, align 8\l  %43 = load double, ptr %dvdrr, align 8\l  %44 = load double, ptr %rsq.addr, align 8\l  %mul45 = fmul double %43, %44\l  %45 = load double, ptr %prefactor, align 8\l  %mul46 = fmul double %mul45, %45\l  store double %mul46, ptr %forcecoul, align 8\l  %46 = load double, ptr %factor_coul.addr, align 8\l  %cmp47 = fcmp olt double %46, 1.000000e+00\l  br i1 %cmp47, label %if.then48, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x55aa33a189b0:s0 -> Node0x55aa33a1ba10[tooltip="if.then -> if.then48\nProbability 50.00%" ];
	Node0x55aa33a189b0:s1 -> Node0x55aa33a1ba60[tooltip="if.then -> if.end\nProbability 50.00%" ];
	Node0x55aa33a1ba10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.then48:\l|  %47 = load double, ptr %factor_coul.addr, align 8\l  %sub = fsub double 1.000000e+00, %47\l  %48 = load double, ptr %prefactor, align 8\l  %49 = load double, ptr %forcecoul, align 8\l  %neg = fneg double %sub\l  %50 = call double @llvm.fmuladd.f64(double %neg, double %48, double %49)\l  store double %50, ptr %forcecoul, align 8\l  br label %if.end\l}"];
	Node0x55aa33a1ba10 -> Node0x55aa33a1ba60[tooltip="if.then48 -> if.end\nProbability 100.00%" ];
	Node0x55aa33a1ba60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end:\l|  br label %if.end50\l}"];
	Node0x55aa33a1ba60 -> Node0x55aa33a1c820[tooltip="if.end -> if.end50\nProbability 100.00%" ];
	Node0x55aa33a18a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.else:\l|  store double 0.000000e+00, ptr %forcecoul, align 8\l  br label %if.end50\l}"];
	Node0x55aa33a18a20 -> Node0x55aa33a1c820[tooltip="if.else -> if.end50\nProbability 100.00%" ];
	Node0x55aa33a1c820 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end50:\l|  %51 = load double, ptr %forcecoul, align 8\l  %52 = load double, ptr %rsq.addr, align 8\l  %div51 = fdiv double %51, %52\l  %53 = load ptr, ptr %fforce.addr, align 8\l  store double %div51, ptr %53, align 8\l  store double 0.000000e+00, ptr %eng, align 8\l  %54 = load double, ptr %rsq.addr, align 8\l  %cut_coulsq52 = getelementptr inbounds %\"class.LAMMPS_NS::PairCoulWolf\", ptr\l... %this3, i32 0, i32 2\l  %55 = load double, ptr %cut_coulsq52, align 8\l  %cmp53 = fcmp olt double %54, %55\l  br i1 %cmp53, label %if.then54, label %if.end65\l|{<s0>T|<s1>F}}"];
	Node0x55aa33a1c820:s0 -> Node0x55aa33a1cf90[tooltip="if.end50 -> if.then54\nProbability 50.00%" ];
	Node0x55aa33a1c820:s1 -> Node0x55aa33a1d010[tooltip="if.end50 -> if.end65\nProbability 50.00%" ];
	Node0x55aa33a1cf90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then54:\l|  %56 = load double, ptr %prefactor, align 8\l  %57 = load double, ptr %erfcc, align 8\l  %58 = load double, ptr %e_shift, align 8\l  %59 = load double, ptr %r, align 8\l  %neg56 = fneg double %58\l  %60 = call double @llvm.fmuladd.f64(double %neg56, double %59, double %57)\l  %mul57 = fmul double %56, %60\l  store double %mul57, ptr %phicoul, align 8\l  %61 = load double, ptr %factor_coul.addr, align 8\l  %cmp58 = fcmp olt double %61, 1.000000e+00\l  br i1 %cmp58, label %if.then59, label %if.end63\l|{<s0>T|<s1>F}}"];
	Node0x55aa33a1cf90:s0 -> Node0x55aa33a1dd40[tooltip="if.then54 -> if.then59\nProbability 50.00%" ];
	Node0x55aa33a1cf90:s1 -> Node0x55aa33a1dd90[tooltip="if.then54 -> if.end63\nProbability 50.00%" ];
	Node0x55aa33a1dd40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.then59:\l|  %62 = load double, ptr %factor_coul.addr, align 8\l  %sub60 = fsub double 1.000000e+00, %62\l  %63 = load double, ptr %prefactor, align 8\l  %64 = load double, ptr %phicoul, align 8\l  %neg62 = fneg double %sub60\l  %65 = call double @llvm.fmuladd.f64(double %neg62, double %63, double %64)\l  store double %65, ptr %phicoul, align 8\l  br label %if.end63\l}"];
	Node0x55aa33a1dd40 -> Node0x55aa33a1dd90[tooltip="if.then59 -> if.end63\nProbability 100.00%" ];
	Node0x55aa33a1dd90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end63:\l|  %66 = load double, ptr %phicoul, align 8\l  %67 = load double, ptr %eng, align 8\l  %add64 = fadd double %67, %66\l  store double %add64, ptr %eng, align 8\l  br label %if.end65\l}"];
	Node0x55aa33a1dd90 -> Node0x55aa33a1d010[tooltip="if.end63 -> if.end65\nProbability 100.00%" ];
	Node0x55aa33a1d010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end65:\l|  %68 = load double, ptr %eng, align 8\l  ret double %68\l}"];
}
