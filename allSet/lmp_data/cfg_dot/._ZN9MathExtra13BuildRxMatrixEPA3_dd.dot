digraph "CFG for '_ZN9MathExtra13BuildRxMatrixEPA3_dd' function" {
	label="CFG for '_ZN9MathExtra13BuildRxMatrixEPA3_dd' function";

	Node0x558373669ce0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %R.addr = alloca ptr, align 8\l  %angle.addr = alloca double, align 8\l  %angleSq = alloca double, align 8\l  %cosAngle = alloca double, align 8\l  %sinAngle = alloca double, align 8\l  store ptr %R, ptr %R.addr, align 8\l  store double %angle, ptr %angle.addr, align 8\l  %0 = load double, ptr %angle.addr, align 8\l  %1 = load double, ptr %angle.addr, align 8\l  %mul = fmul double %0, %1\l  store double %mul, ptr %angleSq, align 8\l  %2 = load double, ptr %angleSq, align 8\l  %neg = fneg double %2\l  %3 = call double @llvm.fmuladd.f64(double %neg, double 2.500000e-01, double\l... 1.000000e+00)\l  %4 = load double, ptr %angleSq, align 8\l  %5 = call double @llvm.fmuladd.f64(double %4, double 2.500000e-01, double\l... 1.000000e+00)\l  %div = fdiv double %3, %5\l  store double %div, ptr %cosAngle, align 8\l  %6 = load double, ptr %angle.addr, align 8\l  %7 = load double, ptr %angleSq, align 8\l  %8 = call double @llvm.fmuladd.f64(double %7, double 2.500000e-01, double\l... 1.000000e+00)\l  %div4 = fdiv double %6, %8\l  store double %div4, ptr %sinAngle, align 8\l  %9 = load ptr, ptr %R.addr, align 8\l  %arrayidx = getelementptr inbounds [3 x double], ptr %9, i64 0\l  %arrayidx5 = getelementptr inbounds [3 x double], ptr %arrayidx, i64 0, i64 0\l  store double 1.000000e+00, ptr %arrayidx5, align 8\l  %10 = load ptr, ptr %R.addr, align 8\l  %arrayidx6 = getelementptr inbounds [3 x double], ptr %10, i64 0\l  %arrayidx7 = getelementptr inbounds [3 x double], ptr %arrayidx6, i64 0, i64\l... 1\l  store double 0.000000e+00, ptr %arrayidx7, align 8\l  %11 = load ptr, ptr %R.addr, align 8\l  %arrayidx8 = getelementptr inbounds [3 x double], ptr %11, i64 0\l  %arrayidx9 = getelementptr inbounds [3 x double], ptr %arrayidx8, i64 0, i64\l... 2\l  store double 0.000000e+00, ptr %arrayidx9, align 8\l  %12 = load ptr, ptr %R.addr, align 8\l  %arrayidx10 = getelementptr inbounds [3 x double], ptr %12, i64 1\l  %arrayidx11 = getelementptr inbounds [3 x double], ptr %arrayidx10, i64 0,\l... i64 0\l  store double 0.000000e+00, ptr %arrayidx11, align 8\l  %13 = load double, ptr %cosAngle, align 8\l  %14 = load ptr, ptr %R.addr, align 8\l  %arrayidx12 = getelementptr inbounds [3 x double], ptr %14, i64 1\l  %arrayidx13 = getelementptr inbounds [3 x double], ptr %arrayidx12, i64 0,\l... i64 1\l  store double %13, ptr %arrayidx13, align 8\l  %15 = load double, ptr %sinAngle, align 8\l  %fneg = fneg double %15\l  %16 = load ptr, ptr %R.addr, align 8\l  %arrayidx14 = getelementptr inbounds [3 x double], ptr %16, i64 1\l  %arrayidx15 = getelementptr inbounds [3 x double], ptr %arrayidx14, i64 0,\l... i64 2\l  store double %fneg, ptr %arrayidx15, align 8\l  %17 = load ptr, ptr %R.addr, align 8\l  %arrayidx16 = getelementptr inbounds [3 x double], ptr %17, i64 2\l  %arrayidx17 = getelementptr inbounds [3 x double], ptr %arrayidx16, i64 0,\l... i64 0\l  store double 0.000000e+00, ptr %arrayidx17, align 8\l  %18 = load double, ptr %sinAngle, align 8\l  %19 = load ptr, ptr %R.addr, align 8\l  %arrayidx18 = getelementptr inbounds [3 x double], ptr %19, i64 2\l  %arrayidx19 = getelementptr inbounds [3 x double], ptr %arrayidx18, i64 0,\l... i64 1\l  store double %18, ptr %arrayidx19, align 8\l  %20 = load double, ptr %cosAngle, align 8\l  %21 = load ptr, ptr %R.addr, align 8\l  %arrayidx20 = getelementptr inbounds [3 x double], ptr %21, i64 2\l  %arrayidx21 = getelementptr inbounds [3 x double], ptr %arrayidx20, i64 0,\l... i64 2\l  store double %20, ptr %arrayidx21, align 8\l  ret void\l}"];
}
