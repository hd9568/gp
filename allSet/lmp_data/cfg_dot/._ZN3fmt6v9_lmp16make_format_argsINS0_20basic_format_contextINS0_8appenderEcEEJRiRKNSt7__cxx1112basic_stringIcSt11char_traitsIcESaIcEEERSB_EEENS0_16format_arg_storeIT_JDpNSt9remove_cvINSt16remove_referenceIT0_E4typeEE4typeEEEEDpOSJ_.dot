digraph "CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSB_EEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSJ_' function" {
	label="CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSB_EEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSJ_' function";

	Node0x558e60bcf5f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr.i7 = alloca ptr, align 8\l  %.addr.i = alloca ptr, align 8\l  %.addr1.i = alloca i32, align 4\l  %.addr2.i = alloca i32, align 4\l  %.addr3.i = alloca ptr, align 8\l  %.addr4.i = alloca ptr, align 8\l  %.addr5.i = alloca ptr, align 8\l  %this.addr.i5 = alloca ptr, align 8\l  %init.addr.i = alloca ptr, align 8\l  %init.addr2.i = alloca ptr, align 8\l  %init.addr4.i = alloca ptr, align 8\l  %val.i.i.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i3.i.i = alloca ptr, align 8\l  %retval.i.i.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i.i.i = alloca ptr, align 8\l  %val.addr.i.i.i = alloca ptr, align 8\l  %retval.i47.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i48.i = alloca ptr, align 8\l  %arg.i49.i = alloca ptr, align 8\l  %ref.tmp.i50.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %ref.tmp1.i51.i = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i52.i = alloca i8, align 1\l  %formattable_const.i53.i = alloca i8, align 1\l  %formattable_pointer.i54.i = alloca i8, align 1\l  %formattable.i55.i = alloca i8, align 1\l  %agg.tmp.i56.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %retval.i44.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i45.i = alloca ptr, align 8\l  %this.addr.i41.i = alloca ptr, align 8\l  %val.addr.i42.i = alloca i32, align 4\l  %this.addr.i38.i = alloca ptr, align 8\l  %val.addr.i39.i = alloca i32, align 4\l  %retval.i28.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i29.i = alloca ptr, align 8\l  %arg.i30.i = alloca ptr, align 8\l  %ref.tmp.i31.i = alloca i32, align 4\l  %ref.tmp1.i32.i = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i33.i = alloca i8, align 1\l  %formattable_const.i34.i = alloca i8, align 1\l  %formattable_pointer.i35.i = alloca i8, align 1\l  %formattable.i36.i = alloca i8, align 1\l  %retval.i25.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i26.i = alloca ptr, align 8\l  %val.i.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i22.i = alloca ptr, align 8\l  %retval.i20.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i.i = alloca ptr, align 8\l  %val.addr.i21.i = alloca ptr, align 8\l  %retval.i17.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i18.i = alloca ptr, align 8\l  %arg.i.i = alloca ptr, align 8\l  %ref.tmp.i.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %ref.tmp1.i.i = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i.i = alloca i8, align 1\l  %formattable_const.i.i = alloca i8, align 1\l  %formattable_pointer.i.i = alloca i8, align 1\l  %formattable.i.i = alloca i8, align 1\l  %agg.tmp.i.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %retval.i.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i.i = alloca ptr, align 8\l  %this.addr.i = alloca ptr, align 8\l  %args.addr.i = alloca ptr, align 8\l  %args.addr2.i = alloca ptr, align 8\l  %args.addr4.i = alloca ptr, align 8\l  %ref.tmp.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp7.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp11.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %args.addr = alloca ptr, align 8\l  %args.addr2 = alloca ptr, align 8\l  %args.addr4 = alloca ptr, align 8\l  store ptr %args, ptr %args.addr, align 8\l  store ptr %args1, ptr %args.addr2, align 8\l  store ptr %args3, ptr %args.addr4, align 8\l  %0 = load ptr, ptr %args.addr, align 8\l  %1 = load ptr, ptr %args.addr2, align 8\l  %2 = load ptr, ptr %args.addr4, align 8\l  store ptr %agg.result, ptr %this.addr.i, align 8\l  store ptr %0, ptr %args.addr.i, align 8\l  store ptr %1, ptr %args.addr2.i, align 8\l  store ptr %2, ptr %args.addr4.i, align 8\l  %this5.i = load ptr, ptr %this.addr.i, align 8\l  %3 = load ptr, ptr %args.addr.i, align 8\l  store ptr %3, ptr %val.addr.i26.i, align 8\l  %4 = load ptr, ptr %val.addr.i26.i, align 8\l  store ptr %4, ptr %val.addr.i29.i, align 8\l  %5 = load ptr, ptr %val.addr.i29.i, align 8\l  %6 = load i32, ptr %5, align 4\l  store ptr %ref.tmp1.i32.i, ptr %this.addr.i38.i, align 8\l  store i32 %6, ptr %val.addr.i39.i, align 4\l  %this1.i40.i = load ptr, ptr %this.addr.i38.i, align 8\l  %7 = load i32, ptr %val.addr.i39.i, align 4\l  store i32 %7, ptr %ref.tmp.i31.i, align 4\l  store ptr %ref.tmp.i31.i, ptr %arg.i30.i, align 8\l  store i8 1, ptr %formattable_char.i33.i, align 1\l  store i8 1, ptr %formattable_const.i34.i, align 1\l  store i8 1, ptr %formattable_pointer.i35.i, align 1\l  store i8 1, ptr %formattable.i36.i, align 1\l  %8 = load ptr, ptr %arg.i30.i, align 8\l  %9 = load i32, ptr %8, align 4\l  store ptr %retval.i28.i, ptr %this.addr.i41.i, align 8\l  store i32 %9, ptr %val.addr.i42.i, align 4\l  %this1.i43.i = load ptr, ptr %this.addr.i41.i, align 8\l  %10 = load i32, ptr %val.addr.i42.i, align 4\l  store i32 %10, ptr %this1.i43.i, align 16\l  %11 = load \{ i64, i64 \}, ptr %retval.i28.i, align 16\l  %12 = extractvalue \{ i64, i64 \} %11, 0\l  store i64 %12, ptr %retval.i25.i, align 16\l  %13 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i25.i, i32 0, i32 1\l  %14 = extractvalue \{ i64, i64 \} %11, 1\l  store i64 %14, ptr %13, align 8\l  %15 = load \{ i64, i64 \}, ptr %retval.i25.i, align 16\l  %16 = extractvalue \{ i64, i64 \} %15, 0\l  store i64 %16, ptr %ref.tmp.i, align 16\l  %17 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp.i, i32 0, i32 1\l  %18 = extractvalue \{ i64, i64 \} %15, 1\l  store i64 %18, ptr %17, align 8\l  %19 = load ptr, ptr %args.addr2.i, align 8\l  store ptr %19, ptr %val.addr.i45.i, align 8\l  %20 = load ptr, ptr %val.addr.i45.i, align 8\l  store ptr %20, ptr %val.addr.i48.i, align 8\l  %21 = load ptr, ptr %val.addr.i48.i, align 8\l  store ptr %ref.tmp1.i51.i, ptr %this.addr.i.i.i, align 8\l  store ptr %21, ptr %val.addr.i.i.i, align 8\l  %this1.i.i.i = load ptr, ptr %this.addr.i.i.i, align 8\l  %22 = load ptr, ptr %val.addr.i.i.i, align 8\l  %call.i.i.i = call \{ ptr, i64 \}\l... @_ZN3fmt6v9_lmp6detail14to_string_viewIcSt11char_traitsIcESaIcEEENS0_17basic_s\l...tring_viewIT_EERKNSt7__cxx1112basic_stringIS7_T0_T1_EE(ptr noundef nonnull\l... align 8 dereferenceable(32) %22)\l  %23 = extractvalue \{ ptr, i64 \} %call.i.i.i, 0\l  store ptr %23, ptr %retval.i.i.i, align 8\l  %24 = getelementptr inbounds \{ ptr, i64 \}, ptr %retval.i.i.i, i32 0, i32 1\l  %25 = extractvalue \{ ptr, i64 \} %call.i.i.i, 1\l  store i64 %25, ptr %24, align 8\l  %26 = load \{ ptr, i64 \}, ptr %retval.i.i.i, align 8\l  %27 = extractvalue \{ ptr, i64 \} %26, 0\l  store ptr %27, ptr %ref.tmp.i50.i, align 8\l  %28 = getelementptr inbounds \{ ptr, i64 \}, ptr %ref.tmp.i50.i, i32 0, i32 1\l  %29 = extractvalue \{ ptr, i64 \} %26, 1\l  store i64 %29, ptr %28, align 8\l  store ptr %ref.tmp.i50.i, ptr %arg.i49.i, align 8\l  store i8 1, ptr %formattable_char.i52.i, align 1\l  store i8 1, ptr %formattable_const.i53.i, align 1\l  store i8 1, ptr %formattable_pointer.i54.i, align 1\l  store i8 1, ptr %formattable.i55.i, align 1\l  %30 = load ptr, ptr %arg.i49.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp.i56.i, ptr align 8\l... %30, i64 16, i1 false)\l  %31 = load ptr, ptr %agg.tmp.i56.i, align 8\l  %32 = getelementptr inbounds \{ ptr, i64 \}, ptr %agg.tmp.i56.i, i32 0, i32 1\l  %33 = load i64, ptr %32, align 8\l  store ptr %31, ptr %val.i.i.i, align 8\l  %34 = getelementptr inbounds \{ ptr, i64 \}, ptr %val.i.i.i, i32 0, i32 1\l  store i64 %33, ptr %34, align 8\l  store ptr %retval.i47.i, ptr %this.addr.i3.i.i, align 8\l  %this1.i4.i.i = load ptr, ptr %this.addr.i3.i.i, align 8\l  %call.i5.i.i = call noundef ptr\l... @_ZNK3fmt6v9_lmp17basic_string_viewIcE4dataEv(ptr noundef nonnull align 8\l... dereferenceable(16) %val.i.i.i) #15\l  store ptr %call.i5.i.i, ptr %this1.i4.i.i, align 16\l  %call2.i.i.i = call noundef i64\l... @_ZNK3fmt6v9_lmp17basic_string_viewIcE4sizeEv(ptr noundef nonnull align 8\l... dereferenceable(16) %val.i.i.i) #15\l  %size.i.i.i = getelementptr inbounds\l... %\"struct.fmt::v9_lmp::detail::string_value\", ptr %this1.i4.i.i, i32 0, i32 1\l  store i64 %call2.i.i.i, ptr %size.i.i.i, align 8\l  %35 = load \{ i64, i64 \}, ptr %retval.i47.i, align 16\l  %36 = extractvalue \{ i64, i64 \} %35, 0\l  store i64 %36, ptr %retval.i44.i, align 16\l  %37 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i44.i, i32 0, i32 1\l  %38 = extractvalue \{ i64, i64 \} %35, 1\l  store i64 %38, ptr %37, align 8\l  %39 = load \{ i64, i64 \}, ptr %retval.i44.i, align 16\l  %40 = extractvalue \{ i64, i64 \} %39, 0\l  store i64 %40, ptr %ref.tmp7.i, align 16\l  %41 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp7.i, i32 0, i32 1\l  %42 = extractvalue \{ i64, i64 \} %39, 1\l  store i64 %42, ptr %41, align 8\l  %43 = load ptr, ptr %args.addr4.i, align 8\l  store ptr %43, ptr %val.addr.i.i, align 8\l  %44 = load ptr, ptr %val.addr.i.i, align 8\l  store ptr %44, ptr %val.addr.i18.i, align 8\l  %45 = load ptr, ptr %val.addr.i18.i, align 8\l  store ptr %ref.tmp1.i.i, ptr %this.addr.i.i, align 8\l  store ptr %45, ptr %val.addr.i21.i, align 8\l  %this1.i.i = load ptr, ptr %this.addr.i.i, align 8\l  %46 = load ptr, ptr %val.addr.i21.i, align 8\l  %call.i.i = call \{ ptr, i64 \}\l... @_ZN3fmt6v9_lmp6detail14to_string_viewIcSt11char_traitsIcESaIcEEENS0_17basic_s\l...tring_viewIT_EERKNSt7__cxx1112basic_stringIS7_T0_T1_EE(ptr noundef nonnull\l... align 8 dereferenceable(32) %46)\l  %47 = extractvalue \{ ptr, i64 \} %call.i.i, 0\l  store ptr %47, ptr %retval.i20.i, align 8\l  %48 = getelementptr inbounds \{ ptr, i64 \}, ptr %retval.i20.i, i32 0, i32 1\l  %49 = extractvalue \{ ptr, i64 \} %call.i.i, 1\l  store i64 %49, ptr %48, align 8\l  %50 = load \{ ptr, i64 \}, ptr %retval.i20.i, align 8\l  %51 = extractvalue \{ ptr, i64 \} %50, 0\l  store ptr %51, ptr %ref.tmp.i.i, align 8\l  %52 = getelementptr inbounds \{ ptr, i64 \}, ptr %ref.tmp.i.i, i32 0, i32 1\l  %53 = extractvalue \{ ptr, i64 \} %50, 1\l  store i64 %53, ptr %52, align 8\l  store ptr %ref.tmp.i.i, ptr %arg.i.i, align 8\l  store i8 1, ptr %formattable_char.i.i, align 1\l  store i8 1, ptr %formattable_const.i.i, align 1\l  store i8 1, ptr %formattable_pointer.i.i, align 1\l  store i8 1, ptr %formattable.i.i, align 1\l  %54 = load ptr, ptr %arg.i.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp.i.i, ptr align 8 %54,\l... i64 16, i1 false)\l  %55 = load ptr, ptr %agg.tmp.i.i, align 8\l  %56 = getelementptr inbounds \{ ptr, i64 \}, ptr %agg.tmp.i.i, i32 0, i32 1\l  %57 = load i64, ptr %56, align 8\l  store ptr %55, ptr %val.i.i, align 8\l  %58 = getelementptr inbounds \{ ptr, i64 \}, ptr %val.i.i, i32 0, i32 1\l  store i64 %57, ptr %58, align 8\l  store ptr %retval.i17.i, ptr %this.addr.i22.i, align 8\l  %this1.i23.i = load ptr, ptr %this.addr.i22.i, align 8\l  %call.i24.i = call noundef ptr\l... @_ZNK3fmt6v9_lmp17basic_string_viewIcE4dataEv(ptr noundef nonnull align 8\l... dereferenceable(16) %val.i.i) #15\l  store ptr %call.i24.i, ptr %this1.i23.i, align 16\l  %call2.i.i = call noundef i64\l... @_ZNK3fmt6v9_lmp17basic_string_viewIcE4sizeEv(ptr noundef nonnull align 8\l... dereferenceable(16) %val.i.i) #15\l  %size.i.i = getelementptr inbounds\l... %\"struct.fmt::v9_lmp::detail::string_value\", ptr %this1.i23.i, i32 0, i32 1\l  store i64 %call2.i.i, ptr %size.i.i, align 8\l  %59 = load \{ i64, i64 \}, ptr %retval.i17.i, align 16\l  %60 = extractvalue \{ i64, i64 \} %59, 0\l  store i64 %60, ptr %retval.i.i, align 16\l  %61 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i.i, i32 0, i32 1\l  %62 = extractvalue \{ i64, i64 \} %59, 1\l  store i64 %62, ptr %61, align 8\l  %63 = load \{ i64, i64 \}, ptr %retval.i.i, align 16\l  %64 = extractvalue \{ i64, i64 \} %63, 0\l  store i64 %64, ptr %ref.tmp11.i, align 16\l  %65 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp11.i, i32 0, i32 1\l  %66 = extractvalue \{ i64, i64 \} %63, 1\l  store i64 %66, ptr %65, align 8\l  store ptr %this5.i, ptr %this.addr.i5, align 8\l  store ptr %ref.tmp.i, ptr %init.addr.i, align 8\l  store ptr %ref.tmp7.i, ptr %init.addr2.i, align 8\l  store ptr %ref.tmp11.i, ptr %init.addr4.i, align 8\l  %this5.i6 = load ptr, ptr %this.addr.i5, align 8\l  %67 = load ptr, ptr %init.addr.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %this5.i6, ptr align 16 %67,\l... i64 16, i1 false)\l  %arrayinit.element.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %this5.i6, i64 1\l  %68 = load ptr, ptr %init.addr2.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element.i, ptr\l... align 16 %68, i64 16, i1 false)\l  %arrayinit.element6.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element.i, i64 1\l  %69 = load ptr, ptr %init.addr4.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element6.i, ptr\l... align 16 %69, i64 16, i1 false)\l  store ptr %this5.i, ptr %this.addr.i7, align 8\l  %this1.i = load ptr, ptr %this.addr.i7, align 8\l  %70 = load ptr, ptr %args.addr.i, align 8\l  %71 = load ptr, ptr %args.addr2.i, align 8\l  %72 = load ptr, ptr %args.addr4.i, align 8\l  store ptr null, ptr %.addr.i, align 8\l  store i32 0, ptr %.addr1.i, align 4\l  store i32 0, ptr %.addr2.i, align 4\l  store ptr %70, ptr %.addr3.i, align 8\l  store ptr %71, ptr %.addr4.i, align 8\l  store ptr %72, ptr %.addr5.i, align 8\l  ret void\l}"];
}
