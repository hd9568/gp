digraph "CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRlRdS6_S6_S6_EEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSB_' function" {
	label="CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRlRdS6_S6_S6_EEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSB_' function";

	Node0x562ebb935b80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr.i95 = alloca ptr, align 8\l  %val.addr.i96 = alloca double, align 8\l  %this.addr.i92 = alloca ptr, align 8\l  %val.addr.i93 = alloca double, align 8\l  %this.addr.i89 = alloca ptr, align 8\l  %val.addr.i90 = alloca double, align 8\l  %this.addr.i86 = alloca ptr, align 8\l  %val.addr.i87 = alloca double, align 8\l  %this.addr.i83 = alloca ptr, align 8\l  %val.addr.i84 = alloca double, align 8\l  %this.addr.i80 = alloca ptr, align 8\l  %val.addr.i81 = alloca double, align 8\l  %this.addr.i77 = alloca ptr, align 8\l  %val.addr.i78 = alloca double, align 8\l  %this.addr.i74 = alloca ptr, align 8\l  %val.addr.i75 = alloca double, align 8\l  %retval.i64 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i65 = alloca ptr, align 8\l  %arg.i66 = alloca ptr, align 8\l  %ref.tmp.i67 = alloca double, align 8\l  %ref.tmp1.i68 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i69 = alloca i8, align 1\l  %formattable_const.i70 = alloca i8, align 1\l  %formattable_pointer.i71 = alloca i8, align 1\l  %formattable.i72 = alloca i8, align 1\l  %retval.i54 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i55 = alloca ptr, align 8\l  %arg.i56 = alloca ptr, align 8\l  %ref.tmp.i57 = alloca double, align 8\l  %ref.tmp1.i58 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i59 = alloca i8, align 1\l  %formattable_const.i60 = alloca i8, align 1\l  %formattable_pointer.i61 = alloca i8, align 1\l  %formattable.i62 = alloca i8, align 1\l  %retval.i44 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i45 = alloca ptr, align 8\l  %arg.i46 = alloca ptr, align 8\l  %ref.tmp.i47 = alloca double, align 8\l  %ref.tmp1.i48 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i49 = alloca i8, align 1\l  %formattable_const.i50 = alloca i8, align 1\l  %formattable_pointer.i51 = alloca i8, align 1\l  %formattable.i52 = alloca i8, align 1\l  %retval.i34 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i35 = alloca ptr, align 8\l  %arg.i36 = alloca ptr, align 8\l  %ref.tmp.i37 = alloca double, align 8\l  %ref.tmp1.i38 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i39 = alloca i8, align 1\l  %formattable_const.i40 = alloca i8, align 1\l  %formattable_pointer.i41 = alloca i8, align 1\l  %formattable.i42 = alloca i8, align 1\l  %this.addr.i31 = alloca ptr, align 8\l  %val.addr.i32 = alloca i64, align 8\l  %this.addr.i28 = alloca ptr, align 8\l  %val.addr.i29 = alloca i64, align 8\l  %retval.i24 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i25 = alloca ptr, align 8\l  %arg.i = alloca ptr, align 8\l  %ref.tmp.i26 = alloca i64, align 8\l  %ref.tmp1.i = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i = alloca i8, align 1\l  %formattable_const.i = alloca i8, align 1\l  %formattable_pointer.i = alloca i8, align 1\l  %formattable.i = alloca i8, align 1\l  %this.addr.i23 = alloca ptr, align 8\l  %.addr.i = alloca ptr, align 8\l  %.addr1.i = alloca i32, align 4\l  %.addr2.i = alloca i32, align 4\l  %.addr3.i = alloca ptr, align 8\l  %.addr4.i = alloca ptr, align 8\l  %.addr5.i = alloca ptr, align 8\l  %.addr6.i = alloca ptr, align 8\l  %.addr7.i = alloca ptr, align 8\l  %this.addr.i21 = alloca ptr, align 8\l  %init.addr.i = alloca ptr, align 8\l  %init.addr2.i = alloca ptr, align 8\l  %init.addr4.i = alloca ptr, align 8\l  %init.addr6.i = alloca ptr, align 8\l  %init.addr8.i = alloca ptr, align 8\l  %retval.i18 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i19 = alloca ptr, align 8\l  %retval.i15 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i16 = alloca ptr, align 8\l  %retval.i12 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i13 = alloca ptr, align 8\l  %retval.i10 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i11 = alloca ptr, align 8\l  %retval.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i = alloca ptr, align 8\l  %this.addr.i = alloca ptr, align 8\l  %args.addr.i = alloca ptr, align 8\l  %args.addr2.i = alloca ptr, align 8\l  %args.addr4.i = alloca ptr, align 8\l  %args.addr6.i = alloca ptr, align 8\l  %args.addr8.i = alloca ptr, align 8\l  %ref.tmp.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp11.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp15.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp19.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp23.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %args.addr = alloca ptr, align 8\l  %args.addr2 = alloca ptr, align 8\l  %args.addr4 = alloca ptr, align 8\l  %args.addr6 = alloca ptr, align 8\l  %args.addr8 = alloca ptr, align 8\l  store ptr %args, ptr %args.addr, align 8\l  store ptr %args1, ptr %args.addr2, align 8\l  store ptr %args3, ptr %args.addr4, align 8\l  store ptr %args5, ptr %args.addr6, align 8\l  store ptr %args7, ptr %args.addr8, align 8\l  %0 = load ptr, ptr %args.addr, align 8\l  %1 = load ptr, ptr %args.addr2, align 8\l  %2 = load ptr, ptr %args.addr4, align 8\l  %3 = load ptr, ptr %args.addr6, align 8\l  %4 = load ptr, ptr %args.addr8, align 8\l  store ptr %agg.result, ptr %this.addr.i, align 8\l  store ptr %0, ptr %args.addr.i, align 8\l  store ptr %1, ptr %args.addr2.i, align 8\l  store ptr %2, ptr %args.addr4.i, align 8\l  store ptr %3, ptr %args.addr6.i, align 8\l  store ptr %4, ptr %args.addr8.i, align 8\l  %this9.i = load ptr, ptr %this.addr.i, align 8\l  %5 = load ptr, ptr %args.addr.i, align 8\l  store ptr %5, ptr %val.addr.i, align 8\l  %6 = load ptr, ptr %val.addr.i, align 8\l  store ptr %6, ptr %val.addr.i25, align 8\l  %7 = load ptr, ptr %val.addr.i25, align 8\l  %8 = load i64, ptr %7, align 8\l  store ptr %ref.tmp1.i, ptr %this.addr.i28, align 8\l  store i64 %8, ptr %val.addr.i29, align 8\l  %this1.i30 = load ptr, ptr %this.addr.i28, align 8\l  %9 = load i64, ptr %val.addr.i29, align 8\l  store i64 %9, ptr %ref.tmp.i26, align 8\l  store ptr %ref.tmp.i26, ptr %arg.i, align 8\l  store i8 1, ptr %formattable_char.i, align 1\l  store i8 1, ptr %formattable_const.i, align 1\l  store i8 1, ptr %formattable_pointer.i, align 1\l  store i8 1, ptr %formattable.i, align 1\l  %10 = load ptr, ptr %arg.i, align 8\l  %11 = load i64, ptr %10, align 8\l  store ptr %retval.i24, ptr %this.addr.i31, align 8\l  store i64 %11, ptr %val.addr.i32, align 8\l  %this1.i33 = load ptr, ptr %this.addr.i31, align 8\l  %12 = load i64, ptr %val.addr.i32, align 8\l  store i64 %12, ptr %this1.i33, align 16\l  %13 = load \{ i64, i64 \}, ptr %retval.i24, align 16\l  %14 = extractvalue \{ i64, i64 \} %13, 0\l  store i64 %14, ptr %retval.i, align 16\l  %15 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i, i32 0, i32 1\l  %16 = extractvalue \{ i64, i64 \} %13, 1\l  store i64 %16, ptr %15, align 8\l  %17 = load \{ i64, i64 \}, ptr %retval.i, align 16\l  %18 = extractvalue \{ i64, i64 \} %17, 0\l  store i64 %18, ptr %ref.tmp.i, align 16\l  %19 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp.i, i32 0, i32 1\l  %20 = extractvalue \{ i64, i64 \} %17, 1\l  store i64 %20, ptr %19, align 8\l  %21 = load ptr, ptr %args.addr2.i, align 8\l  store ptr %21, ptr %val.addr.i19, align 8\l  %22 = load ptr, ptr %val.addr.i19, align 8\l  store ptr %22, ptr %val.addr.i35, align 8\l  %23 = load ptr, ptr %val.addr.i35, align 8\l  %24 = load double, ptr %23, align 8\l  store ptr %ref.tmp1.i38, ptr %this.addr.i83, align 8\l  store double %24, ptr %val.addr.i84, align 8\l  %this1.i85 = load ptr, ptr %this.addr.i83, align 8\l  %25 = load double, ptr %val.addr.i84, align 8\l  store double %25, ptr %ref.tmp.i37, align 8\l  store ptr %ref.tmp.i37, ptr %arg.i36, align 8\l  store i8 1, ptr %formattable_char.i39, align 1\l  store i8 1, ptr %formattable_const.i40, align 1\l  store i8 1, ptr %formattable_pointer.i41, align 1\l  store i8 1, ptr %formattable.i42, align 1\l  %26 = load ptr, ptr %arg.i36, align 8\l  %27 = load double, ptr %26, align 8\l  store ptr %retval.i34, ptr %this.addr.i95, align 8\l  store double %27, ptr %val.addr.i96, align 8\l  %this1.i97 = load ptr, ptr %this.addr.i95, align 8\l  %28 = load double, ptr %val.addr.i96, align 8\l  store double %28, ptr %this1.i97, align 16\l  %29 = load \{ i64, i64 \}, ptr %retval.i34, align 16\l  %30 = extractvalue \{ i64, i64 \} %29, 0\l  store i64 %30, ptr %retval.i18, align 16\l  %31 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i18, i32 0, i32 1\l  %32 = extractvalue \{ i64, i64 \} %29, 1\l  store i64 %32, ptr %31, align 8\l  %33 = load \{ i64, i64 \}, ptr %retval.i18, align 16\l  %34 = extractvalue \{ i64, i64 \} %33, 0\l  store i64 %34, ptr %ref.tmp11.i, align 16\l  %35 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp11.i, i32 0, i32 1\l  %36 = extractvalue \{ i64, i64 \} %33, 1\l  store i64 %36, ptr %35, align 8\l  %37 = load ptr, ptr %args.addr4.i, align 8\l  store ptr %37, ptr %val.addr.i16, align 8\l  %38 = load ptr, ptr %val.addr.i16, align 8\l  store ptr %38, ptr %val.addr.i45, align 8\l  %39 = load ptr, ptr %val.addr.i45, align 8\l  %40 = load double, ptr %39, align 8\l  store ptr %ref.tmp1.i48, ptr %this.addr.i80, align 8\l  store double %40, ptr %val.addr.i81, align 8\l  %this1.i82 = load ptr, ptr %this.addr.i80, align 8\l  %41 = load double, ptr %val.addr.i81, align 8\l  store double %41, ptr %ref.tmp.i47, align 8\l  store ptr %ref.tmp.i47, ptr %arg.i46, align 8\l  store i8 1, ptr %formattable_char.i49, align 1\l  store i8 1, ptr %formattable_const.i50, align 1\l  store i8 1, ptr %formattable_pointer.i51, align 1\l  store i8 1, ptr %formattable.i52, align 1\l  %42 = load ptr, ptr %arg.i46, align 8\l  %43 = load double, ptr %42, align 8\l  store ptr %retval.i44, ptr %this.addr.i92, align 8\l  store double %43, ptr %val.addr.i93, align 8\l  %this1.i94 = load ptr, ptr %this.addr.i92, align 8\l  %44 = load double, ptr %val.addr.i93, align 8\l  store double %44, ptr %this1.i94, align 16\l  %45 = load \{ i64, i64 \}, ptr %retval.i44, align 16\l  %46 = extractvalue \{ i64, i64 \} %45, 0\l  store i64 %46, ptr %retval.i15, align 16\l  %47 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i15, i32 0, i32 1\l  %48 = extractvalue \{ i64, i64 \} %45, 1\l  store i64 %48, ptr %47, align 8\l  %49 = load \{ i64, i64 \}, ptr %retval.i15, align 16\l  %50 = extractvalue \{ i64, i64 \} %49, 0\l  store i64 %50, ptr %ref.tmp15.i, align 16\l  %51 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp15.i, i32 0, i32 1\l  %52 = extractvalue \{ i64, i64 \} %49, 1\l  store i64 %52, ptr %51, align 8\l  %53 = load ptr, ptr %args.addr6.i, align 8\l  store ptr %53, ptr %val.addr.i13, align 8\l  %54 = load ptr, ptr %val.addr.i13, align 8\l  store ptr %54, ptr %val.addr.i55, align 8\l  %55 = load ptr, ptr %val.addr.i55, align 8\l  %56 = load double, ptr %55, align 8\l  store ptr %ref.tmp1.i58, ptr %this.addr.i77, align 8\l  store double %56, ptr %val.addr.i78, align 8\l  %this1.i79 = load ptr, ptr %this.addr.i77, align 8\l  %57 = load double, ptr %val.addr.i78, align 8\l  store double %57, ptr %ref.tmp.i57, align 8\l  store ptr %ref.tmp.i57, ptr %arg.i56, align 8\l  store i8 1, ptr %formattable_char.i59, align 1\l  store i8 1, ptr %formattable_const.i60, align 1\l  store i8 1, ptr %formattable_pointer.i61, align 1\l  store i8 1, ptr %formattable.i62, align 1\l  %58 = load ptr, ptr %arg.i56, align 8\l  %59 = load double, ptr %58, align 8\l  store ptr %retval.i54, ptr %this.addr.i89, align 8\l  store double %59, ptr %val.addr.i90, align 8\l  %this1.i91 = load ptr, ptr %this.addr.i89, align 8\l  %60 = load double, ptr %val.addr.i90, align 8\l  store double %60, ptr %this1.i91, align 16\l  %61 = load \{ i64, i64 \}, ptr %retval.i54, align 16\l  %62 = extractvalue \{ i64, i64 \} %61, 0\l  store i64 %62, ptr %retval.i12, align 16\l  %63 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i12, i32 0, i32 1\l  %64 = extractvalue \{ i64, i64 \} %61, 1\l  store i64 %64, ptr %63, align 8\l  %65 = load \{ i64, i64 \}, ptr %retval.i12, align 16\l  %66 = extractvalue \{ i64, i64 \} %65, 0\l  store i64 %66, ptr %ref.tmp19.i, align 16\l  %67 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp19.i, i32 0, i32 1\l  %68 = extractvalue \{ i64, i64 \} %65, 1\l  store i64 %68, ptr %67, align 8\l  %69 = load ptr, ptr %args.addr8.i, align 8\l  store ptr %69, ptr %val.addr.i11, align 8\l  %70 = load ptr, ptr %val.addr.i11, align 8\l  store ptr %70, ptr %val.addr.i65, align 8\l  %71 = load ptr, ptr %val.addr.i65, align 8\l  %72 = load double, ptr %71, align 8\l  store ptr %ref.tmp1.i68, ptr %this.addr.i74, align 8\l  store double %72, ptr %val.addr.i75, align 8\l  %this1.i76 = load ptr, ptr %this.addr.i74, align 8\l  %73 = load double, ptr %val.addr.i75, align 8\l  store double %73, ptr %ref.tmp.i67, align 8\l  store ptr %ref.tmp.i67, ptr %arg.i66, align 8\l  store i8 1, ptr %formattable_char.i69, align 1\l  store i8 1, ptr %formattable_const.i70, align 1\l  store i8 1, ptr %formattable_pointer.i71, align 1\l  store i8 1, ptr %formattable.i72, align 1\l  %74 = load ptr, ptr %arg.i66, align 8\l  %75 = load double, ptr %74, align 8\l  store ptr %retval.i64, ptr %this.addr.i86, align 8\l  store double %75, ptr %val.addr.i87, align 8\l  %this1.i88 = load ptr, ptr %this.addr.i86, align 8\l  %76 = load double, ptr %val.addr.i87, align 8\l  store double %76, ptr %this1.i88, align 16\l  %77 = load \{ i64, i64 \}, ptr %retval.i64, align 16\l  %78 = extractvalue \{ i64, i64 \} %77, 0\l  store i64 %78, ptr %retval.i10, align 16\l  %79 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i10, i32 0, i32 1\l  %80 = extractvalue \{ i64, i64 \} %77, 1\l  store i64 %80, ptr %79, align 8\l  %81 = load \{ i64, i64 \}, ptr %retval.i10, align 16\l  %82 = extractvalue \{ i64, i64 \} %81, 0\l  store i64 %82, ptr %ref.tmp23.i, align 16\l  %83 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp23.i, i32 0, i32 1\l  %84 = extractvalue \{ i64, i64 \} %81, 1\l  store i64 %84, ptr %83, align 8\l  store ptr %this9.i, ptr %this.addr.i21, align 8\l  store ptr %ref.tmp.i, ptr %init.addr.i, align 8\l  store ptr %ref.tmp11.i, ptr %init.addr2.i, align 8\l  store ptr %ref.tmp15.i, ptr %init.addr4.i, align 8\l  store ptr %ref.tmp19.i, ptr %init.addr6.i, align 8\l  store ptr %ref.tmp23.i, ptr %init.addr8.i, align 8\l  %this9.i22 = load ptr, ptr %this.addr.i21, align 8\l  %85 = load ptr, ptr %init.addr.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %this9.i22, ptr align 16 %85,\l... i64 16, i1 false)\l  %arrayinit.element.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %this9.i22, i64 1\l  %86 = load ptr, ptr %init.addr2.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element.i, ptr\l... align 16 %86, i64 16, i1 false)\l  %arrayinit.element10.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element.i, i64 1\l  %87 = load ptr, ptr %init.addr4.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element10.i, ptr\l... align 16 %87, i64 16, i1 false)\l  %arrayinit.element11.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element10.i, i64 1\l  %88 = load ptr, ptr %init.addr6.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element11.i, ptr\l... align 16 %88, i64 16, i1 false)\l  %arrayinit.element12.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element11.i, i64 1\l  %89 = load ptr, ptr %init.addr8.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element12.i, ptr\l... align 16 %89, i64 16, i1 false)\l  store ptr %this9.i, ptr %this.addr.i23, align 8\l  %this1.i = load ptr, ptr %this.addr.i23, align 8\l  %90 = load ptr, ptr %args.addr.i, align 8\l  %91 = load ptr, ptr %args.addr2.i, align 8\l  %92 = load ptr, ptr %args.addr4.i, align 8\l  %93 = load ptr, ptr %args.addr6.i, align 8\l  %94 = load ptr, ptr %args.addr8.i, align 8\l  store ptr null, ptr %.addr.i, align 8\l  store i32 0, ptr %.addr1.i, align 4\l  store i32 0, ptr %.addr2.i, align 4\l  store ptr %90, ptr %.addr3.i, align 8\l  store ptr %91, ptr %.addr4.i, align 8\l  store ptr %92, ptr %.addr5.i, align 8\l  store ptr %93, ptr %.addr6.i, align 8\l  store ptr %94, ptr %.addr7.i, align 8\l  ret void\l}"];
}
