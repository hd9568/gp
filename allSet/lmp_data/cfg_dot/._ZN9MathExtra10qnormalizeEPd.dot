digraph "CFG for '_ZN9MathExtra10qnormalizeEPd' function" {
	label="CFG for '_ZN9MathExtra10qnormalizeEPd' function";

	Node0x55eeb4b69180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %q.addr = alloca ptr, align 8\l  %norm = alloca double, align 8\l  store ptr %q, ptr %q.addr, align 8\l  %0 = load ptr, ptr %q.addr, align 8\l  %arrayidx = getelementptr inbounds double, ptr %0, i64 0\l  %1 = load double, ptr %arrayidx, align 8\l  %2 = load ptr, ptr %q.addr, align 8\l  %arrayidx1 = getelementptr inbounds double, ptr %2, i64 0\l  %3 = load double, ptr %arrayidx1, align 8\l  %4 = load ptr, ptr %q.addr, align 8\l  %arrayidx2 = getelementptr inbounds double, ptr %4, i64 1\l  %5 = load double, ptr %arrayidx2, align 8\l  %6 = load ptr, ptr %q.addr, align 8\l  %arrayidx3 = getelementptr inbounds double, ptr %6, i64 1\l  %7 = load double, ptr %arrayidx3, align 8\l  %mul4 = fmul double %5, %7\l  %8 = call double @llvm.fmuladd.f64(double %1, double %3, double %mul4)\l  %9 = load ptr, ptr %q.addr, align 8\l  %arrayidx5 = getelementptr inbounds double, ptr %9, i64 2\l  %10 = load double, ptr %arrayidx5, align 8\l  %11 = load ptr, ptr %q.addr, align 8\l  %arrayidx6 = getelementptr inbounds double, ptr %11, i64 2\l  %12 = load double, ptr %arrayidx6, align 8\l  %13 = call double @llvm.fmuladd.f64(double %10, double %12, double %8)\l  %14 = load ptr, ptr %q.addr, align 8\l  %arrayidx7 = getelementptr inbounds double, ptr %14, i64 3\l  %15 = load double, ptr %arrayidx7, align 8\l  %16 = load ptr, ptr %q.addr, align 8\l  %arrayidx8 = getelementptr inbounds double, ptr %16, i64 3\l  %17 = load double, ptr %arrayidx8, align 8\l  %18 = call double @llvm.fmuladd.f64(double %15, double %17, double %13)\l  %call = call double @sqrt(double noundef %18) #12\l  %div = fdiv double 1.000000e+00, %call\l  store double %div, ptr %norm, align 8\l  %19 = load double, ptr %norm, align 8\l  %20 = load ptr, ptr %q.addr, align 8\l  %arrayidx9 = getelementptr inbounds double, ptr %20, i64 0\l  %21 = load double, ptr %arrayidx9, align 8\l  %mul = fmul double %21, %19\l  store double %mul, ptr %arrayidx9, align 8\l  %22 = load double, ptr %norm, align 8\l  %23 = load ptr, ptr %q.addr, align 8\l  %arrayidx10 = getelementptr inbounds double, ptr %23, i64 1\l  %24 = load double, ptr %arrayidx10, align 8\l  %mul11 = fmul double %24, %22\l  store double %mul11, ptr %arrayidx10, align 8\l  %25 = load double, ptr %norm, align 8\l  %26 = load ptr, ptr %q.addr, align 8\l  %arrayidx12 = getelementptr inbounds double, ptr %26, i64 2\l  %27 = load double, ptr %arrayidx12, align 8\l  %mul13 = fmul double %27, %25\l  store double %mul13, ptr %arrayidx12, align 8\l  %28 = load double, ptr %norm, align 8\l  %29 = load ptr, ptr %q.addr, align 8\l  %arrayidx14 = getelementptr inbounds double, ptr %29, i64 3\l  %30 = load double, ptr %arrayidx14, align 8\l  %mul15 = fmul double %30, %28\l  store double %mul15, ptr %arrayidx14, align 8\l  ret void\l}"];
}
