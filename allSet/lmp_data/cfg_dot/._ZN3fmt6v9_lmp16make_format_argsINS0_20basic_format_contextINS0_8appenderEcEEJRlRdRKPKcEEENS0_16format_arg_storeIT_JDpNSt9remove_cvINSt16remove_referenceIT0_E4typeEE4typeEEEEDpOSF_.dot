digraph "CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRlRdRKPKcEEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSF_' function" {
	label="CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRlRdRKPKcEEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSF_' function";

	Node0x55e06941c550 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr.i3.i = alloca ptr, align 8\l  %val.addr.i4.i = alloca ptr, align 8\l  %this.addr.i.i8 = alloca ptr, align 8\l  %val.addr.i.i9 = alloca ptr, align 8\l  %retval.i10 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i11 = alloca ptr, align 8\l  %arg.i = alloca ptr, align 8\l  %ref.tmp.i12 = alloca ptr, align 8\l  %ref.tmp1.i = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i = alloca i8, align 1\l  %formattable_const.i = alloca i8, align 1\l  %formattable_pointer.i = alloca i8, align 1\l  %formattable.i = alloca i8, align 1\l  %this.addr.i7 = alloca ptr, align 8\l  %.addr.i = alloca ptr, align 8\l  %.addr1.i = alloca i32, align 4\l  %.addr2.i = alloca i32, align 4\l  %.addr3.i = alloca ptr, align 8\l  %.addr4.i = alloca ptr, align 8\l  %.addr5.i = alloca ptr, align 8\l  %this.addr.i5 = alloca ptr, align 8\l  %init.addr.i = alloca ptr, align 8\l  %init.addr2.i = alloca ptr, align 8\l  %init.addr4.i = alloca ptr, align 8\l  %retval.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i = alloca ptr, align 8\l  %this.addr.i39.i = alloca ptr, align 8\l  %val.addr.i40.i = alloca i64, align 8\l  %this.addr.i36.i = alloca ptr, align 8\l  %val.addr.i37.i = alloca i64, align 8\l  %retval.i26.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i27.i = alloca ptr, align 8\l  %arg.i28.i = alloca ptr, align 8\l  %ref.tmp.i29.i = alloca i64, align 8\l  %ref.tmp1.i30.i = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i31.i = alloca i8, align 1\l  %formattable_const.i32.i = alloca i8, align 1\l  %formattable_pointer.i33.i = alloca i8, align 1\l  %formattable.i34.i = alloca i8, align 1\l  %retval.i24.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i25.i = alloca ptr, align 8\l  %this.addr.i21.i = alloca ptr, align 8\l  %val.addr.i22.i = alloca double, align 8\l  %this.addr.i.i = alloca ptr, align 8\l  %val.addr.i20.i = alloca double, align 8\l  %retval.i17.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i18.i = alloca ptr, align 8\l  %arg.i.i = alloca ptr, align 8\l  %ref.tmp.i.i = alloca double, align 8\l  %ref.tmp1.i.i = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i.i = alloca i8, align 1\l  %formattable_const.i.i = alloca i8, align 1\l  %formattable_pointer.i.i = alloca i8, align 1\l  %formattable.i.i = alloca i8, align 1\l  %retval.i.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i.i = alloca ptr, align 8\l  %this.addr.i = alloca ptr, align 8\l  %args.addr.i = alloca ptr, align 8\l  %args.addr2.i = alloca ptr, align 8\l  %args.addr4.i = alloca ptr, align 8\l  %ref.tmp.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp7.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp11.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %args.addr = alloca ptr, align 8\l  %args.addr2 = alloca ptr, align 8\l  %args.addr4 = alloca ptr, align 8\l  store ptr %args, ptr %args.addr, align 8\l  store ptr %args1, ptr %args.addr2, align 8\l  store ptr %args3, ptr %args.addr4, align 8\l  %0 = load ptr, ptr %args.addr, align 8\l  %1 = load ptr, ptr %args.addr2, align 8\l  %2 = load ptr, ptr %args.addr4, align 8\l  store ptr %agg.result, ptr %this.addr.i, align 8\l  store ptr %0, ptr %args.addr.i, align 8\l  store ptr %1, ptr %args.addr2.i, align 8\l  store ptr %2, ptr %args.addr4.i, align 8\l  %this5.i = load ptr, ptr %this.addr.i, align 8\l  %3 = load ptr, ptr %args.addr.i, align 8\l  store ptr %3, ptr %val.addr.i25.i, align 8\l  %4 = load ptr, ptr %val.addr.i25.i, align 8\l  store ptr %4, ptr %val.addr.i27.i, align 8\l  %5 = load ptr, ptr %val.addr.i27.i, align 8\l  %6 = load i64, ptr %5, align 8\l  store ptr %ref.tmp1.i30.i, ptr %this.addr.i36.i, align 8\l  store i64 %6, ptr %val.addr.i37.i, align 8\l  %this1.i38.i = load ptr, ptr %this.addr.i36.i, align 8\l  %7 = load i64, ptr %val.addr.i37.i, align 8\l  store i64 %7, ptr %ref.tmp.i29.i, align 8\l  store ptr %ref.tmp.i29.i, ptr %arg.i28.i, align 8\l  store i8 1, ptr %formattable_char.i31.i, align 1\l  store i8 1, ptr %formattable_const.i32.i, align 1\l  store i8 1, ptr %formattable_pointer.i33.i, align 1\l  store i8 1, ptr %formattable.i34.i, align 1\l  %8 = load ptr, ptr %arg.i28.i, align 8\l  %9 = load i64, ptr %8, align 8\l  store ptr %retval.i26.i, ptr %this.addr.i39.i, align 8\l  store i64 %9, ptr %val.addr.i40.i, align 8\l  %this1.i41.i = load ptr, ptr %this.addr.i39.i, align 8\l  %10 = load i64, ptr %val.addr.i40.i, align 8\l  store i64 %10, ptr %this1.i41.i, align 16\l  %11 = load \{ i64, i64 \}, ptr %retval.i26.i, align 16\l  %12 = extractvalue \{ i64, i64 \} %11, 0\l  store i64 %12, ptr %retval.i24.i, align 16\l  %13 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i24.i, i32 0, i32 1\l  %14 = extractvalue \{ i64, i64 \} %11, 1\l  store i64 %14, ptr %13, align 8\l  %15 = load \{ i64, i64 \}, ptr %retval.i24.i, align 16\l  %16 = extractvalue \{ i64, i64 \} %15, 0\l  store i64 %16, ptr %ref.tmp.i, align 16\l  %17 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp.i, i32 0, i32 1\l  %18 = extractvalue \{ i64, i64 \} %15, 1\l  store i64 %18, ptr %17, align 8\l  %19 = load ptr, ptr %args.addr2.i, align 8\l  store ptr %19, ptr %val.addr.i.i, align 8\l  %20 = load ptr, ptr %val.addr.i.i, align 8\l  store ptr %20, ptr %val.addr.i18.i, align 8\l  %21 = load ptr, ptr %val.addr.i18.i, align 8\l  %22 = load double, ptr %21, align 8\l  store ptr %ref.tmp1.i.i, ptr %this.addr.i.i, align 8\l  store double %22, ptr %val.addr.i20.i, align 8\l  %this1.i.i = load ptr, ptr %this.addr.i.i, align 8\l  %23 = load double, ptr %val.addr.i20.i, align 8\l  store double %23, ptr %ref.tmp.i.i, align 8\l  store ptr %ref.tmp.i.i, ptr %arg.i.i, align 8\l  store i8 1, ptr %formattable_char.i.i, align 1\l  store i8 1, ptr %formattable_const.i.i, align 1\l  store i8 1, ptr %formattable_pointer.i.i, align 1\l  store i8 1, ptr %formattable.i.i, align 1\l  %24 = load ptr, ptr %arg.i.i, align 8\l  %25 = load double, ptr %24, align 8\l  store ptr %retval.i17.i, ptr %this.addr.i21.i, align 8\l  store double %25, ptr %val.addr.i22.i, align 8\l  %this1.i23.i = load ptr, ptr %this.addr.i21.i, align 8\l  %26 = load double, ptr %val.addr.i22.i, align 8\l  store double %26, ptr %this1.i23.i, align 16\l  %27 = load \{ i64, i64 \}, ptr %retval.i17.i, align 16\l  %28 = extractvalue \{ i64, i64 \} %27, 0\l  store i64 %28, ptr %retval.i.i, align 16\l  %29 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i.i, i32 0, i32 1\l  %30 = extractvalue \{ i64, i64 \} %27, 1\l  store i64 %30, ptr %29, align 8\l  %31 = load \{ i64, i64 \}, ptr %retval.i.i, align 16\l  %32 = extractvalue \{ i64, i64 \} %31, 0\l  store i64 %32, ptr %ref.tmp7.i, align 16\l  %33 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp7.i, i32 0, i32 1\l  %34 = extractvalue \{ i64, i64 \} %31, 1\l  store i64 %34, ptr %33, align 8\l  %35 = load ptr, ptr %args.addr4.i, align 8\l  store ptr %35, ptr %val.addr.i, align 8\l  %36 = load ptr, ptr %val.addr.i, align 8\l  store ptr %36, ptr %val.addr.i11, align 8\l  %37 = load ptr, ptr %val.addr.i11, align 8\l  %38 = load ptr, ptr %37, align 8\l  store ptr %ref.tmp1.i, ptr %this.addr.i3.i, align 8\l  store ptr %38, ptr %val.addr.i4.i, align 8\l  %this1.i5.i = load ptr, ptr %this.addr.i3.i, align 8\l  %39 = load ptr, ptr %val.addr.i4.i, align 8\l  store ptr %39, ptr %ref.tmp.i12, align 8\l  store ptr %ref.tmp.i12, ptr %arg.i, align 8\l  store i8 1, ptr %formattable_char.i, align 1\l  store i8 1, ptr %formattable_const.i, align 1\l  store i8 1, ptr %formattable_pointer.i, align 1\l  store i8 1, ptr %formattable.i, align 1\l  %40 = load ptr, ptr %arg.i, align 8\l  %41 = load ptr, ptr %40, align 8\l  store ptr %retval.i10, ptr %this.addr.i.i8, align 8\l  store ptr %41, ptr %val.addr.i.i9, align 8\l  %this1.i.i13 = load ptr, ptr %this.addr.i.i8, align 8\l  %42 = load ptr, ptr %val.addr.i.i9, align 8\l  store ptr %42, ptr %this1.i.i13, align 16\l  %43 = load \{ i64, i64 \}, ptr %retval.i10, align 16\l  %44 = extractvalue \{ i64, i64 \} %43, 0\l  store i64 %44, ptr %retval.i, align 16\l  %45 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i, i32 0, i32 1\l  %46 = extractvalue \{ i64, i64 \} %43, 1\l  store i64 %46, ptr %45, align 8\l  %47 = load \{ i64, i64 \}, ptr %retval.i, align 16\l  %48 = extractvalue \{ i64, i64 \} %47, 0\l  store i64 %48, ptr %ref.tmp11.i, align 16\l  %49 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp11.i, i32 0, i32 1\l  %50 = extractvalue \{ i64, i64 \} %47, 1\l  store i64 %50, ptr %49, align 8\l  store ptr %this5.i, ptr %this.addr.i5, align 8\l  store ptr %ref.tmp.i, ptr %init.addr.i, align 8\l  store ptr %ref.tmp7.i, ptr %init.addr2.i, align 8\l  store ptr %ref.tmp11.i, ptr %init.addr4.i, align 8\l  %this5.i6 = load ptr, ptr %this.addr.i5, align 8\l  %51 = load ptr, ptr %init.addr.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %this5.i6, ptr align 16 %51,\l... i64 16, i1 false)\l  %arrayinit.element.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %this5.i6, i64 1\l  %52 = load ptr, ptr %init.addr2.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element.i, ptr\l... align 16 %52, i64 16, i1 false)\l  %arrayinit.element6.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element.i, i64 1\l  %53 = load ptr, ptr %init.addr4.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element6.i, ptr\l... align 16 %53, i64 16, i1 false)\l  store ptr %this5.i, ptr %this.addr.i7, align 8\l  %this1.i = load ptr, ptr %this.addr.i7, align 8\l  %54 = load ptr, ptr %args.addr.i, align 8\l  %55 = load ptr, ptr %args.addr2.i, align 8\l  %56 = load ptr, ptr %args.addr4.i, align 8\l  store ptr null, ptr %.addr.i, align 8\l  store i32 0, ptr %.addr1.i, align 4\l  store i32 0, ptr %.addr2.i, align 4\l  store ptr %54, ptr %.addr3.i, align 8\l  store ptr %55, ptr %.addr4.i, align 8\l  store ptr %56, ptr %.addr5.i, align 8\l  ret void\l}"];
}
