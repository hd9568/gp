digraph "CFG for '_ZN9LAMMPS_NS13FixWallRegion7colloidEdd' function" {
	label="CFG for '_ZN9LAMMPS_NS13FixWallRegion7colloidEdd' function";

	Node0x5591c772d380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %r.addr = alloca double, align 8\l  %rad.addr = alloca double, align 8\l  %new_coeff2 = alloca double, align 8\l  %diam = alloca double, align 8\l  %rad2 = alloca double, align 8\l  %rad4 = alloca double, align 8\l  %rad8 = alloca double, align 8\l  %delta2 = alloca double, align 8\l  %rinv = alloca double, align 8\l  %r2inv = alloca double, align 8\l  %r4inv = alloca double, align 8\l  %r8inv = alloca double, align 8\l  %r2 = alloca double, align 8\l  %rinv2 = alloca double, align 8\l  %r2inv2 = alloca double, align 8\l  %r4inv2 = alloca double, align 8\l  %r3 = alloca double, align 8\l  %rinv3 = alloca double, align 8\l  %r2inv3 = alloca double, align 8\l  %r4inv3 = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store double %r, ptr %r.addr, align 8\l  store double %rad, ptr %rad.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %coeff2 = getelementptr inbounds %\"class.LAMMPS_NS::FixWallRegion\", ptr\l... %this1, i32 0, i32 13\l  %0 = load double, ptr %coeff2, align 8\l  %1 = load double, ptr %rad.addr, align 8\l  %mul = fmul double %0, %1\l  %2 = load double, ptr %rad.addr, align 8\l  %mul2 = fmul double %mul, %2\l  %3 = load double, ptr %rad.addr, align 8\l  %mul3 = fmul double %mul2, %3\l  store double %mul3, ptr %new_coeff2, align 8\l  %4 = load double, ptr %rad.addr, align 8\l  %mul4 = fmul double 2.000000e+00, %4\l  store double %mul4, ptr %diam, align 8\l  %5 = load double, ptr %rad.addr, align 8\l  %6 = load double, ptr %rad.addr, align 8\l  %mul5 = fmul double %5, %6\l  store double %mul5, ptr %rad2, align 8\l  %7 = load double, ptr %rad2, align 8\l  %8 = load double, ptr %rad2, align 8\l  %mul6 = fmul double %7, %8\l  store double %mul6, ptr %rad4, align 8\l  %9 = load double, ptr %rad4, align 8\l  %10 = load double, ptr %rad4, align 8\l  %mul7 = fmul double %9, %10\l  store double %mul7, ptr %rad8, align 8\l  %11 = load double, ptr %rad2, align 8\l  %12 = load double, ptr %r.addr, align 8\l  %13 = load double, ptr %r.addr, align 8\l  %neg = fneg double %12\l  %14 = call double @llvm.fmuladd.f64(double %neg, double %13, double %11)\l  store double %14, ptr %delta2, align 8\l  %15 = load double, ptr %delta2, align 8\l  %div = fdiv double 1.000000e+00, %15\l  store double %div, ptr %rinv, align 8\l  %16 = load double, ptr %rinv, align 8\l  %17 = load double, ptr %rinv, align 8\l  %mul9 = fmul double %16, %17\l  store double %mul9, ptr %r2inv, align 8\l  %18 = load double, ptr %r2inv, align 8\l  %19 = load double, ptr %r2inv, align 8\l  %mul10 = fmul double %18, %19\l  store double %mul10, ptr %r4inv, align 8\l  %20 = load double, ptr %r4inv, align 8\l  %21 = load double, ptr %r4inv, align 8\l  %mul11 = fmul double %20, %21\l  store double %mul11, ptr %r8inv, align 8\l  %coeff1 = getelementptr inbounds %\"class.LAMMPS_NS::FixWallRegion\", ptr\l... %this1, i32 0, i32 12\l  %22 = load double, ptr %coeff1, align 8\l  %23 = load double, ptr %rad8, align 8\l  %24 = load double, ptr %rad.addr, align 8\l  %25 = load double, ptr %rad4, align 8\l  %mul13 = fmul double 2.700000e+01, %25\l  %26 = load double, ptr %rad2, align 8\l  %mul14 = fmul double %mul13, %26\l  %27 = load double, ptr %rad.addr, align 8\l  %mul15 = fmul double %mul14, %27\l  %28 = load double, ptr %r.addr, align 8\l  %mul16 = fmul double %mul15, %28\l  %29 = load double, ptr %r.addr, align 8\l  %mul17 = fmul double %mul16, %29\l  %30 = call double @llvm.fmuladd.f64(double %23, double %24, double %mul17)\l  %31 = load double, ptr %rad4, align 8\l  %mul18 = fmul double 6.300000e+01, %31\l  %32 = load double, ptr %rad.addr, align 8\l  %mul19 = fmul double %mul18, %32\l  %call = call noundef double @_ZN9LAMMPS_NS11MathSpecialL6powintERKdi(ptr\l... noundef nonnull align 8 dereferenceable(8) %r.addr, i32 noundef 4)\l  %33 = call double @llvm.fmuladd.f64(double %mul19, double %call, double %30)\l  %34 = load double, ptr %rad2, align 8\l  %mul21 = fmul double 2.100000e+01, %34\l  %35 = load double, ptr %rad.addr, align 8\l  %mul22 = fmul double %mul21, %35\l  %call23 = call noundef double @_ZN9LAMMPS_NS11MathSpecialL6powintERKdi(ptr\l... noundef nonnull align 8 dereferenceable(8) %r.addr, i32 noundef 6)\l  %36 = call double @llvm.fmuladd.f64(double %mul22, double %call23, double\l... %33)\l  %mul25 = fmul double %22, %36\l  %37 = load double, ptr %r8inv, align 8\l  %38 = load double, ptr %new_coeff2, align 8\l  %39 = load double, ptr %r2inv, align 8\l  %mul27 = fmul double %38, %39\l  %neg28 = fneg double %mul27\l  %40 = call double @llvm.fmuladd.f64(double %mul25, double %37, double %neg28)\l  %fwall = getelementptr inbounds %\"class.LAMMPS_NS::FixWallRegion\", ptr\l... %this1, i32 0, i32 21\l  store double %40, ptr %fwall, align 8\l  %41 = load double, ptr %diam, align 8\l  %42 = load double, ptr %r.addr, align 8\l  %neg30 = fneg double %42\l  %43 = call double @llvm.fmuladd.f64(double 5.000000e-01, double %41, double\l... %neg30)\l  store double %43, ptr %r2, align 8\l  %44 = load double, ptr %r2, align 8\l  %div31 = fdiv double 1.000000e+00, %44\l  store double %div31, ptr %rinv2, align 8\l  %45 = load double, ptr %rinv2, align 8\l  %46 = load double, ptr %rinv2, align 8\l  %mul32 = fmul double %45, %46\l  store double %mul32, ptr %r2inv2, align 8\l  %47 = load double, ptr %r2inv2, align 8\l  %48 = load double, ptr %r2inv2, align 8\l  %mul33 = fmul double %47, %48\l  store double %mul33, ptr %r4inv2, align 8\l  %49 = load double, ptr %r.addr, align 8\l  %50 = load double, ptr %diam, align 8\l  %51 = call double @llvm.fmuladd.f64(double 5.000000e-01, double %50, double\l... %49)\l  store double %51, ptr %r3, align 8\l  %52 = load double, ptr %r3, align 8\l  %div35 = fdiv double 1.000000e+00, %52\l  store double %div35, ptr %rinv3, align 8\l  %53 = load double, ptr %rinv3, align 8\l  %54 = load double, ptr %rinv3, align 8\l  %mul36 = fmul double %53, %54\l  store double %mul36, ptr %r2inv3, align 8\l  %55 = load double, ptr %r2inv3, align 8\l  %56 = load double, ptr %r2inv3, align 8\l  %mul37 = fmul double %55, %56\l  store double %mul37, ptr %r4inv3, align 8\l  %coeff3 = getelementptr inbounds %\"class.LAMMPS_NS::FixWallRegion\", ptr\l... %this1, i32 0, i32 14\l  %57 = load double, ptr %coeff3, align 8\l  %58 = load double, ptr %diam, align 8\l  %59 = load double, ptr %r.addr, align 8\l  %60 = call double @llvm.fmuladd.f64(double -3.500000e+00, double %58, double\l... %59)\l  %61 = load double, ptr %r4inv2, align 8\l  %mul39 = fmul double %60, %61\l  %62 = load double, ptr %r2inv2, align 8\l  %mul40 = fmul double %mul39, %62\l  %63 = load double, ptr %rinv2, align 8\l  %64 = load double, ptr %diam, align 8\l  %65 = load double, ptr %r.addr, align 8\l  %66 = call double @llvm.fmuladd.f64(double 3.500000e+00, double %64, double\l... %65)\l  %67 = load double, ptr %r4inv3, align 8\l  %mul43 = fmul double %66, %67\l  %68 = load double, ptr %r2inv3, align 8\l  %mul44 = fmul double %mul43, %68\l  %69 = load double, ptr %rinv3, align 8\l  %mul45 = fmul double %mul44, %69\l  %70 = call double @llvm.fmuladd.f64(double %mul40, double %63, double %mul45)\l  %coeff4 = getelementptr inbounds %\"class.LAMMPS_NS::FixWallRegion\", ptr\l... %this1, i32 0, i32 15\l  %71 = load double, ptr %coeff4, align 8\l  %72 = load double, ptr %diam, align 8\l  %fneg = fneg double %72\l  %73 = load double, ptr %r.addr, align 8\l  %74 = load double, ptr %r2, align 8\l  %75 = load double, ptr %r3, align 8\l  %mul48 = fmul double %74, %75\l  %76 = load double, ptr %r2, align 8\l  %fneg49 = fneg double %76\l  %call50 = call double @log(double noundef %fneg49) #11\l  %77 = load double, ptr %r3, align 8\l  %call51 = call double @log(double noundef %77) #11\l  %sub = fsub double %call50, %call51\l  %mul52 = fmul double %mul48, %sub\l  %78 = call double @llvm.fmuladd.f64(double %fneg, double %73, double %mul52)\l  %79 = load double, ptr %rinv2, align 8\l  %fneg53 = fneg double %79\l  %mul54 = fmul double %78, %fneg53\l  %80 = load double, ptr %rinv3, align 8\l  %mul55 = fmul double %mul54, %80\l  %mul56 = fmul double %71, %mul55\l  %neg57 = fneg double %mul56\l  %81 = call double @llvm.fmuladd.f64(double %57, double %70, double %neg57)\l  %offset = getelementptr inbounds %\"class.LAMMPS_NS::FixWallRegion\", ptr\l... %this1, i32 0, i32 16\l  %82 = load double, ptr %offset, align 8\l  %sub58 = fsub double %81, %82\l  %eng = getelementptr inbounds %\"class.LAMMPS_NS::FixWallRegion\", ptr %this1,\l... i32 0, i32 20\l  store double %sub58, ptr %eng, align 8\l  ret void\l}"];
}
