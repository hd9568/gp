digraph "CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRiR2tmEEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSC_' function" {
	label="CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRiR2tmEEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSC_' function";

	Node0x562e535d61d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr.i34 = alloca ptr, align 8\l  %val.addr.i35 = alloca ptr, align 8\l  %this.addr.i31 = alloca ptr, align 8\l  %val.addr.i32 = alloca ptr, align 8\l  %this.addr.i28 = alloca ptr, align 8\l  %val.addr.i29 = alloca ptr, align 8\l  %retval.i19 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i20 = alloca ptr, align 8\l  %arg.i21 = alloca ptr, align 8\l  %ref.tmp.i22 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i23 = alloca i8, align 1\l  %formattable_const.i24 = alloca i8, align 1\l  %formattable_pointer.i25 = alloca i8, align 1\l  %formattable.i26 = alloca i8, align 1\l  %this.addr.i16 = alloca ptr, align 8\l  %val.addr.i17 = alloca i32, align 4\l  %this.addr.i13 = alloca ptr, align 8\l  %val.addr.i14 = alloca i32, align 4\l  %retval.i9 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i10 = alloca ptr, align 8\l  %arg.i = alloca ptr, align 8\l  %ref.tmp.i11 = alloca i32, align 4\l  %ref.tmp1.i = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i = alloca i8, align 1\l  %formattable_const.i = alloca i8, align 1\l  %formattable_pointer.i = alloca i8, align 1\l  %formattable.i = alloca i8, align 1\l  %this.addr.i8 = alloca ptr, align 8\l  %.addr.i = alloca ptr, align 8\l  %.addr1.i = alloca i32, align 4\l  %.addr2.i = alloca i32, align 4\l  %.addr3.i = alloca ptr, align 8\l  %.addr4.i = alloca ptr, align 8\l  %this.addr.i6 = alloca ptr, align 8\l  %init.addr.i = alloca ptr, align 8\l  %init.addr2.i = alloca ptr, align 8\l  %retval.i4 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i5 = alloca ptr, align 8\l  %retval.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i = alloca ptr, align 8\l  %this.addr.i = alloca ptr, align 8\l  %args.addr.i = alloca ptr, align 8\l  %args.addr2.i = alloca ptr, align 8\l  %ref.tmp.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp5.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %args.addr = alloca ptr, align 8\l  %args.addr2 = alloca ptr, align 8\l  store ptr %args, ptr %args.addr, align 8\l  store ptr %args1, ptr %args.addr2, align 8\l  %0 = load ptr, ptr %args.addr, align 8\l  %1 = load ptr, ptr %args.addr2, align 8\l  store ptr %agg.result, ptr %this.addr.i, align 8\l  store ptr %0, ptr %args.addr.i, align 8\l  store ptr %1, ptr %args.addr2.i, align 8\l  %this3.i = load ptr, ptr %this.addr.i, align 8\l  %2 = load ptr, ptr %args.addr.i, align 8\l  store ptr %2, ptr %val.addr.i, align 8\l  %3 = load ptr, ptr %val.addr.i, align 8\l  store ptr %3, ptr %val.addr.i10, align 8\l  %4 = load ptr, ptr %val.addr.i10, align 8\l  %5 = load i32, ptr %4, align 4\l  store ptr %ref.tmp1.i, ptr %this.addr.i13, align 8\l  store i32 %5, ptr %val.addr.i14, align 4\l  %this1.i15 = load ptr, ptr %this.addr.i13, align 8\l  %6 = load i32, ptr %val.addr.i14, align 4\l  store i32 %6, ptr %ref.tmp.i11, align 4\l  store ptr %ref.tmp.i11, ptr %arg.i, align 8\l  store i8 1, ptr %formattable_char.i, align 1\l  store i8 1, ptr %formattable_const.i, align 1\l  store i8 1, ptr %formattable_pointer.i, align 1\l  store i8 1, ptr %formattable.i, align 1\l  %7 = load ptr, ptr %arg.i, align 8\l  %8 = load i32, ptr %7, align 4\l  store ptr %retval.i9, ptr %this.addr.i16, align 8\l  store i32 %8, ptr %val.addr.i17, align 4\l  %this1.i18 = load ptr, ptr %this.addr.i16, align 8\l  %9 = load i32, ptr %val.addr.i17, align 4\l  store i32 %9, ptr %this1.i18, align 16\l  %10 = load \{ i64, i64 \}, ptr %retval.i9, align 16\l  %11 = extractvalue \{ i64, i64 \} %10, 0\l  store i64 %11, ptr %retval.i, align 16\l  %12 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i, i32 0, i32 1\l  %13 = extractvalue \{ i64, i64 \} %10, 1\l  store i64 %13, ptr %12, align 8\l  %14 = load \{ i64, i64 \}, ptr %retval.i, align 16\l  %15 = extractvalue \{ i64, i64 \} %14, 0\l  store i64 %15, ptr %ref.tmp.i, align 16\l  %16 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp.i, i32 0, i32 1\l  %17 = extractvalue \{ i64, i64 \} %14, 1\l  store i64 %17, ptr %16, align 8\l  %18 = load ptr, ptr %args.addr2.i, align 8\l  store ptr %18, ptr %val.addr.i5, align 8\l  %19 = load ptr, ptr %val.addr.i5, align 8\l  store ptr %19, ptr %val.addr.i20, align 8\l  %20 = load ptr, ptr %val.addr.i20, align 8\l  store ptr %ref.tmp.i22, ptr %this.addr.i28, align 8\l  store ptr %20, ptr %val.addr.i29, align 8\l  %this1.i30 = load ptr, ptr %this.addr.i28, align 8\l  %21 = load ptr, ptr %val.addr.i29, align 8\l  store ptr %this1.i30, ptr %this.addr.i34, align 8\l  store ptr %21, ptr %val.addr.i35, align 8\l  %this1.i36 = load ptr, ptr %this.addr.i34, align 8\l  %22 = load ptr, ptr %val.addr.i35, align 8\l  store ptr %22, ptr %arg.i21, align 8\l  store i8 1, ptr %formattable_char.i23, align 1\l  store i8 1, ptr %formattable_const.i24, align 1\l  store i8 1, ptr %formattable_pointer.i25, align 1\l  store i8 1, ptr %formattable.i26, align 1\l  %23 = load ptr, ptr %arg.i21, align 8\l  store ptr %retval.i19, ptr %this.addr.i31, align 8\l  store ptr %23, ptr %val.addr.i32, align 8\l  %this1.i33 = load ptr, ptr %this.addr.i31, align 8\l  %24 = load ptr, ptr %val.addr.i32, align 8\l  store ptr %24, ptr %this1.i33, align 16\l  %format.i = getelementptr inbounds\l... %\"struct.fmt::v9_lmp::detail::custom_value\", ptr %this1.i33, i32 0, i32 1\l  store ptr\l... @_ZN3fmt6v9_lmp6detail5valueINS0_20basic_format_contextINS0_8appenderEcEEE17fo\l...rmat_custom_argI2tmNS0_9formatterIS8_cvEEEEvPvRNS0_26basic_format_parse_context\l...IcNS1_13error_handlerEEERS5_, ptr %format.i, align 8\l  %25 = load \{ i64, i64 \}, ptr %retval.i19, align 16\l  %26 = extractvalue \{ i64, i64 \} %25, 0\l  store i64 %26, ptr %retval.i4, align 16\l  %27 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i4, i32 0, i32 1\l  %28 = extractvalue \{ i64, i64 \} %25, 1\l  store i64 %28, ptr %27, align 8\l  %29 = load \{ i64, i64 \}, ptr %retval.i4, align 16\l  %30 = extractvalue \{ i64, i64 \} %29, 0\l  store i64 %30, ptr %ref.tmp5.i, align 16\l  %31 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp5.i, i32 0, i32 1\l  %32 = extractvalue \{ i64, i64 \} %29, 1\l  store i64 %32, ptr %31, align 8\l  store ptr %this3.i, ptr %this.addr.i6, align 8\l  store ptr %ref.tmp.i, ptr %init.addr.i, align 8\l  store ptr %ref.tmp5.i, ptr %init.addr2.i, align 8\l  %this3.i7 = load ptr, ptr %this.addr.i6, align 8\l  %33 = load ptr, ptr %init.addr.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %this3.i7, ptr align 16 %33,\l... i64 16, i1 false)\l  %arrayinit.element.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %this3.i7, i64 1\l  %34 = load ptr, ptr %init.addr2.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element.i, ptr\l... align 16 %34, i64 16, i1 false)\l  store ptr %this3.i, ptr %this.addr.i8, align 8\l  %this1.i = load ptr, ptr %this.addr.i8, align 8\l  %35 = load ptr, ptr %args.addr.i, align 8\l  %36 = load ptr, ptr %args.addr2.i, align 8\l  store ptr null, ptr %.addr.i, align 8\l  store i32 0, ptr %.addr1.i, align 4\l  store i32 0, ptr %.addr2.i, align 4\l  store ptr %35, ptr %.addr3.i, align 8\l  store ptr %36, ptr %.addr4.i, align 8\l  ret void\l}"];
}
