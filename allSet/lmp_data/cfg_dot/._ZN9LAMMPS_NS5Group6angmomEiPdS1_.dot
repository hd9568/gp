digraph "CFG for '_ZN9LAMMPS_NS5Group6angmomEiPdS1_' function" {
	label="CFG for '_ZN9LAMMPS_NS5Group6angmomEiPdS1_' function";

	Node0x55ba30463b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %igroup.addr = alloca i32, align 4\l  %cm.addr = alloca ptr, align 8\l  %lmom.addr = alloca ptr, align 8\l  %groupbit = alloca i32, align 4\l  %x = alloca ptr, align 8\l  %v = alloca ptr, align 8\l  %mask = alloca ptr, align 8\l  %type = alloca ptr, align 8\l  %image = alloca ptr, align 8\l  %mass = alloca ptr, align 8\l  %rmass = alloca ptr, align 8\l  %nlocal = alloca i32, align 4\l  %dx = alloca double, align 8\l  %dy = alloca double, align 8\l  %dz = alloca double, align 8\l  %massone = alloca double, align 8\l  %unwrap = alloca [3 x double], align 16\l  %p = alloca [3 x double], align 16\l  %i = alloca i32, align 4\l  store ptr %this, ptr %this.addr, align 8\l  store i32 %igroup, ptr %igroup.addr, align 4\l  store ptr %cm, ptr %cm.addr, align 8\l  store ptr %lmom, ptr %lmom.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %bitmask = getelementptr inbounds %\"class.LAMMPS_NS::Group\", ptr %this1, i32\l... 0, i32 4\l  %0 = load ptr, ptr %bitmask, align 8\l  %1 = load i32, ptr %igroup.addr, align 4\l  %idxprom = sext i32 %1 to i64\l  %arrayidx = getelementptr inbounds i32, ptr %0, i64 %idxprom\l  %2 = load i32, ptr %arrayidx, align 4\l  store i32 %2, ptr %groupbit, align 4\l  %atom = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1, i32\l... 0, i32 6\l  %3 = load ptr, ptr %atom, align 8\l  %4 = load ptr, ptr %3, align 8\l  %x2 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %4, i32 0, i32 37\l  %5 = load ptr, ptr %x2, align 8\l  store ptr %5, ptr %x, align 8\l  %atom3 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %6 = load ptr, ptr %atom3, align 8\l  %7 = load ptr, ptr %6, align 8\l  %v4 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %7, i32 0, i32 38\l  %8 = load ptr, ptr %v4, align 8\l  store ptr %8, ptr %v, align 8\l  %atom5 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %9 = load ptr, ptr %atom5, align 8\l  %10 = load ptr, ptr %9, align 8\l  %mask6 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %10, i32 0,\l... i32 35\l  %11 = load ptr, ptr %mask6, align 8\l  store ptr %11, ptr %mask, align 8\l  %atom7 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %12 = load ptr, ptr %atom7, align 8\l  %13 = load ptr, ptr %12, align 8\l  %type8 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %13, i32 0,\l... i32 34\l  %14 = load ptr, ptr %type8, align 8\l  store ptr %14, ptr %type, align 8\l  %atom9 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %15 = load ptr, ptr %atom9, align 8\l  %16 = load ptr, ptr %15, align 8\l  %image10 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %16, i32 0,\l... i32 36\l  %17 = load ptr, ptr %image10, align 8\l  store ptr %17, ptr %image, align 8\l  %atom11 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %18 = load ptr, ptr %atom11, align 8\l  %19 = load ptr, ptr %18, align 8\l  %mass12 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %19, i32 0,\l... i32 205\l  %20 = load ptr, ptr %mass12, align 8\l  store ptr %20, ptr %mass, align 8\l  %atom13 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %21 = load ptr, ptr %atom13, align 8\l  %22 = load ptr, ptr %21, align 8\l  %rmass14 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %22, i32 0,\l... i32 40\l  %23 = load ptr, ptr %rmass14, align 8\l  store ptr %23, ptr %rmass, align 8\l  %atom15 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %24 = load ptr, ptr %atom15, align 8\l  %25 = load ptr, ptr %24, align 8\l  %nlocal16 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %25, i32 0,\l... i32 4\l  %26 = load i32, ptr %nlocal16, align 8\l  store i32 %26, ptr %nlocal, align 4\l  %arrayidx17 = getelementptr inbounds [3 x double], ptr %p, i64 0, i64 2\l  store double 0.000000e+00, ptr %arrayidx17, align 16\l  %arrayidx18 = getelementptr inbounds [3 x double], ptr %p, i64 0, i64 1\l  store double 0.000000e+00, ptr %arrayidx18, align 8\l  %arrayidx19 = getelementptr inbounds [3 x double], ptr %p, i64 0, i64 0\l  store double 0.000000e+00, ptr %arrayidx19, align 16\l  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x55ba30463b80 -> Node0x55ba3046b940[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x55ba3046b940 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %27 = load i32, ptr %i, align 4\l  %28 = load i32, ptr %nlocal, align 4\l  %cmp = icmp slt i32 %27, %28\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x55ba3046b940:s0 -> Node0x55ba30468e00[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x55ba3046b940:s1 -> Node0x55ba30468e80[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x55ba30468e00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %29 = load ptr, ptr %mask, align 8\l  %30 = load i32, ptr %i, align 4\l  %idxprom20 = sext i32 %30 to i64\l  %arrayidx21 = getelementptr inbounds i32, ptr %29, i64 %idxprom20\l  %31 = load i32, ptr %arrayidx21, align 4\l  %32 = load i32, ptr %groupbit, align 4\l  %and = and i32 %31, %32\l  %tobool = icmp ne i32 %and, 0\l  br i1 %tobool, label %if.then, label %if.end68\l|{<s0>T|<s1>F}}"];
	Node0x55ba30468e00:s0 -> Node0x55ba3046c560[tooltip="for.body -> if.then\nProbability 62.50%" ];
	Node0x55ba30468e00:s1 -> Node0x55ba3046c5d0[tooltip="for.body -> if.end68\nProbability 37.50%" ];
	Node0x55ba3046c560 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.then:\l|  %domain = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 10\l  %33 = load ptr, ptr %domain, align 8\l  %34 = load ptr, ptr %33, align 8\l  %35 = load ptr, ptr %x, align 8\l  %36 = load i32, ptr %i, align 4\l  %idxprom22 = sext i32 %36 to i64\l  %arrayidx23 = getelementptr inbounds ptr, ptr %35, i64 %idxprom22\l  %37 = load ptr, ptr %arrayidx23, align 8\l  %38 = load ptr, ptr %image, align 8\l  %39 = load i32, ptr %i, align 4\l  %idxprom24 = sext i32 %39 to i64\l  %arrayidx25 = getelementptr inbounds i32, ptr %38, i64 %idxprom24\l  %40 = load i32, ptr %arrayidx25, align 4\l  %arraydecay = getelementptr inbounds [3 x double], ptr %unwrap, i64 0, i64 0\l  call void @_ZN9LAMMPS_NS6Domain5unmapEPKdiPd(ptr noundef nonnull align 8\l... dereferenceable(1200) %34, ptr noundef %37, i32 noundef %40, ptr noundef\l... %arraydecay)\l  %arrayidx26 = getelementptr inbounds [3 x double], ptr %unwrap, i64 0, i64 0\l  %41 = load double, ptr %arrayidx26, align 16\l  %42 = load ptr, ptr %cm.addr, align 8\l  %arrayidx27 = getelementptr inbounds double, ptr %42, i64 0\l  %43 = load double, ptr %arrayidx27, align 8\l  %sub = fsub double %41, %43\l  store double %sub, ptr %dx, align 8\l  %arrayidx28 = getelementptr inbounds [3 x double], ptr %unwrap, i64 0, i64 1\l  %44 = load double, ptr %arrayidx28, align 8\l  %45 = load ptr, ptr %cm.addr, align 8\l  %arrayidx29 = getelementptr inbounds double, ptr %45, i64 1\l  %46 = load double, ptr %arrayidx29, align 8\l  %sub30 = fsub double %44, %46\l  store double %sub30, ptr %dy, align 8\l  %arrayidx31 = getelementptr inbounds [3 x double], ptr %unwrap, i64 0, i64 2\l  %47 = load double, ptr %arrayidx31, align 16\l  %48 = load ptr, ptr %cm.addr, align 8\l  %arrayidx32 = getelementptr inbounds double, ptr %48, i64 2\l  %49 = load double, ptr %arrayidx32, align 8\l  %sub33 = fsub double %47, %49\l  store double %sub33, ptr %dz, align 8\l  %50 = load ptr, ptr %rmass, align 8\l  %tobool34 = icmp ne ptr %50, null\l  br i1 %tobool34, label %if.then35, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x55ba3046c560:s0 -> Node0x55ba3046e800[tooltip="if.then -> if.then35\nProbability 62.50%" ];
	Node0x55ba3046c560:s1 -> Node0x55ba3046e880[tooltip="if.then -> if.else\nProbability 37.50%" ];
	Node0x55ba3046e800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.then35:\l|  %51 = load ptr, ptr %rmass, align 8\l  %52 = load i32, ptr %i, align 4\l  %idxprom36 = sext i32 %52 to i64\l  %arrayidx37 = getelementptr inbounds double, ptr %51, i64 %idxprom36\l  %53 = load double, ptr %arrayidx37, align 8\l  store double %53, ptr %massone, align 8\l  br label %if.end\l}"];
	Node0x55ba3046e800 -> Node0x55ba3046ed30[tooltip="if.then35 -> if.end\nProbability 100.00%" ];
	Node0x55ba3046e880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.else:\l|  %54 = load ptr, ptr %mass, align 8\l  %55 = load ptr, ptr %type, align 8\l  %56 = load i32, ptr %i, align 4\l  %idxprom38 = sext i32 %56 to i64\l  %arrayidx39 = getelementptr inbounds i32, ptr %55, i64 %idxprom38\l  %57 = load i32, ptr %arrayidx39, align 4\l  %idxprom40 = sext i32 %57 to i64\l  %arrayidx41 = getelementptr inbounds double, ptr %54, i64 %idxprom40\l  %58 = load double, ptr %arrayidx41, align 8\l  store double %58, ptr %massone, align 8\l  br label %if.end\l}"];
	Node0x55ba3046e880 -> Node0x55ba3046ed30[tooltip="if.else -> if.end\nProbability 100.00%" ];
	Node0x55ba3046ed30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.end:\l|  %59 = load double, ptr %massone, align 8\l  %60 = load double, ptr %dy, align 8\l  %61 = load ptr, ptr %v, align 8\l  %62 = load i32, ptr %i, align 4\l  %idxprom42 = sext i32 %62 to i64\l  %arrayidx43 = getelementptr inbounds ptr, ptr %61, i64 %idxprom42\l  %63 = load ptr, ptr %arrayidx43, align 8\l  %arrayidx44 = getelementptr inbounds double, ptr %63, i64 2\l  %64 = load double, ptr %arrayidx44, align 8\l  %65 = load double, ptr %dz, align 8\l  %66 = load ptr, ptr %v, align 8\l  %67 = load i32, ptr %i, align 4\l  %idxprom45 = sext i32 %67 to i64\l  %arrayidx46 = getelementptr inbounds ptr, ptr %66, i64 %idxprom45\l  %68 = load ptr, ptr %arrayidx46, align 8\l  %arrayidx47 = getelementptr inbounds double, ptr %68, i64 1\l  %69 = load double, ptr %arrayidx47, align 8\l  %mul48 = fmul double %65, %69\l  %neg = fneg double %mul48\l  %70 = call double @llvm.fmuladd.f64(double %60, double %64, double %neg)\l  %arrayidx49 = getelementptr inbounds [3 x double], ptr %p, i64 0, i64 0\l  %71 = load double, ptr %arrayidx49, align 16\l  %72 = call double @llvm.fmuladd.f64(double %59, double %70, double %71)\l  store double %72, ptr %arrayidx49, align 16\l  %73 = load double, ptr %massone, align 8\l  %74 = load double, ptr %dz, align 8\l  %75 = load ptr, ptr %v, align 8\l  %76 = load i32, ptr %i, align 4\l  %idxprom50 = sext i32 %76 to i64\l  %arrayidx51 = getelementptr inbounds ptr, ptr %75, i64 %idxprom50\l  %77 = load ptr, ptr %arrayidx51, align 8\l  %arrayidx52 = getelementptr inbounds double, ptr %77, i64 0\l  %78 = load double, ptr %arrayidx52, align 8\l  %79 = load double, ptr %dx, align 8\l  %80 = load ptr, ptr %v, align 8\l  %81 = load i32, ptr %i, align 4\l  %idxprom53 = sext i32 %81 to i64\l  %arrayidx54 = getelementptr inbounds ptr, ptr %80, i64 %idxprom53\l  %82 = load ptr, ptr %arrayidx54, align 8\l  %arrayidx55 = getelementptr inbounds double, ptr %82, i64 2\l  %83 = load double, ptr %arrayidx55, align 8\l  %mul56 = fmul double %79, %83\l  %neg57 = fneg double %mul56\l  %84 = call double @llvm.fmuladd.f64(double %74, double %78, double %neg57)\l  %arrayidx58 = getelementptr inbounds [3 x double], ptr %p, i64 0, i64 1\l  %85 = load double, ptr %arrayidx58, align 8\l  %86 = call double @llvm.fmuladd.f64(double %73, double %84, double %85)\l  store double %86, ptr %arrayidx58, align 8\l  %87 = load double, ptr %massone, align 8\l  %88 = load double, ptr %dx, align 8\l  %89 = load ptr, ptr %v, align 8\l  %90 = load i32, ptr %i, align 4\l  %idxprom59 = sext i32 %90 to i64\l  %arrayidx60 = getelementptr inbounds ptr, ptr %89, i64 %idxprom59\l  %91 = load ptr, ptr %arrayidx60, align 8\l  %arrayidx61 = getelementptr inbounds double, ptr %91, i64 1\l  %92 = load double, ptr %arrayidx61, align 8\l  %93 = load double, ptr %dy, align 8\l  %94 = load ptr, ptr %v, align 8\l  %95 = load i32, ptr %i, align 4\l  %idxprom62 = sext i32 %95 to i64\l  %arrayidx63 = getelementptr inbounds ptr, ptr %94, i64 %idxprom62\l  %96 = load ptr, ptr %arrayidx63, align 8\l  %arrayidx64 = getelementptr inbounds double, ptr %96, i64 0\l  %97 = load double, ptr %arrayidx64, align 8\l  %mul65 = fmul double %93, %97\l  %neg66 = fneg double %mul65\l  %98 = call double @llvm.fmuladd.f64(double %88, double %92, double %neg66)\l  %arrayidx67 = getelementptr inbounds [3 x double], ptr %p, i64 0, i64 2\l  %99 = load double, ptr %arrayidx67, align 16\l  %100 = call double @llvm.fmuladd.f64(double %87, double %98, double %99)\l  store double %100, ptr %arrayidx67, align 16\l  br label %if.end68\l}"];
	Node0x55ba3046ed30 -> Node0x55ba3046c5d0[tooltip="if.end -> if.end68\nProbability 100.00%" ];
	Node0x55ba3046c5d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end68:\l|  br label %for.inc\l}"];
	Node0x55ba3046c5d0 -> Node0x55ba30473240[tooltip="if.end68 -> for.inc\nProbability 100.00%" ];
	Node0x55ba30473240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %101 = load i32, ptr %i, align 4\l  %inc = add nsw i32 %101, 1\l  store i32 %inc, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x55ba30473240 -> Node0x55ba3046b940[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x55ba30468e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  %arraydecay69 = getelementptr inbounds [3 x double], ptr %p, i64 0, i64 0\l  %102 = load ptr, ptr %lmom.addr, align 8\l  %world = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 16\l  %103 = load ptr, ptr %world, align 8\l  %104 = load ptr, ptr %103, align 8\l  %call = call i32 @MPI_Allreduce(ptr noundef %arraydecay69, ptr noundef %102,\l... i32 noundef 3, ptr noundef @ompi_mpi_double, ptr noundef @ompi_mpi_op_sum,\l... ptr noundef %104)\l  ret void\l}"];
}
