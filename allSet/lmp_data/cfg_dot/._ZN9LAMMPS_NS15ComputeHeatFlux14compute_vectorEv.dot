digraph "CFG for '_ZN9LAMMPS_NS15ComputeHeatFlux14compute_vectorEv' function" {
	label="CFG for '_ZN9LAMMPS_NS15ComputeHeatFlux14compute_vectorEv' function";

	Node0x5626356a64f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %ke = alloca ptr, align 8\l  %pe = alloca ptr, align 8\l  %stress = alloca ptr, align 8\l  %v = alloca ptr, align 8\l  %mask = alloca ptr, align 8\l  %nlocal = alloca i32, align 4\l  %jc = alloca [3 x double], align 16\l  %jv = alloca [3 x double], align 16\l  %eng = alloca double, align 8\l  %i = alloca i32, align 4\l  %i121 = alloca i32, align 4\l  %nktv2p = alloca double, align 8\l  %data = alloca [6 x double], align 16\l  store ptr %this, ptr %this.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %update = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 7\l  %0 = load ptr, ptr %update, align 8\l  %1 = load ptr, ptr %0, align 8\l  %ntimestep = getelementptr inbounds %\"class.LAMMPS_NS::Update\", ptr %1, i32\l... 0, i32 4\l  %2 = load i64, ptr %ntimestep, align 8\l  %invoked_vector = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr\l... %this1, i32 0, i32 45\l  store i64 %2, ptr %invoked_vector, align 8\l  %c_ke = getelementptr inbounds %\"class.LAMMPS_NS::ComputeHeatFlux\", ptr\l... %this1, i32 0, i32 4\l  %3 = load ptr, ptr %c_ke, align 8\l  %invoked_flag = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr %3,\l... i32 0, i32 43\l  %4 = load i32, ptr %invoked_flag, align 4\l  %and = and i32 %4, 8\l  %tobool = icmp ne i32 %and, 0\l  br i1 %tobool, label %if.end, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x5626356a64f0:s0 -> Node0x5626356942b0[tooltip="entry -> if.end\nProbability 50.00%" ];
	Node0x5626356a64f0:s1 -> Node0x5626356a7c40[tooltip="entry -> if.then\nProbability 50.00%" ];
	Node0x5626356a7c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.then:\l|  %c_ke2 = getelementptr inbounds %\"class.LAMMPS_NS::ComputeHeatFlux\", ptr\l... %this1, i32 0, i32 4\l  %5 = load ptr, ptr %c_ke2, align 8\l  %vtable = load ptr, ptr %5, align 8\l  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 9\l  %6 = load ptr, ptr %vfn, align 8\l  call void %6(ptr noundef nonnull align 8 dereferenceable(564) %5)\l  %c_ke3 = getelementptr inbounds %\"class.LAMMPS_NS::ComputeHeatFlux\", ptr\l... %this1, i32 0, i32 4\l  %7 = load ptr, ptr %c_ke3, align 8\l  %invoked_flag4 = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr %7,\l... i32 0, i32 43\l  %8 = load i32, ptr %invoked_flag4, align 4\l  %or = or i32 %8, 8\l  store i32 %or, ptr %invoked_flag4, align 4\l  br label %if.end\l}"];
	Node0x5626356a7c40 -> Node0x5626356942b0[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x5626356942b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{if.end:\l|  %c_pe = getelementptr inbounds %\"class.LAMMPS_NS::ComputeHeatFlux\", ptr\l... %this1, i32 0, i32 5\l  %9 = load ptr, ptr %c_pe, align 8\l  %invoked_flag5 = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr %9,\l... i32 0, i32 43\l  %10 = load i32, ptr %invoked_flag5, align 4\l  %and6 = and i32 %10, 8\l  %tobool7 = icmp ne i32 %and6, 0\l  br i1 %tobool7, label %if.end15, label %if.then8\l|{<s0>T|<s1>F}}"];
	Node0x5626356942b0:s0 -> Node0x5626356952e0[tooltip="if.end -> if.end15\nProbability 50.00%" ];
	Node0x5626356942b0:s1 -> Node0x562635695360[tooltip="if.end -> if.then8\nProbability 50.00%" ];
	Node0x562635695360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.then8:\l|  %c_pe9 = getelementptr inbounds %\"class.LAMMPS_NS::ComputeHeatFlux\", ptr\l... %this1, i32 0, i32 5\l  %11 = load ptr, ptr %c_pe9, align 8\l  %vtable10 = load ptr, ptr %11, align 8\l  %vfn11 = getelementptr inbounds ptr, ptr %vtable10, i64 9\l  %12 = load ptr, ptr %vfn11, align 8\l  call void %12(ptr noundef nonnull align 8 dereferenceable(564) %11)\l  %c_pe12 = getelementptr inbounds %\"class.LAMMPS_NS::ComputeHeatFlux\", ptr\l... %this1, i32 0, i32 5\l  %13 = load ptr, ptr %c_pe12, align 8\l  %invoked_flag13 = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr\l... %13, i32 0, i32 43\l  %14 = load i32, ptr %invoked_flag13, align 4\l  %or14 = or i32 %14, 8\l  store i32 %or14, ptr %invoked_flag13, align 4\l  br label %if.end15\l}"];
	Node0x562635695360 -> Node0x5626356952e0[tooltip="if.then8 -> if.end15\nProbability 100.00%" ];
	Node0x5626356952e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{if.end15:\l|  %c_stress = getelementptr inbounds %\"class.LAMMPS_NS::ComputeHeatFlux\",\l... ptr %this1, i32 0, i32 6\l  %15 = load ptr, ptr %c_stress, align 8\l  %invoked_flag16 = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr\l... %15, i32 0, i32 43\l  %16 = load i32, ptr %invoked_flag16, align 4\l  %and17 = and i32 %16, 8\l  %tobool18 = icmp ne i32 %and17, 0\l  br i1 %tobool18, label %if.end26, label %if.then19\l|{<s0>T|<s1>F}}"];
	Node0x5626356952e0:s0 -> Node0x5626356ac9d0[tooltip="if.end15 -> if.end26\nProbability 50.00%" ];
	Node0x5626356952e0:s1 -> Node0x5626356ad070[tooltip="if.end15 -> if.then19\nProbability 50.00%" ];
	Node0x5626356ad070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.then19:\l|  %c_stress20 = getelementptr inbounds %\"class.LAMMPS_NS::ComputeHeatFlux\",\l... ptr %this1, i32 0, i32 6\l  %17 = load ptr, ptr %c_stress20, align 8\l  %vtable21 = load ptr, ptr %17, align 8\l  %vfn22 = getelementptr inbounds ptr, ptr %vtable21, i64 9\l  %18 = load ptr, ptr %vfn22, align 8\l  call void %18(ptr noundef nonnull align 8 dereferenceable(564) %17)\l  %c_stress23 = getelementptr inbounds %\"class.LAMMPS_NS::ComputeHeatFlux\",\l... ptr %this1, i32 0, i32 6\l  %19 = load ptr, ptr %c_stress23, align 8\l  %invoked_flag24 = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr\l... %19, i32 0, i32 43\l  %20 = load i32, ptr %invoked_flag24, align 4\l  %or25 = or i32 %20, 8\l  store i32 %or25, ptr %invoked_flag24, align 4\l  br label %if.end26\l}"];
	Node0x5626356ad070 -> Node0x5626356ac9d0[tooltip="if.then19 -> if.end26\nProbability 100.00%" ];
	Node0x5626356ac9d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{if.end26:\l|  %c_ke27 = getelementptr inbounds %\"class.LAMMPS_NS::ComputeHeatFlux\", ptr\l... %this1, i32 0, i32 4\l  %21 = load ptr, ptr %c_ke27, align 8\l  %vector_atom = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr %21,\l... i32 0, i32 8\l  %22 = load ptr, ptr %vector_atom, align 8\l  store ptr %22, ptr %ke, align 8\l  %c_pe28 = getelementptr inbounds %\"class.LAMMPS_NS::ComputeHeatFlux\", ptr\l... %this1, i32 0, i32 5\l  %23 = load ptr, ptr %c_pe28, align 8\l  %vector_atom29 = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr\l... %23, i32 0, i32 8\l  %24 = load ptr, ptr %vector_atom29, align 8\l  store ptr %24, ptr %pe, align 8\l  %c_stress30 = getelementptr inbounds %\"class.LAMMPS_NS::ComputeHeatFlux\",\l... ptr %this1, i32 0, i32 6\l  %25 = load ptr, ptr %c_stress30, align 8\l  %array_atom = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr %25,\l... i32 0, i32 9\l  %26 = load ptr, ptr %array_atom, align 8\l  store ptr %26, ptr %stress, align 8\l  %atom = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1, i32\l... 0, i32 6\l  %27 = load ptr, ptr %atom, align 8\l  %28 = load ptr, ptr %27, align 8\l  %v31 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %28, i32 0, i32\l... 38\l  %29 = load ptr, ptr %v31, align 8\l  store ptr %29, ptr %v, align 8\l  %atom32 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %30 = load ptr, ptr %atom32, align 8\l  %31 = load ptr, ptr %30, align 8\l  %mask33 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %31, i32 0,\l... i32 35\l  %32 = load ptr, ptr %mask33, align 8\l  store ptr %32, ptr %mask, align 8\l  %atom34 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %33 = load ptr, ptr %atom34, align 8\l  %34 = load ptr, ptr %33, align 8\l  %nlocal35 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %34, i32 0,\l... i32 4\l  %35 = load i32, ptr %nlocal35, align 8\l  store i32 %35, ptr %nlocal, align 4\l  call void @llvm.memset.p0.i64(ptr align 16 %jc, i8 0, i64 24, i1 false)\l  call void @llvm.memset.p0.i64(ptr align 16 %jv, i8 0, i64 24, i1 false)\l  %c_stress36 = getelementptr inbounds %\"class.LAMMPS_NS::ComputeHeatFlux\",\l... ptr %this1, i32 0, i32 6\l  %36 = load ptr, ptr %c_stress36, align 8\l  %pressatomflag = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr\l... %36, i32 0, i32 32\l  %37 = load i32, ptr %pressatomflag, align 4\l  %cmp = icmp eq i32 %37, 2\l  br i1 %cmp, label %if.then37, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x5626356ac9d0:s0 -> Node0x5626356afcb0[tooltip="if.end26 -> if.then37\nProbability 50.00%" ];
	Node0x5626356ac9d0:s1 -> Node0x5626356afd30[tooltip="if.end26 -> if.else\nProbability 50.00%" ];
	Node0x5626356afcb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.then37:\l|  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x5626356afcb0 -> Node0x5626356afed0[tooltip="if.then37 -> for.cond\nProbability 100.00%" ];
	Node0x5626356afed0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %38 = load i32, ptr %i, align 4\l  %39 = load i32, ptr %nlocal, align 4\l  %cmp38 = icmp slt i32 %38, %39\l  br i1 %cmp38, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5626356afed0:s0 -> Node0x5626356b0170[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x5626356afed0:s1 -> Node0x5626356b01f0[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x5626356b0170 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %40 = load ptr, ptr %mask, align 8\l  %41 = load i32, ptr %i, align 4\l  %idxprom = sext i32 %41 to i64\l  %arrayidx = getelementptr inbounds i32, ptr %40, i64 %idxprom\l  %42 = load i32, ptr %arrayidx, align 4\l  %groupbit = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr %this1,\l... i32 0, i32 4\l  %43 = load i32, ptr %groupbit, align 4\l  %and39 = and i32 %42, %43\l  %tobool40 = icmp ne i32 %and39, 0\l  br i1 %tobool40, label %if.then41, label %if.end120\l|{<s0>T|<s1>F}}"];
	Node0x5626356b0170:s0 -> Node0x5626356b08d0[tooltip="for.body -> if.then41\nProbability 62.50%" ];
	Node0x5626356b0170:s1 -> Node0x5626356b0950[tooltip="for.body -> if.end120\nProbability 37.50%" ];
	Node0x5626356b08d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.then41:\l|  %44 = load ptr, ptr %pe, align 8\l  %45 = load i32, ptr %i, align 4\l  %idxprom42 = sext i32 %45 to i64\l  %arrayidx43 = getelementptr inbounds double, ptr %44, i64 %idxprom42\l  %46 = load double, ptr %arrayidx43, align 8\l  %47 = load ptr, ptr %ke, align 8\l  %48 = load i32, ptr %i, align 4\l  %idxprom44 = sext i32 %48 to i64\l  %arrayidx45 = getelementptr inbounds double, ptr %47, i64 %idxprom44\l  %49 = load double, ptr %arrayidx45, align 8\l  %add = fadd double %46, %49\l  store double %add, ptr %eng, align 8\l  %50 = load double, ptr %eng, align 8\l  %51 = load ptr, ptr %v, align 8\l  %52 = load i32, ptr %i, align 4\l  %idxprom46 = sext i32 %52 to i64\l  %arrayidx47 = getelementptr inbounds ptr, ptr %51, i64 %idxprom46\l  %53 = load ptr, ptr %arrayidx47, align 8\l  %arrayidx48 = getelementptr inbounds double, ptr %53, i64 0\l  %54 = load double, ptr %arrayidx48, align 8\l  %arrayidx49 = getelementptr inbounds [3 x double], ptr %jc, i64 0, i64 0\l  %55 = load double, ptr %arrayidx49, align 16\l  %56 = call double @llvm.fmuladd.f64(double %50, double %54, double %55)\l  store double %56, ptr %arrayidx49, align 16\l  %57 = load double, ptr %eng, align 8\l  %58 = load ptr, ptr %v, align 8\l  %59 = load i32, ptr %i, align 4\l  %idxprom50 = sext i32 %59 to i64\l  %arrayidx51 = getelementptr inbounds ptr, ptr %58, i64 %idxprom50\l  %60 = load ptr, ptr %arrayidx51, align 8\l  %arrayidx52 = getelementptr inbounds double, ptr %60, i64 1\l  %61 = load double, ptr %arrayidx52, align 8\l  %arrayidx53 = getelementptr inbounds [3 x double], ptr %jc, i64 0, i64 1\l  %62 = load double, ptr %arrayidx53, align 8\l  %63 = call double @llvm.fmuladd.f64(double %57, double %61, double %62)\l  store double %63, ptr %arrayidx53, align 8\l  %64 = load double, ptr %eng, align 8\l  %65 = load ptr, ptr %v, align 8\l  %66 = load i32, ptr %i, align 4\l  %idxprom54 = sext i32 %66 to i64\l  %arrayidx55 = getelementptr inbounds ptr, ptr %65, i64 %idxprom54\l  %67 = load ptr, ptr %arrayidx55, align 8\l  %arrayidx56 = getelementptr inbounds double, ptr %67, i64 2\l  %68 = load double, ptr %arrayidx56, align 8\l  %arrayidx57 = getelementptr inbounds [3 x double], ptr %jc, i64 0, i64 2\l  %69 = load double, ptr %arrayidx57, align 16\l  %70 = call double @llvm.fmuladd.f64(double %64, double %68, double %69)\l  store double %70, ptr %arrayidx57, align 16\l  %71 = load ptr, ptr %stress, align 8\l  %72 = load i32, ptr %i, align 4\l  %idxprom58 = sext i32 %72 to i64\l  %arrayidx59 = getelementptr inbounds ptr, ptr %71, i64 %idxprom58\l  %73 = load ptr, ptr %arrayidx59, align 8\l  %arrayidx60 = getelementptr inbounds double, ptr %73, i64 0\l  %74 = load double, ptr %arrayidx60, align 8\l  %75 = load ptr, ptr %v, align 8\l  %76 = load i32, ptr %i, align 4\l  %idxprom61 = sext i32 %76 to i64\l  %arrayidx62 = getelementptr inbounds ptr, ptr %75, i64 %idxprom61\l  %77 = load ptr, ptr %arrayidx62, align 8\l  %arrayidx63 = getelementptr inbounds double, ptr %77, i64 0\l  %78 = load double, ptr %arrayidx63, align 8\l  %79 = load ptr, ptr %stress, align 8\l  %80 = load i32, ptr %i, align 4\l  %idxprom64 = sext i32 %80 to i64\l  %arrayidx65 = getelementptr inbounds ptr, ptr %79, i64 %idxprom64\l  %81 = load ptr, ptr %arrayidx65, align 8\l  %arrayidx66 = getelementptr inbounds double, ptr %81, i64 3\l  %82 = load double, ptr %arrayidx66, align 8\l  %83 = load ptr, ptr %v, align 8\l  %84 = load i32, ptr %i, align 4\l  %idxprom67 = sext i32 %84 to i64\l  %arrayidx68 = getelementptr inbounds ptr, ptr %83, i64 %idxprom67\l  %85 = load ptr, ptr %arrayidx68, align 8\l  %arrayidx69 = getelementptr inbounds double, ptr %85, i64 1\l  %86 = load double, ptr %arrayidx69, align 8\l  %mul70 = fmul double %82, %86\l  %87 = call double @llvm.fmuladd.f64(double %74, double %78, double %mul70)\l  %88 = load ptr, ptr %stress, align 8\l  %89 = load i32, ptr %i, align 4\l  %idxprom71 = sext i32 %89 to i64\l  %arrayidx72 = getelementptr inbounds ptr, ptr %88, i64 %idxprom71\l  %90 = load ptr, ptr %arrayidx72, align 8\l  %arrayidx73 = getelementptr inbounds double, ptr %90, i64 4\l  %91 = load double, ptr %arrayidx73, align 8\l  %92 = load ptr, ptr %v, align 8\l  %93 = load i32, ptr %i, align 4\l  %idxprom74 = sext i32 %93 to i64\l  %arrayidx75 = getelementptr inbounds ptr, ptr %92, i64 %idxprom74\l  %94 = load ptr, ptr %arrayidx75, align 8\l  %arrayidx76 = getelementptr inbounds double, ptr %94, i64 2\l  %95 = load double, ptr %arrayidx76, align 8\l  %96 = call double @llvm.fmuladd.f64(double %91, double %95, double %87)\l  %arrayidx77 = getelementptr inbounds [3 x double], ptr %jv, i64 0, i64 0\l  %97 = load double, ptr %arrayidx77, align 16\l  %sub = fsub double %97, %96\l  store double %sub, ptr %arrayidx77, align 16\l  %98 = load ptr, ptr %stress, align 8\l  %99 = load i32, ptr %i, align 4\l  %idxprom78 = sext i32 %99 to i64\l  %arrayidx79 = getelementptr inbounds ptr, ptr %98, i64 %idxprom78\l  %100 = load ptr, ptr %arrayidx79, align 8\l  %arrayidx80 = getelementptr inbounds double, ptr %100, i64 6\l  %101 = load double, ptr %arrayidx80, align 8\l  %102 = load ptr, ptr %v, align 8\l  %103 = load i32, ptr %i, align 4\l  %idxprom81 = sext i32 %103 to i64\l  %arrayidx82 = getelementptr inbounds ptr, ptr %102, i64 %idxprom81\l  %104 = load ptr, ptr %arrayidx82, align 8\l  %arrayidx83 = getelementptr inbounds double, ptr %104, i64 0\l  %105 = load double, ptr %arrayidx83, align 8\l  %106 = load ptr, ptr %stress, align 8\l  %107 = load i32, ptr %i, align 4\l  %idxprom84 = sext i32 %107 to i64\l  %arrayidx85 = getelementptr inbounds ptr, ptr %106, i64 %idxprom84\l  %108 = load ptr, ptr %arrayidx85, align 8\l  %arrayidx86 = getelementptr inbounds double, ptr %108, i64 1\l  %109 = load double, ptr %arrayidx86, align 8\l  %110 = load ptr, ptr %v, align 8\l  %111 = load i32, ptr %i, align 4\l  %idxprom87 = sext i32 %111 to i64\l  %arrayidx88 = getelementptr inbounds ptr, ptr %110, i64 %idxprom87\l  %112 = load ptr, ptr %arrayidx88, align 8\l  %arrayidx89 = getelementptr inbounds double, ptr %112, i64 1\l  %113 = load double, ptr %arrayidx89, align 8\l  %mul90 = fmul double %109, %113\l  %114 = call double @llvm.fmuladd.f64(double %101, double %105, double %mul90)\l  %115 = load ptr, ptr %stress, align 8\l  %116 = load i32, ptr %i, align 4\l  %idxprom91 = sext i32 %116 to i64\l  %arrayidx92 = getelementptr inbounds ptr, ptr %115, i64 %idxprom91\l  %117 = load ptr, ptr %arrayidx92, align 8\l  %arrayidx93 = getelementptr inbounds double, ptr %117, i64 5\l  %118 = load double, ptr %arrayidx93, align 8\l  %119 = load ptr, ptr %v, align 8\l  %120 = load i32, ptr %i, align 4\l  %idxprom94 = sext i32 %120 to i64\l  %arrayidx95 = getelementptr inbounds ptr, ptr %119, i64 %idxprom94\l  %121 = load ptr, ptr %arrayidx95, align 8\l  %arrayidx96 = getelementptr inbounds double, ptr %121, i64 2\l  %122 = load double, ptr %arrayidx96, align 8\l  %123 = call double @llvm.fmuladd.f64(double %118, double %122, double %114)\l  %arrayidx97 = getelementptr inbounds [3 x double], ptr %jv, i64 0, i64 1\l  %124 = load double, ptr %arrayidx97, align 8\l  %sub98 = fsub double %124, %123\l  store double %sub98, ptr %arrayidx97, align 8\l  %125 = load ptr, ptr %stress, align 8\l  %126 = load i32, ptr %i, align 4\l  %idxprom99 = sext i32 %126 to i64\l  %arrayidx100 = getelementptr inbounds ptr, ptr %125, i64 %idxprom99\l  %127 = load ptr, ptr %arrayidx100, align 8\l  %arrayidx101 = getelementptr inbounds double, ptr %127, i64 7\l  %128 = load double, ptr %arrayidx101, align 8\l  %129 = load ptr, ptr %v, align 8\l  %130 = load i32, ptr %i, align 4\l  %idxprom102 = sext i32 %130 to i64\l  %arrayidx103 = getelementptr inbounds ptr, ptr %129, i64 %idxprom102\l  %131 = load ptr, ptr %arrayidx103, align 8\l  %arrayidx104 = getelementptr inbounds double, ptr %131, i64 0\l  %132 = load double, ptr %arrayidx104, align 8\l  %133 = load ptr, ptr %stress, align 8\l  %134 = load i32, ptr %i, align 4\l  %idxprom105 = sext i32 %134 to i64\l  %arrayidx106 = getelementptr inbounds ptr, ptr %133, i64 %idxprom105\l  %135 = load ptr, ptr %arrayidx106, align 8\l  %arrayidx107 = getelementptr inbounds double, ptr %135, i64 8\l  %136 = load double, ptr %arrayidx107, align 8\l  %137 = load ptr, ptr %v, align 8\l  %138 = load i32, ptr %i, align 4\l  %idxprom108 = sext i32 %138 to i64\l  %arrayidx109 = getelementptr inbounds ptr, ptr %137, i64 %idxprom108\l  %139 = load ptr, ptr %arrayidx109, align 8\l  %arrayidx110 = getelementptr inbounds double, ptr %139, i64 1\l  %140 = load double, ptr %arrayidx110, align 8\l  %mul111 = fmul double %136, %140\l  %141 = call double @llvm.fmuladd.f64(double %128, double %132, double\l... %mul111)\l  %142 = load ptr, ptr %stress, align 8\l  %143 = load i32, ptr %i, align 4\l  %idxprom112 = sext i32 %143 to i64\l  %arrayidx113 = getelementptr inbounds ptr, ptr %142, i64 %idxprom112\l  %144 = load ptr, ptr %arrayidx113, align 8\l  %arrayidx114 = getelementptr inbounds double, ptr %144, i64 2\l  %145 = load double, ptr %arrayidx114, align 8\l  %146 = load ptr, ptr %v, align 8\l  %147 = load i32, ptr %i, align 4\l  %idxprom115 = sext i32 %147 to i64\l  %arrayidx116 = getelementptr inbounds ptr, ptr %146, i64 %idxprom115\l  %148 = load ptr, ptr %arrayidx116, align 8\l  %arrayidx117 = getelementptr inbounds double, ptr %148, i64 2\l  %149 = load double, ptr %arrayidx117, align 8\l  %150 = call double @llvm.fmuladd.f64(double %145, double %149, double %141)\l  %arrayidx118 = getelementptr inbounds [3 x double], ptr %jv, i64 0, i64 2\l  %151 = load double, ptr %arrayidx118, align 16\l  %sub119 = fsub double %151, %150\l  store double %sub119, ptr %arrayidx118, align 16\l  br label %if.end120\l}"];
	Node0x5626356b08d0 -> Node0x5626356b0950[tooltip="if.then41 -> if.end120\nProbability 100.00%" ];
	Node0x5626356b0950 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end120:\l|  br label %for.inc\l}"];
	Node0x5626356b0950 -> Node0x5626356b9b70[tooltip="if.end120 -> for.inc\nProbability 100.00%" ];
	Node0x5626356b9b70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %152 = load i32, ptr %i, align 4\l  %inc = add nsw i32 %152, 1\l  store i32 %inc, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x5626356b9b70 -> Node0x5626356afed0[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x5626356b01f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  br label %if.end215\l}"];
	Node0x5626356b01f0 -> Node0x5626356ba950[tooltip="for.end -> if.end215\nProbability 100.00%" ];
	Node0x5626356afd30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.else:\l|  store i32 0, ptr %i121, align 4\l  br label %for.cond122\l}"];
	Node0x5626356afd30 -> Node0x5626356baab0[tooltip="if.else -> for.cond122\nProbability 100.00%" ];
	Node0x5626356baab0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond122:\l|  %153 = load i32, ptr %i121, align 4\l  %154 = load i32, ptr %nlocal, align 4\l  %cmp123 = icmp slt i32 %153, %154\l  br i1 %cmp123, label %for.body124, label %for.end214\l|{<s0>T|<s1>F}}"];
	Node0x5626356baab0:s0 -> Node0x5626356bad50[tooltip="for.cond122 -> for.body124\nProbability 96.88%" ];
	Node0x5626356baab0:s1 -> Node0x5626356badd0[tooltip="for.cond122 -> for.end214\nProbability 3.12%" ];
	Node0x5626356bad50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body124:\l|  %155 = load ptr, ptr %mask, align 8\l  %156 = load i32, ptr %i121, align 4\l  %idxprom125 = sext i32 %156 to i64\l  %arrayidx126 = getelementptr inbounds i32, ptr %155, i64 %idxprom125\l  %157 = load i32, ptr %arrayidx126, align 4\l  %groupbit127 = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr\l... %this1, i32 0, i32 4\l  %158 = load i32, ptr %groupbit127, align 4\l  %and128 = and i32 %157, %158\l  %tobool129 = icmp ne i32 %and128, 0\l  br i1 %tobool129, label %if.then130, label %if.end211\l|{<s0>T|<s1>F}}"];
	Node0x5626356bad50:s0 -> Node0x5626356bb4d0[tooltip="for.body124 -> if.then130\nProbability 62.50%" ];
	Node0x5626356bad50:s1 -> Node0x5626356bb550[tooltip="for.body124 -> if.end211\nProbability 37.50%" ];
	Node0x5626356bb4d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.then130:\l|  %159 = load ptr, ptr %pe, align 8\l  %160 = load i32, ptr %i121, align 4\l  %idxprom131 = sext i32 %160 to i64\l  %arrayidx132 = getelementptr inbounds double, ptr %159, i64 %idxprom131\l  %161 = load double, ptr %arrayidx132, align 8\l  %162 = load ptr, ptr %ke, align 8\l  %163 = load i32, ptr %i121, align 4\l  %idxprom133 = sext i32 %163 to i64\l  %arrayidx134 = getelementptr inbounds double, ptr %162, i64 %idxprom133\l  %164 = load double, ptr %arrayidx134, align 8\l  %add135 = fadd double %161, %164\l  store double %add135, ptr %eng, align 8\l  %165 = load double, ptr %eng, align 8\l  %166 = load ptr, ptr %v, align 8\l  %167 = load i32, ptr %i121, align 4\l  %idxprom136 = sext i32 %167 to i64\l  %arrayidx137 = getelementptr inbounds ptr, ptr %166, i64 %idxprom136\l  %168 = load ptr, ptr %arrayidx137, align 8\l  %arrayidx138 = getelementptr inbounds double, ptr %168, i64 0\l  %169 = load double, ptr %arrayidx138, align 8\l  %arrayidx139 = getelementptr inbounds [3 x double], ptr %jc, i64 0, i64 0\l  %170 = load double, ptr %arrayidx139, align 16\l  %171 = call double @llvm.fmuladd.f64(double %165, double %169, double %170)\l  store double %171, ptr %arrayidx139, align 16\l  %172 = load double, ptr %eng, align 8\l  %173 = load ptr, ptr %v, align 8\l  %174 = load i32, ptr %i121, align 4\l  %idxprom140 = sext i32 %174 to i64\l  %arrayidx141 = getelementptr inbounds ptr, ptr %173, i64 %idxprom140\l  %175 = load ptr, ptr %arrayidx141, align 8\l  %arrayidx142 = getelementptr inbounds double, ptr %175, i64 1\l  %176 = load double, ptr %arrayidx142, align 8\l  %arrayidx143 = getelementptr inbounds [3 x double], ptr %jc, i64 0, i64 1\l  %177 = load double, ptr %arrayidx143, align 8\l  %178 = call double @llvm.fmuladd.f64(double %172, double %176, double %177)\l  store double %178, ptr %arrayidx143, align 8\l  %179 = load double, ptr %eng, align 8\l  %180 = load ptr, ptr %v, align 8\l  %181 = load i32, ptr %i121, align 4\l  %idxprom144 = sext i32 %181 to i64\l  %arrayidx145 = getelementptr inbounds ptr, ptr %180, i64 %idxprom144\l  %182 = load ptr, ptr %arrayidx145, align 8\l  %arrayidx146 = getelementptr inbounds double, ptr %182, i64 2\l  %183 = load double, ptr %arrayidx146, align 8\l  %arrayidx147 = getelementptr inbounds [3 x double], ptr %jc, i64 0, i64 2\l  %184 = load double, ptr %arrayidx147, align 16\l  %185 = call double @llvm.fmuladd.f64(double %179, double %183, double %184)\l  store double %185, ptr %arrayidx147, align 16\l  %186 = load ptr, ptr %stress, align 8\l  %187 = load i32, ptr %i121, align 4\l  %idxprom148 = sext i32 %187 to i64\l  %arrayidx149 = getelementptr inbounds ptr, ptr %186, i64 %idxprom148\l  %188 = load ptr, ptr %arrayidx149, align 8\l  %arrayidx150 = getelementptr inbounds double, ptr %188, i64 0\l  %189 = load double, ptr %arrayidx150, align 8\l  %190 = load ptr, ptr %v, align 8\l  %191 = load i32, ptr %i121, align 4\l  %idxprom151 = sext i32 %191 to i64\l  %arrayidx152 = getelementptr inbounds ptr, ptr %190, i64 %idxprom151\l  %192 = load ptr, ptr %arrayidx152, align 8\l  %arrayidx153 = getelementptr inbounds double, ptr %192, i64 0\l  %193 = load double, ptr %arrayidx153, align 8\l  %194 = load ptr, ptr %stress, align 8\l  %195 = load i32, ptr %i121, align 4\l  %idxprom154 = sext i32 %195 to i64\l  %arrayidx155 = getelementptr inbounds ptr, ptr %194, i64 %idxprom154\l  %196 = load ptr, ptr %arrayidx155, align 8\l  %arrayidx156 = getelementptr inbounds double, ptr %196, i64 3\l  %197 = load double, ptr %arrayidx156, align 8\l  %198 = load ptr, ptr %v, align 8\l  %199 = load i32, ptr %i121, align 4\l  %idxprom157 = sext i32 %199 to i64\l  %arrayidx158 = getelementptr inbounds ptr, ptr %198, i64 %idxprom157\l  %200 = load ptr, ptr %arrayidx158, align 8\l  %arrayidx159 = getelementptr inbounds double, ptr %200, i64 1\l  %201 = load double, ptr %arrayidx159, align 8\l  %mul160 = fmul double %197, %201\l  %202 = call double @llvm.fmuladd.f64(double %189, double %193, double\l... %mul160)\l  %203 = load ptr, ptr %stress, align 8\l  %204 = load i32, ptr %i121, align 4\l  %idxprom161 = sext i32 %204 to i64\l  %arrayidx162 = getelementptr inbounds ptr, ptr %203, i64 %idxprom161\l  %205 = load ptr, ptr %arrayidx162, align 8\l  %arrayidx163 = getelementptr inbounds double, ptr %205, i64 4\l  %206 = load double, ptr %arrayidx163, align 8\l  %207 = load ptr, ptr %v, align 8\l  %208 = load i32, ptr %i121, align 4\l  %idxprom164 = sext i32 %208 to i64\l  %arrayidx165 = getelementptr inbounds ptr, ptr %207, i64 %idxprom164\l  %209 = load ptr, ptr %arrayidx165, align 8\l  %arrayidx166 = getelementptr inbounds double, ptr %209, i64 2\l  %210 = load double, ptr %arrayidx166, align 8\l  %211 = call double @llvm.fmuladd.f64(double %206, double %210, double %202)\l  %arrayidx167 = getelementptr inbounds [3 x double], ptr %jv, i64 0, i64 0\l  %212 = load double, ptr %arrayidx167, align 16\l  %sub168 = fsub double %212, %211\l  store double %sub168, ptr %arrayidx167, align 16\l  %213 = load ptr, ptr %stress, align 8\l  %214 = load i32, ptr %i121, align 4\l  %idxprom169 = sext i32 %214 to i64\l  %arrayidx170 = getelementptr inbounds ptr, ptr %213, i64 %idxprom169\l  %215 = load ptr, ptr %arrayidx170, align 8\l  %arrayidx171 = getelementptr inbounds double, ptr %215, i64 3\l  %216 = load double, ptr %arrayidx171, align 8\l  %217 = load ptr, ptr %v, align 8\l  %218 = load i32, ptr %i121, align 4\l  %idxprom172 = sext i32 %218 to i64\l  %arrayidx173 = getelementptr inbounds ptr, ptr %217, i64 %idxprom172\l  %219 = load ptr, ptr %arrayidx173, align 8\l  %arrayidx174 = getelementptr inbounds double, ptr %219, i64 0\l  %220 = load double, ptr %arrayidx174, align 8\l  %221 = load ptr, ptr %stress, align 8\l  %222 = load i32, ptr %i121, align 4\l  %idxprom175 = sext i32 %222 to i64\l  %arrayidx176 = getelementptr inbounds ptr, ptr %221, i64 %idxprom175\l  %223 = load ptr, ptr %arrayidx176, align 8\l  %arrayidx177 = getelementptr inbounds double, ptr %223, i64 1\l  %224 = load double, ptr %arrayidx177, align 8\l  %225 = load ptr, ptr %v, align 8\l  %226 = load i32, ptr %i121, align 4\l  %idxprom178 = sext i32 %226 to i64\l  %arrayidx179 = getelementptr inbounds ptr, ptr %225, i64 %idxprom178\l  %227 = load ptr, ptr %arrayidx179, align 8\l  %arrayidx180 = getelementptr inbounds double, ptr %227, i64 1\l  %228 = load double, ptr %arrayidx180, align 8\l  %mul181 = fmul double %224, %228\l  %229 = call double @llvm.fmuladd.f64(double %216, double %220, double\l... %mul181)\l  %230 = load ptr, ptr %stress, align 8\l  %231 = load i32, ptr %i121, align 4\l  %idxprom182 = sext i32 %231 to i64\l  %arrayidx183 = getelementptr inbounds ptr, ptr %230, i64 %idxprom182\l  %232 = load ptr, ptr %arrayidx183, align 8\l  %arrayidx184 = getelementptr inbounds double, ptr %232, i64 5\l  %233 = load double, ptr %arrayidx184, align 8\l  %234 = load ptr, ptr %v, align 8\l  %235 = load i32, ptr %i121, align 4\l  %idxprom185 = sext i32 %235 to i64\l  %arrayidx186 = getelementptr inbounds ptr, ptr %234, i64 %idxprom185\l  %236 = load ptr, ptr %arrayidx186, align 8\l  %arrayidx187 = getelementptr inbounds double, ptr %236, i64 2\l  %237 = load double, ptr %arrayidx187, align 8\l  %238 = call double @llvm.fmuladd.f64(double %233, double %237, double %229)\l  %arrayidx188 = getelementptr inbounds [3 x double], ptr %jv, i64 0, i64 1\l  %239 = load double, ptr %arrayidx188, align 8\l  %sub189 = fsub double %239, %238\l  store double %sub189, ptr %arrayidx188, align 8\l  %240 = load ptr, ptr %stress, align 8\l  %241 = load i32, ptr %i121, align 4\l  %idxprom190 = sext i32 %241 to i64\l  %arrayidx191 = getelementptr inbounds ptr, ptr %240, i64 %idxprom190\l  %242 = load ptr, ptr %arrayidx191, align 8\l  %arrayidx192 = getelementptr inbounds double, ptr %242, i64 4\l  %243 = load double, ptr %arrayidx192, align 8\l  %244 = load ptr, ptr %v, align 8\l  %245 = load i32, ptr %i121, align 4\l  %idxprom193 = sext i32 %245 to i64\l  %arrayidx194 = getelementptr inbounds ptr, ptr %244, i64 %idxprom193\l  %246 = load ptr, ptr %arrayidx194, align 8\l  %arrayidx195 = getelementptr inbounds double, ptr %246, i64 0\l  %247 = load double, ptr %arrayidx195, align 8\l  %248 = load ptr, ptr %stress, align 8\l  %249 = load i32, ptr %i121, align 4\l  %idxprom196 = sext i32 %249 to i64\l  %arrayidx197 = getelementptr inbounds ptr, ptr %248, i64 %idxprom196\l  %250 = load ptr, ptr %arrayidx197, align 8\l  %arrayidx198 = getelementptr inbounds double, ptr %250, i64 5\l  %251 = load double, ptr %arrayidx198, align 8\l  %252 = load ptr, ptr %v, align 8\l  %253 = load i32, ptr %i121, align 4\l  %idxprom199 = sext i32 %253 to i64\l  %arrayidx200 = getelementptr inbounds ptr, ptr %252, i64 %idxprom199\l  %254 = load ptr, ptr %arrayidx200, align 8\l  %arrayidx201 = getelementptr inbounds double, ptr %254, i64 1\l  %255 = load double, ptr %arrayidx201, align 8\l  %mul202 = fmul double %251, %255\l  %256 = call double @llvm.fmuladd.f64(double %243, double %247, double\l... %mul202)\l  %257 = load ptr, ptr %stress, align 8\l  %258 = load i32, ptr %i121, align 4\l  %idxprom203 = sext i32 %258 to i64\l  %arrayidx204 = getelementptr inbounds ptr, ptr %257, i64 %idxprom203\l  %259 = load ptr, ptr %arrayidx204, align 8\l  %arrayidx205 = getelementptr inbounds double, ptr %259, i64 2\l  %260 = load double, ptr %arrayidx205, align 8\l  %261 = load ptr, ptr %v, align 8\l  %262 = load i32, ptr %i121, align 4\l  %idxprom206 = sext i32 %262 to i64\l  %arrayidx207 = getelementptr inbounds ptr, ptr %261, i64 %idxprom206\l  %263 = load ptr, ptr %arrayidx207, align 8\l  %arrayidx208 = getelementptr inbounds double, ptr %263, i64 2\l  %264 = load double, ptr %arrayidx208, align 8\l  %265 = call double @llvm.fmuladd.f64(double %260, double %264, double %256)\l  %arrayidx209 = getelementptr inbounds [3 x double], ptr %jv, i64 0, i64 2\l  %266 = load double, ptr %arrayidx209, align 16\l  %sub210 = fsub double %266, %265\l  store double %sub210, ptr %arrayidx209, align 16\l  br label %if.end211\l}"];
	Node0x5626356bb4d0 -> Node0x5626356bb550[tooltip="if.then130 -> if.end211\nProbability 100.00%" ];
	Node0x5626356bb550 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end211:\l|  br label %for.inc212\l}"];
	Node0x5626356bb550 -> Node0x5626356c50c0[tooltip="if.end211 -> for.inc212\nProbability 100.00%" ];
	Node0x5626356c50c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc212:\l|  %267 = load i32, ptr %i121, align 4\l  %inc213 = add nsw i32 %267, 1\l  store i32 %inc213, ptr %i121, align 4\l  br label %for.cond122, !llvm.loop !8\l}"];
	Node0x5626356c50c0 -> Node0x5626356baab0[tooltip="for.inc212 -> for.cond122\nProbability 100.00%" ];
	Node0x5626356badd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end214:\l|  br label %if.end215\l}"];
	Node0x5626356badd0 -> Node0x5626356ba950[tooltip="for.end214 -> if.end215\nProbability 100.00%" ];
	Node0x5626356ba950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{if.end215:\l|  %force = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 11\l  %268 = load ptr, ptr %force, align 8\l  %269 = load ptr, ptr %268, align 8\l  %nktv2p216 = getelementptr inbounds %\"class.LAMMPS_NS::Force\", ptr %269, i32\l... 0, i32 6\l  %270 = load double, ptr %nktv2p216, align 8\l  store double %270, ptr %nktv2p, align 8\l  %271 = load double, ptr %nktv2p, align 8\l  %arrayidx217 = getelementptr inbounds [3 x double], ptr %jv, i64 0, i64 0\l  %272 = load double, ptr %arrayidx217, align 16\l  %div = fdiv double %272, %271\l  store double %div, ptr %arrayidx217, align 16\l  %273 = load double, ptr %nktv2p, align 8\l  %arrayidx218 = getelementptr inbounds [3 x double], ptr %jv, i64 0, i64 1\l  %274 = load double, ptr %arrayidx218, align 8\l  %div219 = fdiv double %274, %273\l  store double %div219, ptr %arrayidx218, align 8\l  %275 = load double, ptr %nktv2p, align 8\l  %arrayidx220 = getelementptr inbounds [3 x double], ptr %jv, i64 0, i64 2\l  %276 = load double, ptr %arrayidx220, align 16\l  %div221 = fdiv double %276, %275\l  store double %div221, ptr %arrayidx220, align 16\l  %arrayinit.begin = getelementptr inbounds [6 x double], ptr %data, i64 0,\l... i64 0\l  %arrayidx222 = getelementptr inbounds [3 x double], ptr %jc, i64 0, i64 0\l  %277 = load double, ptr %arrayidx222, align 16\l  %arrayidx223 = getelementptr inbounds [3 x double], ptr %jv, i64 0, i64 0\l  %278 = load double, ptr %arrayidx223, align 16\l  %add224 = fadd double %277, %278\l  store double %add224, ptr %arrayinit.begin, align 8\l  %arrayinit.element = getelementptr inbounds double, ptr %arrayinit.begin,\l... i64 1\l  %arrayidx225 = getelementptr inbounds [3 x double], ptr %jc, i64 0, i64 1\l  %279 = load double, ptr %arrayidx225, align 8\l  %arrayidx226 = getelementptr inbounds [3 x double], ptr %jv, i64 0, i64 1\l  %280 = load double, ptr %arrayidx226, align 8\l  %add227 = fadd double %279, %280\l  store double %add227, ptr %arrayinit.element, align 8\l  %arrayinit.element228 = getelementptr inbounds double, ptr\l... %arrayinit.element, i64 1\l  %arrayidx229 = getelementptr inbounds [3 x double], ptr %jc, i64 0, i64 2\l  %281 = load double, ptr %arrayidx229, align 16\l  %arrayidx230 = getelementptr inbounds [3 x double], ptr %jv, i64 0, i64 2\l  %282 = load double, ptr %arrayidx230, align 16\l  %add231 = fadd double %281, %282\l  store double %add231, ptr %arrayinit.element228, align 8\l  %arrayinit.element232 = getelementptr inbounds double, ptr\l... %arrayinit.element228, i64 1\l  %arrayidx233 = getelementptr inbounds [3 x double], ptr %jc, i64 0, i64 0\l  %283 = load double, ptr %arrayidx233, align 16\l  store double %283, ptr %arrayinit.element232, align 8\l  %arrayinit.element234 = getelementptr inbounds double, ptr\l... %arrayinit.element232, i64 1\l  %arrayidx235 = getelementptr inbounds [3 x double], ptr %jc, i64 0, i64 1\l  %284 = load double, ptr %arrayidx235, align 8\l  store double %284, ptr %arrayinit.element234, align 8\l  %arrayinit.element236 = getelementptr inbounds double, ptr\l... %arrayinit.element234, i64 1\l  %arrayidx237 = getelementptr inbounds [3 x double], ptr %jc, i64 0, i64 2\l  %285 = load double, ptr %arrayidx237, align 16\l  store double %285, ptr %arrayinit.element236, align 8\l  %arraydecay = getelementptr inbounds [6 x double], ptr %data, i64 0, i64 0\l  %vector = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr %this1,\l... i32 0, i32 6\l  %286 = load ptr, ptr %vector, align 8\l  %world = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 16\l  %287 = load ptr, ptr %world, align 8\l  %288 = load ptr, ptr %287, align 8\l  %call = call i32 @MPI_Allreduce(ptr noundef %arraydecay, ptr noundef %286,\l... i32 noundef 6, ptr noundef @ompi_mpi_double, ptr noundef @ompi_mpi_op_sum,\l... ptr noundef %288)\l  ret void\l}"];
}
