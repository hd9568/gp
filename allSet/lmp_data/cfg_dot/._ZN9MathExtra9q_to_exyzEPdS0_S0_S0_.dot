digraph "CFG for '_ZN9MathExtra9q_to_exyzEPdS0_S0_S0_' function" {
	label="CFG for '_ZN9MathExtra9q_to_exyzEPdS0_S0_S0_' function";

	Node0x55837360dc70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %q.addr = alloca ptr, align 8\l  %ex.addr = alloca ptr, align 8\l  %ey.addr = alloca ptr, align 8\l  %ez.addr = alloca ptr, align 8\l  store ptr %q, ptr %q.addr, align 8\l  store ptr %ex, ptr %ex.addr, align 8\l  store ptr %ey, ptr %ey.addr, align 8\l  store ptr %ez, ptr %ez.addr, align 8\l  %0 = load ptr, ptr %q.addr, align 8\l  %arrayidx = getelementptr inbounds double, ptr %0, i64 0\l  %1 = load double, ptr %arrayidx, align 8\l  %2 = load ptr, ptr %q.addr, align 8\l  %arrayidx1 = getelementptr inbounds double, ptr %2, i64 0\l  %3 = load double, ptr %arrayidx1, align 8\l  %4 = load ptr, ptr %q.addr, align 8\l  %arrayidx2 = getelementptr inbounds double, ptr %4, i64 1\l  %5 = load double, ptr %arrayidx2, align 8\l  %6 = load ptr, ptr %q.addr, align 8\l  %arrayidx3 = getelementptr inbounds double, ptr %6, i64 1\l  %7 = load double, ptr %arrayidx3, align 8\l  %mul4 = fmul double %5, %7\l  %8 = call double @llvm.fmuladd.f64(double %1, double %3, double %mul4)\l  %9 = load ptr, ptr %q.addr, align 8\l  %arrayidx5 = getelementptr inbounds double, ptr %9, i64 2\l  %10 = load double, ptr %arrayidx5, align 8\l  %11 = load ptr, ptr %q.addr, align 8\l  %arrayidx6 = getelementptr inbounds double, ptr %11, i64 2\l  %12 = load double, ptr %arrayidx6, align 8\l  %neg = fneg double %10\l  %13 = call double @llvm.fmuladd.f64(double %neg, double %12, double %8)\l  %14 = load ptr, ptr %q.addr, align 8\l  %arrayidx7 = getelementptr inbounds double, ptr %14, i64 3\l  %15 = load double, ptr %arrayidx7, align 8\l  %16 = load ptr, ptr %q.addr, align 8\l  %arrayidx8 = getelementptr inbounds double, ptr %16, i64 3\l  %17 = load double, ptr %arrayidx8, align 8\l  %neg9 = fneg double %15\l  %18 = call double @llvm.fmuladd.f64(double %neg9, double %17, double %13)\l  %19 = load ptr, ptr %ex.addr, align 8\l  %arrayidx10 = getelementptr inbounds double, ptr %19, i64 0\l  store double %18, ptr %arrayidx10, align 8\l  %20 = load ptr, ptr %q.addr, align 8\l  %arrayidx11 = getelementptr inbounds double, ptr %20, i64 1\l  %21 = load double, ptr %arrayidx11, align 8\l  %22 = load ptr, ptr %q.addr, align 8\l  %arrayidx12 = getelementptr inbounds double, ptr %22, i64 2\l  %23 = load double, ptr %arrayidx12, align 8\l  %24 = load ptr, ptr %q.addr, align 8\l  %arrayidx13 = getelementptr inbounds double, ptr %24, i64 0\l  %25 = load double, ptr %arrayidx13, align 8\l  %26 = load ptr, ptr %q.addr, align 8\l  %arrayidx14 = getelementptr inbounds double, ptr %26, i64 3\l  %27 = load double, ptr %arrayidx14, align 8\l  %mul15 = fmul double %25, %27\l  %28 = call double @llvm.fmuladd.f64(double %21, double %23, double %mul15)\l  %mul = fmul double 2.000000e+00, %28\l  %29 = load ptr, ptr %ex.addr, align 8\l  %arrayidx16 = getelementptr inbounds double, ptr %29, i64 1\l  store double %mul, ptr %arrayidx16, align 8\l  %30 = load ptr, ptr %q.addr, align 8\l  %arrayidx17 = getelementptr inbounds double, ptr %30, i64 1\l  %31 = load double, ptr %arrayidx17, align 8\l  %32 = load ptr, ptr %q.addr, align 8\l  %arrayidx18 = getelementptr inbounds double, ptr %32, i64 3\l  %33 = load double, ptr %arrayidx18, align 8\l  %34 = load ptr, ptr %q.addr, align 8\l  %arrayidx20 = getelementptr inbounds double, ptr %34, i64 0\l  %35 = load double, ptr %arrayidx20, align 8\l  %36 = load ptr, ptr %q.addr, align 8\l  %arrayidx21 = getelementptr inbounds double, ptr %36, i64 2\l  %37 = load double, ptr %arrayidx21, align 8\l  %mul22 = fmul double %35, %37\l  %neg23 = fneg double %mul22\l  %38 = call double @llvm.fmuladd.f64(double %31, double %33, double %neg23)\l  %mul24 = fmul double 2.000000e+00, %38\l  %39 = load ptr, ptr %ex.addr, align 8\l  %arrayidx25 = getelementptr inbounds double, ptr %39, i64 2\l  store double %mul24, ptr %arrayidx25, align 8\l  %40 = load ptr, ptr %q.addr, align 8\l  %arrayidx26 = getelementptr inbounds double, ptr %40, i64 1\l  %41 = load double, ptr %arrayidx26, align 8\l  %42 = load ptr, ptr %q.addr, align 8\l  %arrayidx27 = getelementptr inbounds double, ptr %42, i64 2\l  %43 = load double, ptr %arrayidx27, align 8\l  %44 = load ptr, ptr %q.addr, align 8\l  %arrayidx29 = getelementptr inbounds double, ptr %44, i64 0\l  %45 = load double, ptr %arrayidx29, align 8\l  %46 = load ptr, ptr %q.addr, align 8\l  %arrayidx30 = getelementptr inbounds double, ptr %46, i64 3\l  %47 = load double, ptr %arrayidx30, align 8\l  %mul31 = fmul double %45, %47\l  %neg32 = fneg double %mul31\l  %48 = call double @llvm.fmuladd.f64(double %41, double %43, double %neg32)\l  %mul33 = fmul double 2.000000e+00, %48\l  %49 = load ptr, ptr %ey.addr, align 8\l  %arrayidx34 = getelementptr inbounds double, ptr %49, i64 0\l  store double %mul33, ptr %arrayidx34, align 8\l  %50 = load ptr, ptr %q.addr, align 8\l  %arrayidx35 = getelementptr inbounds double, ptr %50, i64 0\l  %51 = load double, ptr %arrayidx35, align 8\l  %52 = load ptr, ptr %q.addr, align 8\l  %arrayidx36 = getelementptr inbounds double, ptr %52, i64 0\l  %53 = load double, ptr %arrayidx36, align 8\l  %54 = load ptr, ptr %q.addr, align 8\l  %arrayidx38 = getelementptr inbounds double, ptr %54, i64 1\l  %55 = load double, ptr %arrayidx38, align 8\l  %56 = load ptr, ptr %q.addr, align 8\l  %arrayidx39 = getelementptr inbounds double, ptr %56, i64 1\l  %57 = load double, ptr %arrayidx39, align 8\l  %mul40 = fmul double %55, %57\l  %neg41 = fneg double %mul40\l  %58 = call double @llvm.fmuladd.f64(double %51, double %53, double %neg41)\l  %59 = load ptr, ptr %q.addr, align 8\l  %arrayidx42 = getelementptr inbounds double, ptr %59, i64 2\l  %60 = load double, ptr %arrayidx42, align 8\l  %61 = load ptr, ptr %q.addr, align 8\l  %arrayidx43 = getelementptr inbounds double, ptr %61, i64 2\l  %62 = load double, ptr %arrayidx43, align 8\l  %63 = call double @llvm.fmuladd.f64(double %60, double %62, double %58)\l  %64 = load ptr, ptr %q.addr, align 8\l  %arrayidx45 = getelementptr inbounds double, ptr %64, i64 3\l  %65 = load double, ptr %arrayidx45, align 8\l  %66 = load ptr, ptr %q.addr, align 8\l  %arrayidx46 = getelementptr inbounds double, ptr %66, i64 3\l  %67 = load double, ptr %arrayidx46, align 8\l  %neg48 = fneg double %65\l  %68 = call double @llvm.fmuladd.f64(double %neg48, double %67, double %63)\l  %69 = load ptr, ptr %ey.addr, align 8\l  %arrayidx49 = getelementptr inbounds double, ptr %69, i64 1\l  store double %68, ptr %arrayidx49, align 8\l  %70 = load ptr, ptr %q.addr, align 8\l  %arrayidx50 = getelementptr inbounds double, ptr %70, i64 2\l  %71 = load double, ptr %arrayidx50, align 8\l  %72 = load ptr, ptr %q.addr, align 8\l  %arrayidx51 = getelementptr inbounds double, ptr %72, i64 3\l  %73 = load double, ptr %arrayidx51, align 8\l  %74 = load ptr, ptr %q.addr, align 8\l  %arrayidx53 = getelementptr inbounds double, ptr %74, i64 0\l  %75 = load double, ptr %arrayidx53, align 8\l  %76 = load ptr, ptr %q.addr, align 8\l  %arrayidx54 = getelementptr inbounds double, ptr %76, i64 1\l  %77 = load double, ptr %arrayidx54, align 8\l  %mul55 = fmul double %75, %77\l  %78 = call double @llvm.fmuladd.f64(double %71, double %73, double %mul55)\l  %mul56 = fmul double 2.000000e+00, %78\l  %79 = load ptr, ptr %ey.addr, align 8\l  %arrayidx57 = getelementptr inbounds double, ptr %79, i64 2\l  store double %mul56, ptr %arrayidx57, align 8\l  %80 = load ptr, ptr %q.addr, align 8\l  %arrayidx58 = getelementptr inbounds double, ptr %80, i64 1\l  %81 = load double, ptr %arrayidx58, align 8\l  %82 = load ptr, ptr %q.addr, align 8\l  %arrayidx59 = getelementptr inbounds double, ptr %82, i64 3\l  %83 = load double, ptr %arrayidx59, align 8\l  %84 = load ptr, ptr %q.addr, align 8\l  %arrayidx61 = getelementptr inbounds double, ptr %84, i64 0\l  %85 = load double, ptr %arrayidx61, align 8\l  %86 = load ptr, ptr %q.addr, align 8\l  %arrayidx62 = getelementptr inbounds double, ptr %86, i64 2\l  %87 = load double, ptr %arrayidx62, align 8\l  %mul63 = fmul double %85, %87\l  %88 = call double @llvm.fmuladd.f64(double %81, double %83, double %mul63)\l  %mul64 = fmul double 2.000000e+00, %88\l  %89 = load ptr, ptr %ez.addr, align 8\l  %arrayidx65 = getelementptr inbounds double, ptr %89, i64 0\l  store double %mul64, ptr %arrayidx65, align 8\l  %90 = load ptr, ptr %q.addr, align 8\l  %arrayidx66 = getelementptr inbounds double, ptr %90, i64 2\l  %91 = load double, ptr %arrayidx66, align 8\l  %92 = load ptr, ptr %q.addr, align 8\l  %arrayidx67 = getelementptr inbounds double, ptr %92, i64 3\l  %93 = load double, ptr %arrayidx67, align 8\l  %94 = load ptr, ptr %q.addr, align 8\l  %arrayidx69 = getelementptr inbounds double, ptr %94, i64 0\l  %95 = load double, ptr %arrayidx69, align 8\l  %96 = load ptr, ptr %q.addr, align 8\l  %arrayidx70 = getelementptr inbounds double, ptr %96, i64 1\l  %97 = load double, ptr %arrayidx70, align 8\l  %mul71 = fmul double %95, %97\l  %neg72 = fneg double %mul71\l  %98 = call double @llvm.fmuladd.f64(double %91, double %93, double %neg72)\l  %mul73 = fmul double 2.000000e+00, %98\l  %99 = load ptr, ptr %ez.addr, align 8\l  %arrayidx74 = getelementptr inbounds double, ptr %99, i64 1\l  store double %mul73, ptr %arrayidx74, align 8\l  %100 = load ptr, ptr %q.addr, align 8\l  %arrayidx75 = getelementptr inbounds double, ptr %100, i64 0\l  %101 = load double, ptr %arrayidx75, align 8\l  %102 = load ptr, ptr %q.addr, align 8\l  %arrayidx76 = getelementptr inbounds double, ptr %102, i64 0\l  %103 = load double, ptr %arrayidx76, align 8\l  %104 = load ptr, ptr %q.addr, align 8\l  %arrayidx78 = getelementptr inbounds double, ptr %104, i64 1\l  %105 = load double, ptr %arrayidx78, align 8\l  %106 = load ptr, ptr %q.addr, align 8\l  %arrayidx79 = getelementptr inbounds double, ptr %106, i64 1\l  %107 = load double, ptr %arrayidx79, align 8\l  %mul80 = fmul double %105, %107\l  %neg81 = fneg double %mul80\l  %108 = call double @llvm.fmuladd.f64(double %101, double %103, double %neg81)\l  %109 = load ptr, ptr %q.addr, align 8\l  %arrayidx82 = getelementptr inbounds double, ptr %109, i64 2\l  %110 = load double, ptr %arrayidx82, align 8\l  %111 = load ptr, ptr %q.addr, align 8\l  %arrayidx83 = getelementptr inbounds double, ptr %111, i64 2\l  %112 = load double, ptr %arrayidx83, align 8\l  %neg85 = fneg double %110\l  %113 = call double @llvm.fmuladd.f64(double %neg85, double %112, double %108)\l  %114 = load ptr, ptr %q.addr, align 8\l  %arrayidx86 = getelementptr inbounds double, ptr %114, i64 3\l  %115 = load double, ptr %arrayidx86, align 8\l  %116 = load ptr, ptr %q.addr, align 8\l  %arrayidx87 = getelementptr inbounds double, ptr %116, i64 3\l  %117 = load double, ptr %arrayidx87, align 8\l  %118 = call double @llvm.fmuladd.f64(double %115, double %117, double %113)\l  %119 = load ptr, ptr %ez.addr, align 8\l  %arrayidx89 = getelementptr inbounds double, ptr %119, i64 2\l  store double %118, ptr %arrayidx89, align 8\l  ret void\l}"];
}
