digraph "CFG for '_ZN9LAMMPS_NS9PairMorse6singleEiiiidddRd' function" {
	label="CFG for '_ZN9LAMMPS_NS9PairMorse6singleEiiiidddRd' function";

	Node0x562dfdfadfc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %.addr = alloca i32, align 4\l  %.addr1 = alloca i32, align 4\l  %itype.addr = alloca i32, align 4\l  %jtype.addr = alloca i32, align 4\l  %rsq.addr = alloca double, align 8\l  %.addr2 = alloca double, align 8\l  %factor_lj.addr = alloca double, align 8\l  %fforce.addr = alloca ptr, align 8\l  %r = alloca double, align 8\l  %dr = alloca double, align 8\l  %dexp = alloca double, align 8\l  %phi = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store i32 %0, ptr %.addr, align 4\l  store i32 %1, ptr %.addr1, align 4\l  store i32 %itype, ptr %itype.addr, align 4\l  store i32 %jtype, ptr %jtype.addr, align 4\l  store double %rsq, ptr %rsq.addr, align 8\l  store double %2, ptr %.addr2, align 8\l  store double %factor_lj, ptr %factor_lj.addr, align 8\l  store ptr %fforce, ptr %fforce.addr, align 8\l  %this3 = load ptr, ptr %this.addr, align 8\l  %3 = load double, ptr %rsq.addr, align 8\l  %call = call double @sqrt(double noundef %3) #9\l  store double %call, ptr %r, align 8\l  %4 = load double, ptr %r, align 8\l  %r0 = getelementptr inbounds %\"class.LAMMPS_NS::PairMorse\", ptr %this3, i32\l... 0, i32 5\l  %5 = load ptr, ptr %r0, align 8\l  %6 = load i32, ptr %itype.addr, align 4\l  %idxprom = sext i32 %6 to i64\l  %arrayidx = getelementptr inbounds ptr, ptr %5, i64 %idxprom\l  %7 = load ptr, ptr %arrayidx, align 8\l  %8 = load i32, ptr %jtype.addr, align 4\l  %idxprom4 = sext i32 %8 to i64\l  %arrayidx5 = getelementptr inbounds double, ptr %7, i64 %idxprom4\l  %9 = load double, ptr %arrayidx5, align 8\l  %sub = fsub double %4, %9\l  store double %sub, ptr %dr, align 8\l  %alpha = getelementptr inbounds %\"class.LAMMPS_NS::PairMorse\", ptr %this3,\l... i32 0, i32 4\l  %10 = load ptr, ptr %alpha, align 8\l  %11 = load i32, ptr %itype.addr, align 4\l  %idxprom6 = sext i32 %11 to i64\l  %arrayidx7 = getelementptr inbounds ptr, ptr %10, i64 %idxprom6\l  %12 = load ptr, ptr %arrayidx7, align 8\l  %13 = load i32, ptr %jtype.addr, align 4\l  %idxprom8 = sext i32 %13 to i64\l  %arrayidx9 = getelementptr inbounds double, ptr %12, i64 %idxprom8\l  %14 = load double, ptr %arrayidx9, align 8\l  %fneg = fneg double %14\l  %15 = load double, ptr %dr, align 8\l  %mul = fmul double %fneg, %15\l  %call10 = call double @exp(double noundef %mul) #9\l  store double %call10, ptr %dexp, align 8\l  %16 = load double, ptr %factor_lj.addr, align 8\l  %morse1 = getelementptr inbounds %\"class.LAMMPS_NS::PairMorse\", ptr %this3,\l... i32 0, i32 6\l  %17 = load ptr, ptr %morse1, align 8\l  %18 = load i32, ptr %itype.addr, align 4\l  %idxprom11 = sext i32 %18 to i64\l  %arrayidx12 = getelementptr inbounds ptr, ptr %17, i64 %idxprom11\l  %19 = load ptr, ptr %arrayidx12, align 8\l  %20 = load i32, ptr %jtype.addr, align 4\l  %idxprom13 = sext i32 %20 to i64\l  %arrayidx14 = getelementptr inbounds double, ptr %19, i64 %idxprom13\l  %21 = load double, ptr %arrayidx14, align 8\l  %mul15 = fmul double %16, %21\l  %22 = load double, ptr %dexp, align 8\l  %23 = load double, ptr %dexp, align 8\l  %24 = load double, ptr %dexp, align 8\l  %neg = fneg double %24\l  %25 = call double @llvm.fmuladd.f64(double %22, double %23, double %neg)\l  %mul17 = fmul double %mul15, %25\l  %26 = load double, ptr %r, align 8\l  %div = fdiv double %mul17, %26\l  %27 = load ptr, ptr %fforce.addr, align 8\l  store double %div, ptr %27, align 8\l  %d0 = getelementptr inbounds %\"class.LAMMPS_NS::PairMorse\", ptr %this3, i32\l... 0, i32 3\l  %28 = load ptr, ptr %d0, align 8\l  %29 = load i32, ptr %itype.addr, align 4\l  %idxprom18 = sext i32 %29 to i64\l  %arrayidx19 = getelementptr inbounds ptr, ptr %28, i64 %idxprom18\l  %30 = load ptr, ptr %arrayidx19, align 8\l  %31 = load i32, ptr %jtype.addr, align 4\l  %idxprom20 = sext i32 %31 to i64\l  %arrayidx21 = getelementptr inbounds double, ptr %30, i64 %idxprom20\l  %32 = load double, ptr %arrayidx21, align 8\l  %33 = load double, ptr %dexp, align 8\l  %34 = load double, ptr %dexp, align 8\l  %35 = load double, ptr %dexp, align 8\l  %mul23 = fmul double 2.000000e+00, %35\l  %neg24 = fneg double %mul23\l  %36 = call double @llvm.fmuladd.f64(double %33, double %34, double %neg24)\l  %offset = getelementptr inbounds %\"class.LAMMPS_NS::PairMorse\", ptr %this3,\l... i32 0, i32 7\l  %37 = load ptr, ptr %offset, align 8\l  %38 = load i32, ptr %itype.addr, align 4\l  %idxprom26 = sext i32 %38 to i64\l  %arrayidx27 = getelementptr inbounds ptr, ptr %37, i64 %idxprom26\l  %39 = load ptr, ptr %arrayidx27, align 8\l  %40 = load i32, ptr %jtype.addr, align 4\l  %idxprom28 = sext i32 %40 to i64\l  %arrayidx29 = getelementptr inbounds double, ptr %39, i64 %idxprom28\l  %41 = load double, ptr %arrayidx29, align 8\l  %neg30 = fneg double %41\l  %42 = call double @llvm.fmuladd.f64(double %32, double %36, double %neg30)\l  store double %42, ptr %phi, align 8\l  %43 = load double, ptr %factor_lj.addr, align 8\l  %44 = load double, ptr %phi, align 8\l  %mul31 = fmul double %43, %44\l  ret double %mul31\l}"];
}
