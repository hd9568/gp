digraph "CFG for '_ZN9LAMMPS_NS12FixNVESphere15final_integrateEv' function" {
	label="CFG for '_ZN9LAMMPS_NS12FixNVESphere15final_integrateEv' function";

	Node0x55fe505abf20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %dtfm = alloca double, align 8\l  %dtirotate = alloca double, align 8\l  %v = alloca ptr, align 8\l  %f = alloca ptr, align 8\l  %omega = alloca ptr, align 8\l  %torque = alloca ptr, align 8\l  %rmass = alloca ptr, align 8\l  %radius = alloca ptr, align 8\l  %mask = alloca ptr, align 8\l  %nlocal = alloca i32, align 4\l  %dtfrotate = alloca double, align 8\l  %i = alloca i32, align 4\l  store ptr %this, ptr %this.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %atom = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1, i32\l... 0, i32 6\l  %0 = load ptr, ptr %atom, align 8\l  %1 = load ptr, ptr %0, align 8\l  %v2 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %1, i32 0, i32 38\l  %2 = load ptr, ptr %v2, align 8\l  store ptr %2, ptr %v, align 8\l  %atom3 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %3 = load ptr, ptr %atom3, align 8\l  %4 = load ptr, ptr %3, align 8\l  %f4 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %4, i32 0, i32 39\l  %5 = load ptr, ptr %f4, align 8\l  store ptr %5, ptr %f, align 8\l  %atom5 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %6 = load ptr, ptr %atom5, align 8\l  %7 = load ptr, ptr %6, align 8\l  %omega6 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %7, i32 0,\l... i32 44\l  %8 = load ptr, ptr %omega6, align 8\l  store ptr %8, ptr %omega, align 8\l  %atom7 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %9 = load ptr, ptr %atom7, align 8\l  %10 = load ptr, ptr %9, align 8\l  %torque8 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %10, i32 0,\l... i32 46\l  %11 = load ptr, ptr %torque8, align 8\l  store ptr %11, ptr %torque, align 8\l  %atom9 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %12 = load ptr, ptr %atom9, align 8\l  %13 = load ptr, ptr %12, align 8\l  %rmass10 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %13, i32 0,\l... i32 40\l  %14 = load ptr, ptr %rmass10, align 8\l  store ptr %14, ptr %rmass, align 8\l  %atom11 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %15 = load ptr, ptr %atom11, align 8\l  %16 = load ptr, ptr %15, align 8\l  %radius12 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %16, i32 0,\l... i32 43\l  %17 = load ptr, ptr %radius12, align 8\l  store ptr %17, ptr %radius, align 8\l  %atom13 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %18 = load ptr, ptr %atom13, align 8\l  %19 = load ptr, ptr %18, align 8\l  %mask14 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %19, i32 0,\l... i32 35\l  %20 = load ptr, ptr %mask14, align 8\l  store ptr %20, ptr %mask, align 8\l  %atom15 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %21 = load ptr, ptr %atom15, align 8\l  %22 = load ptr, ptr %21, align 8\l  %nlocal16 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %22, i32 0,\l... i32 4\l  %23 = load i32, ptr %nlocal16, align 8\l  store i32 %23, ptr %nlocal, align 4\l  %igroup = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32 0,\l... i32 3\l  %24 = load i32, ptr %igroup, align 8\l  %atom17 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %25 = load ptr, ptr %atom17, align 8\l  %26 = load ptr, ptr %25, align 8\l  %firstgroup = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %26, i32\l... 0, i32 30\l  %27 = load i32, ptr %firstgroup, align 4\l  %cmp = icmp eq i32 %24, %27\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x55fe505abf20:s0 -> Node0x55fe5062ca60[tooltip="entry -> if.then\nProbability 50.00%" ];
	Node0x55fe505abf20:s1 -> Node0x55fe5062cad0[tooltip="entry -> if.end\nProbability 50.00%" ];
	Node0x55fe5062ca60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{if.then:\l|  %atom18 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %28 = load ptr, ptr %atom18, align 8\l  %29 = load ptr, ptr %28, align 8\l  %nfirst = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %29, i32 0,\l... i32 31\l  %30 = load i32, ptr %nfirst, align 8\l  store i32 %30, ptr %nlocal, align 4\l  br label %if.end\l}"];
	Node0x55fe5062ca60 -> Node0x55fe5062cad0[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x55fe5062cad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.end:\l|  %dtf = getelementptr inbounds %\"class.LAMMPS_NS::FixNVE\", ptr %this1, i32\l... 0, i32 2\l  %31 = load double, ptr %dtf, align 8\l  %inertia = getelementptr inbounds %\"class.LAMMPS_NS::FixNVESphere\", ptr\l... %this1, i32 0, i32 1\l  %32 = load double, ptr %inertia, align 8\l  %div = fdiv double %31, %32\l  store double %div, ptr %dtfrotate, align 8\l  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x55fe5062cad0 -> Node0x55fe5062d4f0[tooltip="if.end -> for.cond\nProbability 100.00%" ];
	Node0x55fe5062d4f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %33 = load i32, ptr %i, align 4\l  %34 = load i32, ptr %nlocal, align 4\l  %cmp19 = icmp slt i32 %33, %34\l  br i1 %cmp19, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x55fe5062d4f0:s0 -> Node0x55fe5062d790[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x55fe5062d4f0:s1 -> Node0x55fe5062d810[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x55fe5062d790 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %35 = load ptr, ptr %mask, align 8\l  %36 = load i32, ptr %i, align 4\l  %idxprom = sext i32 %36 to i64\l  %arrayidx = getelementptr inbounds i32, ptr %35, i64 %idxprom\l  %37 = load i32, ptr %arrayidx, align 4\l  %groupbit = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32\l... 0, i32 4\l  %38 = load i32, ptr %groupbit, align 4\l  %and = and i32 %37, %38\l  %tobool = icmp ne i32 %and, 0\l  br i1 %tobool, label %if.then20, label %if.end72\l|{<s0>T|<s1>F}}"];
	Node0x55fe5062d790:s0 -> Node0x55fe5062b780[tooltip="for.body -> if.then20\nProbability 62.50%" ];
	Node0x55fe5062d790:s1 -> Node0x55fe5062e270[tooltip="for.body -> if.end72\nProbability 37.50%" ];
	Node0x55fe5062b780 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.then20:\l|  %dtf21 = getelementptr inbounds %\"class.LAMMPS_NS::FixNVE\", ptr %this1,\l... i32 0, i32 2\l  %39 = load double, ptr %dtf21, align 8\l  %40 = load ptr, ptr %rmass, align 8\l  %41 = load i32, ptr %i, align 4\l  %idxprom22 = sext i32 %41 to i64\l  %arrayidx23 = getelementptr inbounds double, ptr %40, i64 %idxprom22\l  %42 = load double, ptr %arrayidx23, align 8\l  %div24 = fdiv double %39, %42\l  store double %div24, ptr %dtfm, align 8\l  %43 = load double, ptr %dtfm, align 8\l  %44 = load ptr, ptr %f, align 8\l  %45 = load i32, ptr %i, align 4\l  %idxprom25 = sext i32 %45 to i64\l  %arrayidx26 = getelementptr inbounds ptr, ptr %44, i64 %idxprom25\l  %46 = load ptr, ptr %arrayidx26, align 8\l  %arrayidx27 = getelementptr inbounds double, ptr %46, i64 0\l  %47 = load double, ptr %arrayidx27, align 8\l  %48 = load ptr, ptr %v, align 8\l  %49 = load i32, ptr %i, align 4\l  %idxprom28 = sext i32 %49 to i64\l  %arrayidx29 = getelementptr inbounds ptr, ptr %48, i64 %idxprom28\l  %50 = load ptr, ptr %arrayidx29, align 8\l  %arrayidx30 = getelementptr inbounds double, ptr %50, i64 0\l  %51 = load double, ptr %arrayidx30, align 8\l  %52 = call double @llvm.fmuladd.f64(double %43, double %47, double %51)\l  store double %52, ptr %arrayidx30, align 8\l  %53 = load double, ptr %dtfm, align 8\l  %54 = load ptr, ptr %f, align 8\l  %55 = load i32, ptr %i, align 4\l  %idxprom31 = sext i32 %55 to i64\l  %arrayidx32 = getelementptr inbounds ptr, ptr %54, i64 %idxprom31\l  %56 = load ptr, ptr %arrayidx32, align 8\l  %arrayidx33 = getelementptr inbounds double, ptr %56, i64 1\l  %57 = load double, ptr %arrayidx33, align 8\l  %58 = load ptr, ptr %v, align 8\l  %59 = load i32, ptr %i, align 4\l  %idxprom34 = sext i32 %59 to i64\l  %arrayidx35 = getelementptr inbounds ptr, ptr %58, i64 %idxprom34\l  %60 = load ptr, ptr %arrayidx35, align 8\l  %arrayidx36 = getelementptr inbounds double, ptr %60, i64 1\l  %61 = load double, ptr %arrayidx36, align 8\l  %62 = call double @llvm.fmuladd.f64(double %53, double %57, double %61)\l  store double %62, ptr %arrayidx36, align 8\l  %63 = load double, ptr %dtfm, align 8\l  %64 = load ptr, ptr %f, align 8\l  %65 = load i32, ptr %i, align 4\l  %idxprom37 = sext i32 %65 to i64\l  %arrayidx38 = getelementptr inbounds ptr, ptr %64, i64 %idxprom37\l  %66 = load ptr, ptr %arrayidx38, align 8\l  %arrayidx39 = getelementptr inbounds double, ptr %66, i64 2\l  %67 = load double, ptr %arrayidx39, align 8\l  %68 = load ptr, ptr %v, align 8\l  %69 = load i32, ptr %i, align 4\l  %idxprom40 = sext i32 %69 to i64\l  %arrayidx41 = getelementptr inbounds ptr, ptr %68, i64 %idxprom40\l  %70 = load ptr, ptr %arrayidx41, align 8\l  %arrayidx42 = getelementptr inbounds double, ptr %70, i64 2\l  %71 = load double, ptr %arrayidx42, align 8\l  %72 = call double @llvm.fmuladd.f64(double %63, double %67, double %71)\l  store double %72, ptr %arrayidx42, align 8\l  %73 = load double, ptr %dtfrotate, align 8\l  %74 = load ptr, ptr %radius, align 8\l  %75 = load i32, ptr %i, align 4\l  %idxprom43 = sext i32 %75 to i64\l  %arrayidx44 = getelementptr inbounds double, ptr %74, i64 %idxprom43\l  %76 = load double, ptr %arrayidx44, align 8\l  %77 = load ptr, ptr %radius, align 8\l  %78 = load i32, ptr %i, align 4\l  %idxprom45 = sext i32 %78 to i64\l  %arrayidx46 = getelementptr inbounds double, ptr %77, i64 %idxprom45\l  %79 = load double, ptr %arrayidx46, align 8\l  %mul = fmul double %76, %79\l  %80 = load ptr, ptr %rmass, align 8\l  %81 = load i32, ptr %i, align 4\l  %idxprom47 = sext i32 %81 to i64\l  %arrayidx48 = getelementptr inbounds double, ptr %80, i64 %idxprom47\l  %82 = load double, ptr %arrayidx48, align 8\l  %mul49 = fmul double %mul, %82\l  %div50 = fdiv double %73, %mul49\l  store double %div50, ptr %dtirotate, align 8\l  %83 = load double, ptr %dtirotate, align 8\l  %84 = load ptr, ptr %torque, align 8\l  %85 = load i32, ptr %i, align 4\l  %idxprom51 = sext i32 %85 to i64\l  %arrayidx52 = getelementptr inbounds ptr, ptr %84, i64 %idxprom51\l  %86 = load ptr, ptr %arrayidx52, align 8\l  %arrayidx53 = getelementptr inbounds double, ptr %86, i64 0\l  %87 = load double, ptr %arrayidx53, align 8\l  %88 = load ptr, ptr %omega, align 8\l  %89 = load i32, ptr %i, align 4\l  %idxprom55 = sext i32 %89 to i64\l  %arrayidx56 = getelementptr inbounds ptr, ptr %88, i64 %idxprom55\l  %90 = load ptr, ptr %arrayidx56, align 8\l  %arrayidx57 = getelementptr inbounds double, ptr %90, i64 0\l  %91 = load double, ptr %arrayidx57, align 8\l  %92 = call double @llvm.fmuladd.f64(double %83, double %87, double %91)\l  store double %92, ptr %arrayidx57, align 8\l  %93 = load double, ptr %dtirotate, align 8\l  %94 = load ptr, ptr %torque, align 8\l  %95 = load i32, ptr %i, align 4\l  %idxprom58 = sext i32 %95 to i64\l  %arrayidx59 = getelementptr inbounds ptr, ptr %94, i64 %idxprom58\l  %96 = load ptr, ptr %arrayidx59, align 8\l  %arrayidx60 = getelementptr inbounds double, ptr %96, i64 1\l  %97 = load double, ptr %arrayidx60, align 8\l  %98 = load ptr, ptr %omega, align 8\l  %99 = load i32, ptr %i, align 4\l  %idxprom62 = sext i32 %99 to i64\l  %arrayidx63 = getelementptr inbounds ptr, ptr %98, i64 %idxprom62\l  %100 = load ptr, ptr %arrayidx63, align 8\l  %arrayidx64 = getelementptr inbounds double, ptr %100, i64 1\l  %101 = load double, ptr %arrayidx64, align 8\l  %102 = call double @llvm.fmuladd.f64(double %93, double %97, double %101)\l  store double %102, ptr %arrayidx64, align 8\l  %103 = load double, ptr %dtirotate, align 8\l  %104 = load ptr, ptr %torque, align 8\l  %105 = load i32, ptr %i, align 4\l  %idxprom65 = sext i32 %105 to i64\l  %arrayidx66 = getelementptr inbounds ptr, ptr %104, i64 %idxprom65\l  %106 = load ptr, ptr %arrayidx66, align 8\l  %arrayidx67 = getelementptr inbounds double, ptr %106, i64 2\l  %107 = load double, ptr %arrayidx67, align 8\l  %108 = load ptr, ptr %omega, align 8\l  %109 = load i32, ptr %i, align 4\l  %idxprom69 = sext i32 %109 to i64\l  %arrayidx70 = getelementptr inbounds ptr, ptr %108, i64 %idxprom69\l  %110 = load ptr, ptr %arrayidx70, align 8\l  %arrayidx71 = getelementptr inbounds double, ptr %110, i64 2\l  %111 = load double, ptr %arrayidx71, align 8\l  %112 = call double @llvm.fmuladd.f64(double %103, double %107, double %111)\l  store double %112, ptr %arrayidx71, align 8\l  br label %if.end72\l}"];
	Node0x55fe5062b780 -> Node0x55fe5062e270[tooltip="if.then20 -> if.end72\nProbability 100.00%" ];
	Node0x55fe5062e270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end72:\l|  br label %for.inc\l}"];
	Node0x55fe5062e270 -> Node0x55fe50634c70[tooltip="if.end72 -> for.inc\nProbability 100.00%" ];
	Node0x55fe50634c70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %113 = load i32, ptr %i, align 4\l  %inc = add nsw i32 %113, 1\l  store i32 %inc, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x55fe50634c70 -> Node0x55fe5062d4f0[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x55fe5062d810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  ret void\l}"];
}
