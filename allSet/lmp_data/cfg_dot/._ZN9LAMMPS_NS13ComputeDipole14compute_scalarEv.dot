digraph "CFG for '_ZN9LAMMPS_NS13ComputeDipole14compute_scalarEv' function" {
	label="CFG for '_ZN9LAMMPS_NS13ComputeDipole14compute_scalarEv' function";

	Node0x561bd0a45270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  store ptr %this, ptr %this.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %invoked_vector = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr\l... %this1, i32 0, i32 45\l  %0 = load i64, ptr %invoked_vector, align 8\l  %update = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 7\l  %1 = load ptr, ptr %update, align 8\l  %2 = load ptr, ptr %1, align 8\l  %ntimestep = getelementptr inbounds %\"class.LAMMPS_NS::Update\", ptr %2, i32\l... 0, i32 4\l  %3 = load i64, ptr %ntimestep, align 8\l  %cmp = icmp ne i64 %0, %3\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x561bd0a45270:s0 -> Node0x561bd0a4afc0[tooltip="entry -> if.then\nProbability 50.00%" ];
	Node0x561bd0a45270:s1 -> Node0x561bd0a4b030[tooltip="entry -> if.end\nProbability 50.00%" ];
	Node0x561bd0a4afc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then:\l|  %vtable = load ptr, ptr %this1, align 8\l  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 7\l  %4 = load ptr, ptr %vfn, align 8\l  call void %4(ptr noundef nonnull align 8 dereferenceable(568) %this1)\l  br label %if.end\l}"];
	Node0x561bd0a4afc0 -> Node0x561bd0a4b030[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x561bd0a4b030 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end:\l|  %update2 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr\l... %this1, i32 0, i32 7\l  %5 = load ptr, ptr %update2, align 8\l  %6 = load ptr, ptr %5, align 8\l  %ntimestep3 = getelementptr inbounds %\"class.LAMMPS_NS::Update\", ptr %6, i32\l... 0, i32 4\l  %7 = load i64, ptr %ntimestep3, align 8\l  %invoked_scalar = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr\l... %this1, i32 0, i32 44\l  store i64 %7, ptr %invoked_scalar, align 8\l  %vector = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr %this1,\l... i32 0, i32 6\l  %8 = load ptr, ptr %vector, align 8\l  %arrayidx = getelementptr inbounds double, ptr %8, i64 0\l  %9 = load double, ptr %arrayidx, align 8\l  %vector4 = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr %this1,\l... i32 0, i32 6\l  %10 = load ptr, ptr %vector4, align 8\l  %arrayidx5 = getelementptr inbounds double, ptr %10, i64 0\l  %11 = load double, ptr %arrayidx5, align 8\l  %vector6 = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr %this1,\l... i32 0, i32 6\l  %12 = load ptr, ptr %vector6, align 8\l  %arrayidx7 = getelementptr inbounds double, ptr %12, i64 1\l  %13 = load double, ptr %arrayidx7, align 8\l  %vector8 = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr %this1,\l... i32 0, i32 6\l  %14 = load ptr, ptr %vector8, align 8\l  %arrayidx9 = getelementptr inbounds double, ptr %14, i64 1\l  %15 = load double, ptr %arrayidx9, align 8\l  %mul10 = fmul double %13, %15\l  %16 = call double @llvm.fmuladd.f64(double %9, double %11, double %mul10)\l  %vector11 = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr %this1,\l... i32 0, i32 6\l  %17 = load ptr, ptr %vector11, align 8\l  %arrayidx12 = getelementptr inbounds double, ptr %17, i64 2\l  %18 = load double, ptr %arrayidx12, align 8\l  %vector13 = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr %this1,\l... i32 0, i32 6\l  %19 = load ptr, ptr %vector13, align 8\l  %arrayidx14 = getelementptr inbounds double, ptr %19, i64 2\l  %20 = load double, ptr %arrayidx14, align 8\l  %21 = call double @llvm.fmuladd.f64(double %18, double %20, double %16)\l  %call = call double @sqrt(double noundef %21) #11\l  %scalar = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr %this1,\l... i32 0, i32 5\l  store double %call, ptr %scalar, align 8\l  %scalar15 = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr %this1,\l... i32 0, i32 5\l  %22 = load double, ptr %scalar15, align 8\l  ret double %22\l}"];
}
