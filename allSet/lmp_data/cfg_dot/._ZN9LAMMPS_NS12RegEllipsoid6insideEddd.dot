digraph "CFG for '_ZN9LAMMPS_NS12RegEllipsoid6insideEddd' function" {
	label="CFG for '_ZN9LAMMPS_NS12RegEllipsoid6insideEddd' function";

	Node0x56554da13620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %retval = alloca i32, align 4\l  %this.addr = alloca ptr, align 8\l  %x.addr = alloca double, align 8\l  %y.addr = alloca double, align 8\l  %z.addr = alloca double, align 8\l  %delx = alloca double, align 8\l  %dely = alloca double, align 8\l  %delz = alloca double, align 8\l  %r = alloca double, align 8\l  %rc = alloca double, align 8\l  %delx28 = alloca double, align 8\l  %dely33 = alloca double, align 8\l  %r38 = alloca double, align 8\l  %rc41 = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store double %x, ptr %x.addr, align 8\l  store double %y, ptr %y.addr, align 8\l  store double %z, ptr %z.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %domain = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 10\l  %0 = load ptr, ptr %domain, align 8\l  %1 = load ptr, ptr %0, align 8\l  %dimension = getelementptr inbounds %\"class.LAMMPS_NS::Domain\", ptr %1, i32\l... 0, i32 2\l  %2 = load i32, ptr %dimension, align 4\l  %cmp = icmp eq i32 %2, 3\l  br i1 %cmp, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x56554da13620:s0 -> Node0x56554da14a20[tooltip="entry -> if.then\nProbability 50.00%" ];
	Node0x56554da13620:s1 -> Node0x56554da14a90[tooltip="entry -> if.else\nProbability 50.00%" ];
	Node0x56554da14a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then:\l|  %b = getelementptr inbounds %\"class.LAMMPS_NS::RegEllipsoid\", ptr %this1,\l... i32 0, i32 5\l  %3 = load double, ptr %b, align 8\l  %c = getelementptr inbounds %\"class.LAMMPS_NS::RegEllipsoid\", ptr %this1,\l... i32 0, i32 6\l  %4 = load double, ptr %c, align 8\l  %mul = fmul double %3, %4\l  %5 = load double, ptr %x.addr, align 8\l  %xc = getelementptr inbounds %\"class.LAMMPS_NS::RegEllipsoid\", ptr %this1,\l... i32 0, i32 1\l  %6 = load double, ptr %xc, align 8\l  %sub = fsub double %5, %6\l  %mul2 = fmul double %mul, %sub\l  store double %mul2, ptr %delx, align 8\l  %a = getelementptr inbounds %\"class.LAMMPS_NS::RegEllipsoid\", ptr %this1,\l... i32 0, i32 4\l  %7 = load double, ptr %a, align 8\l  %c3 = getelementptr inbounds %\"class.LAMMPS_NS::RegEllipsoid\", ptr %this1,\l... i32 0, i32 6\l  %8 = load double, ptr %c3, align 8\l  %mul4 = fmul double %7, %8\l  %9 = load double, ptr %y.addr, align 8\l  %yc = getelementptr inbounds %\"class.LAMMPS_NS::RegEllipsoid\", ptr %this1,\l... i32 0, i32 2\l  %10 = load double, ptr %yc, align 8\l  %sub5 = fsub double %9, %10\l  %mul6 = fmul double %mul4, %sub5\l  store double %mul6, ptr %dely, align 8\l  %a7 = getelementptr inbounds %\"class.LAMMPS_NS::RegEllipsoid\", ptr %this1,\l... i32 0, i32 4\l  %11 = load double, ptr %a7, align 8\l  %b8 = getelementptr inbounds %\"class.LAMMPS_NS::RegEllipsoid\", ptr %this1,\l... i32 0, i32 5\l  %12 = load double, ptr %b8, align 8\l  %mul9 = fmul double %11, %12\l  %13 = load double, ptr %z.addr, align 8\l  %zc = getelementptr inbounds %\"class.LAMMPS_NS::RegEllipsoid\", ptr %this1,\l... i32 0, i32 3\l  %14 = load double, ptr %zc, align 8\l  %sub10 = fsub double %13, %14\l  %mul11 = fmul double %mul9, %sub10\l  store double %mul11, ptr %delz, align 8\l  %15 = load double, ptr %delx, align 8\l  %16 = load double, ptr %delx, align 8\l  %17 = load double, ptr %dely, align 8\l  %18 = load double, ptr %dely, align 8\l  %mul13 = fmul double %17, %18\l  %19 = call double @llvm.fmuladd.f64(double %15, double %16, double %mul13)\l  %20 = load double, ptr %delz, align 8\l  %21 = load double, ptr %delz, align 8\l  %22 = call double @llvm.fmuladd.f64(double %20, double %21, double %19)\l  store double %22, ptr %r, align 8\l  %a15 = getelementptr inbounds %\"class.LAMMPS_NS::RegEllipsoid\", ptr %this1,\l... i32 0, i32 4\l  %23 = load double, ptr %a15, align 8\l  %a16 = getelementptr inbounds %\"class.LAMMPS_NS::RegEllipsoid\", ptr %this1,\l... i32 0, i32 4\l  %24 = load double, ptr %a16, align 8\l  %mul17 = fmul double %23, %24\l  %b18 = getelementptr inbounds %\"class.LAMMPS_NS::RegEllipsoid\", ptr %this1,\l... i32 0, i32 5\l  %25 = load double, ptr %b18, align 8\l  %mul19 = fmul double %mul17, %25\l  %b20 = getelementptr inbounds %\"class.LAMMPS_NS::RegEllipsoid\", ptr %this1,\l... i32 0, i32 5\l  %26 = load double, ptr %b20, align 8\l  %mul21 = fmul double %mul19, %26\l  %c22 = getelementptr inbounds %\"class.LAMMPS_NS::RegEllipsoid\", ptr %this1,\l... i32 0, i32 6\l  %27 = load double, ptr %c22, align 8\l  %mul23 = fmul double %mul21, %27\l  %c24 = getelementptr inbounds %\"class.LAMMPS_NS::RegEllipsoid\", ptr %this1,\l... i32 0, i32 6\l  %28 = load double, ptr %c24, align 8\l  %mul25 = fmul double %mul23, %28\l  store double %mul25, ptr %rc, align 8\l  %29 = load double, ptr %r, align 8\l  %30 = load double, ptr %rc, align 8\l  %cmp26 = fcmp ole double %29, %30\l  br i1 %cmp26, label %if.then27, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x56554da14a20:s0 -> Node0x56554da4be90[tooltip="if.then -> if.then27\nProbability 50.00%" ];
	Node0x56554da14a20:s1 -> Node0x56554da4bee0[tooltip="if.then -> if.end\nProbability 50.00%" ];
	Node0x56554da4be90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.then27:\l|  store i32 1, ptr %retval, align 4\l  br label %return\l}"];
	Node0x56554da4be90 -> Node0x56554da4c0a0[tooltip="if.then27 -> return\nProbability 100.00%" ];
	Node0x56554da4bee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.end:\l|  br label %if.end52\l}"];
	Node0x56554da4bee0 -> Node0x56554da4c180[tooltip="if.end -> if.end52\nProbability 100.00%" ];
	Node0x56554da14a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.else:\l|  %b29 = getelementptr inbounds %\"class.LAMMPS_NS::RegEllipsoid\", ptr\l... %this1, i32 0, i32 5\l  %31 = load double, ptr %b29, align 8\l  %32 = load double, ptr %x.addr, align 8\l  %xc30 = getelementptr inbounds %\"class.LAMMPS_NS::RegEllipsoid\", ptr %this1,\l... i32 0, i32 1\l  %33 = load double, ptr %xc30, align 8\l  %sub31 = fsub double %32, %33\l  %mul32 = fmul double %31, %sub31\l  store double %mul32, ptr %delx28, align 8\l  %a34 = getelementptr inbounds %\"class.LAMMPS_NS::RegEllipsoid\", ptr %this1,\l... i32 0, i32 4\l  %34 = load double, ptr %a34, align 8\l  %35 = load double, ptr %y.addr, align 8\l  %yc35 = getelementptr inbounds %\"class.LAMMPS_NS::RegEllipsoid\", ptr %this1,\l... i32 0, i32 2\l  %36 = load double, ptr %yc35, align 8\l  %sub36 = fsub double %35, %36\l  %mul37 = fmul double %34, %sub36\l  store double %mul37, ptr %dely33, align 8\l  %37 = load double, ptr %delx28, align 8\l  %38 = load double, ptr %delx28, align 8\l  %39 = load double, ptr %dely33, align 8\l  %40 = load double, ptr %dely33, align 8\l  %mul40 = fmul double %39, %40\l  %41 = call double @llvm.fmuladd.f64(double %37, double %38, double %mul40)\l  store double %41, ptr %r38, align 8\l  %a42 = getelementptr inbounds %\"class.LAMMPS_NS::RegEllipsoid\", ptr %this1,\l... i32 0, i32 4\l  %42 = load double, ptr %a42, align 8\l  %a43 = getelementptr inbounds %\"class.LAMMPS_NS::RegEllipsoid\", ptr %this1,\l... i32 0, i32 4\l  %43 = load double, ptr %a43, align 8\l  %mul44 = fmul double %42, %43\l  %b45 = getelementptr inbounds %\"class.LAMMPS_NS::RegEllipsoid\", ptr %this1,\l... i32 0, i32 5\l  %44 = load double, ptr %b45, align 8\l  %mul46 = fmul double %mul44, %44\l  %b47 = getelementptr inbounds %\"class.LAMMPS_NS::RegEllipsoid\", ptr %this1,\l... i32 0, i32 5\l  %45 = load double, ptr %b47, align 8\l  %mul48 = fmul double %mul46, %45\l  store double %mul48, ptr %rc41, align 8\l  %46 = load double, ptr %r38, align 8\l  %47 = load double, ptr %rc41, align 8\l  %cmp49 = fcmp ole double %46, %47\l  br i1 %cmp49, label %if.then50, label %if.end51\l|{<s0>T|<s1>F}}"];
	Node0x56554da14a90:s0 -> Node0x56554da4e2b0[tooltip="if.else -> if.then50\nProbability 50.00%" ];
	Node0x56554da14a90:s1 -> Node0x56554da4e300[tooltip="if.else -> if.end51\nProbability 50.00%" ];
	Node0x56554da4e2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.then50:\l|  store i32 1, ptr %retval, align 4\l  br label %return\l}"];
	Node0x56554da4e2b0 -> Node0x56554da4c0a0[tooltip="if.then50 -> return\nProbability 100.00%" ];
	Node0x56554da4e300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.end51:\l|  br label %if.end52\l}"];
	Node0x56554da4e300 -> Node0x56554da4c180[tooltip="if.end51 -> if.end52\nProbability 100.00%" ];
	Node0x56554da4c180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end52:\l|  store i32 0, ptr %retval, align 4\l  br label %return\l}"];
	Node0x56554da4c180 -> Node0x56554da4c0a0[tooltip="if.end52 -> return\nProbability 100.00%" ];
	Node0x56554da4c0a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{return:\l|  %48 = load i32, ptr %retval, align 4\l  ret i32 %48\l}"];
}
