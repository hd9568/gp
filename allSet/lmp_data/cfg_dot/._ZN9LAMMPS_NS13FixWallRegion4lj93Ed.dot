digraph "CFG for '_ZN9LAMMPS_NS13FixWallRegion4lj93Ed' function" {
	label="CFG for '_ZN9LAMMPS_NS13FixWallRegion4lj93Ed' function";

	Node0x5591c7722f20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %r.addr = alloca double, align 8\l  %rinv = alloca double, align 8\l  %r2inv = alloca double, align 8\l  %r4inv = alloca double, align 8\l  %r10inv = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store double %r, ptr %r.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %0 = load double, ptr %r.addr, align 8\l  %div = fdiv double 1.000000e+00, %0\l  store double %div, ptr %rinv, align 8\l  %1 = load double, ptr %rinv, align 8\l  %2 = load double, ptr %rinv, align 8\l  %mul = fmul double %1, %2\l  store double %mul, ptr %r2inv, align 8\l  %3 = load double, ptr %r2inv, align 8\l  %4 = load double, ptr %r2inv, align 8\l  %mul2 = fmul double %3, %4\l  store double %mul2, ptr %r4inv, align 8\l  %5 = load double, ptr %r4inv, align 8\l  %6 = load double, ptr %r4inv, align 8\l  %mul3 = fmul double %5, %6\l  %7 = load double, ptr %r2inv, align 8\l  %mul4 = fmul double %mul3, %7\l  store double %mul4, ptr %r10inv, align 8\l  %coeff1 = getelementptr inbounds %\"class.LAMMPS_NS::FixWallRegion\", ptr\l... %this1, i32 0, i32 12\l  %8 = load double, ptr %coeff1, align 8\l  %9 = load double, ptr %r10inv, align 8\l  %coeff2 = getelementptr inbounds %\"class.LAMMPS_NS::FixWallRegion\", ptr\l... %this1, i32 0, i32 13\l  %10 = load double, ptr %coeff2, align 8\l  %11 = load double, ptr %r4inv, align 8\l  %mul6 = fmul double %10, %11\l  %neg = fneg double %mul6\l  %12 = call double @llvm.fmuladd.f64(double %8, double %9, double %neg)\l  %fwall = getelementptr inbounds %\"class.LAMMPS_NS::FixWallRegion\", ptr\l... %this1, i32 0, i32 21\l  store double %12, ptr %fwall, align 8\l  %coeff3 = getelementptr inbounds %\"class.LAMMPS_NS::FixWallRegion\", ptr\l... %this1, i32 0, i32 14\l  %13 = load double, ptr %coeff3, align 8\l  %14 = load double, ptr %r4inv, align 8\l  %mul7 = fmul double %13, %14\l  %15 = load double, ptr %r4inv, align 8\l  %mul8 = fmul double %mul7, %15\l  %16 = load double, ptr %rinv, align 8\l  %coeff4 = getelementptr inbounds %\"class.LAMMPS_NS::FixWallRegion\", ptr\l... %this1, i32 0, i32 15\l  %17 = load double, ptr %coeff4, align 8\l  %18 = load double, ptr %r2inv, align 8\l  %mul10 = fmul double %17, %18\l  %19 = load double, ptr %rinv, align 8\l  %mul11 = fmul double %mul10, %19\l  %neg12 = fneg double %mul11\l  %20 = call double @llvm.fmuladd.f64(double %mul8, double %16, double %neg12)\l  %offset = getelementptr inbounds %\"class.LAMMPS_NS::FixWallRegion\", ptr\l... %this1, i32 0, i32 16\l  %21 = load double, ptr %offset, align 8\l  %sub = fsub double %20, %21\l  %eng = getelementptr inbounds %\"class.LAMMPS_NS::FixWallRegion\", ptr %this1,\l... i32 0, i32 20\l  store double %sub, ptr %eng, align 8\l  ret void\l}"];
}
