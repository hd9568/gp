digraph "CFG for '_ZN9LAMMPS_NS3Fix7v_tallyEiPidPdPA3_dS4_S2_' function" {
	label="CFG for '_ZN9LAMMPS_NS3Fix7v_tallyEiPidPdPA3_dS4_S2_' function";

	Node0x555c10ed8160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %n.addr = alloca i32, align 4\l  %list.addr = alloca ptr, align 8\l  %total.addr = alloca double, align 8\l  %vtot.addr = alloca ptr, align 8\l  %rlist.addr = alloca ptr, align 8\l  %flist.addr = alloca ptr, align 8\l  %center.addr = alloca ptr, align 8\l  %i = alloca i32, align 4\l  %ri0 = alloca [3 x double], align 16\l  store ptr %this, ptr %this.addr, align 8\l  store i32 %n, ptr %n.addr, align 4\l  store ptr %list, ptr %list.addr, align 8\l  store double %total, ptr %total.addr, align 8\l  store ptr %vtot, ptr %vtot.addr, align 8\l  store ptr %rlist, ptr %rlist.addr, align 8\l  store ptr %flist, ptr %flist.addr, align 8\l  store ptr %center, ptr %center.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %0 = load i32, ptr %n.addr, align 4\l  %1 = load ptr, ptr %list.addr, align 8\l  %2 = load double, ptr %total.addr, align 8\l  %3 = load ptr, ptr %vtot.addr, align 8\l  call void @_ZN9LAMMPS_NS3Fix7v_tallyEiPidPd(ptr noundef nonnull align 8\l... dereferenceable(656) %this1, i32 noundef %0, ptr noundef %1, double noundef\l... %2, ptr noundef %3)\l  %cvflag_atom = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1,\l... i32 0, i32 88\l  %4 = load i32, ptr %cvflag_atom, align 8\l  %tobool = icmp ne i32 %4, 0\l  br i1 %tobool, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x555c10ed8160:s0 -> Node0x555c10eddcc0[tooltip="entry -> if.then\nProbability 62.50%" ];
	Node0x555c10ed8160:s1 -> Node0x555c10eddd10[tooltip="entry -> if.end\nProbability 37.50%" ];
	Node0x555c10eddcc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.then:\l|  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x555c10eddcc0 -> Node0x555c10edded0[tooltip="if.then -> for.cond\nProbability 100.00%" ];
	Node0x555c10edded0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %5 = load i32, ptr %i, align 4\l  %6 = load i32, ptr %n.addr, align 4\l  %cmp = icmp slt i32 %5, %6\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x555c10edded0:s0 -> Node0x555c10ede2d0[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x555c10edded0:s1 -> Node0x555c10ede350[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x555c10ede2d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %arrayinit.begin = getelementptr inbounds [3 x double], ptr %ri0, i64 0,\l... i64 0\l  %7 = load ptr, ptr %rlist.addr, align 8\l  %8 = load i32, ptr %i, align 4\l  %idxprom = sext i32 %8 to i64\l  %arrayidx = getelementptr inbounds [3 x double], ptr %7, i64 %idxprom\l  %arrayidx2 = getelementptr inbounds [3 x double], ptr %arrayidx, i64 0, i64 0\l  %9 = load double, ptr %arrayidx2, align 8\l  %10 = load ptr, ptr %center.addr, align 8\l  %arrayidx3 = getelementptr inbounds double, ptr %10, i64 0\l  %11 = load double, ptr %arrayidx3, align 8\l  %sub = fsub double %9, %11\l  store double %sub, ptr %arrayinit.begin, align 8\l  %arrayinit.element = getelementptr inbounds double, ptr %arrayinit.begin,\l... i64 1\l  %12 = load ptr, ptr %rlist.addr, align 8\l  %13 = load i32, ptr %i, align 4\l  %idxprom4 = sext i32 %13 to i64\l  %arrayidx5 = getelementptr inbounds [3 x double], ptr %12, i64 %idxprom4\l  %arrayidx6 = getelementptr inbounds [3 x double], ptr %arrayidx5, i64 0, i64\l... 1\l  %14 = load double, ptr %arrayidx6, align 8\l  %15 = load ptr, ptr %center.addr, align 8\l  %arrayidx7 = getelementptr inbounds double, ptr %15, i64 1\l  %16 = load double, ptr %arrayidx7, align 8\l  %sub8 = fsub double %14, %16\l  store double %sub8, ptr %arrayinit.element, align 8\l  %arrayinit.element9 = getelementptr inbounds double, ptr %arrayinit.element,\l... i64 1\l  %17 = load ptr, ptr %rlist.addr, align 8\l  %18 = load i32, ptr %i, align 4\l  %idxprom10 = sext i32 %18 to i64\l  %arrayidx11 = getelementptr inbounds [3 x double], ptr %17, i64 %idxprom10\l  %arrayidx12 = getelementptr inbounds [3 x double], ptr %arrayidx11, i64 0,\l... i64 2\l  %19 = load double, ptr %arrayidx12, align 8\l  %20 = load ptr, ptr %center.addr, align 8\l  %arrayidx13 = getelementptr inbounds double, ptr %20, i64 2\l  %21 = load double, ptr %arrayidx13, align 8\l  %sub14 = fsub double %19, %21\l  store double %sub14, ptr %arrayinit.element9, align 8\l  %arrayidx15 = getelementptr inbounds [3 x double], ptr %ri0, i64 0, i64 0\l  %22 = load double, ptr %arrayidx15, align 16\l  %23 = load ptr, ptr %flist.addr, align 8\l  %24 = load i32, ptr %i, align 4\l  %idxprom16 = sext i32 %24 to i64\l  %arrayidx17 = getelementptr inbounds [3 x double], ptr %23, i64 %idxprom16\l  %arrayidx18 = getelementptr inbounds [3 x double], ptr %arrayidx17, i64 0,\l... i64 0\l  %25 = load double, ptr %arrayidx18, align 8\l  %cvatom = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32 0,\l... i32 69\l  %26 = load ptr, ptr %cvatom, align 8\l  %27 = load ptr, ptr %list.addr, align 8\l  %28 = load i32, ptr %i, align 4\l  %idxprom19 = sext i32 %28 to i64\l  %arrayidx20 = getelementptr inbounds i32, ptr %27, i64 %idxprom19\l  %29 = load i32, ptr %arrayidx20, align 4\l  %idxprom21 = sext i32 %29 to i64\l  %arrayidx22 = getelementptr inbounds ptr, ptr %26, i64 %idxprom21\l  %30 = load ptr, ptr %arrayidx22, align 8\l  %arrayidx23 = getelementptr inbounds double, ptr %30, i64 0\l  %31 = load double, ptr %arrayidx23, align 8\l  %32 = call double @llvm.fmuladd.f64(double %22, double %25, double %31)\l  store double %32, ptr %arrayidx23, align 8\l  %arrayidx24 = getelementptr inbounds [3 x double], ptr %ri0, i64 0, i64 1\l  %33 = load double, ptr %arrayidx24, align 8\l  %34 = load ptr, ptr %flist.addr, align 8\l  %35 = load i32, ptr %i, align 4\l  %idxprom25 = sext i32 %35 to i64\l  %arrayidx26 = getelementptr inbounds [3 x double], ptr %34, i64 %idxprom25\l  %arrayidx27 = getelementptr inbounds [3 x double], ptr %arrayidx26, i64 0,\l... i64 1\l  %36 = load double, ptr %arrayidx27, align 8\l  %cvatom28 = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32\l... 0, i32 69\l  %37 = load ptr, ptr %cvatom28, align 8\l  %38 = load ptr, ptr %list.addr, align 8\l  %39 = load i32, ptr %i, align 4\l  %idxprom29 = sext i32 %39 to i64\l  %arrayidx30 = getelementptr inbounds i32, ptr %38, i64 %idxprom29\l  %40 = load i32, ptr %arrayidx30, align 4\l  %idxprom31 = sext i32 %40 to i64\l  %arrayidx32 = getelementptr inbounds ptr, ptr %37, i64 %idxprom31\l  %41 = load ptr, ptr %arrayidx32, align 8\l  %arrayidx33 = getelementptr inbounds double, ptr %41, i64 1\l  %42 = load double, ptr %arrayidx33, align 8\l  %43 = call double @llvm.fmuladd.f64(double %33, double %36, double %42)\l  store double %43, ptr %arrayidx33, align 8\l  %arrayidx34 = getelementptr inbounds [3 x double], ptr %ri0, i64 0, i64 2\l  %44 = load double, ptr %arrayidx34, align 16\l  %45 = load ptr, ptr %flist.addr, align 8\l  %46 = load i32, ptr %i, align 4\l  %idxprom35 = sext i32 %46 to i64\l  %arrayidx36 = getelementptr inbounds [3 x double], ptr %45, i64 %idxprom35\l  %arrayidx37 = getelementptr inbounds [3 x double], ptr %arrayidx36, i64 0,\l... i64 2\l  %47 = load double, ptr %arrayidx37, align 8\l  %cvatom38 = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32\l... 0, i32 69\l  %48 = load ptr, ptr %cvatom38, align 8\l  %49 = load ptr, ptr %list.addr, align 8\l  %50 = load i32, ptr %i, align 4\l  %idxprom39 = sext i32 %50 to i64\l  %arrayidx40 = getelementptr inbounds i32, ptr %49, i64 %idxprom39\l  %51 = load i32, ptr %arrayidx40, align 4\l  %idxprom41 = sext i32 %51 to i64\l  %arrayidx42 = getelementptr inbounds ptr, ptr %48, i64 %idxprom41\l  %52 = load ptr, ptr %arrayidx42, align 8\l  %arrayidx43 = getelementptr inbounds double, ptr %52, i64 2\l  %53 = load double, ptr %arrayidx43, align 8\l  %54 = call double @llvm.fmuladd.f64(double %44, double %47, double %53)\l  store double %54, ptr %arrayidx43, align 8\l  %arrayidx44 = getelementptr inbounds [3 x double], ptr %ri0, i64 0, i64 0\l  %55 = load double, ptr %arrayidx44, align 16\l  %56 = load ptr, ptr %flist.addr, align 8\l  %57 = load i32, ptr %i, align 4\l  %idxprom45 = sext i32 %57 to i64\l  %arrayidx46 = getelementptr inbounds [3 x double], ptr %56, i64 %idxprom45\l  %arrayidx47 = getelementptr inbounds [3 x double], ptr %arrayidx46, i64 0,\l... i64 1\l  %58 = load double, ptr %arrayidx47, align 8\l  %cvatom48 = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32\l... 0, i32 69\l  %59 = load ptr, ptr %cvatom48, align 8\l  %60 = load ptr, ptr %list.addr, align 8\l  %61 = load i32, ptr %i, align 4\l  %idxprom49 = sext i32 %61 to i64\l  %arrayidx50 = getelementptr inbounds i32, ptr %60, i64 %idxprom49\l  %62 = load i32, ptr %arrayidx50, align 4\l  %idxprom51 = sext i32 %62 to i64\l  %arrayidx52 = getelementptr inbounds ptr, ptr %59, i64 %idxprom51\l  %63 = load ptr, ptr %arrayidx52, align 8\l  %arrayidx53 = getelementptr inbounds double, ptr %63, i64 3\l  %64 = load double, ptr %arrayidx53, align 8\l  %65 = call double @llvm.fmuladd.f64(double %55, double %58, double %64)\l  store double %65, ptr %arrayidx53, align 8\l  %arrayidx54 = getelementptr inbounds [3 x double], ptr %ri0, i64 0, i64 0\l  %66 = load double, ptr %arrayidx54, align 16\l  %67 = load ptr, ptr %flist.addr, align 8\l  %68 = load i32, ptr %i, align 4\l  %idxprom55 = sext i32 %68 to i64\l  %arrayidx56 = getelementptr inbounds [3 x double], ptr %67, i64 %idxprom55\l  %arrayidx57 = getelementptr inbounds [3 x double], ptr %arrayidx56, i64 0,\l... i64 2\l  %69 = load double, ptr %arrayidx57, align 8\l  %cvatom58 = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32\l... 0, i32 69\l  %70 = load ptr, ptr %cvatom58, align 8\l  %71 = load ptr, ptr %list.addr, align 8\l  %72 = load i32, ptr %i, align 4\l  %idxprom59 = sext i32 %72 to i64\l  %arrayidx60 = getelementptr inbounds i32, ptr %71, i64 %idxprom59\l  %73 = load i32, ptr %arrayidx60, align 4\l  %idxprom61 = sext i32 %73 to i64\l  %arrayidx62 = getelementptr inbounds ptr, ptr %70, i64 %idxprom61\l  %74 = load ptr, ptr %arrayidx62, align 8\l  %arrayidx63 = getelementptr inbounds double, ptr %74, i64 4\l  %75 = load double, ptr %arrayidx63, align 8\l  %76 = call double @llvm.fmuladd.f64(double %66, double %69, double %75)\l  store double %76, ptr %arrayidx63, align 8\l  %arrayidx64 = getelementptr inbounds [3 x double], ptr %ri0, i64 0, i64 1\l  %77 = load double, ptr %arrayidx64, align 8\l  %78 = load ptr, ptr %flist.addr, align 8\l  %79 = load i32, ptr %i, align 4\l  %idxprom65 = sext i32 %79 to i64\l  %arrayidx66 = getelementptr inbounds [3 x double], ptr %78, i64 %idxprom65\l  %arrayidx67 = getelementptr inbounds [3 x double], ptr %arrayidx66, i64 0,\l... i64 2\l  %80 = load double, ptr %arrayidx67, align 8\l  %cvatom68 = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32\l... 0, i32 69\l  %81 = load ptr, ptr %cvatom68, align 8\l  %82 = load ptr, ptr %list.addr, align 8\l  %83 = load i32, ptr %i, align 4\l  %idxprom69 = sext i32 %83 to i64\l  %arrayidx70 = getelementptr inbounds i32, ptr %82, i64 %idxprom69\l  %84 = load i32, ptr %arrayidx70, align 4\l  %idxprom71 = sext i32 %84 to i64\l  %arrayidx72 = getelementptr inbounds ptr, ptr %81, i64 %idxprom71\l  %85 = load ptr, ptr %arrayidx72, align 8\l  %arrayidx73 = getelementptr inbounds double, ptr %85, i64 5\l  %86 = load double, ptr %arrayidx73, align 8\l  %87 = call double @llvm.fmuladd.f64(double %77, double %80, double %86)\l  store double %87, ptr %arrayidx73, align 8\l  %arrayidx74 = getelementptr inbounds [3 x double], ptr %ri0, i64 0, i64 1\l  %88 = load double, ptr %arrayidx74, align 8\l  %89 = load ptr, ptr %flist.addr, align 8\l  %90 = load i32, ptr %i, align 4\l  %idxprom75 = sext i32 %90 to i64\l  %arrayidx76 = getelementptr inbounds [3 x double], ptr %89, i64 %idxprom75\l  %arrayidx77 = getelementptr inbounds [3 x double], ptr %arrayidx76, i64 0,\l... i64 0\l  %91 = load double, ptr %arrayidx77, align 8\l  %cvatom78 = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32\l... 0, i32 69\l  %92 = load ptr, ptr %cvatom78, align 8\l  %93 = load ptr, ptr %list.addr, align 8\l  %94 = load i32, ptr %i, align 4\l  %idxprom79 = sext i32 %94 to i64\l  %arrayidx80 = getelementptr inbounds i32, ptr %93, i64 %idxprom79\l  %95 = load i32, ptr %arrayidx80, align 4\l  %idxprom81 = sext i32 %95 to i64\l  %arrayidx82 = getelementptr inbounds ptr, ptr %92, i64 %idxprom81\l  %96 = load ptr, ptr %arrayidx82, align 8\l  %arrayidx83 = getelementptr inbounds double, ptr %96, i64 6\l  %97 = load double, ptr %arrayidx83, align 8\l  %98 = call double @llvm.fmuladd.f64(double %88, double %91, double %97)\l  store double %98, ptr %arrayidx83, align 8\l  %arrayidx84 = getelementptr inbounds [3 x double], ptr %ri0, i64 0, i64 2\l  %99 = load double, ptr %arrayidx84, align 16\l  %100 = load ptr, ptr %flist.addr, align 8\l  %101 = load i32, ptr %i, align 4\l  %idxprom85 = sext i32 %101 to i64\l  %arrayidx86 = getelementptr inbounds [3 x double], ptr %100, i64 %idxprom85\l  %arrayidx87 = getelementptr inbounds [3 x double], ptr %arrayidx86, i64 0,\l... i64 0\l  %102 = load double, ptr %arrayidx87, align 8\l  %cvatom88 = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32\l... 0, i32 69\l  %103 = load ptr, ptr %cvatom88, align 8\l  %104 = load ptr, ptr %list.addr, align 8\l  %105 = load i32, ptr %i, align 4\l  %idxprom89 = sext i32 %105 to i64\l  %arrayidx90 = getelementptr inbounds i32, ptr %104, i64 %idxprom89\l  %106 = load i32, ptr %arrayidx90, align 4\l  %idxprom91 = sext i32 %106 to i64\l  %arrayidx92 = getelementptr inbounds ptr, ptr %103, i64 %idxprom91\l  %107 = load ptr, ptr %arrayidx92, align 8\l  %arrayidx93 = getelementptr inbounds double, ptr %107, i64 7\l  %108 = load double, ptr %arrayidx93, align 8\l  %109 = call double @llvm.fmuladd.f64(double %99, double %102, double %108)\l  store double %109, ptr %arrayidx93, align 8\l  %arrayidx94 = getelementptr inbounds [3 x double], ptr %ri0, i64 0, i64 2\l  %110 = load double, ptr %arrayidx94, align 16\l  %111 = load ptr, ptr %flist.addr, align 8\l  %112 = load i32, ptr %i, align 4\l  %idxprom95 = sext i32 %112 to i64\l  %arrayidx96 = getelementptr inbounds [3 x double], ptr %111, i64 %idxprom95\l  %arrayidx97 = getelementptr inbounds [3 x double], ptr %arrayidx96, i64 0,\l... i64 1\l  %113 = load double, ptr %arrayidx97, align 8\l  %cvatom98 = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32\l... 0, i32 69\l  %114 = load ptr, ptr %cvatom98, align 8\l  %115 = load ptr, ptr %list.addr, align 8\l  %116 = load i32, ptr %i, align 4\l  %idxprom99 = sext i32 %116 to i64\l  %arrayidx100 = getelementptr inbounds i32, ptr %115, i64 %idxprom99\l  %117 = load i32, ptr %arrayidx100, align 4\l  %idxprom101 = sext i32 %117 to i64\l  %arrayidx102 = getelementptr inbounds ptr, ptr %114, i64 %idxprom101\l  %118 = load ptr, ptr %arrayidx102, align 8\l  %arrayidx103 = getelementptr inbounds double, ptr %118, i64 8\l  %119 = load double, ptr %arrayidx103, align 8\l  %120 = call double @llvm.fmuladd.f64(double %110, double %113, double %119)\l  store double %120, ptr %arrayidx103, align 8\l  br label %for.inc\l}"];
	Node0x555c10ede2d0 -> Node0x555c10ee99a0[tooltip="for.body -> for.inc\nProbability 100.00%" ];
	Node0x555c10ee99a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %121 = load i32, ptr %i, align 4\l  %inc = add nsw i32 %121, 1\l  store i32 %inc, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x555c10ee99a0 -> Node0x555c10edded0[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x555c10ede350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  br label %if.end\l}"];
	Node0x555c10ede350 -> Node0x555c10eddd10[tooltip="for.end -> if.end\nProbability 100.00%" ];
	Node0x555c10eddd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{if.end:\l|  ret void\l}"];
}
