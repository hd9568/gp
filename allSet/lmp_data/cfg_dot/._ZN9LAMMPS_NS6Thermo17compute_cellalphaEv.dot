digraph "CFG for '_ZN9LAMMPS_NS6Thermo17compute_cellalphaEv' function" {
	label="CFG for '_ZN9LAMMPS_NS6Thermo17compute_cellalphaEv' function";

	Node0x55bd40510ff0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %h = alloca ptr, align 8\l  %cosalpha = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %domain = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 10\l  %0 = load ptr, ptr %domain, align 8\l  %1 = load ptr, ptr %0, align 8\l  %triclinic = getelementptr inbounds %\"class.LAMMPS_NS::Domain\", ptr %1, i32\l... 0, i32 9\l  %2 = load i32, ptr %triclinic, align 4\l  %tobool = icmp ne i32 %2, 0\l  br i1 %tobool, label %if.else, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x55bd40510ff0:s0 -> Node0x55bd405116e0[tooltip="entry -> if.else\nProbability 62.50%" ];
	Node0x55bd40510ff0:s1 -> Node0x55bd40511750[tooltip="entry -> if.then\nProbability 37.50%" ];
	Node0x55bd40511750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.then:\l|  %dvalue = getelementptr inbounds %\"class.LAMMPS_NS::Thermo\", ptr %this1,\l... i32 0, i32 35\l  store double 9.000000e+01, ptr %dvalue, align 8\l  br label %if.end\l}"];
	Node0x55bd40511750 -> Node0x55bd40511a10[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x55bd405116e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.else:\l|  %domain2 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr\l... %this1, i32 0, i32 10\l  %3 = load ptr, ptr %domain2, align 8\l  %4 = load ptr, ptr %3, align 8\l  %h3 = getelementptr inbounds %\"class.LAMMPS_NS::Domain\", ptr %4, i32 0, i32\l... 40\l  %arraydecay = getelementptr inbounds [6 x double], ptr %h3, i64 0, i64 0\l  store ptr %arraydecay, ptr %h, align 8\l  %5 = load ptr, ptr %h, align 8\l  %arrayidx = getelementptr inbounds double, ptr %5, i64 5\l  %6 = load double, ptr %arrayidx, align 8\l  %7 = load ptr, ptr %h, align 8\l  %arrayidx4 = getelementptr inbounds double, ptr %7, i64 4\l  %8 = load double, ptr %arrayidx4, align 8\l  %9 = load ptr, ptr %h, align 8\l  %arrayidx5 = getelementptr inbounds double, ptr %9, i64 1\l  %10 = load double, ptr %arrayidx5, align 8\l  %11 = load ptr, ptr %h, align 8\l  %arrayidx6 = getelementptr inbounds double, ptr %11, i64 3\l  %12 = load double, ptr %arrayidx6, align 8\l  %mul7 = fmul double %10, %12\l  %13 = call double @llvm.fmuladd.f64(double %6, double %8, double %mul7)\l  %14 = load ptr, ptr %h, align 8\l  %arrayidx8 = getelementptr inbounds double, ptr %14, i64 1\l  %15 = load double, ptr %arrayidx8, align 8\l  %16 = load ptr, ptr %h, align 8\l  %arrayidx9 = getelementptr inbounds double, ptr %16, i64 1\l  %17 = load double, ptr %arrayidx9, align 8\l  %18 = load ptr, ptr %h, align 8\l  %arrayidx10 = getelementptr inbounds double, ptr %18, i64 5\l  %19 = load double, ptr %arrayidx10, align 8\l  %20 = load ptr, ptr %h, align 8\l  %arrayidx11 = getelementptr inbounds double, ptr %20, i64 5\l  %21 = load double, ptr %arrayidx11, align 8\l  %mul12 = fmul double %19, %21\l  %22 = call double @llvm.fmuladd.f64(double %15, double %17, double %mul12)\l  %23 = load ptr, ptr %h, align 8\l  %arrayidx13 = getelementptr inbounds double, ptr %23, i64 2\l  %24 = load double, ptr %arrayidx13, align 8\l  %25 = load ptr, ptr %h, align 8\l  %arrayidx14 = getelementptr inbounds double, ptr %25, i64 2\l  %26 = load double, ptr %arrayidx14, align 8\l  %27 = load ptr, ptr %h, align 8\l  %arrayidx15 = getelementptr inbounds double, ptr %27, i64 3\l  %28 = load double, ptr %arrayidx15, align 8\l  %29 = load ptr, ptr %h, align 8\l  %arrayidx16 = getelementptr inbounds double, ptr %29, i64 3\l  %30 = load double, ptr %arrayidx16, align 8\l  %mul17 = fmul double %28, %30\l  %31 = call double @llvm.fmuladd.f64(double %24, double %26, double %mul17)\l  %32 = load ptr, ptr %h, align 8\l  %arrayidx18 = getelementptr inbounds double, ptr %32, i64 4\l  %33 = load double, ptr %arrayidx18, align 8\l  %34 = load ptr, ptr %h, align 8\l  %arrayidx19 = getelementptr inbounds double, ptr %34, i64 4\l  %35 = load double, ptr %arrayidx19, align 8\l  %36 = call double @llvm.fmuladd.f64(double %33, double %35, double %31)\l  %mul = fmul double %22, %36\l  %call = call double @sqrt(double noundef %mul) #15\l  %div = fdiv double %13, %call\l  store double %div, ptr %cosalpha, align 8\l  %37 = load double, ptr %cosalpha, align 8\l  %call20 = call double @acos(double noundef %37) #15\l  %mul21 = fmul double %call20, 1.800000e+02\l  %div22 = fdiv double %mul21, 0x400921FB54442D18\l  %dvalue23 = getelementptr inbounds %\"class.LAMMPS_NS::Thermo\", ptr %this1,\l... i32 0, i32 35\l  store double %div22, ptr %dvalue23, align 8\l  br label %if.end\l}"];
	Node0x55bd405116e0 -> Node0x55bd40511a10[tooltip="if.else -> if.end\nProbability 100.00%" ];
	Node0x55bd40511a10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end:\l|  ret void\l}"];
}
