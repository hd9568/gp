digraph "CFG for '_ZN9MathExtra16inertia_triangleEPdS0_S0_dS0_' function" {
	label="CFG for '_ZN9MathExtra16inertia_triangleEPdS0_S0_dS0_' function";

	Node0x5583735f0a30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %v0.addr = alloca ptr, align 8\l  %v1.addr = alloca ptr, align 8\l  %v2.addr = alloca ptr, align 8\l  %mass.addr = alloca double, align 8\l  %inertia.addr = alloca ptr, align 8\l  %s = alloca [3 x [3 x double]], align 16\l  %v = alloca [3 x [3 x double]], align 16\l  %sv = alloca [3 x [3 x double]], align 16\l  %vtsv = alloca [3 x [3 x double]], align 16\l  %vvv = alloca [3 x double], align 16\l  %v1mv0 = alloca [3 x double], align 16\l  %v2mv0 = alloca [3 x double], align 16\l  %normal = alloca [3 x double], align 16\l  %sum = alloca double, align 8\l  %a = alloca double, align 8\l  %inv24 = alloca double, align 8\l  store ptr %v0, ptr %v0.addr, align 8\l  store ptr %v1, ptr %v1.addr, align 8\l  store ptr %v2, ptr %v2.addr, align 8\l  store double %mass, ptr %mass.addr, align 8\l  store ptr %inertia, ptr %inertia.addr, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %s, ptr align 16\l... @__const._ZN9MathExtra16inertia_triangleEPdS0_S0_dS0_.s, i64 72, i1 false)\l  %0 = load ptr, ptr %v0.addr, align 8\l  %arrayidx = getelementptr inbounds double, ptr %0, i64 0\l  %1 = load double, ptr %arrayidx, align 8\l  %arrayidx1 = getelementptr inbounds [3 x [3 x double]], ptr %v, i64 0, i64 0\l  %arrayidx2 = getelementptr inbounds [3 x double], ptr %arrayidx1, i64 0, i64\l... 0\l  store double %1, ptr %arrayidx2, align 16\l  %2 = load ptr, ptr %v0.addr, align 8\l  %arrayidx3 = getelementptr inbounds double, ptr %2, i64 1\l  %3 = load double, ptr %arrayidx3, align 8\l  %arrayidx4 = getelementptr inbounds [3 x [3 x double]], ptr %v, i64 0, i64 0\l  %arrayidx5 = getelementptr inbounds [3 x double], ptr %arrayidx4, i64 0, i64\l... 1\l  store double %3, ptr %arrayidx5, align 8\l  %4 = load ptr, ptr %v0.addr, align 8\l  %arrayidx6 = getelementptr inbounds double, ptr %4, i64 2\l  %5 = load double, ptr %arrayidx6, align 8\l  %arrayidx7 = getelementptr inbounds [3 x [3 x double]], ptr %v, i64 0, i64 0\l  %arrayidx8 = getelementptr inbounds [3 x double], ptr %arrayidx7, i64 0, i64\l... 2\l  store double %5, ptr %arrayidx8, align 16\l  %6 = load ptr, ptr %v1.addr, align 8\l  %arrayidx9 = getelementptr inbounds double, ptr %6, i64 0\l  %7 = load double, ptr %arrayidx9, align 8\l  %arrayidx10 = getelementptr inbounds [3 x [3 x double]], ptr %v, i64 0, i64 1\l  %arrayidx11 = getelementptr inbounds [3 x double], ptr %arrayidx10, i64 0,\l... i64 0\l  store double %7, ptr %arrayidx11, align 8\l  %8 = load ptr, ptr %v1.addr, align 8\l  %arrayidx12 = getelementptr inbounds double, ptr %8, i64 1\l  %9 = load double, ptr %arrayidx12, align 8\l  %arrayidx13 = getelementptr inbounds [3 x [3 x double]], ptr %v, i64 0, i64 1\l  %arrayidx14 = getelementptr inbounds [3 x double], ptr %arrayidx13, i64 0,\l... i64 1\l  store double %9, ptr %arrayidx14, align 8\l  %10 = load ptr, ptr %v1.addr, align 8\l  %arrayidx15 = getelementptr inbounds double, ptr %10, i64 2\l  %11 = load double, ptr %arrayidx15, align 8\l  %arrayidx16 = getelementptr inbounds [3 x [3 x double]], ptr %v, i64 0, i64 1\l  %arrayidx17 = getelementptr inbounds [3 x double], ptr %arrayidx16, i64 0,\l... i64 2\l  store double %11, ptr %arrayidx17, align 8\l  %12 = load ptr, ptr %v2.addr, align 8\l  %arrayidx18 = getelementptr inbounds double, ptr %12, i64 0\l  %13 = load double, ptr %arrayidx18, align 8\l  %arrayidx19 = getelementptr inbounds [3 x [3 x double]], ptr %v, i64 0, i64 2\l  %arrayidx20 = getelementptr inbounds [3 x double], ptr %arrayidx19, i64 0,\l... i64 0\l  store double %13, ptr %arrayidx20, align 16\l  %14 = load ptr, ptr %v2.addr, align 8\l  %arrayidx21 = getelementptr inbounds double, ptr %14, i64 1\l  %15 = load double, ptr %arrayidx21, align 8\l  %arrayidx22 = getelementptr inbounds [3 x [3 x double]], ptr %v, i64 0, i64 2\l  %arrayidx23 = getelementptr inbounds [3 x double], ptr %arrayidx22, i64 0,\l... i64 1\l  store double %15, ptr %arrayidx23, align 8\l  %16 = load ptr, ptr %v2.addr, align 8\l  %arrayidx24 = getelementptr inbounds double, ptr %16, i64 2\l  %17 = load double, ptr %arrayidx24, align 8\l  %arrayidx25 = getelementptr inbounds [3 x [3 x double]], ptr %v, i64 0, i64 2\l  %arrayidx26 = getelementptr inbounds [3 x double], ptr %arrayidx25, i64 0,\l... i64 2\l  store double %17, ptr %arrayidx26, align 16\l  %arraydecay = getelementptr inbounds [3 x [3 x double]], ptr %s, i64 0, i64 0\l  %arraydecay27 = getelementptr inbounds [3 x [3 x double]], ptr %v, i64 0,\l... i64 0\l  %arraydecay28 = getelementptr inbounds [3 x [3 x double]], ptr %sv, i64 0,\l... i64 0\l  call void @_ZN9MathExtra6times3EPA3_KdS2_PA3_d(ptr noundef %arraydecay, ptr\l... noundef %arraydecay27, ptr noundef %arraydecay28)\l  %arraydecay29 = getelementptr inbounds [3 x [3 x double]], ptr %v, i64 0,\l... i64 0\l  %arraydecay30 = getelementptr inbounds [3 x [3 x double]], ptr %sv, i64 0,\l... i64 0\l  %arraydecay31 = getelementptr inbounds [3 x [3 x double]], ptr %vtsv, i64 0,\l... i64 0\l  call void @_ZN9MathExtra16transpose_times3EPA3_KdS2_PA3_d(ptr noundef\l... %arraydecay29, ptr noundef %arraydecay30, ptr noundef %arraydecay31)\l  %18 = load ptr, ptr %v0.addr, align 8\l  %call = call noundef double @_ZN9MathExtra6lensq3EPKd(ptr noundef %18)\l  %19 = load ptr, ptr %v1.addr, align 8\l  %call32 = call noundef double @_ZN9MathExtra6lensq3EPKd(ptr noundef %19)\l  %add = fadd double %call, %call32\l  %20 = load ptr, ptr %v2.addr, align 8\l  %call33 = call noundef double @_ZN9MathExtra6lensq3EPKd(ptr noundef %20)\l  %add34 = fadd double %add, %call33\l  store double %add34, ptr %sum, align 8\l  %21 = load ptr, ptr %v0.addr, align 8\l  %arrayidx35 = getelementptr inbounds double, ptr %21, i64 0\l  %22 = load double, ptr %arrayidx35, align 8\l  %23 = load ptr, ptr %v1.addr, align 8\l  %arrayidx36 = getelementptr inbounds double, ptr %23, i64 0\l  %24 = load double, ptr %arrayidx36, align 8\l  %add37 = fadd double %22, %24\l  %25 = load ptr, ptr %v2.addr, align 8\l  %arrayidx38 = getelementptr inbounds double, ptr %25, i64 0\l  %26 = load double, ptr %arrayidx38, align 8\l  %add39 = fadd double %add37, %26\l  %arrayidx40 = getelementptr inbounds [3 x double], ptr %vvv, i64 0, i64 0\l  store double %add39, ptr %arrayidx40, align 16\l  %27 = load ptr, ptr %v0.addr, align 8\l  %arrayidx41 = getelementptr inbounds double, ptr %27, i64 1\l  %28 = load double, ptr %arrayidx41, align 8\l  %29 = load ptr, ptr %v1.addr, align 8\l  %arrayidx42 = getelementptr inbounds double, ptr %29, i64 1\l  %30 = load double, ptr %arrayidx42, align 8\l  %add43 = fadd double %28, %30\l  %31 = load ptr, ptr %v2.addr, align 8\l  %arrayidx44 = getelementptr inbounds double, ptr %31, i64 1\l  %32 = load double, ptr %arrayidx44, align 8\l  %add45 = fadd double %add43, %32\l  %arrayidx46 = getelementptr inbounds [3 x double], ptr %vvv, i64 0, i64 1\l  store double %add45, ptr %arrayidx46, align 8\l  %33 = load ptr, ptr %v0.addr, align 8\l  %arrayidx47 = getelementptr inbounds double, ptr %33, i64 2\l  %34 = load double, ptr %arrayidx47, align 8\l  %35 = load ptr, ptr %v1.addr, align 8\l  %arrayidx48 = getelementptr inbounds double, ptr %35, i64 2\l  %36 = load double, ptr %arrayidx48, align 8\l  %add49 = fadd double %34, %36\l  %37 = load ptr, ptr %v2.addr, align 8\l  %arrayidx50 = getelementptr inbounds double, ptr %37, i64 2\l  %38 = load double, ptr %arrayidx50, align 8\l  %add51 = fadd double %add49, %38\l  %arrayidx52 = getelementptr inbounds [3 x double], ptr %vvv, i64 0, i64 2\l  store double %add51, ptr %arrayidx52, align 16\l  %arraydecay53 = getelementptr inbounds [3 x double], ptr %vvv, i64 0, i64 0\l  %call54 = call noundef double @_ZN9MathExtra6lensq3EPKd(ptr noundef\l... %arraydecay53)\l  %39 = load double, ptr %sum, align 8\l  %add55 = fadd double %39, %call54\l  store double %add55, ptr %sum, align 8\l  %40 = load ptr, ptr %v1.addr, align 8\l  %41 = load ptr, ptr %v0.addr, align 8\l  %arraydecay56 = getelementptr inbounds [3 x double], ptr %v1mv0, i64 0, i64 0\l  call void @_ZN9MathExtra4sub3EPKdS1_Pd(ptr noundef %40, ptr noundef %41, ptr\l... noundef %arraydecay56)\l  %42 = load ptr, ptr %v2.addr, align 8\l  %43 = load ptr, ptr %v0.addr, align 8\l  %arraydecay57 = getelementptr inbounds [3 x double], ptr %v2mv0, i64 0, i64 0\l  call void @_ZN9MathExtra4sub3EPKdS1_Pd(ptr noundef %42, ptr noundef %43, ptr\l... noundef %arraydecay57)\l  %arraydecay58 = getelementptr inbounds [3 x double], ptr %v1mv0, i64 0, i64 0\l  %arraydecay59 = getelementptr inbounds [3 x double], ptr %v2mv0, i64 0, i64 0\l  %arraydecay60 = getelementptr inbounds [3 x double], ptr %normal, i64 0, i64\l... 0\l  call void @_ZN9MathExtra6cross3EPKdS1_Pd(ptr noundef %arraydecay58, ptr\l... noundef %arraydecay59, ptr noundef %arraydecay60)\l  %arraydecay61 = getelementptr inbounds [3 x double], ptr %normal, i64 0, i64\l... 0\l  %call62 = call noundef double @_ZN9MathExtra4len3EPKd(ptr noundef\l... %arraydecay61)\l  store double %call62, ptr %a, align 8\l  %44 = load double, ptr %mass.addr, align 8\l  %div = fdiv double %44, 2.400000e+01\l  store double %div, ptr %inv24, align 8\l  %45 = load double, ptr %inv24, align 8\l  %46 = load double, ptr %a, align 8\l  %mul = fmul double %45, %46\l  %47 = load double, ptr %sum, align 8\l  %arrayidx63 = getelementptr inbounds [3 x [3 x double]], ptr %vtsv, i64 0,\l... i64 0\l  %arrayidx64 = getelementptr inbounds [3 x double], ptr %arrayidx63, i64 0,\l... i64 0\l  %48 = load double, ptr %arrayidx64, align 16\l  %sub = fsub double %47, %48\l  %mul65 = fmul double %mul, %sub\l  %49 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx66 = getelementptr inbounds double, ptr %49, i64 0\l  store double %mul65, ptr %arrayidx66, align 8\l  %50 = load double, ptr %inv24, align 8\l  %51 = load double, ptr %a, align 8\l  %mul67 = fmul double %50, %51\l  %52 = load double, ptr %sum, align 8\l  %arrayidx68 = getelementptr inbounds [3 x [3 x double]], ptr %vtsv, i64 0,\l... i64 1\l  %arrayidx69 = getelementptr inbounds [3 x double], ptr %arrayidx68, i64 0,\l... i64 1\l  %53 = load double, ptr %arrayidx69, align 8\l  %sub70 = fsub double %52, %53\l  %mul71 = fmul double %mul67, %sub70\l  %54 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx72 = getelementptr inbounds double, ptr %54, i64 1\l  store double %mul71, ptr %arrayidx72, align 8\l  %55 = load double, ptr %inv24, align 8\l  %56 = load double, ptr %a, align 8\l  %mul73 = fmul double %55, %56\l  %57 = load double, ptr %sum, align 8\l  %arrayidx74 = getelementptr inbounds [3 x [3 x double]], ptr %vtsv, i64 0,\l... i64 2\l  %arrayidx75 = getelementptr inbounds [3 x double], ptr %arrayidx74, i64 0,\l... i64 2\l  %58 = load double, ptr %arrayidx75, align 16\l  %sub76 = fsub double %57, %58\l  %mul77 = fmul double %mul73, %sub76\l  %59 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx78 = getelementptr inbounds double, ptr %59, i64 2\l  store double %mul77, ptr %arrayidx78, align 8\l  %60 = load double, ptr %inv24, align 8\l  %fneg = fneg double %60\l  %61 = load double, ptr %a, align 8\l  %mul79 = fmul double %fneg, %61\l  %arrayidx80 = getelementptr inbounds [3 x [3 x double]], ptr %vtsv, i64 0,\l... i64 1\l  %arrayidx81 = getelementptr inbounds [3 x double], ptr %arrayidx80, i64 0,\l... i64 2\l  %62 = load double, ptr %arrayidx81, align 8\l  %mul82 = fmul double %mul79, %62\l  %63 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx83 = getelementptr inbounds double, ptr %63, i64 3\l  store double %mul82, ptr %arrayidx83, align 8\l  %64 = load double, ptr %inv24, align 8\l  %fneg84 = fneg double %64\l  %65 = load double, ptr %a, align 8\l  %mul85 = fmul double %fneg84, %65\l  %arrayidx86 = getelementptr inbounds [3 x [3 x double]], ptr %vtsv, i64 0,\l... i64 0\l  %arrayidx87 = getelementptr inbounds [3 x double], ptr %arrayidx86, i64 0,\l... i64 2\l  %66 = load double, ptr %arrayidx87, align 16\l  %mul88 = fmul double %mul85, %66\l  %67 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx89 = getelementptr inbounds double, ptr %67, i64 4\l  store double %mul88, ptr %arrayidx89, align 8\l  %68 = load double, ptr %inv24, align 8\l  %fneg90 = fneg double %68\l  %69 = load double, ptr %a, align 8\l  %mul91 = fmul double %fneg90, %69\l  %arrayidx92 = getelementptr inbounds [3 x [3 x double]], ptr %vtsv, i64 0,\l... i64 0\l  %arrayidx93 = getelementptr inbounds [3 x double], ptr %arrayidx92, i64 0,\l... i64 1\l  %70 = load double, ptr %arrayidx93, align 8\l  %mul94 = fmul double %mul91, %70\l  %71 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx95 = getelementptr inbounds double, ptr %71, i64 5\l  store double %mul94, ptr %arrayidx95, align 8\l  ret void\l}"];
}
