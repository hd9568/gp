digraph "CFG for '_ZN9LAMMPS_NS11PairCoulCut11born_matrixEiiiidddRdS1_' function" {
	label="CFG for '_ZN9LAMMPS_NS11PairCoulCut11born_matrixEiiiidddRdS1_' function";

	Node0x56011ec01400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %i.addr = alloca i32, align 4\l  %j.addr = alloca i32, align 4\l  %.addr = alloca i32, align 4\l  %.addr1 = alloca i32, align 4\l  %rsq.addr = alloca double, align 8\l  %factor_coul.addr = alloca double, align 8\l  %.addr2 = alloca double, align 8\l  %dupair.addr = alloca ptr, align 8\l  %du2pair.addr = alloca ptr, align 8\l  %rinv = alloca double, align 8\l  %r2inv = alloca double, align 8\l  %r3inv = alloca double, align 8\l  %du_coul = alloca double, align 8\l  %du2_coul = alloca double, align 8\l  %q = alloca ptr, align 8\l  %qqrd2e = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store i32 %i, ptr %i.addr, align 4\l  store i32 %j, ptr %j.addr, align 4\l  store i32 %0, ptr %.addr, align 4\l  store i32 %1, ptr %.addr1, align 4\l  store double %rsq, ptr %rsq.addr, align 8\l  store double %factor_coul, ptr %factor_coul.addr, align 8\l  store double %2, ptr %.addr2, align 8\l  store ptr %dupair, ptr %dupair.addr, align 8\l  store ptr %du2pair, ptr %du2pair.addr, align 8\l  %this3 = load ptr, ptr %this.addr, align 8\l  %atom = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this3, i32\l... 0, i32 6\l  %3 = load ptr, ptr %atom, align 8\l  %4 = load ptr, ptr %3, align 8\l  %q4 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %4, i32 0, i32 41\l  %5 = load ptr, ptr %q4, align 8\l  store ptr %5, ptr %q, align 8\l  %force = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this3,\l... i32 0, i32 11\l  %6 = load ptr, ptr %force, align 8\l  %7 = load ptr, ptr %6, align 8\l  %qqrd2e5 = getelementptr inbounds %\"class.LAMMPS_NS::Force\", ptr %7, i32 0,\l... i32 12\l  %8 = load double, ptr %qqrd2e5, align 8\l  store double %8, ptr %qqrd2e, align 8\l  %9 = load double, ptr %rsq.addr, align 8\l  %div = fdiv double 1.000000e+00, %9\l  store double %div, ptr %r2inv, align 8\l  %10 = load double, ptr %r2inv, align 8\l  %call = call double @sqrt(double noundef %10) #9\l  store double %call, ptr %rinv, align 8\l  %11 = load double, ptr %r2inv, align 8\l  %12 = load double, ptr %rinv, align 8\l  %mul = fmul double %11, %12\l  store double %mul, ptr %r3inv, align 8\l  %13 = load double, ptr %qqrd2e, align 8\l  %fneg = fneg double %13\l  %14 = load ptr, ptr %q, align 8\l  %15 = load i32, ptr %i.addr, align 4\l  %idxprom = sext i32 %15 to i64\l  %arrayidx = getelementptr inbounds double, ptr %14, i64 %idxprom\l  %16 = load double, ptr %arrayidx, align 8\l  %mul6 = fmul double %fneg, %16\l  %17 = load ptr, ptr %q, align 8\l  %18 = load i32, ptr %j.addr, align 4\l  %idxprom7 = sext i32 %18 to i64\l  %arrayidx8 = getelementptr inbounds double, ptr %17, i64 %idxprom7\l  %19 = load double, ptr %arrayidx8, align 8\l  %mul9 = fmul double %mul6, %19\l  %20 = load double, ptr %r2inv, align 8\l  %mul10 = fmul double %mul9, %20\l  store double %mul10, ptr %du_coul, align 8\l  %21 = load double, ptr %qqrd2e, align 8\l  %mul11 = fmul double 2.000000e+00, %21\l  %22 = load ptr, ptr %q, align 8\l  %23 = load i32, ptr %i.addr, align 4\l  %idxprom12 = sext i32 %23 to i64\l  %arrayidx13 = getelementptr inbounds double, ptr %22, i64 %idxprom12\l  %24 = load double, ptr %arrayidx13, align 8\l  %mul14 = fmul double %mul11, %24\l  %25 = load ptr, ptr %q, align 8\l  %26 = load i32, ptr %j.addr, align 4\l  %idxprom15 = sext i32 %26 to i64\l  %arrayidx16 = getelementptr inbounds double, ptr %25, i64 %idxprom15\l  %27 = load double, ptr %arrayidx16, align 8\l  %mul17 = fmul double %mul14, %27\l  %28 = load double, ptr %r3inv, align 8\l  %mul18 = fmul double %mul17, %28\l  store double %mul18, ptr %du2_coul, align 8\l  %29 = load double, ptr %factor_coul.addr, align 8\l  %30 = load double, ptr %du_coul, align 8\l  %mul19 = fmul double %29, %30\l  %31 = load ptr, ptr %dupair.addr, align 8\l  store double %mul19, ptr %31, align 8\l  %32 = load double, ptr %factor_coul.addr, align 8\l  %33 = load double, ptr %du2_coul, align 8\l  %mul20 = fmul double %32, %33\l  %34 = load ptr, ptr %du2pair.addr, align 8\l  store double %mul20, ptr %34, align 8\l  ret void\l}"];
}
