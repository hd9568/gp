digraph "CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRNS0_17basic_string_viewIcEERA3_KcEEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSF_' function" {
	label="CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRNS0_17basic_string_viewIcEERA3_KcEEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSF_' function";

	Node0x55fec37087d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr.i35 = alloca ptr, align 8\l  %val.addr.i36 = alloca ptr, align 8\l  %this.addr.i32 = alloca ptr, align 8\l  %val.addr.i33 = alloca ptr, align 8\l  %retval.i22 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i23 = alloca ptr, align 8\l  %arg.i24 = alloca ptr, align 8\l  %ref.tmp.i25 = alloca ptr, align 8\l  %ref.tmp1.i26 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i27 = alloca i8, align 1\l  %formattable_const.i28 = alloca i8, align 1\l  %formattable_pointer.i29 = alloca i8, align 1\l  %formattable.i30 = alloca i8, align 1\l  %val.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i19 = alloca ptr, align 8\l  %retval.i13 = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i14 = alloca ptr, align 8\l  %val.addr.i15 = alloca ptr, align 8\l  %agg.tmp.i16 = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %retval.i9 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i10 = alloca ptr, align 8\l  %arg.i = alloca ptr, align 8\l  %ref.tmp.i11 = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %ref.tmp1.i = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i = alloca i8, align 1\l  %formattable_const.i = alloca i8, align 1\l  %formattable_pointer.i = alloca i8, align 1\l  %formattable.i = alloca i8, align 1\l  %agg.tmp.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i8 = alloca ptr, align 8\l  %.addr.i = alloca ptr, align 8\l  %.addr1.i = alloca i32, align 4\l  %.addr2.i = alloca i32, align 4\l  %.addr3.i = alloca ptr, align 8\l  %.addr4.i = alloca ptr, align 8\l  %this.addr.i6 = alloca ptr, align 8\l  %init.addr.i = alloca ptr, align 8\l  %init.addr2.i = alloca ptr, align 8\l  %retval.i4 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i5 = alloca ptr, align 8\l  %retval.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i = alloca ptr, align 8\l  %this.addr.i = alloca ptr, align 8\l  %args.addr.i = alloca ptr, align 8\l  %args.addr2.i = alloca ptr, align 8\l  %ref.tmp.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp5.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %args.addr = alloca ptr, align 8\l  %args.addr2 = alloca ptr, align 8\l  store ptr %args, ptr %args.addr, align 8\l  store ptr %args1, ptr %args.addr2, align 8\l  %0 = load ptr, ptr %args.addr, align 8\l  %1 = load ptr, ptr %args.addr2, align 8\l  store ptr %agg.result, ptr %this.addr.i, align 8\l  store ptr %0, ptr %args.addr.i, align 8\l  store ptr %1, ptr %args.addr2.i, align 8\l  %this3.i = load ptr, ptr %this.addr.i, align 8\l  %2 = load ptr, ptr %args.addr.i, align 8\l  store ptr %2, ptr %val.addr.i, align 8\l  %3 = load ptr, ptr %val.addr.i, align 8\l  store ptr %3, ptr %val.addr.i10, align 8\l  %4 = load ptr, ptr %val.addr.i10, align 8\l  store ptr %ref.tmp1.i, ptr %this.addr.i14, align 8\l  store ptr %4, ptr %val.addr.i15, align 8\l  %this1.i17 = load ptr, ptr %this.addr.i14, align 8\l  %5 = load ptr, ptr %val.addr.i15, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp.i16, ptr align 8 %5,\l... i64 16, i1 false)\l  %6 = load ptr, ptr %agg.tmp.i16, align 8\l  %7 = getelementptr inbounds \{ ptr, i64 \}, ptr %agg.tmp.i16, i32 0, i32 1\l  %8 = load i64, ptr %7, align 8\l  %call.i18 = call \{ ptr, i64 \}\l... @_ZN3fmt6v9_lmp6detail14to_string_viewIcEENS0_17basic_string_viewIT_EES5_(ptr\l... %6, i64 %8)\l  %9 = extractvalue \{ ptr, i64 \} %call.i18, 0\l  store ptr %9, ptr %retval.i13, align 8\l  %10 = getelementptr inbounds \{ ptr, i64 \}, ptr %retval.i13, i32 0, i32 1\l  %11 = extractvalue \{ ptr, i64 \} %call.i18, 1\l  store i64 %11, ptr %10, align 8\l  %12 = load \{ ptr, i64 \}, ptr %retval.i13, align 8\l  %13 = extractvalue \{ ptr, i64 \} %12, 0\l  store ptr %13, ptr %ref.tmp.i11, align 8\l  %14 = getelementptr inbounds \{ ptr, i64 \}, ptr %ref.tmp.i11, i32 0, i32 1\l  %15 = extractvalue \{ ptr, i64 \} %12, 1\l  store i64 %15, ptr %14, align 8\l  store ptr %ref.tmp.i11, ptr %arg.i, align 8\l  store i8 1, ptr %formattable_char.i, align 1\l  store i8 1, ptr %formattable_const.i, align 1\l  store i8 1, ptr %formattable_pointer.i, align 1\l  store i8 1, ptr %formattable.i, align 1\l  %16 = load ptr, ptr %arg.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp.i, ptr align 8 %16,\l... i64 16, i1 false)\l  %17 = load ptr, ptr %agg.tmp.i, align 8\l  %18 = getelementptr inbounds \{ ptr, i64 \}, ptr %agg.tmp.i, i32 0, i32 1\l  %19 = load i64, ptr %18, align 8\l  store ptr %17, ptr %val.i, align 8\l  %20 = getelementptr inbounds \{ ptr, i64 \}, ptr %val.i, i32 0, i32 1\l  store i64 %19, ptr %20, align 8\l  store ptr %retval.i9, ptr %this.addr.i19, align 8\l  %this1.i20 = load ptr, ptr %this.addr.i19, align 8\l  %call.i21 = call noundef ptr\l... @_ZNK3fmt6v9_lmp17basic_string_viewIcE4dataEv(ptr noundef nonnull align 8\l... dereferenceable(16) %val.i) #17\l  store ptr %call.i21, ptr %this1.i20, align 16\l  %call2.i = call noundef i64\l... @_ZNK3fmt6v9_lmp17basic_string_viewIcE4sizeEv(ptr noundef nonnull align 8\l... dereferenceable(16) %val.i) #17\l  %size.i = getelementptr inbounds\l... %\"struct.fmt::v9_lmp::detail::string_value\", ptr %this1.i20, i32 0, i32 1\l  store i64 %call2.i, ptr %size.i, align 8\l  %21 = load \{ i64, i64 \}, ptr %retval.i9, align 16\l  %22 = extractvalue \{ i64, i64 \} %21, 0\l  store i64 %22, ptr %retval.i, align 16\l  %23 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i, i32 0, i32 1\l  %24 = extractvalue \{ i64, i64 \} %21, 1\l  store i64 %24, ptr %23, align 8\l  %25 = load \{ i64, i64 \}, ptr %retval.i, align 16\l  %26 = extractvalue \{ i64, i64 \} %25, 0\l  store i64 %26, ptr %ref.tmp.i, align 16\l  %27 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp.i, i32 0, i32 1\l  %28 = extractvalue \{ i64, i64 \} %25, 1\l  store i64 %28, ptr %27, align 8\l  %29 = load ptr, ptr %args.addr2.i, align 8\l  store ptr %29, ptr %val.addr.i5, align 8\l  %30 = load ptr, ptr %val.addr.i5, align 8\l  store ptr %30, ptr %val.addr.i23, align 8\l  %31 = load ptr, ptr %val.addr.i23, align 8\l  store ptr %ref.tmp1.i26, ptr %this.addr.i32, align 8\l  store ptr %31, ptr %val.addr.i33, align 8\l  %this1.i34 = load ptr, ptr %this.addr.i32, align 8\l  %32 = load ptr, ptr %val.addr.i33, align 8\l  store ptr %32, ptr %ref.tmp.i25, align 8\l  store ptr %ref.tmp.i25, ptr %arg.i24, align 8\l  store i8 1, ptr %formattable_char.i27, align 1\l  store i8 1, ptr %formattable_const.i28, align 1\l  store i8 1, ptr %formattable_pointer.i29, align 1\l  store i8 1, ptr %formattable.i30, align 1\l  %33 = load ptr, ptr %arg.i24, align 8\l  %34 = load ptr, ptr %33, align 8\l  store ptr %retval.i22, ptr %this.addr.i35, align 8\l  store ptr %34, ptr %val.addr.i36, align 8\l  %this1.i37 = load ptr, ptr %this.addr.i35, align 8\l  %35 = load ptr, ptr %val.addr.i36, align 8\l  store ptr %35, ptr %this1.i37, align 16\l  %36 = load \{ i64, i64 \}, ptr %retval.i22, align 16\l  %37 = extractvalue \{ i64, i64 \} %36, 0\l  store i64 %37, ptr %retval.i4, align 16\l  %38 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i4, i32 0, i32 1\l  %39 = extractvalue \{ i64, i64 \} %36, 1\l  store i64 %39, ptr %38, align 8\l  %40 = load \{ i64, i64 \}, ptr %retval.i4, align 16\l  %41 = extractvalue \{ i64, i64 \} %40, 0\l  store i64 %41, ptr %ref.tmp5.i, align 16\l  %42 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp5.i, i32 0, i32 1\l  %43 = extractvalue \{ i64, i64 \} %40, 1\l  store i64 %43, ptr %42, align 8\l  store ptr %this3.i, ptr %this.addr.i6, align 8\l  store ptr %ref.tmp.i, ptr %init.addr.i, align 8\l  store ptr %ref.tmp5.i, ptr %init.addr2.i, align 8\l  %this3.i7 = load ptr, ptr %this.addr.i6, align 8\l  %44 = load ptr, ptr %init.addr.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %this3.i7, ptr align 16 %44,\l... i64 16, i1 false)\l  %arrayinit.element.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %this3.i7, i64 1\l  %45 = load ptr, ptr %init.addr2.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element.i, ptr\l... align 16 %45, i64 16, i1 false)\l  store ptr %this3.i, ptr %this.addr.i8, align 8\l  %this1.i = load ptr, ptr %this.addr.i8, align 8\l  %46 = load ptr, ptr %args.addr.i, align 8\l  %47 = load ptr, ptr %args.addr2.i, align 8\l  store ptr null, ptr %.addr.i, align 8\l  store i32 0, ptr %.addr1.i, align 4\l  store i32 0, ptr %.addr2.i, align 4\l  store ptr %46, ptr %.addr3.i, align 8\l  store ptr %47, ptr %.addr4.i, align 8\l  ret void\l}"];
}
