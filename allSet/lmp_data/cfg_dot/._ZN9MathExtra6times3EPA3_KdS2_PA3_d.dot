digraph "CFG for '_ZN9MathExtra6times3EPA3_KdS2_PA3_d' function" {
	label="CFG for '_ZN9MathExtra6times3EPA3_KdS2_PA3_d' function";

	Node0x55837362c350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %m.addr = alloca ptr, align 8\l  %m2.addr = alloca ptr, align 8\l  %ans.addr = alloca ptr, align 8\l  store ptr %m, ptr %m.addr, align 8\l  store ptr %m2, ptr %m2.addr, align 8\l  store ptr %ans, ptr %ans.addr, align 8\l  %0 = load ptr, ptr %m.addr, align 8\l  %arrayidx = getelementptr inbounds [3 x double], ptr %0, i64 0\l  %arrayidx1 = getelementptr inbounds [3 x double], ptr %arrayidx, i64 0, i64 0\l  %1 = load double, ptr %arrayidx1, align 8\l  %2 = load ptr, ptr %m2.addr, align 8\l  %arrayidx2 = getelementptr inbounds [3 x double], ptr %2, i64 0\l  %arrayidx3 = getelementptr inbounds [3 x double], ptr %arrayidx2, i64 0, i64\l... 0\l  %3 = load double, ptr %arrayidx3, align 8\l  %4 = load ptr, ptr %m.addr, align 8\l  %arrayidx4 = getelementptr inbounds [3 x double], ptr %4, i64 0\l  %arrayidx5 = getelementptr inbounds [3 x double], ptr %arrayidx4, i64 0, i64\l... 1\l  %5 = load double, ptr %arrayidx5, align 8\l  %6 = load ptr, ptr %m2.addr, align 8\l  %arrayidx6 = getelementptr inbounds [3 x double], ptr %6, i64 1\l  %arrayidx7 = getelementptr inbounds [3 x double], ptr %arrayidx6, i64 0, i64\l... 0\l  %7 = load double, ptr %arrayidx7, align 8\l  %mul8 = fmul double %5, %7\l  %8 = call double @llvm.fmuladd.f64(double %1, double %3, double %mul8)\l  %9 = load ptr, ptr %m.addr, align 8\l  %arrayidx9 = getelementptr inbounds [3 x double], ptr %9, i64 0\l  %arrayidx10 = getelementptr inbounds [3 x double], ptr %arrayidx9, i64 0,\l... i64 2\l  %10 = load double, ptr %arrayidx10, align 8\l  %11 = load ptr, ptr %m2.addr, align 8\l  %arrayidx11 = getelementptr inbounds [3 x double], ptr %11, i64 2\l  %arrayidx12 = getelementptr inbounds [3 x double], ptr %arrayidx11, i64 0,\l... i64 0\l  %12 = load double, ptr %arrayidx12, align 8\l  %13 = call double @llvm.fmuladd.f64(double %10, double %12, double %8)\l  %14 = load ptr, ptr %ans.addr, align 8\l  %arrayidx13 = getelementptr inbounds [3 x double], ptr %14, i64 0\l  %arrayidx14 = getelementptr inbounds [3 x double], ptr %arrayidx13, i64 0,\l... i64 0\l  store double %13, ptr %arrayidx14, align 8\l  %15 = load ptr, ptr %m.addr, align 8\l  %arrayidx15 = getelementptr inbounds [3 x double], ptr %15, i64 0\l  %arrayidx16 = getelementptr inbounds [3 x double], ptr %arrayidx15, i64 0,\l... i64 0\l  %16 = load double, ptr %arrayidx16, align 8\l  %17 = load ptr, ptr %m2.addr, align 8\l  %arrayidx17 = getelementptr inbounds [3 x double], ptr %17, i64 0\l  %arrayidx18 = getelementptr inbounds [3 x double], ptr %arrayidx17, i64 0,\l... i64 1\l  %18 = load double, ptr %arrayidx18, align 8\l  %19 = load ptr, ptr %m.addr, align 8\l  %arrayidx19 = getelementptr inbounds [3 x double], ptr %19, i64 0\l  %arrayidx20 = getelementptr inbounds [3 x double], ptr %arrayidx19, i64 0,\l... i64 1\l  %20 = load double, ptr %arrayidx20, align 8\l  %21 = load ptr, ptr %m2.addr, align 8\l  %arrayidx21 = getelementptr inbounds [3 x double], ptr %21, i64 1\l  %arrayidx22 = getelementptr inbounds [3 x double], ptr %arrayidx21, i64 0,\l... i64 1\l  %22 = load double, ptr %arrayidx22, align 8\l  %mul23 = fmul double %20, %22\l  %23 = call double @llvm.fmuladd.f64(double %16, double %18, double %mul23)\l  %24 = load ptr, ptr %m.addr, align 8\l  %arrayidx24 = getelementptr inbounds [3 x double], ptr %24, i64 0\l  %arrayidx25 = getelementptr inbounds [3 x double], ptr %arrayidx24, i64 0,\l... i64 2\l  %25 = load double, ptr %arrayidx25, align 8\l  %26 = load ptr, ptr %m2.addr, align 8\l  %arrayidx26 = getelementptr inbounds [3 x double], ptr %26, i64 2\l  %arrayidx27 = getelementptr inbounds [3 x double], ptr %arrayidx26, i64 0,\l... i64 1\l  %27 = load double, ptr %arrayidx27, align 8\l  %28 = call double @llvm.fmuladd.f64(double %25, double %27, double %23)\l  %29 = load ptr, ptr %ans.addr, align 8\l  %arrayidx28 = getelementptr inbounds [3 x double], ptr %29, i64 0\l  %arrayidx29 = getelementptr inbounds [3 x double], ptr %arrayidx28, i64 0,\l... i64 1\l  store double %28, ptr %arrayidx29, align 8\l  %30 = load ptr, ptr %m.addr, align 8\l  %arrayidx30 = getelementptr inbounds [3 x double], ptr %30, i64 0\l  %arrayidx31 = getelementptr inbounds [3 x double], ptr %arrayidx30, i64 0,\l... i64 0\l  %31 = load double, ptr %arrayidx31, align 8\l  %32 = load ptr, ptr %m2.addr, align 8\l  %arrayidx32 = getelementptr inbounds [3 x double], ptr %32, i64 0\l  %arrayidx33 = getelementptr inbounds [3 x double], ptr %arrayidx32, i64 0,\l... i64 2\l  %33 = load double, ptr %arrayidx33, align 8\l  %34 = load ptr, ptr %m.addr, align 8\l  %arrayidx34 = getelementptr inbounds [3 x double], ptr %34, i64 0\l  %arrayidx35 = getelementptr inbounds [3 x double], ptr %arrayidx34, i64 0,\l... i64 1\l  %35 = load double, ptr %arrayidx35, align 8\l  %36 = load ptr, ptr %m2.addr, align 8\l  %arrayidx36 = getelementptr inbounds [3 x double], ptr %36, i64 1\l  %arrayidx37 = getelementptr inbounds [3 x double], ptr %arrayidx36, i64 0,\l... i64 2\l  %37 = load double, ptr %arrayidx37, align 8\l  %mul38 = fmul double %35, %37\l  %38 = call double @llvm.fmuladd.f64(double %31, double %33, double %mul38)\l  %39 = load ptr, ptr %m.addr, align 8\l  %arrayidx39 = getelementptr inbounds [3 x double], ptr %39, i64 0\l  %arrayidx40 = getelementptr inbounds [3 x double], ptr %arrayidx39, i64 0,\l... i64 2\l  %40 = load double, ptr %arrayidx40, align 8\l  %41 = load ptr, ptr %m2.addr, align 8\l  %arrayidx41 = getelementptr inbounds [3 x double], ptr %41, i64 2\l  %arrayidx42 = getelementptr inbounds [3 x double], ptr %arrayidx41, i64 0,\l... i64 2\l  %42 = load double, ptr %arrayidx42, align 8\l  %43 = call double @llvm.fmuladd.f64(double %40, double %42, double %38)\l  %44 = load ptr, ptr %ans.addr, align 8\l  %arrayidx43 = getelementptr inbounds [3 x double], ptr %44, i64 0\l  %arrayidx44 = getelementptr inbounds [3 x double], ptr %arrayidx43, i64 0,\l... i64 2\l  store double %43, ptr %arrayidx44, align 8\l  %45 = load ptr, ptr %m.addr, align 8\l  %arrayidx45 = getelementptr inbounds [3 x double], ptr %45, i64 1\l  %arrayidx46 = getelementptr inbounds [3 x double], ptr %arrayidx45, i64 0,\l... i64 0\l  %46 = load double, ptr %arrayidx46, align 8\l  %47 = load ptr, ptr %m2.addr, align 8\l  %arrayidx47 = getelementptr inbounds [3 x double], ptr %47, i64 0\l  %arrayidx48 = getelementptr inbounds [3 x double], ptr %arrayidx47, i64 0,\l... i64 0\l  %48 = load double, ptr %arrayidx48, align 8\l  %49 = load ptr, ptr %m.addr, align 8\l  %arrayidx49 = getelementptr inbounds [3 x double], ptr %49, i64 1\l  %arrayidx50 = getelementptr inbounds [3 x double], ptr %arrayidx49, i64 0,\l... i64 1\l  %50 = load double, ptr %arrayidx50, align 8\l  %51 = load ptr, ptr %m2.addr, align 8\l  %arrayidx51 = getelementptr inbounds [3 x double], ptr %51, i64 1\l  %arrayidx52 = getelementptr inbounds [3 x double], ptr %arrayidx51, i64 0,\l... i64 0\l  %52 = load double, ptr %arrayidx52, align 8\l  %mul53 = fmul double %50, %52\l  %53 = call double @llvm.fmuladd.f64(double %46, double %48, double %mul53)\l  %54 = load ptr, ptr %m.addr, align 8\l  %arrayidx54 = getelementptr inbounds [3 x double], ptr %54, i64 1\l  %arrayidx55 = getelementptr inbounds [3 x double], ptr %arrayidx54, i64 0,\l... i64 2\l  %55 = load double, ptr %arrayidx55, align 8\l  %56 = load ptr, ptr %m2.addr, align 8\l  %arrayidx56 = getelementptr inbounds [3 x double], ptr %56, i64 2\l  %arrayidx57 = getelementptr inbounds [3 x double], ptr %arrayidx56, i64 0,\l... i64 0\l  %57 = load double, ptr %arrayidx57, align 8\l  %58 = call double @llvm.fmuladd.f64(double %55, double %57, double %53)\l  %59 = load ptr, ptr %ans.addr, align 8\l  %arrayidx58 = getelementptr inbounds [3 x double], ptr %59, i64 1\l  %arrayidx59 = getelementptr inbounds [3 x double], ptr %arrayidx58, i64 0,\l... i64 0\l  store double %58, ptr %arrayidx59, align 8\l  %60 = load ptr, ptr %m.addr, align 8\l  %arrayidx60 = getelementptr inbounds [3 x double], ptr %60, i64 1\l  %arrayidx61 = getelementptr inbounds [3 x double], ptr %arrayidx60, i64 0,\l... i64 0\l  %61 = load double, ptr %arrayidx61, align 8\l  %62 = load ptr, ptr %m2.addr, align 8\l  %arrayidx62 = getelementptr inbounds [3 x double], ptr %62, i64 0\l  %arrayidx63 = getelementptr inbounds [3 x double], ptr %arrayidx62, i64 0,\l... i64 1\l  %63 = load double, ptr %arrayidx63, align 8\l  %64 = load ptr, ptr %m.addr, align 8\l  %arrayidx64 = getelementptr inbounds [3 x double], ptr %64, i64 1\l  %arrayidx65 = getelementptr inbounds [3 x double], ptr %arrayidx64, i64 0,\l... i64 1\l  %65 = load double, ptr %arrayidx65, align 8\l  %66 = load ptr, ptr %m2.addr, align 8\l  %arrayidx66 = getelementptr inbounds [3 x double], ptr %66, i64 1\l  %arrayidx67 = getelementptr inbounds [3 x double], ptr %arrayidx66, i64 0,\l... i64 1\l  %67 = load double, ptr %arrayidx67, align 8\l  %mul68 = fmul double %65, %67\l  %68 = call double @llvm.fmuladd.f64(double %61, double %63, double %mul68)\l  %69 = load ptr, ptr %m.addr, align 8\l  %arrayidx69 = getelementptr inbounds [3 x double], ptr %69, i64 1\l  %arrayidx70 = getelementptr inbounds [3 x double], ptr %arrayidx69, i64 0,\l... i64 2\l  %70 = load double, ptr %arrayidx70, align 8\l  %71 = load ptr, ptr %m2.addr, align 8\l  %arrayidx71 = getelementptr inbounds [3 x double], ptr %71, i64 2\l  %arrayidx72 = getelementptr inbounds [3 x double], ptr %arrayidx71, i64 0,\l... i64 1\l  %72 = load double, ptr %arrayidx72, align 8\l  %73 = call double @llvm.fmuladd.f64(double %70, double %72, double %68)\l  %74 = load ptr, ptr %ans.addr, align 8\l  %arrayidx73 = getelementptr inbounds [3 x double], ptr %74, i64 1\l  %arrayidx74 = getelementptr inbounds [3 x double], ptr %arrayidx73, i64 0,\l... i64 1\l  store double %73, ptr %arrayidx74, align 8\l  %75 = load ptr, ptr %m.addr, align 8\l  %arrayidx75 = getelementptr inbounds [3 x double], ptr %75, i64 1\l  %arrayidx76 = getelementptr inbounds [3 x double], ptr %arrayidx75, i64 0,\l... i64 0\l  %76 = load double, ptr %arrayidx76, align 8\l  %77 = load ptr, ptr %m2.addr, align 8\l  %arrayidx77 = getelementptr inbounds [3 x double], ptr %77, i64 0\l  %arrayidx78 = getelementptr inbounds [3 x double], ptr %arrayidx77, i64 0,\l... i64 2\l  %78 = load double, ptr %arrayidx78, align 8\l  %79 = load ptr, ptr %m.addr, align 8\l  %arrayidx79 = getelementptr inbounds [3 x double], ptr %79, i64 1\l  %arrayidx80 = getelementptr inbounds [3 x double], ptr %arrayidx79, i64 0,\l... i64 1\l  %80 = load double, ptr %arrayidx80, align 8\l  %81 = load ptr, ptr %m2.addr, align 8\l  %arrayidx81 = getelementptr inbounds [3 x double], ptr %81, i64 1\l  %arrayidx82 = getelementptr inbounds [3 x double], ptr %arrayidx81, i64 0,\l... i64 2\l  %82 = load double, ptr %arrayidx82, align 8\l  %mul83 = fmul double %80, %82\l  %83 = call double @llvm.fmuladd.f64(double %76, double %78, double %mul83)\l  %84 = load ptr, ptr %m.addr, align 8\l  %arrayidx84 = getelementptr inbounds [3 x double], ptr %84, i64 1\l  %arrayidx85 = getelementptr inbounds [3 x double], ptr %arrayidx84, i64 0,\l... i64 2\l  %85 = load double, ptr %arrayidx85, align 8\l  %86 = load ptr, ptr %m2.addr, align 8\l  %arrayidx86 = getelementptr inbounds [3 x double], ptr %86, i64 2\l  %arrayidx87 = getelementptr inbounds [3 x double], ptr %arrayidx86, i64 0,\l... i64 2\l  %87 = load double, ptr %arrayidx87, align 8\l  %88 = call double @llvm.fmuladd.f64(double %85, double %87, double %83)\l  %89 = load ptr, ptr %ans.addr, align 8\l  %arrayidx88 = getelementptr inbounds [3 x double], ptr %89, i64 1\l  %arrayidx89 = getelementptr inbounds [3 x double], ptr %arrayidx88, i64 0,\l... i64 2\l  store double %88, ptr %arrayidx89, align 8\l  %90 = load ptr, ptr %m.addr, align 8\l  %arrayidx90 = getelementptr inbounds [3 x double], ptr %90, i64 2\l  %arrayidx91 = getelementptr inbounds [3 x double], ptr %arrayidx90, i64 0,\l... i64 0\l  %91 = load double, ptr %arrayidx91, align 8\l  %92 = load ptr, ptr %m2.addr, align 8\l  %arrayidx92 = getelementptr inbounds [3 x double], ptr %92, i64 0\l  %arrayidx93 = getelementptr inbounds [3 x double], ptr %arrayidx92, i64 0,\l... i64 0\l  %93 = load double, ptr %arrayidx93, align 8\l  %94 = load ptr, ptr %m.addr, align 8\l  %arrayidx94 = getelementptr inbounds [3 x double], ptr %94, i64 2\l  %arrayidx95 = getelementptr inbounds [3 x double], ptr %arrayidx94, i64 0,\l... i64 1\l  %95 = load double, ptr %arrayidx95, align 8\l  %96 = load ptr, ptr %m2.addr, align 8\l  %arrayidx96 = getelementptr inbounds [3 x double], ptr %96, i64 1\l  %arrayidx97 = getelementptr inbounds [3 x double], ptr %arrayidx96, i64 0,\l... i64 0\l  %97 = load double, ptr %arrayidx97, align 8\l  %mul98 = fmul double %95, %97\l  %98 = call double @llvm.fmuladd.f64(double %91, double %93, double %mul98)\l  %99 = load ptr, ptr %m.addr, align 8\l  %arrayidx99 = getelementptr inbounds [3 x double], ptr %99, i64 2\l  %arrayidx100 = getelementptr inbounds [3 x double], ptr %arrayidx99, i64 0,\l... i64 2\l  %100 = load double, ptr %arrayidx100, align 8\l  %101 = load ptr, ptr %m2.addr, align 8\l  %arrayidx101 = getelementptr inbounds [3 x double], ptr %101, i64 2\l  %arrayidx102 = getelementptr inbounds [3 x double], ptr %arrayidx101, i64 0,\l... i64 0\l  %102 = load double, ptr %arrayidx102, align 8\l  %103 = call double @llvm.fmuladd.f64(double %100, double %102, double %98)\l  %104 = load ptr, ptr %ans.addr, align 8\l  %arrayidx103 = getelementptr inbounds [3 x double], ptr %104, i64 2\l  %arrayidx104 = getelementptr inbounds [3 x double], ptr %arrayidx103, i64 0,\l... i64 0\l  store double %103, ptr %arrayidx104, align 8\l  %105 = load ptr, ptr %m.addr, align 8\l  %arrayidx105 = getelementptr inbounds [3 x double], ptr %105, i64 2\l  %arrayidx106 = getelementptr inbounds [3 x double], ptr %arrayidx105, i64 0,\l... i64 0\l  %106 = load double, ptr %arrayidx106, align 8\l  %107 = load ptr, ptr %m2.addr, align 8\l  %arrayidx107 = getelementptr inbounds [3 x double], ptr %107, i64 0\l  %arrayidx108 = getelementptr inbounds [3 x double], ptr %arrayidx107, i64 0,\l... i64 1\l  %108 = load double, ptr %arrayidx108, align 8\l  %109 = load ptr, ptr %m.addr, align 8\l  %arrayidx109 = getelementptr inbounds [3 x double], ptr %109, i64 2\l  %arrayidx110 = getelementptr inbounds [3 x double], ptr %arrayidx109, i64 0,\l... i64 1\l  %110 = load double, ptr %arrayidx110, align 8\l  %111 = load ptr, ptr %m2.addr, align 8\l  %arrayidx111 = getelementptr inbounds [3 x double], ptr %111, i64 1\l  %arrayidx112 = getelementptr inbounds [3 x double], ptr %arrayidx111, i64 0,\l... i64 1\l  %112 = load double, ptr %arrayidx112, align 8\l  %mul113 = fmul double %110, %112\l  %113 = call double @llvm.fmuladd.f64(double %106, double %108, double\l... %mul113)\l  %114 = load ptr, ptr %m.addr, align 8\l  %arrayidx114 = getelementptr inbounds [3 x double], ptr %114, i64 2\l  %arrayidx115 = getelementptr inbounds [3 x double], ptr %arrayidx114, i64 0,\l... i64 2\l  %115 = load double, ptr %arrayidx115, align 8\l  %116 = load ptr, ptr %m2.addr, align 8\l  %arrayidx116 = getelementptr inbounds [3 x double], ptr %116, i64 2\l  %arrayidx117 = getelementptr inbounds [3 x double], ptr %arrayidx116, i64 0,\l... i64 1\l  %117 = load double, ptr %arrayidx117, align 8\l  %118 = call double @llvm.fmuladd.f64(double %115, double %117, double %113)\l  %119 = load ptr, ptr %ans.addr, align 8\l  %arrayidx118 = getelementptr inbounds [3 x double], ptr %119, i64 2\l  %arrayidx119 = getelementptr inbounds [3 x double], ptr %arrayidx118, i64 0,\l... i64 1\l  store double %118, ptr %arrayidx119, align 8\l  %120 = load ptr, ptr %m.addr, align 8\l  %arrayidx120 = getelementptr inbounds [3 x double], ptr %120, i64 2\l  %arrayidx121 = getelementptr inbounds [3 x double], ptr %arrayidx120, i64 0,\l... i64 0\l  %121 = load double, ptr %arrayidx121, align 8\l  %122 = load ptr, ptr %m2.addr, align 8\l  %arrayidx122 = getelementptr inbounds [3 x double], ptr %122, i64 0\l  %arrayidx123 = getelementptr inbounds [3 x double], ptr %arrayidx122, i64 0,\l... i64 2\l  %123 = load double, ptr %arrayidx123, align 8\l  %124 = load ptr, ptr %m.addr, align 8\l  %arrayidx124 = getelementptr inbounds [3 x double], ptr %124, i64 2\l  %arrayidx125 = getelementptr inbounds [3 x double], ptr %arrayidx124, i64 0,\l... i64 1\l  %125 = load double, ptr %arrayidx125, align 8\l  %126 = load ptr, ptr %m2.addr, align 8\l  %arrayidx126 = getelementptr inbounds [3 x double], ptr %126, i64 1\l  %arrayidx127 = getelementptr inbounds [3 x double], ptr %arrayidx126, i64 0,\l... i64 2\l  %127 = load double, ptr %arrayidx127, align 8\l  %mul128 = fmul double %125, %127\l  %128 = call double @llvm.fmuladd.f64(double %121, double %123, double\l... %mul128)\l  %129 = load ptr, ptr %m.addr, align 8\l  %arrayidx129 = getelementptr inbounds [3 x double], ptr %129, i64 2\l  %arrayidx130 = getelementptr inbounds [3 x double], ptr %arrayidx129, i64 0,\l... i64 2\l  %130 = load double, ptr %arrayidx130, align 8\l  %131 = load ptr, ptr %m2.addr, align 8\l  %arrayidx131 = getelementptr inbounds [3 x double], ptr %131, i64 2\l  %arrayidx132 = getelementptr inbounds [3 x double], ptr %arrayidx131, i64 0,\l... i64 2\l  %132 = load double, ptr %arrayidx132, align 8\l  %133 = call double @llvm.fmuladd.f64(double %130, double %132, double %128)\l  %134 = load ptr, ptr %ans.addr, align 8\l  %arrayidx133 = getelementptr inbounds [3 x double], ptr %134, i64 2\l  %arrayidx134 = getelementptr inbounds [3 x double], ptr %arrayidx133, i64 0,\l... i64 2\l  store double %133, ptr %arrayidx134, align 8\l  ret void\l}"];
}
