digraph "CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESB_SB_RiSB_EEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSH_' function" {
	label="CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESB_SB_RiSB_EEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSH_' function";

	Node0x558416821dd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %val.i.i71 = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i3.i72 = alloca ptr, align 8\l  %retval.i.i73 = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i.i74 = alloca ptr, align 8\l  %val.addr.i.i75 = alloca ptr, align 8\l  %retval.i76 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i77 = alloca ptr, align 8\l  %arg.i78 = alloca ptr, align 8\l  %ref.tmp.i79 = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %ref.tmp1.i80 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i81 = alloca i8, align 1\l  %formattable_const.i82 = alloca i8, align 1\l  %formattable_pointer.i83 = alloca i8, align 1\l  %formattable.i84 = alloca i8, align 1\l  %agg.tmp.i85 = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %val.i.i50 = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i3.i51 = alloca ptr, align 8\l  %retval.i.i52 = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i.i53 = alloca ptr, align 8\l  %val.addr.i.i54 = alloca ptr, align 8\l  %retval.i55 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i56 = alloca ptr, align 8\l  %arg.i57 = alloca ptr, align 8\l  %ref.tmp.i58 = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %ref.tmp1.i59 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i60 = alloca i8, align 1\l  %formattable_const.i61 = alloca i8, align 1\l  %formattable_pointer.i62 = alloca i8, align 1\l  %formattable.i63 = alloca i8, align 1\l  %agg.tmp.i64 = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %val.i.i29 = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i3.i30 = alloca ptr, align 8\l  %retval.i.i31 = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i.i32 = alloca ptr, align 8\l  %val.addr.i.i33 = alloca ptr, align 8\l  %retval.i34 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i35 = alloca ptr, align 8\l  %arg.i36 = alloca ptr, align 8\l  %ref.tmp.i37 = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %ref.tmp1.i38 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i39 = alloca i8, align 1\l  %formattable_const.i40 = alloca i8, align 1\l  %formattable_pointer.i41 = alloca i8, align 1\l  %formattable.i42 = alloca i8, align 1\l  %agg.tmp.i43 = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %val.i.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i3.i = alloca ptr, align 8\l  %retval.i.i22 = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i.i23 = alloca ptr, align 8\l  %val.addr.i.i24 = alloca ptr, align 8\l  %retval.i25 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i26 = alloca ptr, align 8\l  %arg.i = alloca ptr, align 8\l  %ref.tmp.i27 = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %ref.tmp1.i = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i = alloca i8, align 1\l  %formattable_const.i = alloca i8, align 1\l  %formattable_pointer.i = alloca i8, align 1\l  %formattable.i = alloca i8, align 1\l  %agg.tmp.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i21 = alloca ptr, align 8\l  %.addr.i = alloca ptr, align 8\l  %.addr1.i = alloca i32, align 4\l  %.addr2.i = alloca i32, align 4\l  %.addr3.i = alloca ptr, align 8\l  %.addr4.i = alloca ptr, align 8\l  %.addr5.i = alloca ptr, align 8\l  %.addr6.i = alloca ptr, align 8\l  %.addr7.i = alloca ptr, align 8\l  %this.addr.i19 = alloca ptr, align 8\l  %init.addr.i = alloca ptr, align 8\l  %init.addr2.i = alloca ptr, align 8\l  %init.addr4.i = alloca ptr, align 8\l  %init.addr6.i = alloca ptr, align 8\l  %init.addr8.i = alloca ptr, align 8\l  %retval.i16 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i17 = alloca ptr, align 8\l  %retval.i13 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i14 = alloca ptr, align 8\l  %retval.i10 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i11 = alloca ptr, align 8\l  %retval.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i = alloca ptr, align 8\l  %this.addr.i33.i = alloca ptr, align 8\l  %val.addr.i34.i = alloca i32, align 4\l  %this.addr.i.i = alloca ptr, align 8\l  %val.addr.i32.i = alloca i32, align 4\l  %retval.i29.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i30.i = alloca ptr, align 8\l  %arg.i.i = alloca ptr, align 8\l  %ref.tmp.i.i = alloca i32, align 4\l  %ref.tmp1.i.i = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i.i = alloca i8, align 1\l  %formattable_const.i.i = alloca i8, align 1\l  %formattable_pointer.i.i = alloca i8, align 1\l  %formattable.i.i = alloca i8, align 1\l  %retval.i.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i.i = alloca ptr, align 8\l  %this.addr.i = alloca ptr, align 8\l  %args.addr.i = alloca ptr, align 8\l  %args.addr2.i = alloca ptr, align 8\l  %args.addr4.i = alloca ptr, align 8\l  %args.addr6.i = alloca ptr, align 8\l  %args.addr8.i = alloca ptr, align 8\l  %ref.tmp.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp11.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp15.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp19.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp23.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %args.addr = alloca ptr, align 8\l  %args.addr2 = alloca ptr, align 8\l  %args.addr4 = alloca ptr, align 8\l  %args.addr6 = alloca ptr, align 8\l  %args.addr8 = alloca ptr, align 8\l  store ptr %args, ptr %args.addr, align 8\l  store ptr %args1, ptr %args.addr2, align 8\l  store ptr %args3, ptr %args.addr4, align 8\l  store ptr %args5, ptr %args.addr6, align 8\l  store ptr %args7, ptr %args.addr8, align 8\l  %0 = load ptr, ptr %args.addr, align 8\l  %1 = load ptr, ptr %args.addr2, align 8\l  %2 = load ptr, ptr %args.addr4, align 8\l  %3 = load ptr, ptr %args.addr6, align 8\l  %4 = load ptr, ptr %args.addr8, align 8\l  store ptr %agg.result, ptr %this.addr.i, align 8\l  store ptr %0, ptr %args.addr.i, align 8\l  store ptr %1, ptr %args.addr2.i, align 8\l  store ptr %2, ptr %args.addr4.i, align 8\l  store ptr %3, ptr %args.addr6.i, align 8\l  store ptr %4, ptr %args.addr8.i, align 8\l  %this9.i = load ptr, ptr %this.addr.i, align 8\l  %5 = load ptr, ptr %args.addr.i, align 8\l  store ptr %5, ptr %val.addr.i17, align 8\l  %6 = load ptr, ptr %val.addr.i17, align 8\l  store ptr %6, ptr %val.addr.i26, align 8\l  %7 = load ptr, ptr %val.addr.i26, align 8\l  store ptr %ref.tmp1.i, ptr %this.addr.i.i23, align 8\l  store ptr %7, ptr %val.addr.i.i24, align 8\l  %this1.i.i28 = load ptr, ptr %this.addr.i.i23, align 8\l  %8 = load ptr, ptr %val.addr.i.i24, align 8\l  %call.i.i = call \{ ptr, i64 \}\l... @_ZN3fmt6v9_lmp6detail14to_string_viewIcSt11char_traitsIcESaIcEEENS0_17basic_s\l...tring_viewIT_EERKNSt7__cxx1112basic_stringIS7_T0_T1_EE(ptr noundef nonnull\l... align 8 dereferenceable(32) %8)\l  %9 = extractvalue \{ ptr, i64 \} %call.i.i, 0\l  store ptr %9, ptr %retval.i.i22, align 8\l  %10 = getelementptr inbounds \{ ptr, i64 \}, ptr %retval.i.i22, i32 0, i32 1\l  %11 = extractvalue \{ ptr, i64 \} %call.i.i, 1\l  store i64 %11, ptr %10, align 8\l  %12 = load \{ ptr, i64 \}, ptr %retval.i.i22, align 8\l  %13 = extractvalue \{ ptr, i64 \} %12, 0\l  store ptr %13, ptr %ref.tmp.i27, align 8\l  %14 = getelementptr inbounds \{ ptr, i64 \}, ptr %ref.tmp.i27, i32 0, i32 1\l  %15 = extractvalue \{ ptr, i64 \} %12, 1\l  store i64 %15, ptr %14, align 8\l  store ptr %ref.tmp.i27, ptr %arg.i, align 8\l  store i8 1, ptr %formattable_char.i, align 1\l  store i8 1, ptr %formattable_const.i, align 1\l  store i8 1, ptr %formattable_pointer.i, align 1\l  store i8 1, ptr %formattable.i, align 1\l  %16 = load ptr, ptr %arg.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp.i, ptr align 8 %16,\l... i64 16, i1 false)\l  %17 = load ptr, ptr %agg.tmp.i, align 8\l  %18 = getelementptr inbounds \{ ptr, i64 \}, ptr %agg.tmp.i, i32 0, i32 1\l  %19 = load i64, ptr %18, align 8\l  store ptr %17, ptr %val.i.i, align 8\l  %20 = getelementptr inbounds \{ ptr, i64 \}, ptr %val.i.i, i32 0, i32 1\l  store i64 %19, ptr %20, align 8\l  store ptr %retval.i25, ptr %this.addr.i3.i, align 8\l  %this1.i4.i = load ptr, ptr %this.addr.i3.i, align 8\l  %call.i5.i = call noundef ptr\l... @_ZNK3fmt6v9_lmp17basic_string_viewIcE4dataEv(ptr noundef nonnull align 8\l... dereferenceable(16) %val.i.i) #18\l  store ptr %call.i5.i, ptr %this1.i4.i, align 16\l  %call2.i.i = call noundef i64\l... @_ZNK3fmt6v9_lmp17basic_string_viewIcE4sizeEv(ptr noundef nonnull align 8\l... dereferenceable(16) %val.i.i) #18\l  %size.i.i = getelementptr inbounds\l... %\"struct.fmt::v9_lmp::detail::string_value\", ptr %this1.i4.i, i32 0, i32 1\l  store i64 %call2.i.i, ptr %size.i.i, align 8\l  %21 = load \{ i64, i64 \}, ptr %retval.i25, align 16\l  %22 = extractvalue \{ i64, i64 \} %21, 0\l  store i64 %22, ptr %retval.i16, align 16\l  %23 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i16, i32 0, i32 1\l  %24 = extractvalue \{ i64, i64 \} %21, 1\l  store i64 %24, ptr %23, align 8\l  %25 = load \{ i64, i64 \}, ptr %retval.i16, align 16\l  %26 = extractvalue \{ i64, i64 \} %25, 0\l  store i64 %26, ptr %ref.tmp.i, align 16\l  %27 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp.i, i32 0, i32 1\l  %28 = extractvalue \{ i64, i64 \} %25, 1\l  store i64 %28, ptr %27, align 8\l  %29 = load ptr, ptr %args.addr2.i, align 8\l  store ptr %29, ptr %val.addr.i14, align 8\l  %30 = load ptr, ptr %val.addr.i14, align 8\l  store ptr %30, ptr %val.addr.i35, align 8\l  %31 = load ptr, ptr %val.addr.i35, align 8\l  store ptr %ref.tmp1.i38, ptr %this.addr.i.i32, align 8\l  store ptr %31, ptr %val.addr.i.i33, align 8\l  %this1.i.i44 = load ptr, ptr %this.addr.i.i32, align 8\l  %32 = load ptr, ptr %val.addr.i.i33, align 8\l  %call.i.i45 = call \{ ptr, i64 \}\l... @_ZN3fmt6v9_lmp6detail14to_string_viewIcSt11char_traitsIcESaIcEEENS0_17basic_s\l...tring_viewIT_EERKNSt7__cxx1112basic_stringIS7_T0_T1_EE(ptr noundef nonnull\l... align 8 dereferenceable(32) %32)\l  %33 = extractvalue \{ ptr, i64 \} %call.i.i45, 0\l  store ptr %33, ptr %retval.i.i31, align 8\l  %34 = getelementptr inbounds \{ ptr, i64 \}, ptr %retval.i.i31, i32 0, i32 1\l  %35 = extractvalue \{ ptr, i64 \} %call.i.i45, 1\l  store i64 %35, ptr %34, align 8\l  %36 = load \{ ptr, i64 \}, ptr %retval.i.i31, align 8\l  %37 = extractvalue \{ ptr, i64 \} %36, 0\l  store ptr %37, ptr %ref.tmp.i37, align 8\l  %38 = getelementptr inbounds \{ ptr, i64 \}, ptr %ref.tmp.i37, i32 0, i32 1\l  %39 = extractvalue \{ ptr, i64 \} %36, 1\l  store i64 %39, ptr %38, align 8\l  store ptr %ref.tmp.i37, ptr %arg.i36, align 8\l  store i8 1, ptr %formattable_char.i39, align 1\l  store i8 1, ptr %formattable_const.i40, align 1\l  store i8 1, ptr %formattable_pointer.i41, align 1\l  store i8 1, ptr %formattable.i42, align 1\l  %40 = load ptr, ptr %arg.i36, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp.i43, ptr align 8 %40,\l... i64 16, i1 false)\l  %41 = load ptr, ptr %agg.tmp.i43, align 8\l  %42 = getelementptr inbounds \{ ptr, i64 \}, ptr %agg.tmp.i43, i32 0, i32 1\l  %43 = load i64, ptr %42, align 8\l  store ptr %41, ptr %val.i.i29, align 8\l  %44 = getelementptr inbounds \{ ptr, i64 \}, ptr %val.i.i29, i32 0, i32 1\l  store i64 %43, ptr %44, align 8\l  store ptr %retval.i34, ptr %this.addr.i3.i30, align 8\l  %this1.i4.i46 = load ptr, ptr %this.addr.i3.i30, align 8\l  %call.i5.i47 = call noundef ptr\l... @_ZNK3fmt6v9_lmp17basic_string_viewIcE4dataEv(ptr noundef nonnull align 8\l... dereferenceable(16) %val.i.i29) #18\l  store ptr %call.i5.i47, ptr %this1.i4.i46, align 16\l  %call2.i.i48 = call noundef i64\l... @_ZNK3fmt6v9_lmp17basic_string_viewIcE4sizeEv(ptr noundef nonnull align 8\l... dereferenceable(16) %val.i.i29) #18\l  %size.i.i49 = getelementptr inbounds\l... %\"struct.fmt::v9_lmp::detail::string_value\", ptr %this1.i4.i46, i32 0, i32 1\l  store i64 %call2.i.i48, ptr %size.i.i49, align 8\l  %45 = load \{ i64, i64 \}, ptr %retval.i34, align 16\l  %46 = extractvalue \{ i64, i64 \} %45, 0\l  store i64 %46, ptr %retval.i13, align 16\l  %47 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i13, i32 0, i32 1\l  %48 = extractvalue \{ i64, i64 \} %45, 1\l  store i64 %48, ptr %47, align 8\l  %49 = load \{ i64, i64 \}, ptr %retval.i13, align 16\l  %50 = extractvalue \{ i64, i64 \} %49, 0\l  store i64 %50, ptr %ref.tmp11.i, align 16\l  %51 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp11.i, i32 0, i32 1\l  %52 = extractvalue \{ i64, i64 \} %49, 1\l  store i64 %52, ptr %51, align 8\l  %53 = load ptr, ptr %args.addr4.i, align 8\l  store ptr %53, ptr %val.addr.i11, align 8\l  %54 = load ptr, ptr %val.addr.i11, align 8\l  store ptr %54, ptr %val.addr.i56, align 8\l  %55 = load ptr, ptr %val.addr.i56, align 8\l  store ptr %ref.tmp1.i59, ptr %this.addr.i.i53, align 8\l  store ptr %55, ptr %val.addr.i.i54, align 8\l  %this1.i.i65 = load ptr, ptr %this.addr.i.i53, align 8\l  %56 = load ptr, ptr %val.addr.i.i54, align 8\l  %call.i.i66 = call \{ ptr, i64 \}\l... @_ZN3fmt6v9_lmp6detail14to_string_viewIcSt11char_traitsIcESaIcEEENS0_17basic_s\l...tring_viewIT_EERKNSt7__cxx1112basic_stringIS7_T0_T1_EE(ptr noundef nonnull\l... align 8 dereferenceable(32) %56)\l  %57 = extractvalue \{ ptr, i64 \} %call.i.i66, 0\l  store ptr %57, ptr %retval.i.i52, align 8\l  %58 = getelementptr inbounds \{ ptr, i64 \}, ptr %retval.i.i52, i32 0, i32 1\l  %59 = extractvalue \{ ptr, i64 \} %call.i.i66, 1\l  store i64 %59, ptr %58, align 8\l  %60 = load \{ ptr, i64 \}, ptr %retval.i.i52, align 8\l  %61 = extractvalue \{ ptr, i64 \} %60, 0\l  store ptr %61, ptr %ref.tmp.i58, align 8\l  %62 = getelementptr inbounds \{ ptr, i64 \}, ptr %ref.tmp.i58, i32 0, i32 1\l  %63 = extractvalue \{ ptr, i64 \} %60, 1\l  store i64 %63, ptr %62, align 8\l  store ptr %ref.tmp.i58, ptr %arg.i57, align 8\l  store i8 1, ptr %formattable_char.i60, align 1\l  store i8 1, ptr %formattable_const.i61, align 1\l  store i8 1, ptr %formattable_pointer.i62, align 1\l  store i8 1, ptr %formattable.i63, align 1\l  %64 = load ptr, ptr %arg.i57, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp.i64, ptr align 8 %64,\l... i64 16, i1 false)\l  %65 = load ptr, ptr %agg.tmp.i64, align 8\l  %66 = getelementptr inbounds \{ ptr, i64 \}, ptr %agg.tmp.i64, i32 0, i32 1\l  %67 = load i64, ptr %66, align 8\l  store ptr %65, ptr %val.i.i50, align 8\l  %68 = getelementptr inbounds \{ ptr, i64 \}, ptr %val.i.i50, i32 0, i32 1\l  store i64 %67, ptr %68, align 8\l  store ptr %retval.i55, ptr %this.addr.i3.i51, align 8\l  %this1.i4.i67 = load ptr, ptr %this.addr.i3.i51, align 8\l  %call.i5.i68 = call noundef ptr\l... @_ZNK3fmt6v9_lmp17basic_string_viewIcE4dataEv(ptr noundef nonnull align 8\l... dereferenceable(16) %val.i.i50) #18\l  store ptr %call.i5.i68, ptr %this1.i4.i67, align 16\l  %call2.i.i69 = call noundef i64\l... @_ZNK3fmt6v9_lmp17basic_string_viewIcE4sizeEv(ptr noundef nonnull align 8\l... dereferenceable(16) %val.i.i50) #18\l  %size.i.i70 = getelementptr inbounds\l... %\"struct.fmt::v9_lmp::detail::string_value\", ptr %this1.i4.i67, i32 0, i32 1\l  store i64 %call2.i.i69, ptr %size.i.i70, align 8\l  %69 = load \{ i64, i64 \}, ptr %retval.i55, align 16\l  %70 = extractvalue \{ i64, i64 \} %69, 0\l  store i64 %70, ptr %retval.i10, align 16\l  %71 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i10, i32 0, i32 1\l  %72 = extractvalue \{ i64, i64 \} %69, 1\l  store i64 %72, ptr %71, align 8\l  %73 = load \{ i64, i64 \}, ptr %retval.i10, align 16\l  %74 = extractvalue \{ i64, i64 \} %73, 0\l  store i64 %74, ptr %ref.tmp15.i, align 16\l  %75 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp15.i, i32 0, i32 1\l  %76 = extractvalue \{ i64, i64 \} %73, 1\l  store i64 %76, ptr %75, align 8\l  %77 = load ptr, ptr %args.addr6.i, align 8\l  store ptr %77, ptr %val.addr.i.i, align 8\l  %78 = load ptr, ptr %val.addr.i.i, align 8\l  store ptr %78, ptr %val.addr.i30.i, align 8\l  %79 = load ptr, ptr %val.addr.i30.i, align 8\l  %80 = load i32, ptr %79, align 4\l  store ptr %ref.tmp1.i.i, ptr %this.addr.i.i, align 8\l  store i32 %80, ptr %val.addr.i32.i, align 4\l  %this1.i.i = load ptr, ptr %this.addr.i.i, align 8\l  %81 = load i32, ptr %val.addr.i32.i, align 4\l  store i32 %81, ptr %ref.tmp.i.i, align 4\l  store ptr %ref.tmp.i.i, ptr %arg.i.i, align 8\l  store i8 1, ptr %formattable_char.i.i, align 1\l  store i8 1, ptr %formattable_const.i.i, align 1\l  store i8 1, ptr %formattable_pointer.i.i, align 1\l  store i8 1, ptr %formattable.i.i, align 1\l  %82 = load ptr, ptr %arg.i.i, align 8\l  %83 = load i32, ptr %82, align 4\l  store ptr %retval.i29.i, ptr %this.addr.i33.i, align 8\l  store i32 %83, ptr %val.addr.i34.i, align 4\l  %this1.i35.i = load ptr, ptr %this.addr.i33.i, align 8\l  %84 = load i32, ptr %val.addr.i34.i, align 4\l  store i32 %84, ptr %this1.i35.i, align 16\l  %85 = load \{ i64, i64 \}, ptr %retval.i29.i, align 16\l  %86 = extractvalue \{ i64, i64 \} %85, 0\l  store i64 %86, ptr %retval.i.i, align 16\l  %87 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i.i, i32 0, i32 1\l  %88 = extractvalue \{ i64, i64 \} %85, 1\l  store i64 %88, ptr %87, align 8\l  %89 = load \{ i64, i64 \}, ptr %retval.i.i, align 16\l  %90 = extractvalue \{ i64, i64 \} %89, 0\l  store i64 %90, ptr %ref.tmp19.i, align 16\l  %91 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp19.i, i32 0, i32 1\l  %92 = extractvalue \{ i64, i64 \} %89, 1\l  store i64 %92, ptr %91, align 8\l  %93 = load ptr, ptr %args.addr8.i, align 8\l  store ptr %93, ptr %val.addr.i, align 8\l  %94 = load ptr, ptr %val.addr.i, align 8\l  store ptr %94, ptr %val.addr.i77, align 8\l  %95 = load ptr, ptr %val.addr.i77, align 8\l  store ptr %ref.tmp1.i80, ptr %this.addr.i.i74, align 8\l  store ptr %95, ptr %val.addr.i.i75, align 8\l  %this1.i.i86 = load ptr, ptr %this.addr.i.i74, align 8\l  %96 = load ptr, ptr %val.addr.i.i75, align 8\l  %call.i.i87 = call \{ ptr, i64 \}\l... @_ZN3fmt6v9_lmp6detail14to_string_viewIcSt11char_traitsIcESaIcEEENS0_17basic_s\l...tring_viewIT_EERKNSt7__cxx1112basic_stringIS7_T0_T1_EE(ptr noundef nonnull\l... align 8 dereferenceable(32) %96)\l  %97 = extractvalue \{ ptr, i64 \} %call.i.i87, 0\l  store ptr %97, ptr %retval.i.i73, align 8\l  %98 = getelementptr inbounds \{ ptr, i64 \}, ptr %retval.i.i73, i32 0, i32 1\l  %99 = extractvalue \{ ptr, i64 \} %call.i.i87, 1\l  store i64 %99, ptr %98, align 8\l  %100 = load \{ ptr, i64 \}, ptr %retval.i.i73, align 8\l  %101 = extractvalue \{ ptr, i64 \} %100, 0\l  store ptr %101, ptr %ref.tmp.i79, align 8\l  %102 = getelementptr inbounds \{ ptr, i64 \}, ptr %ref.tmp.i79, i32 0, i32 1\l  %103 = extractvalue \{ ptr, i64 \} %100, 1\l  store i64 %103, ptr %102, align 8\l  store ptr %ref.tmp.i79, ptr %arg.i78, align 8\l  store i8 1, ptr %formattable_char.i81, align 1\l  store i8 1, ptr %formattable_const.i82, align 1\l  store i8 1, ptr %formattable_pointer.i83, align 1\l  store i8 1, ptr %formattable.i84, align 1\l  %104 = load ptr, ptr %arg.i78, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp.i85, ptr align 8 %104,\l... i64 16, i1 false)\l  %105 = load ptr, ptr %agg.tmp.i85, align 8\l  %106 = getelementptr inbounds \{ ptr, i64 \}, ptr %agg.tmp.i85, i32 0, i32 1\l  %107 = load i64, ptr %106, align 8\l  store ptr %105, ptr %val.i.i71, align 8\l  %108 = getelementptr inbounds \{ ptr, i64 \}, ptr %val.i.i71, i32 0, i32 1\l  store i64 %107, ptr %108, align 8\l  store ptr %retval.i76, ptr %this.addr.i3.i72, align 8\l  %this1.i4.i88 = load ptr, ptr %this.addr.i3.i72, align 8\l  %call.i5.i89 = call noundef ptr\l... @_ZNK3fmt6v9_lmp17basic_string_viewIcE4dataEv(ptr noundef nonnull align 8\l... dereferenceable(16) %val.i.i71) #18\l  store ptr %call.i5.i89, ptr %this1.i4.i88, align 16\l  %call2.i.i90 = call noundef i64\l... @_ZNK3fmt6v9_lmp17basic_string_viewIcE4sizeEv(ptr noundef nonnull align 8\l... dereferenceable(16) %val.i.i71) #18\l  %size.i.i91 = getelementptr inbounds\l... %\"struct.fmt::v9_lmp::detail::string_value\", ptr %this1.i4.i88, i32 0, i32 1\l  store i64 %call2.i.i90, ptr %size.i.i91, align 8\l  %109 = load \{ i64, i64 \}, ptr %retval.i76, align 16\l  %110 = extractvalue \{ i64, i64 \} %109, 0\l  store i64 %110, ptr %retval.i, align 16\l  %111 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i, i32 0, i32 1\l  %112 = extractvalue \{ i64, i64 \} %109, 1\l  store i64 %112, ptr %111, align 8\l  %113 = load \{ i64, i64 \}, ptr %retval.i, align 16\l  %114 = extractvalue \{ i64, i64 \} %113, 0\l  store i64 %114, ptr %ref.tmp23.i, align 16\l  %115 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp23.i, i32 0, i32 1\l  %116 = extractvalue \{ i64, i64 \} %113, 1\l  store i64 %116, ptr %115, align 8\l  store ptr %this9.i, ptr %this.addr.i19, align 8\l  store ptr %ref.tmp.i, ptr %init.addr.i, align 8\l  store ptr %ref.tmp11.i, ptr %init.addr2.i, align 8\l  store ptr %ref.tmp15.i, ptr %init.addr4.i, align 8\l  store ptr %ref.tmp19.i, ptr %init.addr6.i, align 8\l  store ptr %ref.tmp23.i, ptr %init.addr8.i, align 8\l  %this9.i20 = load ptr, ptr %this.addr.i19, align 8\l  %117 = load ptr, ptr %init.addr.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %this9.i20, ptr align 16 %117,\l... i64 16, i1 false)\l  %arrayinit.element.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %this9.i20, i64 1\l  %118 = load ptr, ptr %init.addr2.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element.i, ptr\l... align 16 %118, i64 16, i1 false)\l  %arrayinit.element10.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element.i, i64 1\l  %119 = load ptr, ptr %init.addr4.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element10.i, ptr\l... align 16 %119, i64 16, i1 false)\l  %arrayinit.element11.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element10.i, i64 1\l  %120 = load ptr, ptr %init.addr6.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element11.i, ptr\l... align 16 %120, i64 16, i1 false)\l  %arrayinit.element12.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element11.i, i64 1\l  %121 = load ptr, ptr %init.addr8.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element12.i, ptr\l... align 16 %121, i64 16, i1 false)\l  store ptr %this9.i, ptr %this.addr.i21, align 8\l  %this1.i = load ptr, ptr %this.addr.i21, align 8\l  %122 = load ptr, ptr %args.addr.i, align 8\l  %123 = load ptr, ptr %args.addr2.i, align 8\l  %124 = load ptr, ptr %args.addr4.i, align 8\l  %125 = load ptr, ptr %args.addr6.i, align 8\l  %126 = load ptr, ptr %args.addr8.i, align 8\l  store ptr null, ptr %.addr.i, align 8\l  store i32 0, ptr %.addr1.i, align 4\l  store i32 0, ptr %.addr2.i, align 4\l  store ptr %122, ptr %.addr3.i, align 8\l  store ptr %123, ptr %.addr4.i, align 8\l  store ptr %124, ptr %.addr5.i, align 8\l  store ptr %125, ptr %.addr6.i, align 8\l  store ptr %126, ptr %.addr7.i, align 8\l  ret void\l}"];
}
