digraph "CFG for '_ZN9MathExtra5norm3EPd' function" {
	label="CFG for '_ZN9MathExtra5norm3EPd' function";

	Node0x556ee252e560 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %v.addr = alloca ptr, align 8\l  %val = alloca double, align 8\l  %scale = alloca double, align 8\l  store ptr %v, ptr %v.addr, align 8\l  %0 = load ptr, ptr %v.addr, align 8\l  %arrayidx = getelementptr inbounds double, ptr %0, i64 0\l  %1 = load double, ptr %arrayidx, align 8\l  %2 = load ptr, ptr %v.addr, align 8\l  %arrayidx1 = getelementptr inbounds double, ptr %2, i64 0\l  %3 = load double, ptr %arrayidx1, align 8\l  %4 = load ptr, ptr %v.addr, align 8\l  %arrayidx2 = getelementptr inbounds double, ptr %4, i64 1\l  %5 = load double, ptr %arrayidx2, align 8\l  %6 = load ptr, ptr %v.addr, align 8\l  %arrayidx3 = getelementptr inbounds double, ptr %6, i64 1\l  %7 = load double, ptr %arrayidx3, align 8\l  %mul4 = fmul double %5, %7\l  %8 = call double @llvm.fmuladd.f64(double %1, double %3, double %mul4)\l  %9 = load ptr, ptr %v.addr, align 8\l  %arrayidx5 = getelementptr inbounds double, ptr %9, i64 2\l  %10 = load double, ptr %arrayidx5, align 8\l  %11 = load ptr, ptr %v.addr, align 8\l  %arrayidx6 = getelementptr inbounds double, ptr %11, i64 2\l  %12 = load double, ptr %arrayidx6, align 8\l  %13 = call double @llvm.fmuladd.f64(double %10, double %12, double %8)\l  store double %13, ptr %val, align 8\l  %14 = load double, ptr %val, align 8\l  %cmp = fcmp ogt double %14, 0.000000e+00\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x556ee252e560:s0 -> Node0x556ee252f860[tooltip="entry -> if.then\nProbability 50.00%" ];
	Node0x556ee252e560:s1 -> Node0x556ee252f8b0[tooltip="entry -> if.end\nProbability 50.00%" ];
	Node0x556ee252f860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then:\l|  %15 = load double, ptr %val, align 8\l  %call = call double @sqrt(double noundef %15) #11\l  %div = fdiv double 1.000000e+00, %call\l  store double %div, ptr %scale, align 8\l  %16 = load double, ptr %scale, align 8\l  %17 = load ptr, ptr %v.addr, align 8\l  %arrayidx7 = getelementptr inbounds double, ptr %17, i64 0\l  %18 = load double, ptr %arrayidx7, align 8\l  %mul = fmul double %18, %16\l  store double %mul, ptr %arrayidx7, align 8\l  %19 = load double, ptr %scale, align 8\l  %20 = load ptr, ptr %v.addr, align 8\l  %arrayidx8 = getelementptr inbounds double, ptr %20, i64 1\l  %21 = load double, ptr %arrayidx8, align 8\l  %mul9 = fmul double %21, %19\l  store double %mul9, ptr %arrayidx8, align 8\l  %22 = load double, ptr %scale, align 8\l  %23 = load ptr, ptr %v.addr, align 8\l  %arrayidx10 = getelementptr inbounds double, ptr %23, i64 2\l  %24 = load double, ptr %arrayidx10, align 8\l  %mul11 = fmul double %24, %22\l  store double %mul11, ptr %arrayidx10, align 8\l  br label %if.end\l}"];
	Node0x556ee252f860 -> Node0x556ee252f8b0[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x556ee252f8b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end:\l|  ret void\l}"];
}
