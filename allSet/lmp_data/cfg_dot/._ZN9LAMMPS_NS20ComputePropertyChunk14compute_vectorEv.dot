digraph "CFG for '_ZN9LAMMPS_NS20ComputePropertyChunk14compute_vectorEv' function" {
	label="CFG for '_ZN9LAMMPS_NS20ComputePropertyChunk14compute_vectorEv' function";

	Node0x55b16050d8d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  store ptr %this, ptr %this.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  call void @_ZN9LAMMPS_NS12ComputeChunk14compute_vectorEv(ptr noundef nonnull\l... align 8 dereferenceable(600) %this1)\l  %countflag = getelementptr inbounds\l... %\"class.LAMMPS_NS::ComputePropertyChunk\", ptr %this1, i32 0, i32 3\l  %0 = load i32, ptr %countflag, align 4\l  %tobool = icmp ne i32 %0, 0\l  br i1 %tobool, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x55b16050d8d0:s0 -> Node0x55b16050dd80[tooltip="entry -> if.then\nProbability 62.50%" ];
	Node0x55b16050d8d0:s1 -> Node0x55b16050ddf0[tooltip="entry -> if.end\nProbability 37.50%" ];
	Node0x55b16050dd80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.then:\l|  %cchunk = getelementptr inbounds %\"class.LAMMPS_NS::ComputeChunk\", ptr\l... %this1, i32 0, i32 6\l  %1 = load ptr, ptr %cchunk, align 8\l  %ichunk = getelementptr inbounds %\"class.LAMMPS_NS::ComputeChunkAtom\", ptr\l... %1, i32 0, i32 10\l  %2 = load ptr, ptr %ichunk, align 8\l  %ichunk2 = getelementptr inbounds %\"class.LAMMPS_NS::ComputePropertyChunk\",\l... ptr %this1, i32 0, i32 1\l  store ptr %2, ptr %ichunk2, align 8\l  br label %if.end\l}"];
	Node0x55b16050dd80 -> Node0x55b16050ddf0[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x55b16050ddf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end:\l|  %vector = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr %this1,\l... i32 0, i32 6\l  %3 = load ptr, ptr %vector, align 8\l  %buf = getelementptr inbounds %\"class.LAMMPS_NS::ComputePropertyChunk\", ptr\l... %this1, i32 0, i32 4\l  store ptr %3, ptr %buf, align 8\l  %pack_choice = getelementptr inbounds\l... %\"class.LAMMPS_NS::ComputePropertyChunk\", ptr %this1, i32 0, i32 7\l  %4 = load ptr, ptr %pack_choice, align 8\l  %arrayidx = getelementptr inbounds \{ i64, i64 \}, ptr %4, i64 0\l  %5 = load \{ i64, i64 \}, ptr %arrayidx, align 8\l  %memptr.adj = extractvalue \{ i64, i64 \} %5, 1\l  %6 = getelementptr inbounds i8, ptr %this1, i64 %memptr.adj\l  %memptr.ptr = extractvalue \{ i64, i64 \} %5, 0\l  %7 = and i64 %memptr.ptr, 1\l  %memptr.isvirtual = icmp ne i64 %7, 0\l  br i1 %memptr.isvirtual, label %memptr.virtual, label %memptr.nonvirtual\l|{<s0>T|<s1>F}}"];
	Node0x55b16050ddf0:s0 -> Node0x55b16050ee60[tooltip="if.end -> memptr.virtual\nProbability 50.00%" ];
	Node0x55b16050ddf0:s1 -> Node0x55b16050eeb0[tooltip="if.end -> memptr.nonvirtual\nProbability 50.00%" ];
	Node0x55b16050ee60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{memptr.virtual:\l|  %vtable = load ptr, ptr %6, align 8\l  %8 = sub i64 %memptr.ptr, 1\l  %9 = getelementptr i8, ptr %vtable, i64 %8, !nosanitize !6\l  %memptr.virtualfn = load ptr, ptr %9, align 8, !nosanitize !6\l  br label %memptr.end\l}"];
	Node0x55b16050ee60 -> Node0x55b16050f970[tooltip="memptr.virtual -> memptr.end\nProbability 100.00%" ];
	Node0x55b16050eeb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{memptr.nonvirtual:\l|  %memptr.nonvirtualfn = inttoptr i64 %memptr.ptr to ptr\l  br label %memptr.end\l}"];
	Node0x55b16050eeb0 -> Node0x55b16050f970[tooltip="memptr.nonvirtual -> memptr.end\nProbability 100.00%" ];
	Node0x55b16050f970 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{memptr.end:\l|  %10 = phi ptr [ %memptr.virtualfn, %memptr.virtual ], [\l... %memptr.nonvirtualfn, %memptr.nonvirtual ]\l  call void %10(ptr noundef nonnull align 8 dereferenceable(648) %6, i32\l... noundef 0)\l  ret void\l}"];
}
