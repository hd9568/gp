digraph "CFG for '_ZN9MathExtra12inertia_lineEdddPd' function" {
	label="CFG for '_ZN9MathExtra12inertia_lineEdddPd' function";

	Node0x558373636ba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %length.addr = alloca double, align 8\l  %theta.addr = alloca double, align 8\l  %mass.addr = alloca double, align 8\l  %inertia.addr = alloca ptr, align 8\l  %p = alloca [3 x [3 x double]], align 16\l  %ptrans = alloca [3 x [3 x double]], align 16\l  %itemp = alloca [3 x [3 x double]], align 16\l  %tensor = alloca [3 x [3 x double]], align 16\l  %q = alloca [4 x double], align 16\l  %idiag = alloca [3 x double], align 16\l  store double %length, ptr %length.addr, align 8\l  store double %theta, ptr %theta.addr, align 8\l  store double %mass, ptr %mass.addr, align 8\l  store ptr %inertia, ptr %inertia.addr, align 8\l  %0 = load double, ptr %theta.addr, align 8\l  %mul = fmul double 5.000000e-01, %0\l  %call = call double @cos(double noundef %mul) #6\l  %arrayidx = getelementptr inbounds [4 x double], ptr %q, i64 0, i64 0\l  store double %call, ptr %arrayidx, align 16\l  %arrayidx1 = getelementptr inbounds [4 x double], ptr %q, i64 0, i64 2\l  store double 0.000000e+00, ptr %arrayidx1, align 16\l  %arrayidx2 = getelementptr inbounds [4 x double], ptr %q, i64 0, i64 1\l  store double 0.000000e+00, ptr %arrayidx2, align 8\l  %1 = load double, ptr %theta.addr, align 8\l  %mul3 = fmul double 5.000000e-01, %1\l  %call4 = call double @sin(double noundef %mul3) #6\l  %arrayidx5 = getelementptr inbounds [4 x double], ptr %q, i64 0, i64 3\l  store double %call4, ptr %arrayidx5, align 8\l  %arraydecay = getelementptr inbounds [4 x double], ptr %q, i64 0, i64 0\l  %arraydecay6 = getelementptr inbounds [3 x [3 x double]], ptr %p, i64 0, i64\l... 0\l  call void @_ZN9MathExtra11quat_to_matEPKdPA3_d(ptr noundef %arraydecay, ptr\l... noundef %arraydecay6)\l  %arraydecay7 = getelementptr inbounds [4 x double], ptr %q, i64 0, i64 0\l  %arraydecay8 = getelementptr inbounds [3 x [3 x double]], ptr %ptrans, i64\l... 0, i64 0\l  call void @_ZN9MathExtra17quat_to_mat_transEPKdPA3_d(ptr noundef\l... %arraydecay7, ptr noundef %arraydecay8)\l  %arrayidx9 = getelementptr inbounds [3 x double], ptr %idiag, i64 0, i64 0\l  store double 0.000000e+00, ptr %arrayidx9, align 16\l  %2 = load double, ptr %mass.addr, align 8\l  %mul10 = fmul double 0x3FB5555555555555, %2\l  %3 = load double, ptr %length.addr, align 8\l  %mul11 = fmul double %mul10, %3\l  %4 = load double, ptr %length.addr, align 8\l  %mul12 = fmul double %mul11, %4\l  %arrayidx13 = getelementptr inbounds [3 x double], ptr %idiag, i64 0, i64 1\l  store double %mul12, ptr %arrayidx13, align 8\l  %5 = load double, ptr %mass.addr, align 8\l  %mul14 = fmul double 0x3FB5555555555555, %5\l  %6 = load double, ptr %length.addr, align 8\l  %mul15 = fmul double %mul14, %6\l  %7 = load double, ptr %length.addr, align 8\l  %mul16 = fmul double %mul15, %7\l  %arrayidx17 = getelementptr inbounds [3 x double], ptr %idiag, i64 0, i64 2\l  store double %mul16, ptr %arrayidx17, align 16\l  %arraydecay18 = getelementptr inbounds [3 x double], ptr %idiag, i64 0, i64 0\l  %arraydecay19 = getelementptr inbounds [3 x [3 x double]], ptr %ptrans, i64\l... 0, i64 0\l  %arraydecay20 = getelementptr inbounds [3 x [3 x double]], ptr %itemp, i64\l... 0, i64 0\l  call void @_ZN9MathExtra11diag_times3EPKdPA3_S0_PA3_d(ptr noundef\l... %arraydecay18, ptr noundef %arraydecay19, ptr noundef %arraydecay20)\l  %arraydecay21 = getelementptr inbounds [3 x [3 x double]], ptr %p, i64 0,\l... i64 0\l  %arraydecay22 = getelementptr inbounds [3 x [3 x double]], ptr %itemp, i64\l... 0, i64 0\l  %arraydecay23 = getelementptr inbounds [3 x [3 x double]], ptr %tensor, i64\l... 0, i64 0\l  call void @_ZN9MathExtra6times3EPA3_KdS2_PA3_d(ptr noundef %arraydecay21,\l... ptr noundef %arraydecay22, ptr noundef %arraydecay23)\l  %arrayidx24 = getelementptr inbounds [3 x [3 x double]], ptr %tensor, i64 0,\l... i64 0\l  %arrayidx25 = getelementptr inbounds [3 x double], ptr %arrayidx24, i64 0,\l... i64 0\l  %8 = load double, ptr %arrayidx25, align 16\l  %9 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx26 = getelementptr inbounds double, ptr %9, i64 0\l  store double %8, ptr %arrayidx26, align 8\l  %arrayidx27 = getelementptr inbounds [3 x [3 x double]], ptr %tensor, i64 0,\l... i64 1\l  %arrayidx28 = getelementptr inbounds [3 x double], ptr %arrayidx27, i64 0,\l... i64 1\l  %10 = load double, ptr %arrayidx28, align 8\l  %11 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx29 = getelementptr inbounds double, ptr %11, i64 1\l  store double %10, ptr %arrayidx29, align 8\l  %arrayidx30 = getelementptr inbounds [3 x [3 x double]], ptr %tensor, i64 0,\l... i64 2\l  %arrayidx31 = getelementptr inbounds [3 x double], ptr %arrayidx30, i64 0,\l... i64 2\l  %12 = load double, ptr %arrayidx31, align 16\l  %13 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx32 = getelementptr inbounds double, ptr %13, i64 2\l  store double %12, ptr %arrayidx32, align 8\l  %arrayidx33 = getelementptr inbounds [3 x [3 x double]], ptr %tensor, i64 0,\l... i64 1\l  %arrayidx34 = getelementptr inbounds [3 x double], ptr %arrayidx33, i64 0,\l... i64 2\l  %14 = load double, ptr %arrayidx34, align 8\l  %15 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx35 = getelementptr inbounds double, ptr %15, i64 3\l  store double %14, ptr %arrayidx35, align 8\l  %arrayidx36 = getelementptr inbounds [3 x [3 x double]], ptr %tensor, i64 0,\l... i64 0\l  %arrayidx37 = getelementptr inbounds [3 x double], ptr %arrayidx36, i64 0,\l... i64 2\l  %16 = load double, ptr %arrayidx37, align 16\l  %17 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx38 = getelementptr inbounds double, ptr %17, i64 4\l  store double %16, ptr %arrayidx38, align 8\l  %arrayidx39 = getelementptr inbounds [3 x [3 x double]], ptr %tensor, i64 0,\l... i64 0\l  %arrayidx40 = getelementptr inbounds [3 x double], ptr %arrayidx39, i64 0,\l... i64 1\l  %18 = load double, ptr %arrayidx40, align 8\l  %19 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx41 = getelementptr inbounds double, ptr %19, i64 5\l  store double %18, ptr %arrayidx41, align 8\l  ret void\l}"];
}
