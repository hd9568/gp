digraph "CFG for '_ZN9LAMMPS_NS3Min12total_torqueEv' function" {
	label="CFG for '_ZN9LAMMPS_NS3Min12total_torqueEv' function";

	Node0x55814ac982b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %ftotsqone = alloca double, align 8\l  %ftotsqall = alloca double, align 8\l  %nlocal = alloca i32, align 4\l  %hbar = alloca double, align 8\l  %tx = alloca double, align 8\l  %ty = alloca double, align 8\l  %tz = alloca double, align 8\l  %sp = alloca ptr, align 8\l  %fm = alloca ptr, align 8\l  %i = alloca i32, align 4\l  store ptr %this, ptr %this.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %atom = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1, i32\l... 0, i32 6\l  %0 = load ptr, ptr %atom, align 8\l  %1 = load ptr, ptr %0, align 8\l  %nlocal2 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %1, i32 0,\l... i32 4\l  %2 = load i32, ptr %nlocal2, align 8\l  store i32 %2, ptr %nlocal, align 4\l  %force = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 11\l  %3 = load ptr, ptr %force, align 8\l  %4 = load ptr, ptr %3, align 8\l  %hplanck = getelementptr inbounds %\"class.LAMMPS_NS::Force\", ptr %4, i32 0,\l... i32 2\l  %5 = load double, ptr %hplanck, align 8\l  %div = fdiv double %5, 0x401921FB54442D18\l  store double %div, ptr %hbar, align 8\l  %atom3 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %6 = load ptr, ptr %atom3, align 8\l  %7 = load ptr, ptr %6, align 8\l  %sp4 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %7, i32 0, i32 83\l  %8 = load ptr, ptr %sp4, align 8\l  store ptr %8, ptr %sp, align 8\l  %atom5 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %9 = load ptr, ptr %atom5, align 8\l  %10 = load ptr, ptr %9, align 8\l  %fm6 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %10, i32 0, i32\l... 84\l  %11 = load ptr, ptr %fm6, align 8\l  store ptr %11, ptr %fm, align 8\l  store double 0.000000e+00, ptr %ftotsqall, align 8\l  store double 0.000000e+00, ptr %ftotsqone, align 8\l  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x55814ac982b0 -> Node0x55814ac98740[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x55814ac98740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %12 = load i32, ptr %i, align 4\l  %13 = load i32, ptr %nlocal, align 4\l  %cmp = icmp slt i32 %12, %13\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x55814ac98740:s0 -> Node0x55814ac9d1c0[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x55814ac98740:s1 -> Node0x55814ac9d240[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x55814ac9d1c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %14 = load ptr, ptr %fm, align 8\l  %15 = load i32, ptr %i, align 4\l  %idxprom = sext i32 %15 to i64\l  %arrayidx = getelementptr inbounds ptr, ptr %14, i64 %idxprom\l  %16 = load ptr, ptr %arrayidx, align 8\l  %arrayidx7 = getelementptr inbounds double, ptr %16, i64 1\l  %17 = load double, ptr %arrayidx7, align 8\l  %18 = load ptr, ptr %sp, align 8\l  %19 = load i32, ptr %i, align 4\l  %idxprom8 = sext i32 %19 to i64\l  %arrayidx9 = getelementptr inbounds ptr, ptr %18, i64 %idxprom8\l  %20 = load ptr, ptr %arrayidx9, align 8\l  %arrayidx10 = getelementptr inbounds double, ptr %20, i64 2\l  %21 = load double, ptr %arrayidx10, align 8\l  %22 = load ptr, ptr %fm, align 8\l  %23 = load i32, ptr %i, align 4\l  %idxprom11 = sext i32 %23 to i64\l  %arrayidx12 = getelementptr inbounds ptr, ptr %22, i64 %idxprom11\l  %24 = load ptr, ptr %arrayidx12, align 8\l  %arrayidx13 = getelementptr inbounds double, ptr %24, i64 2\l  %25 = load double, ptr %arrayidx13, align 8\l  %26 = load ptr, ptr %sp, align 8\l  %27 = load i32, ptr %i, align 4\l  %idxprom14 = sext i32 %27 to i64\l  %arrayidx15 = getelementptr inbounds ptr, ptr %26, i64 %idxprom14\l  %28 = load ptr, ptr %arrayidx15, align 8\l  %arrayidx16 = getelementptr inbounds double, ptr %28, i64 1\l  %29 = load double, ptr %arrayidx16, align 8\l  %mul17 = fmul double %25, %29\l  %neg = fneg double %mul17\l  %30 = call double @llvm.fmuladd.f64(double %17, double %21, double %neg)\l  store double %30, ptr %tx, align 8\l  %31 = load ptr, ptr %fm, align 8\l  %32 = load i32, ptr %i, align 4\l  %idxprom18 = sext i32 %32 to i64\l  %arrayidx19 = getelementptr inbounds ptr, ptr %31, i64 %idxprom18\l  %33 = load ptr, ptr %arrayidx19, align 8\l  %arrayidx20 = getelementptr inbounds double, ptr %33, i64 2\l  %34 = load double, ptr %arrayidx20, align 8\l  %35 = load ptr, ptr %sp, align 8\l  %36 = load i32, ptr %i, align 4\l  %idxprom21 = sext i32 %36 to i64\l  %arrayidx22 = getelementptr inbounds ptr, ptr %35, i64 %idxprom21\l  %37 = load ptr, ptr %arrayidx22, align 8\l  %arrayidx23 = getelementptr inbounds double, ptr %37, i64 0\l  %38 = load double, ptr %arrayidx23, align 8\l  %39 = load ptr, ptr %fm, align 8\l  %40 = load i32, ptr %i, align 4\l  %idxprom24 = sext i32 %40 to i64\l  %arrayidx25 = getelementptr inbounds ptr, ptr %39, i64 %idxprom24\l  %41 = load ptr, ptr %arrayidx25, align 8\l  %arrayidx26 = getelementptr inbounds double, ptr %41, i64 0\l  %42 = load double, ptr %arrayidx26, align 8\l  %43 = load ptr, ptr %sp, align 8\l  %44 = load i32, ptr %i, align 4\l  %idxprom27 = sext i32 %44 to i64\l  %arrayidx28 = getelementptr inbounds ptr, ptr %43, i64 %idxprom27\l  %45 = load ptr, ptr %arrayidx28, align 8\l  %arrayidx29 = getelementptr inbounds double, ptr %45, i64 2\l  %46 = load double, ptr %arrayidx29, align 8\l  %mul30 = fmul double %42, %46\l  %neg31 = fneg double %mul30\l  %47 = call double @llvm.fmuladd.f64(double %34, double %38, double %neg31)\l  store double %47, ptr %ty, align 8\l  %48 = load ptr, ptr %fm, align 8\l  %49 = load i32, ptr %i, align 4\l  %idxprom32 = sext i32 %49 to i64\l  %arrayidx33 = getelementptr inbounds ptr, ptr %48, i64 %idxprom32\l  %50 = load ptr, ptr %arrayidx33, align 8\l  %arrayidx34 = getelementptr inbounds double, ptr %50, i64 0\l  %51 = load double, ptr %arrayidx34, align 8\l  %52 = load ptr, ptr %sp, align 8\l  %53 = load i32, ptr %i, align 4\l  %idxprom35 = sext i32 %53 to i64\l  %arrayidx36 = getelementptr inbounds ptr, ptr %52, i64 %idxprom35\l  %54 = load ptr, ptr %arrayidx36, align 8\l  %arrayidx37 = getelementptr inbounds double, ptr %54, i64 1\l  %55 = load double, ptr %arrayidx37, align 8\l  %56 = load ptr, ptr %fm, align 8\l  %57 = load i32, ptr %i, align 4\l  %idxprom38 = sext i32 %57 to i64\l  %arrayidx39 = getelementptr inbounds ptr, ptr %56, i64 %idxprom38\l  %58 = load ptr, ptr %arrayidx39, align 8\l  %arrayidx40 = getelementptr inbounds double, ptr %58, i64 1\l  %59 = load double, ptr %arrayidx40, align 8\l  %60 = load ptr, ptr %sp, align 8\l  %61 = load i32, ptr %i, align 4\l  %idxprom41 = sext i32 %61 to i64\l  %arrayidx42 = getelementptr inbounds ptr, ptr %60, i64 %idxprom41\l  %62 = load ptr, ptr %arrayidx42, align 8\l  %arrayidx43 = getelementptr inbounds double, ptr %62, i64 0\l  %63 = load double, ptr %arrayidx43, align 8\l  %mul44 = fmul double %59, %63\l  %neg45 = fneg double %mul44\l  %64 = call double @llvm.fmuladd.f64(double %51, double %55, double %neg45)\l  store double %64, ptr %tz, align 8\l  %65 = load double, ptr %tx, align 8\l  %66 = load double, ptr %tx, align 8\l  %67 = load double, ptr %ty, align 8\l  %68 = load double, ptr %ty, align 8\l  %mul46 = fmul double %67, %68\l  %69 = call double @llvm.fmuladd.f64(double %65, double %66, double %mul46)\l  %70 = load double, ptr %tz, align 8\l  %71 = load double, ptr %tz, align 8\l  %72 = call double @llvm.fmuladd.f64(double %70, double %71, double %69)\l  %73 = load double, ptr %ftotsqone, align 8\l  %add = fadd double %73, %72\l  store double %add, ptr %ftotsqone, align 8\l  br label %for.inc\l}"];
	Node0x55814ac9d1c0 -> Node0x55814ad33a60[tooltip="for.body -> for.inc\nProbability 100.00%" ];
	Node0x55814ad33a60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %74 = load i32, ptr %i, align 4\l  %inc = add nsw i32 %74, 1\l  store i32 %inc, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x55814ad33a60 -> Node0x55814ac98740[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x55814ac9d240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  %world = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 16\l  %75 = load ptr, ptr %world, align 8\l  %76 = load ptr, ptr %75, align 8\l  %call = call i32 @MPI_Allreduce(ptr noundef %ftotsqone, ptr noundef\l... %ftotsqall, i32 noundef 1, ptr noundef @ompi_mpi_double, ptr noundef\l... @ompi_mpi_op_sum, ptr noundef %76)\l  %77 = load double, ptr %ftotsqall, align 8\l  %call47 = call double @sqrt(double noundef %77) #14\l  %78 = load double, ptr %hbar, align 8\l  %mul = fmul double %call47, %78\l  ret double %mul\l}"];
}
