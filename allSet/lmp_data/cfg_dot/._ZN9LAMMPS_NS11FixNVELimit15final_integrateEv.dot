digraph "CFG for '_ZN9LAMMPS_NS11FixNVELimit15final_integrateEv' function" {
	label="CFG for '_ZN9LAMMPS_NS11FixNVELimit15final_integrateEv' function";

	Node0x55d56b684ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %dtfm = alloca double, align 8\l  %vsq = alloca double, align 8\l  %scale = alloca double, align 8\l  %v = alloca ptr, align 8\l  %f = alloca ptr, align 8\l  %mass = alloca ptr, align 8\l  %rmass = alloca ptr, align 8\l  %type = alloca ptr, align 8\l  %mask = alloca ptr, align 8\l  %nlocal = alloca i32, align 4\l  %i = alloca i32, align 4\l  %i78 = alloca i32, align 4\l  store ptr %this, ptr %this.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %atom = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1, i32\l... 0, i32 6\l  %0 = load ptr, ptr %atom, align 8\l  %1 = load ptr, ptr %0, align 8\l  %v2 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %1, i32 0, i32 38\l  %2 = load ptr, ptr %v2, align 8\l  store ptr %2, ptr %v, align 8\l  %atom3 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %3 = load ptr, ptr %atom3, align 8\l  %4 = load ptr, ptr %3, align 8\l  %f4 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %4, i32 0, i32 39\l  %5 = load ptr, ptr %f4, align 8\l  store ptr %5, ptr %f, align 8\l  %atom5 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %6 = load ptr, ptr %atom5, align 8\l  %7 = load ptr, ptr %6, align 8\l  %mass6 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %7, i32 0, i32\l... 205\l  %8 = load ptr, ptr %mass6, align 8\l  store ptr %8, ptr %mass, align 8\l  %atom7 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %9 = load ptr, ptr %atom7, align 8\l  %10 = load ptr, ptr %9, align 8\l  %rmass8 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %10, i32 0,\l... i32 40\l  %11 = load ptr, ptr %rmass8, align 8\l  store ptr %11, ptr %rmass, align 8\l  %atom9 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %12 = load ptr, ptr %atom9, align 8\l  %13 = load ptr, ptr %12, align 8\l  %type10 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %13, i32 0,\l... i32 34\l  %14 = load ptr, ptr %type10, align 8\l  store ptr %14, ptr %type, align 8\l  %atom11 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %15 = load ptr, ptr %atom11, align 8\l  %16 = load ptr, ptr %15, align 8\l  %mask12 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %16, i32 0,\l... i32 35\l  %17 = load ptr, ptr %mask12, align 8\l  store ptr %17, ptr %mask, align 8\l  %atom13 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %18 = load ptr, ptr %atom13, align 8\l  %19 = load ptr, ptr %18, align 8\l  %nlocal14 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %19, i32 0,\l... i32 4\l  %20 = load i32, ptr %nlocal14, align 8\l  store i32 %20, ptr %nlocal, align 4\l  %igroup = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32 0,\l... i32 3\l  %21 = load i32, ptr %igroup, align 8\l  %atom15 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %22 = load ptr, ptr %atom15, align 8\l  %23 = load ptr, ptr %22, align 8\l  %firstgroup = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %23, i32\l... 0, i32 30\l  %24 = load i32, ptr %firstgroup, align 4\l  %cmp = icmp eq i32 %21, %24\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x55d56b684ed0:s0 -> Node0x55d56b68db70[tooltip="entry -> if.then\nProbability 50.00%" ];
	Node0x55d56b684ed0:s1 -> Node0x55d56b68dbe0[tooltip="entry -> if.end\nProbability 50.00%" ];
	Node0x55d56b68db70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670" fontname="Courier",label="{if.then:\l|  %atom16 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %25 = load ptr, ptr %atom16, align 8\l  %26 = load ptr, ptr %25, align 8\l  %nfirst = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %26, i32 0,\l... i32 31\l  %27 = load i32, ptr %nfirst, align 8\l  store i32 %27, ptr %nlocal, align 4\l  br label %if.end\l}"];
	Node0x55d56b68db70 -> Node0x55d56b68dbe0[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x55d56b68dbe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{if.end:\l|  %28 = load ptr, ptr %rmass, align 8\l  %tobool = icmp ne ptr %28, null\l  br i1 %tobool, label %if.then17, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x55d56b68dbe0:s0 -> Node0x55d56b68e280[tooltip="if.end -> if.then17\nProbability 62.50%" ];
	Node0x55d56b68dbe0:s1 -> Node0x55d56b68e300[tooltip="if.end -> if.else\nProbability 37.50%" ];
	Node0x55d56b68e280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.then17:\l|  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x55d56b68e280 -> Node0x55d56b68e4c0[tooltip="if.then17 -> for.cond\nProbability 100.00%" ];
	Node0x55d56b68e4c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %29 = load i32, ptr %i, align 4\l  %30 = load i32, ptr %nlocal, align 4\l  %cmp18 = icmp slt i32 %29, %30\l  br i1 %cmp18, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x55d56b68e4c0:s0 -> Node0x55d56b68e760[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x55d56b68e4c0:s1 -> Node0x55d56b68e7e0[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x55d56b68e760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %31 = load ptr, ptr %mask, align 8\l  %32 = load i32, ptr %i, align 4\l  %idxprom = sext i32 %32 to i64\l  %arrayidx = getelementptr inbounds i32, ptr %31, i64 %idxprom\l  %33 = load i32, ptr %arrayidx, align 4\l  %groupbit = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32\l... 0, i32 4\l  %34 = load i32, ptr %groupbit, align 4\l  %and = and i32 %33, %34\l  %tobool19 = icmp ne i32 %and, 0\l  br i1 %tobool19, label %if.then20, label %if.end76\l|{<s0>T|<s1>F}}"];
	Node0x55d56b68e760:s0 -> Node0x55d56b68f4b0[tooltip="for.body -> if.then20\nProbability 62.50%" ];
	Node0x55d56b68e760:s1 -> Node0x55d56b68f500[tooltip="for.body -> if.end76\nProbability 37.50%" ];
	Node0x55d56b68f4b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.then20:\l|  %dtf = getelementptr inbounds %\"class.LAMMPS_NS::FixNVELimit\", ptr %this1,\l... i32 0, i32 2\l  %35 = load double, ptr %dtf, align 8\l  %36 = load ptr, ptr %rmass, align 8\l  %37 = load i32, ptr %i, align 4\l  %idxprom21 = sext i32 %37 to i64\l  %arrayidx22 = getelementptr inbounds double, ptr %36, i64 %idxprom21\l  %38 = load double, ptr %arrayidx22, align 8\l  %div = fdiv double %35, %38\l  store double %div, ptr %dtfm, align 8\l  %39 = load double, ptr %dtfm, align 8\l  %40 = load ptr, ptr %f, align 8\l  %41 = load i32, ptr %i, align 4\l  %idxprom23 = sext i32 %41 to i64\l  %arrayidx24 = getelementptr inbounds ptr, ptr %40, i64 %idxprom23\l  %42 = load ptr, ptr %arrayidx24, align 8\l  %arrayidx25 = getelementptr inbounds double, ptr %42, i64 0\l  %43 = load double, ptr %arrayidx25, align 8\l  %44 = load ptr, ptr %v, align 8\l  %45 = load i32, ptr %i, align 4\l  %idxprom26 = sext i32 %45 to i64\l  %arrayidx27 = getelementptr inbounds ptr, ptr %44, i64 %idxprom26\l  %46 = load ptr, ptr %arrayidx27, align 8\l  %arrayidx28 = getelementptr inbounds double, ptr %46, i64 0\l  %47 = load double, ptr %arrayidx28, align 8\l  %48 = call double @llvm.fmuladd.f64(double %39, double %43, double %47)\l  store double %48, ptr %arrayidx28, align 8\l  %49 = load double, ptr %dtfm, align 8\l  %50 = load ptr, ptr %f, align 8\l  %51 = load i32, ptr %i, align 4\l  %idxprom29 = sext i32 %51 to i64\l  %arrayidx30 = getelementptr inbounds ptr, ptr %50, i64 %idxprom29\l  %52 = load ptr, ptr %arrayidx30, align 8\l  %arrayidx31 = getelementptr inbounds double, ptr %52, i64 1\l  %53 = load double, ptr %arrayidx31, align 8\l  %54 = load ptr, ptr %v, align 8\l  %55 = load i32, ptr %i, align 4\l  %idxprom32 = sext i32 %55 to i64\l  %arrayidx33 = getelementptr inbounds ptr, ptr %54, i64 %idxprom32\l  %56 = load ptr, ptr %arrayidx33, align 8\l  %arrayidx34 = getelementptr inbounds double, ptr %56, i64 1\l  %57 = load double, ptr %arrayidx34, align 8\l  %58 = call double @llvm.fmuladd.f64(double %49, double %53, double %57)\l  store double %58, ptr %arrayidx34, align 8\l  %59 = load double, ptr %dtfm, align 8\l  %60 = load ptr, ptr %f, align 8\l  %61 = load i32, ptr %i, align 4\l  %idxprom35 = sext i32 %61 to i64\l  %arrayidx36 = getelementptr inbounds ptr, ptr %60, i64 %idxprom35\l  %62 = load ptr, ptr %arrayidx36, align 8\l  %arrayidx37 = getelementptr inbounds double, ptr %62, i64 2\l  %63 = load double, ptr %arrayidx37, align 8\l  %64 = load ptr, ptr %v, align 8\l  %65 = load i32, ptr %i, align 4\l  %idxprom38 = sext i32 %65 to i64\l  %arrayidx39 = getelementptr inbounds ptr, ptr %64, i64 %idxprom38\l  %66 = load ptr, ptr %arrayidx39, align 8\l  %arrayidx40 = getelementptr inbounds double, ptr %66, i64 2\l  %67 = load double, ptr %arrayidx40, align 8\l  %68 = call double @llvm.fmuladd.f64(double %59, double %63, double %67)\l  store double %68, ptr %arrayidx40, align 8\l  %69 = load ptr, ptr %v, align 8\l  %70 = load i32, ptr %i, align 4\l  %idxprom41 = sext i32 %70 to i64\l  %arrayidx42 = getelementptr inbounds ptr, ptr %69, i64 %idxprom41\l  %71 = load ptr, ptr %arrayidx42, align 8\l  %arrayidx43 = getelementptr inbounds double, ptr %71, i64 0\l  %72 = load double, ptr %arrayidx43, align 8\l  %73 = load ptr, ptr %v, align 8\l  %74 = load i32, ptr %i, align 4\l  %idxprom44 = sext i32 %74 to i64\l  %arrayidx45 = getelementptr inbounds ptr, ptr %73, i64 %idxprom44\l  %75 = load ptr, ptr %arrayidx45, align 8\l  %arrayidx46 = getelementptr inbounds double, ptr %75, i64 0\l  %76 = load double, ptr %arrayidx46, align 8\l  %77 = load ptr, ptr %v, align 8\l  %78 = load i32, ptr %i, align 4\l  %idxprom47 = sext i32 %78 to i64\l  %arrayidx48 = getelementptr inbounds ptr, ptr %77, i64 %idxprom47\l  %79 = load ptr, ptr %arrayidx48, align 8\l  %arrayidx49 = getelementptr inbounds double, ptr %79, i64 1\l  %80 = load double, ptr %arrayidx49, align 8\l  %81 = load ptr, ptr %v, align 8\l  %82 = load i32, ptr %i, align 4\l  %idxprom50 = sext i32 %82 to i64\l  %arrayidx51 = getelementptr inbounds ptr, ptr %81, i64 %idxprom50\l  %83 = load ptr, ptr %arrayidx51, align 8\l  %arrayidx52 = getelementptr inbounds double, ptr %83, i64 1\l  %84 = load double, ptr %arrayidx52, align 8\l  %mul53 = fmul double %80, %84\l  %85 = call double @llvm.fmuladd.f64(double %72, double %76, double %mul53)\l  %86 = load ptr, ptr %v, align 8\l  %87 = load i32, ptr %i, align 4\l  %idxprom54 = sext i32 %87 to i64\l  %arrayidx55 = getelementptr inbounds ptr, ptr %86, i64 %idxprom54\l  %88 = load ptr, ptr %arrayidx55, align 8\l  %arrayidx56 = getelementptr inbounds double, ptr %88, i64 2\l  %89 = load double, ptr %arrayidx56, align 8\l  %90 = load ptr, ptr %v, align 8\l  %91 = load i32, ptr %i, align 4\l  %idxprom57 = sext i32 %91 to i64\l  %arrayidx58 = getelementptr inbounds ptr, ptr %90, i64 %idxprom57\l  %92 = load ptr, ptr %arrayidx58, align 8\l  %arrayidx59 = getelementptr inbounds double, ptr %92, i64 2\l  %93 = load double, ptr %arrayidx59, align 8\l  %94 = call double @llvm.fmuladd.f64(double %89, double %93, double %85)\l  store double %94, ptr %vsq, align 8\l  %95 = load double, ptr %vsq, align 8\l  %vlimitsq = getelementptr inbounds %\"class.LAMMPS_NS::FixNVELimit\", ptr\l... %this1, i32 0, i32 6\l  %96 = load double, ptr %vlimitsq, align 8\l  %cmp60 = fcmp ogt double %95, %96\l  br i1 %cmp60, label %if.then61, label %if.end75\l|{<s0>T|<s1>F}}"];
	Node0x55d56b68f4b0:s0 -> Node0x55d56b6906a0[tooltip="if.then20 -> if.then61\nProbability 50.00%" ];
	Node0x55d56b68f4b0:s1 -> Node0x55d56b6906f0[tooltip="if.then20 -> if.end75\nProbability 50.00%" ];
	Node0x55d56b6906a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.then61:\l|  %ncount = getelementptr inbounds %\"class.LAMMPS_NS::FixNVELimit\", ptr\l... %this1, i32 0, i32 4\l  %97 = load i32, ptr %ncount, align 8\l  %inc = add nsw i32 %97, 1\l  store i32 %inc, ptr %ncount, align 8\l  %vlimitsq62 = getelementptr inbounds %\"class.LAMMPS_NS::FixNVELimit\", ptr\l... %this1, i32 0, i32 6\l  %98 = load double, ptr %vlimitsq62, align 8\l  %99 = load double, ptr %vsq, align 8\l  %div63 = fdiv double %98, %99\l  %call = call double @sqrt(double noundef %div63) #9\l  store double %call, ptr %scale, align 8\l  %100 = load double, ptr %scale, align 8\l  %101 = load ptr, ptr %v, align 8\l  %102 = load i32, ptr %i, align 4\l  %idxprom64 = sext i32 %102 to i64\l  %arrayidx65 = getelementptr inbounds ptr, ptr %101, i64 %idxprom64\l  %103 = load ptr, ptr %arrayidx65, align 8\l  %arrayidx66 = getelementptr inbounds double, ptr %103, i64 0\l  %104 = load double, ptr %arrayidx66, align 8\l  %mul = fmul double %104, %100\l  store double %mul, ptr %arrayidx66, align 8\l  %105 = load double, ptr %scale, align 8\l  %106 = load ptr, ptr %v, align 8\l  %107 = load i32, ptr %i, align 4\l  %idxprom67 = sext i32 %107 to i64\l  %arrayidx68 = getelementptr inbounds ptr, ptr %106, i64 %idxprom67\l  %108 = load ptr, ptr %arrayidx68, align 8\l  %arrayidx69 = getelementptr inbounds double, ptr %108, i64 1\l  %109 = load double, ptr %arrayidx69, align 8\l  %mul70 = fmul double %109, %105\l  store double %mul70, ptr %arrayidx69, align 8\l  %110 = load double, ptr %scale, align 8\l  %111 = load ptr, ptr %v, align 8\l  %112 = load i32, ptr %i, align 4\l  %idxprom71 = sext i32 %112 to i64\l  %arrayidx72 = getelementptr inbounds ptr, ptr %111, i64 %idxprom71\l  %113 = load ptr, ptr %arrayidx72, align 8\l  %arrayidx73 = getelementptr inbounds double, ptr %113, i64 2\l  %114 = load double, ptr %arrayidx73, align 8\l  %mul74 = fmul double %114, %110\l  store double %mul74, ptr %arrayidx73, align 8\l  br label %if.end75\l}"];
	Node0x55d56b6906a0 -> Node0x55d56b6906f0[tooltip="if.then61 -> if.end75\nProbability 100.00%" ];
	Node0x55d56b6906f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.end75:\l|  br label %if.end76\l}"];
	Node0x55d56b6906f0 -> Node0x55d56b68f500[tooltip="if.end75 -> if.end76\nProbability 100.00%" ];
	Node0x55d56b68f500 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end76:\l|  br label %for.inc\l}"];
	Node0x55d56b68f500 -> Node0x55d56b696d20[tooltip="if.end76 -> for.inc\nProbability 100.00%" ];
	Node0x55d56b696d20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %115 = load i32, ptr %i, align 4\l  %inc77 = add nsw i32 %115, 1\l  store i32 %inc77, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x55d56b696d20 -> Node0x55d56b68e4c0[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x55d56b68e7e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  br label %if.end161\l}"];
	Node0x55d56b68e7e0 -> Node0x55d56b697110[tooltip="for.end -> if.end161\nProbability 100.00%" ];
	Node0x55d56b68e300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{if.else:\l|  store i32 0, ptr %i78, align 4\l  br label %for.cond79\l}"];
	Node0x55d56b68e300 -> Node0x55d56b6972a0[tooltip="if.else -> for.cond79\nProbability 100.00%" ];
	Node0x55d56b6972a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{for.cond79:\l|  %116 = load i32, ptr %i78, align 4\l  %117 = load i32, ptr %nlocal, align 4\l  %cmp80 = icmp slt i32 %116, %117\l  br i1 %cmp80, label %for.body81, label %for.end160\l|{<s0>T|<s1>F}}"];
	Node0x55d56b6972a0:s0 -> Node0x55d56b697540[tooltip="for.cond79 -> for.body81\nProbability 96.88%" ];
	Node0x55d56b6972a0:s1 -> Node0x55d56b6975c0[tooltip="for.cond79 -> for.end160\nProbability 3.12%" ];
	Node0x55d56b697540 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{for.body81:\l|  %118 = load ptr, ptr %mask, align 8\l  %119 = load i32, ptr %i78, align 4\l  %idxprom82 = sext i32 %119 to i64\l  %arrayidx83 = getelementptr inbounds i32, ptr %118, i64 %idxprom82\l  %120 = load i32, ptr %arrayidx83, align 4\l  %groupbit84 = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1,\l... i32 0, i32 4\l  %121 = load i32, ptr %groupbit84, align 4\l  %and85 = and i32 %120, %121\l  %tobool86 = icmp ne i32 %and85, 0\l  br i1 %tobool86, label %if.then87, label %if.end157\l|{<s0>T|<s1>F}}"];
	Node0x55d56b697540:s0 -> Node0x55d56b697cc0[tooltip="for.body81 -> if.then87\nProbability 62.50%" ];
	Node0x55d56b697540:s1 -> Node0x55d56b697d40[tooltip="for.body81 -> if.end157\nProbability 37.50%" ];
	Node0x55d56b697cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.then87:\l|  %dtf88 = getelementptr inbounds %\"class.LAMMPS_NS::FixNVELimit\", ptr\l... %this1, i32 0, i32 2\l  %122 = load double, ptr %dtf88, align 8\l  %123 = load ptr, ptr %mass, align 8\l  %124 = load ptr, ptr %type, align 8\l  %125 = load i32, ptr %i78, align 4\l  %idxprom89 = sext i32 %125 to i64\l  %arrayidx90 = getelementptr inbounds i32, ptr %124, i64 %idxprom89\l  %126 = load i32, ptr %arrayidx90, align 4\l  %idxprom91 = sext i32 %126 to i64\l  %arrayidx92 = getelementptr inbounds double, ptr %123, i64 %idxprom91\l  %127 = load double, ptr %arrayidx92, align 8\l  %div93 = fdiv double %122, %127\l  store double %div93, ptr %dtfm, align 8\l  %128 = load double, ptr %dtfm, align 8\l  %129 = load ptr, ptr %f, align 8\l  %130 = load i32, ptr %i78, align 4\l  %idxprom94 = sext i32 %130 to i64\l  %arrayidx95 = getelementptr inbounds ptr, ptr %129, i64 %idxprom94\l  %131 = load ptr, ptr %arrayidx95, align 8\l  %arrayidx96 = getelementptr inbounds double, ptr %131, i64 0\l  %132 = load double, ptr %arrayidx96, align 8\l  %133 = load ptr, ptr %v, align 8\l  %134 = load i32, ptr %i78, align 4\l  %idxprom98 = sext i32 %134 to i64\l  %arrayidx99 = getelementptr inbounds ptr, ptr %133, i64 %idxprom98\l  %135 = load ptr, ptr %arrayidx99, align 8\l  %arrayidx100 = getelementptr inbounds double, ptr %135, i64 0\l  %136 = load double, ptr %arrayidx100, align 8\l  %137 = call double @llvm.fmuladd.f64(double %128, double %132, double %136)\l  store double %137, ptr %arrayidx100, align 8\l  %138 = load double, ptr %dtfm, align 8\l  %139 = load ptr, ptr %f, align 8\l  %140 = load i32, ptr %i78, align 4\l  %idxprom101 = sext i32 %140 to i64\l  %arrayidx102 = getelementptr inbounds ptr, ptr %139, i64 %idxprom101\l  %141 = load ptr, ptr %arrayidx102, align 8\l  %arrayidx103 = getelementptr inbounds double, ptr %141, i64 1\l  %142 = load double, ptr %arrayidx103, align 8\l  %143 = load ptr, ptr %v, align 8\l  %144 = load i32, ptr %i78, align 4\l  %idxprom105 = sext i32 %144 to i64\l  %arrayidx106 = getelementptr inbounds ptr, ptr %143, i64 %idxprom105\l  %145 = load ptr, ptr %arrayidx106, align 8\l  %arrayidx107 = getelementptr inbounds double, ptr %145, i64 1\l  %146 = load double, ptr %arrayidx107, align 8\l  %147 = call double @llvm.fmuladd.f64(double %138, double %142, double %146)\l  store double %147, ptr %arrayidx107, align 8\l  %148 = load double, ptr %dtfm, align 8\l  %149 = load ptr, ptr %f, align 8\l  %150 = load i32, ptr %i78, align 4\l  %idxprom108 = sext i32 %150 to i64\l  %arrayidx109 = getelementptr inbounds ptr, ptr %149, i64 %idxprom108\l  %151 = load ptr, ptr %arrayidx109, align 8\l  %arrayidx110 = getelementptr inbounds double, ptr %151, i64 2\l  %152 = load double, ptr %arrayidx110, align 8\l  %153 = load ptr, ptr %v, align 8\l  %154 = load i32, ptr %i78, align 4\l  %idxprom112 = sext i32 %154 to i64\l  %arrayidx113 = getelementptr inbounds ptr, ptr %153, i64 %idxprom112\l  %155 = load ptr, ptr %arrayidx113, align 8\l  %arrayidx114 = getelementptr inbounds double, ptr %155, i64 2\l  %156 = load double, ptr %arrayidx114, align 8\l  %157 = call double @llvm.fmuladd.f64(double %148, double %152, double %156)\l  store double %157, ptr %arrayidx114, align 8\l  %158 = load ptr, ptr %v, align 8\l  %159 = load i32, ptr %i78, align 4\l  %idxprom115 = sext i32 %159 to i64\l  %arrayidx116 = getelementptr inbounds ptr, ptr %158, i64 %idxprom115\l  %160 = load ptr, ptr %arrayidx116, align 8\l  %arrayidx117 = getelementptr inbounds double, ptr %160, i64 0\l  %161 = load double, ptr %arrayidx117, align 8\l  %162 = load ptr, ptr %v, align 8\l  %163 = load i32, ptr %i78, align 4\l  %idxprom118 = sext i32 %163 to i64\l  %arrayidx119 = getelementptr inbounds ptr, ptr %162, i64 %idxprom118\l  %164 = load ptr, ptr %arrayidx119, align 8\l  %arrayidx120 = getelementptr inbounds double, ptr %164, i64 0\l  %165 = load double, ptr %arrayidx120, align 8\l  %166 = load ptr, ptr %v, align 8\l  %167 = load i32, ptr %i78, align 4\l  %idxprom122 = sext i32 %167 to i64\l  %arrayidx123 = getelementptr inbounds ptr, ptr %166, i64 %idxprom122\l  %168 = load ptr, ptr %arrayidx123, align 8\l  %arrayidx124 = getelementptr inbounds double, ptr %168, i64 1\l  %169 = load double, ptr %arrayidx124, align 8\l  %170 = load ptr, ptr %v, align 8\l  %171 = load i32, ptr %i78, align 4\l  %idxprom125 = sext i32 %171 to i64\l  %arrayidx126 = getelementptr inbounds ptr, ptr %170, i64 %idxprom125\l  %172 = load ptr, ptr %arrayidx126, align 8\l  %arrayidx127 = getelementptr inbounds double, ptr %172, i64 1\l  %173 = load double, ptr %arrayidx127, align 8\l  %mul128 = fmul double %169, %173\l  %174 = call double @llvm.fmuladd.f64(double %161, double %165, double\l... %mul128)\l  %175 = load ptr, ptr %v, align 8\l  %176 = load i32, ptr %i78, align 4\l  %idxprom129 = sext i32 %176 to i64\l  %arrayidx130 = getelementptr inbounds ptr, ptr %175, i64 %idxprom129\l  %177 = load ptr, ptr %arrayidx130, align 8\l  %arrayidx131 = getelementptr inbounds double, ptr %177, i64 2\l  %178 = load double, ptr %arrayidx131, align 8\l  %179 = load ptr, ptr %v, align 8\l  %180 = load i32, ptr %i78, align 4\l  %idxprom132 = sext i32 %180 to i64\l  %arrayidx133 = getelementptr inbounds ptr, ptr %179, i64 %idxprom132\l  %181 = load ptr, ptr %arrayidx133, align 8\l  %arrayidx134 = getelementptr inbounds double, ptr %181, i64 2\l  %182 = load double, ptr %arrayidx134, align 8\l  %183 = call double @llvm.fmuladd.f64(double %178, double %182, double %174)\l  store double %183, ptr %vsq, align 8\l  %184 = load double, ptr %vsq, align 8\l  %vlimitsq136 = getelementptr inbounds %\"class.LAMMPS_NS::FixNVELimit\", ptr\l... %this1, i32 0, i32 6\l  %185 = load double, ptr %vlimitsq136, align 8\l  %cmp137 = fcmp ogt double %184, %185\l  br i1 %cmp137, label %if.then138, label %if.end156\l|{<s0>T|<s1>F}}"];
	Node0x55d56b697cc0:s0 -> Node0x55d56b69c710[tooltip="if.then87 -> if.then138\nProbability 50.00%" ];
	Node0x55d56b697cc0:s1 -> Node0x55d56b69c760[tooltip="if.then87 -> if.end156\nProbability 50.00%" ];
	Node0x55d56b69c710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{if.then138:\l|  %ncount139 = getelementptr inbounds %\"class.LAMMPS_NS::FixNVELimit\", ptr\l... %this1, i32 0, i32 4\l  %186 = load i32, ptr %ncount139, align 8\l  %inc140 = add nsw i32 %186, 1\l  store i32 %inc140, ptr %ncount139, align 8\l  %vlimitsq141 = getelementptr inbounds %\"class.LAMMPS_NS::FixNVELimit\", ptr\l... %this1, i32 0, i32 6\l  %187 = load double, ptr %vlimitsq141, align 8\l  %188 = load double, ptr %vsq, align 8\l  %div142 = fdiv double %187, %188\l  %call143 = call double @sqrt(double noundef %div142) #9\l  store double %call143, ptr %scale, align 8\l  %189 = load double, ptr %scale, align 8\l  %190 = load ptr, ptr %v, align 8\l  %191 = load i32, ptr %i78, align 4\l  %idxprom144 = sext i32 %191 to i64\l  %arrayidx145 = getelementptr inbounds ptr, ptr %190, i64 %idxprom144\l  %192 = load ptr, ptr %arrayidx145, align 8\l  %arrayidx146 = getelementptr inbounds double, ptr %192, i64 0\l  %193 = load double, ptr %arrayidx146, align 8\l  %mul147 = fmul double %193, %189\l  store double %mul147, ptr %arrayidx146, align 8\l  %194 = load double, ptr %scale, align 8\l  %195 = load ptr, ptr %v, align 8\l  %196 = load i32, ptr %i78, align 4\l  %idxprom148 = sext i32 %196 to i64\l  %arrayidx149 = getelementptr inbounds ptr, ptr %195, i64 %idxprom148\l  %197 = load ptr, ptr %arrayidx149, align 8\l  %arrayidx150 = getelementptr inbounds double, ptr %197, i64 1\l  %198 = load double, ptr %arrayidx150, align 8\l  %mul151 = fmul double %198, %194\l  store double %mul151, ptr %arrayidx150, align 8\l  %199 = load double, ptr %scale, align 8\l  %200 = load ptr, ptr %v, align 8\l  %201 = load i32, ptr %i78, align 4\l  %idxprom152 = sext i32 %201 to i64\l  %arrayidx153 = getelementptr inbounds ptr, ptr %200, i64 %idxprom152\l  %202 = load ptr, ptr %arrayidx153, align 8\l  %arrayidx154 = getelementptr inbounds double, ptr %202, i64 2\l  %203 = load double, ptr %arrayidx154, align 8\l  %mul155 = fmul double %203, %199\l  store double %mul155, ptr %arrayidx154, align 8\l  br label %if.end156\l}"];
	Node0x55d56b69c710 -> Node0x55d56b69c760[tooltip="if.then138 -> if.end156\nProbability 100.00%" ];
	Node0x55d56b69c760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.end156:\l|  br label %if.end157\l}"];
	Node0x55d56b69c760 -> Node0x55d56b697d40[tooltip="if.end156 -> if.end157\nProbability 100.00%" ];
	Node0x55d56b697d40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.end157:\l|  br label %for.inc158\l}"];
	Node0x55d56b697d40 -> Node0x55d56b69f2b0[tooltip="if.end157 -> for.inc158\nProbability 100.00%" ];
	Node0x55d56b69f2b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{for.inc158:\l|  %204 = load i32, ptr %i78, align 4\l  %inc159 = add nsw i32 %204, 1\l  store i32 %inc159, ptr %i78, align 4\l  br label %for.cond79, !llvm.loop !8\l}"];
	Node0x55d56b69f2b0 -> Node0x55d56b6972a0[tooltip="for.inc158 -> for.cond79\nProbability 100.00%" ];
	Node0x55d56b6975c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{for.end160:\l|  br label %if.end161\l}"];
	Node0x55d56b6975c0 -> Node0x55d56b697110[tooltip="for.end160 -> if.end161\nProbability 100.00%" ];
	Node0x55d56b697110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{if.end161:\l|  ret void\l}"];
}
