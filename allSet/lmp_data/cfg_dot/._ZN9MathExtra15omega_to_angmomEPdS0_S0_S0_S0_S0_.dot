digraph "CFG for '_ZN9MathExtra15omega_to_angmomEPdS0_S0_S0_S0_S0_' function" {
	label="CFG for '_ZN9MathExtra15omega_to_angmomEPdS0_S0_S0_S0_S0_' function";

	Node0x5583735fbd90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %w.addr = alloca ptr, align 8\l  %ex.addr = alloca ptr, align 8\l  %ey.addr = alloca ptr, align 8\l  %ez.addr = alloca ptr, align 8\l  %idiag.addr = alloca ptr, align 8\l  %m.addr = alloca ptr, align 8\l  %mbody = alloca [3 x double], align 16\l  store ptr %w, ptr %w.addr, align 8\l  store ptr %ex, ptr %ex.addr, align 8\l  store ptr %ey, ptr %ey.addr, align 8\l  store ptr %ez, ptr %ez.addr, align 8\l  store ptr %idiag, ptr %idiag.addr, align 8\l  store ptr %m, ptr %m.addr, align 8\l  %0 = load ptr, ptr %w.addr, align 8\l  %arrayidx = getelementptr inbounds double, ptr %0, i64 0\l  %1 = load double, ptr %arrayidx, align 8\l  %2 = load ptr, ptr %ex.addr, align 8\l  %arrayidx1 = getelementptr inbounds double, ptr %2, i64 0\l  %3 = load double, ptr %arrayidx1, align 8\l  %4 = load ptr, ptr %w.addr, align 8\l  %arrayidx2 = getelementptr inbounds double, ptr %4, i64 1\l  %5 = load double, ptr %arrayidx2, align 8\l  %6 = load ptr, ptr %ex.addr, align 8\l  %arrayidx3 = getelementptr inbounds double, ptr %6, i64 1\l  %7 = load double, ptr %arrayidx3, align 8\l  %mul4 = fmul double %5, %7\l  %8 = call double @llvm.fmuladd.f64(double %1, double %3, double %mul4)\l  %9 = load ptr, ptr %w.addr, align 8\l  %arrayidx5 = getelementptr inbounds double, ptr %9, i64 2\l  %10 = load double, ptr %arrayidx5, align 8\l  %11 = load ptr, ptr %ex.addr, align 8\l  %arrayidx6 = getelementptr inbounds double, ptr %11, i64 2\l  %12 = load double, ptr %arrayidx6, align 8\l  %13 = call double @llvm.fmuladd.f64(double %10, double %12, double %8)\l  %14 = load ptr, ptr %idiag.addr, align 8\l  %arrayidx7 = getelementptr inbounds double, ptr %14, i64 0\l  %15 = load double, ptr %arrayidx7, align 8\l  %mul = fmul double %13, %15\l  %arrayidx8 = getelementptr inbounds [3 x double], ptr %mbody, i64 0, i64 0\l  store double %mul, ptr %arrayidx8, align 16\l  %16 = load ptr, ptr %w.addr, align 8\l  %arrayidx9 = getelementptr inbounds double, ptr %16, i64 0\l  %17 = load double, ptr %arrayidx9, align 8\l  %18 = load ptr, ptr %ey.addr, align 8\l  %arrayidx10 = getelementptr inbounds double, ptr %18, i64 0\l  %19 = load double, ptr %arrayidx10, align 8\l  %20 = load ptr, ptr %w.addr, align 8\l  %arrayidx12 = getelementptr inbounds double, ptr %20, i64 1\l  %21 = load double, ptr %arrayidx12, align 8\l  %22 = load ptr, ptr %ey.addr, align 8\l  %arrayidx13 = getelementptr inbounds double, ptr %22, i64 1\l  %23 = load double, ptr %arrayidx13, align 8\l  %mul14 = fmul double %21, %23\l  %24 = call double @llvm.fmuladd.f64(double %17, double %19, double %mul14)\l  %25 = load ptr, ptr %w.addr, align 8\l  %arrayidx15 = getelementptr inbounds double, ptr %25, i64 2\l  %26 = load double, ptr %arrayidx15, align 8\l  %27 = load ptr, ptr %ey.addr, align 8\l  %arrayidx16 = getelementptr inbounds double, ptr %27, i64 2\l  %28 = load double, ptr %arrayidx16, align 8\l  %29 = call double @llvm.fmuladd.f64(double %26, double %28, double %24)\l  %30 = load ptr, ptr %idiag.addr, align 8\l  %arrayidx18 = getelementptr inbounds double, ptr %30, i64 1\l  %31 = load double, ptr %arrayidx18, align 8\l  %mul19 = fmul double %29, %31\l  %arrayidx20 = getelementptr inbounds [3 x double], ptr %mbody, i64 0, i64 1\l  store double %mul19, ptr %arrayidx20, align 8\l  %32 = load ptr, ptr %w.addr, align 8\l  %arrayidx21 = getelementptr inbounds double, ptr %32, i64 0\l  %33 = load double, ptr %arrayidx21, align 8\l  %34 = load ptr, ptr %ez.addr, align 8\l  %arrayidx22 = getelementptr inbounds double, ptr %34, i64 0\l  %35 = load double, ptr %arrayidx22, align 8\l  %36 = load ptr, ptr %w.addr, align 8\l  %arrayidx24 = getelementptr inbounds double, ptr %36, i64 1\l  %37 = load double, ptr %arrayidx24, align 8\l  %38 = load ptr, ptr %ez.addr, align 8\l  %arrayidx25 = getelementptr inbounds double, ptr %38, i64 1\l  %39 = load double, ptr %arrayidx25, align 8\l  %mul26 = fmul double %37, %39\l  %40 = call double @llvm.fmuladd.f64(double %33, double %35, double %mul26)\l  %41 = load ptr, ptr %w.addr, align 8\l  %arrayidx27 = getelementptr inbounds double, ptr %41, i64 2\l  %42 = load double, ptr %arrayidx27, align 8\l  %43 = load ptr, ptr %ez.addr, align 8\l  %arrayidx28 = getelementptr inbounds double, ptr %43, i64 2\l  %44 = load double, ptr %arrayidx28, align 8\l  %45 = call double @llvm.fmuladd.f64(double %42, double %44, double %40)\l  %46 = load ptr, ptr %idiag.addr, align 8\l  %arrayidx30 = getelementptr inbounds double, ptr %46, i64 2\l  %47 = load double, ptr %arrayidx30, align 8\l  %mul31 = fmul double %45, %47\l  %arrayidx32 = getelementptr inbounds [3 x double], ptr %mbody, i64 0, i64 2\l  store double %mul31, ptr %arrayidx32, align 16\l  %arrayidx33 = getelementptr inbounds [3 x double], ptr %mbody, i64 0, i64 0\l  %48 = load double, ptr %arrayidx33, align 16\l  %49 = load ptr, ptr %ex.addr, align 8\l  %arrayidx34 = getelementptr inbounds double, ptr %49, i64 0\l  %50 = load double, ptr %arrayidx34, align 8\l  %arrayidx36 = getelementptr inbounds [3 x double], ptr %mbody, i64 0, i64 1\l  %51 = load double, ptr %arrayidx36, align 8\l  %52 = load ptr, ptr %ey.addr, align 8\l  %arrayidx37 = getelementptr inbounds double, ptr %52, i64 0\l  %53 = load double, ptr %arrayidx37, align 8\l  %mul38 = fmul double %51, %53\l  %54 = call double @llvm.fmuladd.f64(double %48, double %50, double %mul38)\l  %arrayidx39 = getelementptr inbounds [3 x double], ptr %mbody, i64 0, i64 2\l  %55 = load double, ptr %arrayidx39, align 16\l  %56 = load ptr, ptr %ez.addr, align 8\l  %arrayidx40 = getelementptr inbounds double, ptr %56, i64 0\l  %57 = load double, ptr %arrayidx40, align 8\l  %58 = call double @llvm.fmuladd.f64(double %55, double %57, double %54)\l  %59 = load ptr, ptr %m.addr, align 8\l  %arrayidx42 = getelementptr inbounds double, ptr %59, i64 0\l  store double %58, ptr %arrayidx42, align 8\l  %arrayidx43 = getelementptr inbounds [3 x double], ptr %mbody, i64 0, i64 0\l  %60 = load double, ptr %arrayidx43, align 16\l  %61 = load ptr, ptr %ex.addr, align 8\l  %arrayidx44 = getelementptr inbounds double, ptr %61, i64 1\l  %62 = load double, ptr %arrayidx44, align 8\l  %arrayidx46 = getelementptr inbounds [3 x double], ptr %mbody, i64 0, i64 1\l  %63 = load double, ptr %arrayidx46, align 8\l  %64 = load ptr, ptr %ey.addr, align 8\l  %arrayidx47 = getelementptr inbounds double, ptr %64, i64 1\l  %65 = load double, ptr %arrayidx47, align 8\l  %mul48 = fmul double %63, %65\l  %66 = call double @llvm.fmuladd.f64(double %60, double %62, double %mul48)\l  %arrayidx49 = getelementptr inbounds [3 x double], ptr %mbody, i64 0, i64 2\l  %67 = load double, ptr %arrayidx49, align 16\l  %68 = load ptr, ptr %ez.addr, align 8\l  %arrayidx50 = getelementptr inbounds double, ptr %68, i64 1\l  %69 = load double, ptr %arrayidx50, align 8\l  %70 = call double @llvm.fmuladd.f64(double %67, double %69, double %66)\l  %71 = load ptr, ptr %m.addr, align 8\l  %arrayidx52 = getelementptr inbounds double, ptr %71, i64 1\l  store double %70, ptr %arrayidx52, align 8\l  %arrayidx53 = getelementptr inbounds [3 x double], ptr %mbody, i64 0, i64 0\l  %72 = load double, ptr %arrayidx53, align 16\l  %73 = load ptr, ptr %ex.addr, align 8\l  %arrayidx54 = getelementptr inbounds double, ptr %73, i64 2\l  %74 = load double, ptr %arrayidx54, align 8\l  %arrayidx56 = getelementptr inbounds [3 x double], ptr %mbody, i64 0, i64 1\l  %75 = load double, ptr %arrayidx56, align 8\l  %76 = load ptr, ptr %ey.addr, align 8\l  %arrayidx57 = getelementptr inbounds double, ptr %76, i64 2\l  %77 = load double, ptr %arrayidx57, align 8\l  %mul58 = fmul double %75, %77\l  %78 = call double @llvm.fmuladd.f64(double %72, double %74, double %mul58)\l  %arrayidx59 = getelementptr inbounds [3 x double], ptr %mbody, i64 0, i64 2\l  %79 = load double, ptr %arrayidx59, align 16\l  %80 = load ptr, ptr %ez.addr, align 8\l  %arrayidx60 = getelementptr inbounds double, ptr %80, i64 2\l  %81 = load double, ptr %arrayidx60, align 8\l  %82 = call double @llvm.fmuladd.f64(double %79, double %81, double %78)\l  %83 = load ptr, ptr %m.addr, align 8\l  %arrayidx62 = getelementptr inbounds double, ptr %83, i64 2\l  store double %82, ptr %arrayidx62, align 8\l  ret void\l}"];
}
