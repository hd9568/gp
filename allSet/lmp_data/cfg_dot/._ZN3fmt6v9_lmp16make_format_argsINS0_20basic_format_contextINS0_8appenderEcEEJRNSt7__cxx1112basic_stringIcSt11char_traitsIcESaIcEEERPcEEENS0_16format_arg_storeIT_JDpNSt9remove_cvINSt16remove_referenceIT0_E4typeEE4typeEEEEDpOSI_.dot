digraph "CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERPcEEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSI_' function" {
	label="CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERPcEEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSI_' function";

	Node0x556bfed6c3d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %.addr.i = alloca ptr, align 8\l  %.addr1.i = alloca i32, align 4\l  %.addr2.i = alloca i32, align 4\l  %.addr3.i = alloca ptr, align 8\l  %.addr4.i = alloca ptr, align 8\l  %val.i.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i37.i = alloca ptr, align 8\l  %retval.i33.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i34.i = alloca ptr, align 8\l  %val.addr.i35.i = alloca ptr, align 8\l  %retval.i23.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i24.i = alloca ptr, align 8\l  %arg.i25.i = alloca ptr, align 8\l  %ref.tmp.i26.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %ref.tmp1.i27.i = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i28.i = alloca i8, align 1\l  %formattable_const.i29.i = alloca i8, align 1\l  %formattable_pointer.i30.i = alloca i8, align 1\l  %formattable.i31.i = alloca i8, align 1\l  %agg.tmp.i.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %retval.i21.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i22.i = alloca ptr, align 8\l  %this.addr.i18.i = alloca ptr, align 8\l  %val.addr.i19.i = alloca ptr, align 8\l  %this.addr.i15.i = alloca ptr, align 8\l  %val.addr.i16.i = alloca ptr, align 8\l  %retval.i12.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i13.i = alloca ptr, align 8\l  %arg.i.i = alloca ptr, align 8\l  %ref.tmp.i.i = alloca ptr, align 8\l  %ref.tmp1.i.i = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i.i = alloca i8, align 1\l  %formattable_const.i.i = alloca i8, align 1\l  %formattable_pointer.i.i = alloca i8, align 1\l  %formattable.i.i = alloca i8, align 1\l  %retval.i.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i.i = alloca ptr, align 8\l  %this.addr.i11.i = alloca ptr, align 8\l  %this.addr.i.i = alloca ptr, align 8\l  %init.addr.i.i = alloca ptr, align 8\l  %init.addr2.i.i = alloca ptr, align 8\l  %this.addr.i = alloca ptr, align 8\l  %args.addr.i = alloca ptr, align 8\l  %args.addr2.i = alloca ptr, align 8\l  %ref.tmp.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp5.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %args.addr = alloca ptr, align 8\l  %args.addr2 = alloca ptr, align 8\l  store ptr %args, ptr %args.addr, align 8\l  store ptr %args1, ptr %args.addr2, align 8\l  %0 = load ptr, ptr %args.addr, align 8\l  %1 = load ptr, ptr %args.addr2, align 8\l  store ptr %agg.result, ptr %this.addr.i, align 8\l  store ptr %0, ptr %args.addr.i, align 8\l  store ptr %1, ptr %args.addr2.i, align 8\l  %this3.i = load ptr, ptr %this.addr.i, align 8\l  %2 = load ptr, ptr %args.addr.i, align 8\l  store ptr %2, ptr %val.addr.i22.i, align 8\l  %3 = load ptr, ptr %val.addr.i22.i, align 8\l  store ptr %3, ptr %val.addr.i24.i, align 8\l  %4 = load ptr, ptr %val.addr.i24.i, align 8\l  store ptr %ref.tmp1.i27.i, ptr %this.addr.i34.i, align 8\l  store ptr %4, ptr %val.addr.i35.i, align 8\l  %this1.i36.i = load ptr, ptr %this.addr.i34.i, align 8\l  %5 = load ptr, ptr %val.addr.i35.i, align 8\l  %call.i.i = call \{ ptr, i64 \}\l... @_ZN3fmt6v9_lmp6detail14to_string_viewIcSt11char_traitsIcESaIcEEENS0_17basic_s\l...tring_viewIT_EERKNSt7__cxx1112basic_stringIS7_T0_T1_EE(ptr noundef nonnull\l... align 8 dereferenceable(32) %5)\l  %6 = extractvalue \{ ptr, i64 \} %call.i.i, 0\l  store ptr %6, ptr %retval.i33.i, align 8\l  %7 = getelementptr inbounds \{ ptr, i64 \}, ptr %retval.i33.i, i32 0, i32 1\l  %8 = extractvalue \{ ptr, i64 \} %call.i.i, 1\l  store i64 %8, ptr %7, align 8\l  %9 = load \{ ptr, i64 \}, ptr %retval.i33.i, align 8\l  %10 = extractvalue \{ ptr, i64 \} %9, 0\l  store ptr %10, ptr %ref.tmp.i26.i, align 8\l  %11 = getelementptr inbounds \{ ptr, i64 \}, ptr %ref.tmp.i26.i, i32 0, i32 1\l  %12 = extractvalue \{ ptr, i64 \} %9, 1\l  store i64 %12, ptr %11, align 8\l  store ptr %ref.tmp.i26.i, ptr %arg.i25.i, align 8\l  store i8 1, ptr %formattable_char.i28.i, align 1\l  store i8 1, ptr %formattable_const.i29.i, align 1\l  store i8 1, ptr %formattable_pointer.i30.i, align 1\l  store i8 1, ptr %formattable.i31.i, align 1\l  %13 = load ptr, ptr %arg.i25.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp.i.i, ptr align 8 %13,\l... i64 16, i1 false)\l  %14 = load ptr, ptr %agg.tmp.i.i, align 8\l  %15 = getelementptr inbounds \{ ptr, i64 \}, ptr %agg.tmp.i.i, i32 0, i32 1\l  %16 = load i64, ptr %15, align 8\l  store ptr %14, ptr %val.i.i, align 8\l  %17 = getelementptr inbounds \{ ptr, i64 \}, ptr %val.i.i, i32 0, i32 1\l  store i64 %16, ptr %17, align 8\l  store ptr %retval.i23.i, ptr %this.addr.i37.i, align 8\l  %this1.i38.i = load ptr, ptr %this.addr.i37.i, align 8\l  %call.i39.i = call noundef ptr\l... @_ZNK3fmt6v9_lmp17basic_string_viewIcE4dataEv(ptr noundef nonnull align 8\l... dereferenceable(16) %val.i.i) #3\l  store ptr %call.i39.i, ptr %this1.i38.i, align 16\l  %call2.i.i = call noundef i64\l... @_ZNK3fmt6v9_lmp17basic_string_viewIcE4sizeEv(ptr noundef nonnull align 8\l... dereferenceable(16) %val.i.i) #3\l  %size.i.i = getelementptr inbounds\l... %\"struct.fmt::v9_lmp::detail::string_value\", ptr %this1.i38.i, i32 0, i32 1\l  store i64 %call2.i.i, ptr %size.i.i, align 8\l  %18 = load \{ i64, i64 \}, ptr %retval.i23.i, align 16\l  %19 = extractvalue \{ i64, i64 \} %18, 0\l  store i64 %19, ptr %retval.i21.i, align 16\l  %20 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i21.i, i32 0, i32 1\l  %21 = extractvalue \{ i64, i64 \} %18, 1\l  store i64 %21, ptr %20, align 8\l  %22 = load \{ i64, i64 \}, ptr %retval.i21.i, align 16\l  %23 = extractvalue \{ i64, i64 \} %22, 0\l  store i64 %23, ptr %ref.tmp.i, align 16\l  %24 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp.i, i32 0, i32 1\l  %25 = extractvalue \{ i64, i64 \} %22, 1\l  store i64 %25, ptr %24, align 8\l  %26 = load ptr, ptr %args.addr2.i, align 8\l  store ptr %26, ptr %val.addr.i.i, align 8\l  %27 = load ptr, ptr %val.addr.i.i, align 8\l  store ptr %27, ptr %val.addr.i13.i, align 8\l  %28 = load ptr, ptr %val.addr.i13.i, align 8\l  %29 = load ptr, ptr %28, align 8\l  store ptr %ref.tmp1.i.i, ptr %this.addr.i15.i, align 8\l  store ptr %29, ptr %val.addr.i16.i, align 8\l  %this1.i17.i = load ptr, ptr %this.addr.i15.i, align 8\l  %30 = load ptr, ptr %val.addr.i16.i, align 8\l  store ptr %30, ptr %ref.tmp.i.i, align 8\l  store ptr %ref.tmp.i.i, ptr %arg.i.i, align 8\l  store i8 1, ptr %formattable_char.i.i, align 1\l  store i8 1, ptr %formattable_const.i.i, align 1\l  store i8 1, ptr %formattable_pointer.i.i, align 1\l  store i8 1, ptr %formattable.i.i, align 1\l  %31 = load ptr, ptr %arg.i.i, align 8\l  %32 = load ptr, ptr %31, align 8\l  store ptr %retval.i12.i, ptr %this.addr.i18.i, align 8\l  store ptr %32, ptr %val.addr.i19.i, align 8\l  %this1.i20.i = load ptr, ptr %this.addr.i18.i, align 8\l  %33 = load ptr, ptr %val.addr.i19.i, align 8\l  store ptr %33, ptr %this1.i20.i, align 16\l  %34 = load \{ i64, i64 \}, ptr %retval.i12.i, align 16\l  %35 = extractvalue \{ i64, i64 \} %34, 0\l  store i64 %35, ptr %retval.i.i, align 16\l  %36 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i.i, i32 0, i32 1\l  %37 = extractvalue \{ i64, i64 \} %34, 1\l  store i64 %37, ptr %36, align 8\l  %38 = load \{ i64, i64 \}, ptr %retval.i.i, align 16\l  %39 = extractvalue \{ i64, i64 \} %38, 0\l  store i64 %39, ptr %ref.tmp5.i, align 16\l  %40 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp5.i, i32 0, i32 1\l  %41 = extractvalue \{ i64, i64 \} %38, 1\l  store i64 %41, ptr %40, align 8\l  store ptr %this3.i, ptr %this.addr.i.i, align 8\l  store ptr %ref.tmp.i, ptr %init.addr.i.i, align 8\l  store ptr %ref.tmp5.i, ptr %init.addr2.i.i, align 8\l  %this3.i.i = load ptr, ptr %this.addr.i.i, align 8\l  %42 = load ptr, ptr %init.addr.i.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %this3.i.i, ptr align 16 %42,\l... i64 16, i1 false)\l  %arrayinit.element.i.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %this3.i.i, i64 1\l  %43 = load ptr, ptr %init.addr2.i.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element.i.i, ptr\l... align 16 %43, i64 16, i1 false)\l  store ptr %this3.i, ptr %this.addr.i11.i, align 8\l  %this1.i.i = load ptr, ptr %this.addr.i11.i, align 8\l  %44 = load ptr, ptr %args.addr.i, align 8\l  %45 = load ptr, ptr %args.addr2.i, align 8\l  store ptr null, ptr %.addr.i, align 8\l  store i32 0, ptr %.addr1.i, align 4\l  store i32 0, ptr %.addr2.i, align 4\l  store ptr %44, ptr %.addr3.i, align 8\l  store ptr %45, ptr %.addr4.i, align 8\l  ret void\l}"];
}
