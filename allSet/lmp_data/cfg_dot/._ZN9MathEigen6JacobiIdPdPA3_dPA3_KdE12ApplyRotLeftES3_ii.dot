digraph "CFG for '_ZN9MathEigen6JacobiIdPdPA3_dPA3_KdE12ApplyRotLeftES3_ii' function" {
	label="CFG for '_ZN9MathEigen6JacobiIdPdPA3_dPA3_KdE12ApplyRotLeftES3_ii' function";

	Node0x56009249d030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %E.addr = alloca ptr, align 8\l  %i.addr = alloca i32, align 4\l  %j.addr = alloca i32, align 4\l  %v = alloca i32, align 4\l  %Eiv = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store ptr %E, ptr %E.addr, align 8\l  store i32 %i, ptr %i.addr, align 4\l  store i32 %j, ptr %j.addr, align 4\l  %this1 = load ptr, ptr %this.addr, align 8\l  store i32 0, ptr %v, align 4\l  br label %for.cond\l}"];
	Node0x56009249d030 -> Node0x56009249d080[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x56009249d080 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %0 = load i32, ptr %v, align 4\l  %n = getelementptr inbounds %\"class.MathEigen::Jacobi\", ptr %this1, i32 0,\l... i32 0\l  %1 = load i32, ptr %n, align 8\l  %cmp = icmp slt i32 %0, %1\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x56009249d080:s0 -> Node0x56009249dfa0[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x56009249d080:s1 -> Node0x56009249e020[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x56009249dfa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %2 = load ptr, ptr %E.addr, align 8\l  %3 = load i32, ptr %i.addr, align 4\l  %idxprom = sext i32 %3 to i64\l  %arrayidx = getelementptr inbounds [3 x double], ptr %2, i64 %idxprom\l  %4 = load i32, ptr %v, align 4\l  %idxprom2 = sext i32 %4 to i64\l  %arrayidx3 = getelementptr inbounds [3 x double], ptr %arrayidx, i64 0, i64\l... %idxprom2\l  %5 = load double, ptr %arrayidx3, align 8\l  store double %5, ptr %Eiv, align 8\l  %c = getelementptr inbounds %\"class.MathEigen::Jacobi\", ptr %this1, i32 0,\l... i32 3\l  %6 = load double, ptr %c, align 8\l  %7 = load ptr, ptr %E.addr, align 8\l  %8 = load i32, ptr %i.addr, align 4\l  %idxprom4 = sext i32 %8 to i64\l  %arrayidx5 = getelementptr inbounds [3 x double], ptr %7, i64 %idxprom4\l  %9 = load i32, ptr %v, align 4\l  %idxprom6 = sext i32 %9 to i64\l  %arrayidx7 = getelementptr inbounds [3 x double], ptr %arrayidx5, i64 0, i64\l... %idxprom6\l  %10 = load double, ptr %arrayidx7, align 8\l  %s = getelementptr inbounds %\"class.MathEigen::Jacobi\", ptr %this1, i32 0,\l... i32 4\l  %11 = load double, ptr %s, align 8\l  %12 = load ptr, ptr %E.addr, align 8\l  %13 = load i32, ptr %j.addr, align 4\l  %idxprom8 = sext i32 %13 to i64\l  %arrayidx9 = getelementptr inbounds [3 x double], ptr %12, i64 %idxprom8\l  %14 = load i32, ptr %v, align 4\l  %idxprom10 = sext i32 %14 to i64\l  %arrayidx11 = getelementptr inbounds [3 x double], ptr %arrayidx9, i64 0,\l... i64 %idxprom10\l  %15 = load double, ptr %arrayidx11, align 8\l  %mul12 = fmul double %11, %15\l  %neg = fneg double %mul12\l  %16 = call double @llvm.fmuladd.f64(double %6, double %10, double %neg)\l  %17 = load ptr, ptr %E.addr, align 8\l  %18 = load i32, ptr %i.addr, align 4\l  %idxprom13 = sext i32 %18 to i64\l  %arrayidx14 = getelementptr inbounds [3 x double], ptr %17, i64 %idxprom13\l  %19 = load i32, ptr %v, align 4\l  %idxprom15 = sext i32 %19 to i64\l  %arrayidx16 = getelementptr inbounds [3 x double], ptr %arrayidx14, i64 0,\l... i64 %idxprom15\l  store double %16, ptr %arrayidx16, align 8\l  %s17 = getelementptr inbounds %\"class.MathEigen::Jacobi\", ptr %this1, i32 0,\l... i32 4\l  %20 = load double, ptr %s17, align 8\l  %21 = load double, ptr %Eiv, align 8\l  %c18 = getelementptr inbounds %\"class.MathEigen::Jacobi\", ptr %this1, i32 0,\l... i32 3\l  %22 = load double, ptr %c18, align 8\l  %23 = load ptr, ptr %E.addr, align 8\l  %24 = load i32, ptr %j.addr, align 4\l  %idxprom19 = sext i32 %24 to i64\l  %arrayidx20 = getelementptr inbounds [3 x double], ptr %23, i64 %idxprom19\l  %25 = load i32, ptr %v, align 4\l  %idxprom21 = sext i32 %25 to i64\l  %arrayidx22 = getelementptr inbounds [3 x double], ptr %arrayidx20, i64 0,\l... i64 %idxprom21\l  %26 = load double, ptr %arrayidx22, align 8\l  %mul23 = fmul double %22, %26\l  %27 = call double @llvm.fmuladd.f64(double %20, double %21, double %mul23)\l  %28 = load ptr, ptr %E.addr, align 8\l  %29 = load i32, ptr %j.addr, align 4\l  %idxprom24 = sext i32 %29 to i64\l  %arrayidx25 = getelementptr inbounds [3 x double], ptr %28, i64 %idxprom24\l  %30 = load i32, ptr %v, align 4\l  %idxprom26 = sext i32 %30 to i64\l  %arrayidx27 = getelementptr inbounds [3 x double], ptr %arrayidx25, i64 0,\l... i64 %idxprom26\l  store double %27, ptr %arrayidx27, align 8\l  br label %for.inc\l}"];
	Node0x56009249dfa0 -> Node0x5600924a5fe0[tooltip="for.body -> for.inc\nProbability 100.00%" ];
	Node0x5600924a5fe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %31 = load i32, ptr %v, align 4\l  %inc = add nsw i32 %31, 1\l  store i32 %inc, ptr %v, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x5600924a5fe0 -> Node0x56009249d080[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x56009249e020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  ret void\l}"];
}
