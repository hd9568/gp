digraph "CFG for '_ZN9MathExtra20multiply_shape_shapeEPKdS1_Pd' function" {
	label="CFG for '_ZN9MathExtra20multiply_shape_shapeEPKdS1_Pd' function";

	Node0x55d749d18840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %one.addr = alloca ptr, align 8\l  %two.addr = alloca ptr, align 8\l  %ans.addr = alloca ptr, align 8\l  store ptr %one, ptr %one.addr, align 8\l  store ptr %two, ptr %two.addr, align 8\l  store ptr %ans, ptr %ans.addr, align 8\l  %0 = load ptr, ptr %one.addr, align 8\l  %arrayidx = getelementptr inbounds double, ptr %0, i64 0\l  %1 = load double, ptr %arrayidx, align 8\l  %2 = load ptr, ptr %two.addr, align 8\l  %arrayidx1 = getelementptr inbounds double, ptr %2, i64 0\l  %3 = load double, ptr %arrayidx1, align 8\l  %mul = fmul double %1, %3\l  %4 = load ptr, ptr %ans.addr, align 8\l  %arrayidx2 = getelementptr inbounds double, ptr %4, i64 0\l  store double %mul, ptr %arrayidx2, align 8\l  %5 = load ptr, ptr %one.addr, align 8\l  %arrayidx3 = getelementptr inbounds double, ptr %5, i64 1\l  %6 = load double, ptr %arrayidx3, align 8\l  %7 = load ptr, ptr %two.addr, align 8\l  %arrayidx4 = getelementptr inbounds double, ptr %7, i64 1\l  %8 = load double, ptr %arrayidx4, align 8\l  %mul5 = fmul double %6, %8\l  %9 = load ptr, ptr %ans.addr, align 8\l  %arrayidx6 = getelementptr inbounds double, ptr %9, i64 1\l  store double %mul5, ptr %arrayidx6, align 8\l  %10 = load ptr, ptr %one.addr, align 8\l  %arrayidx7 = getelementptr inbounds double, ptr %10, i64 2\l  %11 = load double, ptr %arrayidx7, align 8\l  %12 = load ptr, ptr %two.addr, align 8\l  %arrayidx8 = getelementptr inbounds double, ptr %12, i64 2\l  %13 = load double, ptr %arrayidx8, align 8\l  %mul9 = fmul double %11, %13\l  %14 = load ptr, ptr %ans.addr, align 8\l  %arrayidx10 = getelementptr inbounds double, ptr %14, i64 2\l  store double %mul9, ptr %arrayidx10, align 8\l  %15 = load ptr, ptr %one.addr, align 8\l  %arrayidx11 = getelementptr inbounds double, ptr %15, i64 1\l  %16 = load double, ptr %arrayidx11, align 8\l  %17 = load ptr, ptr %two.addr, align 8\l  %arrayidx12 = getelementptr inbounds double, ptr %17, i64 3\l  %18 = load double, ptr %arrayidx12, align 8\l  %19 = load ptr, ptr %one.addr, align 8\l  %arrayidx14 = getelementptr inbounds double, ptr %19, i64 3\l  %20 = load double, ptr %arrayidx14, align 8\l  %21 = load ptr, ptr %two.addr, align 8\l  %arrayidx15 = getelementptr inbounds double, ptr %21, i64 2\l  %22 = load double, ptr %arrayidx15, align 8\l  %mul16 = fmul double %20, %22\l  %23 = call double @llvm.fmuladd.f64(double %16, double %18, double %mul16)\l  %24 = load ptr, ptr %ans.addr, align 8\l  %arrayidx17 = getelementptr inbounds double, ptr %24, i64 3\l  store double %23, ptr %arrayidx17, align 8\l  %25 = load ptr, ptr %one.addr, align 8\l  %arrayidx18 = getelementptr inbounds double, ptr %25, i64 0\l  %26 = load double, ptr %arrayidx18, align 8\l  %27 = load ptr, ptr %two.addr, align 8\l  %arrayidx19 = getelementptr inbounds double, ptr %27, i64 4\l  %28 = load double, ptr %arrayidx19, align 8\l  %29 = load ptr, ptr %one.addr, align 8\l  %arrayidx21 = getelementptr inbounds double, ptr %29, i64 5\l  %30 = load double, ptr %arrayidx21, align 8\l  %31 = load ptr, ptr %two.addr, align 8\l  %arrayidx22 = getelementptr inbounds double, ptr %31, i64 3\l  %32 = load double, ptr %arrayidx22, align 8\l  %mul23 = fmul double %30, %32\l  %33 = call double @llvm.fmuladd.f64(double %26, double %28, double %mul23)\l  %34 = load ptr, ptr %one.addr, align 8\l  %arrayidx24 = getelementptr inbounds double, ptr %34, i64 4\l  %35 = load double, ptr %arrayidx24, align 8\l  %36 = load ptr, ptr %two.addr, align 8\l  %arrayidx25 = getelementptr inbounds double, ptr %36, i64 2\l  %37 = load double, ptr %arrayidx25, align 8\l  %38 = call double @llvm.fmuladd.f64(double %35, double %37, double %33)\l  %39 = load ptr, ptr %ans.addr, align 8\l  %arrayidx27 = getelementptr inbounds double, ptr %39, i64 4\l  store double %38, ptr %arrayidx27, align 8\l  %40 = load ptr, ptr %one.addr, align 8\l  %arrayidx28 = getelementptr inbounds double, ptr %40, i64 0\l  %41 = load double, ptr %arrayidx28, align 8\l  %42 = load ptr, ptr %two.addr, align 8\l  %arrayidx29 = getelementptr inbounds double, ptr %42, i64 5\l  %43 = load double, ptr %arrayidx29, align 8\l  %44 = load ptr, ptr %one.addr, align 8\l  %arrayidx31 = getelementptr inbounds double, ptr %44, i64 5\l  %45 = load double, ptr %arrayidx31, align 8\l  %46 = load ptr, ptr %two.addr, align 8\l  %arrayidx32 = getelementptr inbounds double, ptr %46, i64 1\l  %47 = load double, ptr %arrayidx32, align 8\l  %mul33 = fmul double %45, %47\l  %48 = call double @llvm.fmuladd.f64(double %41, double %43, double %mul33)\l  %49 = load ptr, ptr %ans.addr, align 8\l  %arrayidx34 = getelementptr inbounds double, ptr %49, i64 5\l  store double %48, ptr %arrayidx34, align 8\l  ret void\l}"];
}
