digraph "CFG for '_ZN9LAMMPS_NS17ComputeTempSphere14compute_vectorEv' function" {
	label="CFG for '_ZN9LAMMPS_NS17ComputeTempSphere14compute_vectorEv' function";

	Node0x55f2e4040130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %v = alloca ptr, align 8\l  %omega = alloca ptr, align 8\l  %rmass = alloca ptr, align 8\l  %radius = alloca ptr, align 8\l  %mask = alloca ptr, align 8\l  %nlocal = alloca i32, align 4\l  %massone = alloca double, align 8\l  %inertiaone = alloca double, align 8\l  %t = alloca [6 x double], align 16\l  %__range1 = alloca ptr, align 8\l  %__begin1 = alloca ptr, align 8\l  %__end1 = alloca ptr, align 8\l  %ti = alloca ptr, align 8\l  %i = alloca i32, align 4\l  %i152 = alloca i32, align 4\l  %i238 = alloca i32, align 4\l  store ptr %this, ptr %this.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %update = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 7\l  %0 = load ptr, ptr %update, align 8\l  %1 = load ptr, ptr %0, align 8\l  %ntimestep = getelementptr inbounds %\"class.LAMMPS_NS::Update\", ptr %1, i32\l... 0, i32 4\l  %2 = load i64, ptr %ntimestep, align 8\l  %invoked_vector = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr\l... %this1, i32 0, i32 45\l  store i64 %2, ptr %invoked_vector, align 8\l  %tempbias = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr %this1,\l... i32 0, i32 36\l  %3 = load i32, ptr %tempbias, align 4\l  %tobool = icmp ne i32 %3, 0\l  br i1 %tobool, label %if.then, label %if.end10\l|{<s0>T|<s1>F}}"];
	Node0x55f2e4040130:s0 -> Node0x55f2e40407f0[tooltip="entry -> if.then\nProbability 62.50%" ];
	Node0x55f2e4040130:s1 -> Node0x55f2e4040860[tooltip="entry -> if.end10\nProbability 37.50%" ];
	Node0x55f2e40407f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670" fontname="Courier",label="{if.then:\l|  %tbias = getelementptr inbounds %\"class.LAMMPS_NS::ComputeTempSphere\", ptr\l... %this1, i32 0, i32 4\l  %4 = load ptr, ptr %tbias, align 8\l  %invoked_vector2 = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr\l... %4, i32 0, i32 45\l  %5 = load i64, ptr %invoked_vector2, align 8\l  %update3 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 7\l  %6 = load ptr, ptr %update3, align 8\l  %7 = load ptr, ptr %6, align 8\l  %ntimestep4 = getelementptr inbounds %\"class.LAMMPS_NS::Update\", ptr %7, i32\l... 0, i32 4\l  %8 = load i64, ptr %ntimestep4, align 8\l  %cmp = icmp ne i64 %5, %8\l  br i1 %cmp, label %if.then5, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x55f2e40407f0:s0 -> Node0x55f2e404f700[tooltip="if.then -> if.then5\nProbability 50.00%" ];
	Node0x55f2e40407f0:s1 -> Node0x55f2e404f780[tooltip="if.then -> if.end\nProbability 50.00%" ];
	Node0x55f2e404f700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70" fontname="Courier",label="{if.then5:\l|  %tbias6 = getelementptr inbounds %\"class.LAMMPS_NS::ComputeTempSphere\",\l... ptr %this1, i32 0, i32 4\l  %9 = load ptr, ptr %tbias6, align 8\l  %vtable = load ptr, ptr %9, align 8\l  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 7\l  %10 = load ptr, ptr %vfn, align 8\l  call void %10(ptr noundef nonnull align 8 dereferenceable(564) %9)\l  br label %if.end\l}"];
	Node0x55f2e404f700 -> Node0x55f2e404f780[tooltip="if.then5 -> if.end\nProbability 100.00%" ];
	Node0x55f2e404f780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670" fontname="Courier",label="{if.end:\l|  %tbias7 = getelementptr inbounds %\"class.LAMMPS_NS::ComputeTempSphere\",\l... ptr %this1, i32 0, i32 4\l  %11 = load ptr, ptr %tbias7, align 8\l  %vtable8 = load ptr, ptr %11, align 8\l  %vfn9 = getelementptr inbounds ptr, ptr %vtable8, i64 26\l  %12 = load ptr, ptr %vfn9, align 8\l  call void %12(ptr noundef nonnull align 8 dereferenceable(564) %11)\l  br label %if.end10\l}"];
	Node0x55f2e404f780 -> Node0x55f2e4040860[tooltip="if.end -> if.end10\nProbability 100.00%" ];
	Node0x55f2e4040860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.end10:\l|  %atom = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %13 = load ptr, ptr %atom, align 8\l  %14 = load ptr, ptr %13, align 8\l  %v11 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %14, i32 0, i32\l... 38\l  %15 = load ptr, ptr %v11, align 8\l  store ptr %15, ptr %v, align 8\l  %atom12 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %16 = load ptr, ptr %atom12, align 8\l  %17 = load ptr, ptr %16, align 8\l  %omega13 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %17, i32 0,\l... i32 44\l  %18 = load ptr, ptr %omega13, align 8\l  store ptr %18, ptr %omega, align 8\l  %atom14 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %19 = load ptr, ptr %atom14, align 8\l  %20 = load ptr, ptr %19, align 8\l  %rmass15 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %20, i32 0,\l... i32 40\l  %21 = load ptr, ptr %rmass15, align 8\l  store ptr %21, ptr %rmass, align 8\l  %atom16 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %22 = load ptr, ptr %atom16, align 8\l  %23 = load ptr, ptr %22, align 8\l  %radius17 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %23, i32 0,\l... i32 43\l  %24 = load ptr, ptr %radius17, align 8\l  store ptr %24, ptr %radius, align 8\l  %atom18 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %25 = load ptr, ptr %atom18, align 8\l  %26 = load ptr, ptr %25, align 8\l  %mask19 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %26, i32 0,\l... i32 35\l  %27 = load ptr, ptr %mask19, align 8\l  store ptr %27, ptr %mask, align 8\l  %atom20 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %28 = load ptr, ptr %atom20, align 8\l  %29 = load ptr, ptr %28, align 8\l  %nlocal21 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %29, i32 0,\l... i32 4\l  %30 = load i32, ptr %nlocal21, align 8\l  store i32 %30, ptr %nlocal, align 4\l  store ptr %t, ptr %__range1, align 8\l  %31 = load ptr, ptr %__range1, align 8\l  %arraydecay = getelementptr inbounds [6 x double], ptr %31, i64 0, i64 0\l  store ptr %arraydecay, ptr %__begin1, align 8\l  %32 = load ptr, ptr %__range1, align 8\l  %arraydecay22 = getelementptr inbounds [6 x double], ptr %32, i64 0, i64 0\l  %add.ptr = getelementptr inbounds double, ptr %arraydecay22, i64 6\l  store ptr %add.ptr, ptr %__end1, align 8\l  br label %for.cond\l}"];
	Node0x55f2e4040860 -> Node0x55f2e40521f0[tooltip="if.end10 -> for.cond\nProbability 100.00%" ];
	Node0x55f2e40521f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %33 = load ptr, ptr %__begin1, align 8\l  %34 = load ptr, ptr %__end1, align 8\l  %cmp23 = icmp ne ptr %33, %34\l  br i1 %cmp23, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x55f2e40521f0:s0 -> Node0x55f2e4052490[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x55f2e40521f0:s1 -> Node0x55f2e4052510[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x55f2e4052490 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %35 = load ptr, ptr %__begin1, align 8\l  store ptr %35, ptr %ti, align 8\l  %36 = load ptr, ptr %ti, align 8\l  store double 0.000000e+00, ptr %36, align 8\l  br label %for.inc\l}"];
	Node0x55f2e4052490 -> Node0x55f2e4052870[tooltip="for.body -> for.inc\nProbability 100.00%" ];
	Node0x55f2e4052870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %37 = load ptr, ptr %__begin1, align 8\l  %incdec.ptr = getelementptr inbounds double, ptr %37, i32 1\l  store ptr %incdec.ptr, ptr %__begin1, align 8\l  br label %for.cond\l}"];
	Node0x55f2e4052870 -> Node0x55f2e40521f0[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x55f2e4052510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  %mode = getelementptr inbounds %\"class.LAMMPS_NS::ComputeTempSphere\", ptr\l... %this1, i32 0, i32 1\l  %38 = load i32, ptr %mode, align 4\l  %cmp24 = icmp eq i32 %38, 1\l  br i1 %cmp24, label %if.then25, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x55f2e4052510:s0 -> Node0x55f2e4052dc0[tooltip="for.end -> if.then25\nProbability 50.00%" ];
	Node0x55f2e4052510:s1 -> Node0x55f2e4052e40[tooltip="for.end -> if.else\nProbability 50.00%" ];
	Node0x55f2e4052dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{if.then25:\l|  store i32 0, ptr %i, align 4\l  br label %for.cond26\l}"];
	Node0x55f2e4052dc0 -> Node0x55f2e4053000[tooltip="if.then25 -> for.cond26\nProbability 100.00%" ];
	Node0x55f2e4053000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{for.cond26:\l|  %39 = load i32, ptr %i, align 4\l  %40 = load i32, ptr %nlocal, align 4\l  %cmp27 = icmp slt i32 %39, %40\l  br i1 %cmp27, label %for.body28, label %for.end151\l|{<s0>T|<s1>F}}"];
	Node0x55f2e4053000:s0 -> Node0x55f2e40532a0[tooltip="for.cond26 -> for.body28\nProbability 96.88%" ];
	Node0x55f2e4053000:s1 -> Node0x55f2e4053320[tooltip="for.cond26 -> for.end151\nProbability 3.12%" ];
	Node0x55f2e40532a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{for.body28:\l|  %41 = load ptr, ptr %mask, align 8\l  %42 = load i32, ptr %i, align 4\l  %idxprom = sext i32 %42 to i64\l  %arrayidx = getelementptr inbounds i32, ptr %41, i64 %idxprom\l  %43 = load i32, ptr %arrayidx, align 4\l  %groupbit = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr %this1,\l... i32 0, i32 4\l  %44 = load i32, ptr %groupbit, align 4\l  %and = and i32 %43, %44\l  %tobool29 = icmp ne i32 %and, 0\l  br i1 %tobool29, label %if.then30, label %if.end149\l|{<s0>T|<s1>F}}"];
	Node0x55f2e40532a0:s0 -> Node0x55f2e4053a10[tooltip="for.body28 -> if.then30\nProbability 62.50%" ];
	Node0x55f2e40532a0:s1 -> Node0x55f2e4053a90[tooltip="for.body28 -> if.end149\nProbability 37.50%" ];
	Node0x55f2e4053a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.then30:\l|  %45 = load ptr, ptr %rmass, align 8\l  %46 = load i32, ptr %i, align 4\l  %idxprom31 = sext i32 %46 to i64\l  %arrayidx32 = getelementptr inbounds double, ptr %45, i64 %idxprom31\l  %47 = load double, ptr %arrayidx32, align 8\l  store double %47, ptr %massone, align 8\l  %48 = load double, ptr %massone, align 8\l  %49 = load ptr, ptr %v, align 8\l  %50 = load i32, ptr %i, align 4\l  %idxprom33 = sext i32 %50 to i64\l  %arrayidx34 = getelementptr inbounds ptr, ptr %49, i64 %idxprom33\l  %51 = load ptr, ptr %arrayidx34, align 8\l  %arrayidx35 = getelementptr inbounds double, ptr %51, i64 0\l  %52 = load double, ptr %arrayidx35, align 8\l  %mul = fmul double %48, %52\l  %53 = load ptr, ptr %v, align 8\l  %54 = load i32, ptr %i, align 4\l  %idxprom36 = sext i32 %54 to i64\l  %arrayidx37 = getelementptr inbounds ptr, ptr %53, i64 %idxprom36\l  %55 = load ptr, ptr %arrayidx37, align 8\l  %arrayidx38 = getelementptr inbounds double, ptr %55, i64 0\l  %56 = load double, ptr %arrayidx38, align 8\l  %arrayidx40 = getelementptr inbounds [6 x double], ptr %t, i64 0, i64 0\l  %57 = load double, ptr %arrayidx40, align 16\l  %58 = call double @llvm.fmuladd.f64(double %mul, double %56, double %57)\l  store double %58, ptr %arrayidx40, align 16\l  %59 = load double, ptr %massone, align 8\l  %60 = load ptr, ptr %v, align 8\l  %61 = load i32, ptr %i, align 4\l  %idxprom41 = sext i32 %61 to i64\l  %arrayidx42 = getelementptr inbounds ptr, ptr %60, i64 %idxprom41\l  %62 = load ptr, ptr %arrayidx42, align 8\l  %arrayidx43 = getelementptr inbounds double, ptr %62, i64 1\l  %63 = load double, ptr %arrayidx43, align 8\l  %mul44 = fmul double %59, %63\l  %64 = load ptr, ptr %v, align 8\l  %65 = load i32, ptr %i, align 4\l  %idxprom45 = sext i32 %65 to i64\l  %arrayidx46 = getelementptr inbounds ptr, ptr %64, i64 %idxprom45\l  %66 = load ptr, ptr %arrayidx46, align 8\l  %arrayidx47 = getelementptr inbounds double, ptr %66, i64 1\l  %67 = load double, ptr %arrayidx47, align 8\l  %arrayidx49 = getelementptr inbounds [6 x double], ptr %t, i64 0, i64 1\l  %68 = load double, ptr %arrayidx49, align 8\l  %69 = call double @llvm.fmuladd.f64(double %mul44, double %67, double %68)\l  store double %69, ptr %arrayidx49, align 8\l  %70 = load double, ptr %massone, align 8\l  %71 = load ptr, ptr %v, align 8\l  %72 = load i32, ptr %i, align 4\l  %idxprom50 = sext i32 %72 to i64\l  %arrayidx51 = getelementptr inbounds ptr, ptr %71, i64 %idxprom50\l  %73 = load ptr, ptr %arrayidx51, align 8\l  %arrayidx52 = getelementptr inbounds double, ptr %73, i64 2\l  %74 = load double, ptr %arrayidx52, align 8\l  %mul53 = fmul double %70, %74\l  %75 = load ptr, ptr %v, align 8\l  %76 = load i32, ptr %i, align 4\l  %idxprom54 = sext i32 %76 to i64\l  %arrayidx55 = getelementptr inbounds ptr, ptr %75, i64 %idxprom54\l  %77 = load ptr, ptr %arrayidx55, align 8\l  %arrayidx56 = getelementptr inbounds double, ptr %77, i64 2\l  %78 = load double, ptr %arrayidx56, align 8\l  %arrayidx58 = getelementptr inbounds [6 x double], ptr %t, i64 0, i64 2\l  %79 = load double, ptr %arrayidx58, align 16\l  %80 = call double @llvm.fmuladd.f64(double %mul53, double %78, double %79)\l  store double %80, ptr %arrayidx58, align 16\l  %81 = load double, ptr %massone, align 8\l  %82 = load ptr, ptr %v, align 8\l  %83 = load i32, ptr %i, align 4\l  %idxprom59 = sext i32 %83 to i64\l  %arrayidx60 = getelementptr inbounds ptr, ptr %82, i64 %idxprom59\l  %84 = load ptr, ptr %arrayidx60, align 8\l  %arrayidx61 = getelementptr inbounds double, ptr %84, i64 0\l  %85 = load double, ptr %arrayidx61, align 8\l  %mul62 = fmul double %81, %85\l  %86 = load ptr, ptr %v, align 8\l  %87 = load i32, ptr %i, align 4\l  %idxprom63 = sext i32 %87 to i64\l  %arrayidx64 = getelementptr inbounds ptr, ptr %86, i64 %idxprom63\l  %88 = load ptr, ptr %arrayidx64, align 8\l  %arrayidx65 = getelementptr inbounds double, ptr %88, i64 1\l  %89 = load double, ptr %arrayidx65, align 8\l  %arrayidx67 = getelementptr inbounds [6 x double], ptr %t, i64 0, i64 3\l  %90 = load double, ptr %arrayidx67, align 8\l  %91 = call double @llvm.fmuladd.f64(double %mul62, double %89, double %90)\l  store double %91, ptr %arrayidx67, align 8\l  %92 = load double, ptr %massone, align 8\l  %93 = load ptr, ptr %v, align 8\l  %94 = load i32, ptr %i, align 4\l  %idxprom68 = sext i32 %94 to i64\l  %arrayidx69 = getelementptr inbounds ptr, ptr %93, i64 %idxprom68\l  %95 = load ptr, ptr %arrayidx69, align 8\l  %arrayidx70 = getelementptr inbounds double, ptr %95, i64 0\l  %96 = load double, ptr %arrayidx70, align 8\l  %mul71 = fmul double %92, %96\l  %97 = load ptr, ptr %v, align 8\l  %98 = load i32, ptr %i, align 4\l  %idxprom72 = sext i32 %98 to i64\l  %arrayidx73 = getelementptr inbounds ptr, ptr %97, i64 %idxprom72\l  %99 = load ptr, ptr %arrayidx73, align 8\l  %arrayidx74 = getelementptr inbounds double, ptr %99, i64 2\l  %100 = load double, ptr %arrayidx74, align 8\l  %arrayidx76 = getelementptr inbounds [6 x double], ptr %t, i64 0, i64 4\l  %101 = load double, ptr %arrayidx76, align 16\l  %102 = call double @llvm.fmuladd.f64(double %mul71, double %100, double %101)\l  store double %102, ptr %arrayidx76, align 16\l  %103 = load double, ptr %massone, align 8\l  %104 = load ptr, ptr %v, align 8\l  %105 = load i32, ptr %i, align 4\l  %idxprom77 = sext i32 %105 to i64\l  %arrayidx78 = getelementptr inbounds ptr, ptr %104, i64 %idxprom77\l  %106 = load ptr, ptr %arrayidx78, align 8\l  %arrayidx79 = getelementptr inbounds double, ptr %106, i64 1\l  %107 = load double, ptr %arrayidx79, align 8\l  %mul80 = fmul double %103, %107\l  %108 = load ptr, ptr %v, align 8\l  %109 = load i32, ptr %i, align 4\l  %idxprom81 = sext i32 %109 to i64\l  %arrayidx82 = getelementptr inbounds ptr, ptr %108, i64 %idxprom81\l  %110 = load ptr, ptr %arrayidx82, align 8\l  %arrayidx83 = getelementptr inbounds double, ptr %110, i64 2\l  %111 = load double, ptr %arrayidx83, align 8\l  %arrayidx85 = getelementptr inbounds [6 x double], ptr %t, i64 0, i64 5\l  %112 = load double, ptr %arrayidx85, align 8\l  %113 = call double @llvm.fmuladd.f64(double %mul80, double %111, double %112)\l  store double %113, ptr %arrayidx85, align 8\l  %114 = load ptr, ptr %rmass, align 8\l  %115 = load i32, ptr %i, align 4\l  %idxprom86 = sext i32 %115 to i64\l  %arrayidx87 = getelementptr inbounds double, ptr %114, i64 %idxprom86\l  %116 = load double, ptr %arrayidx87, align 8\l  %mul88 = fmul double 4.000000e-01, %116\l  %117 = load ptr, ptr %radius, align 8\l  %118 = load i32, ptr %i, align 4\l  %idxprom89 = sext i32 %118 to i64\l  %arrayidx90 = getelementptr inbounds double, ptr %117, i64 %idxprom89\l  %119 = load double, ptr %arrayidx90, align 8\l  %mul91 = fmul double %mul88, %119\l  %120 = load ptr, ptr %radius, align 8\l  %121 = load i32, ptr %i, align 4\l  %idxprom92 = sext i32 %121 to i64\l  %arrayidx93 = getelementptr inbounds double, ptr %120, i64 %idxprom92\l  %122 = load double, ptr %arrayidx93, align 8\l  %mul94 = fmul double %mul91, %122\l  store double %mul94, ptr %inertiaone, align 8\l  %123 = load double, ptr %inertiaone, align 8\l  %124 = load ptr, ptr %omega, align 8\l  %125 = load i32, ptr %i, align 4\l  %idxprom95 = sext i32 %125 to i64\l  %arrayidx96 = getelementptr inbounds ptr, ptr %124, i64 %idxprom95\l  %126 = load ptr, ptr %arrayidx96, align 8\l  %arrayidx97 = getelementptr inbounds double, ptr %126, i64 0\l  %127 = load double, ptr %arrayidx97, align 8\l  %mul98 = fmul double %123, %127\l  %128 = load ptr, ptr %omega, align 8\l  %129 = load i32, ptr %i, align 4\l  %idxprom99 = sext i32 %129 to i64\l  %arrayidx100 = getelementptr inbounds ptr, ptr %128, i64 %idxprom99\l  %130 = load ptr, ptr %arrayidx100, align 8\l  %arrayidx101 = getelementptr inbounds double, ptr %130, i64 0\l  %131 = load double, ptr %arrayidx101, align 8\l  %arrayidx103 = getelementptr inbounds [6 x double], ptr %t, i64 0, i64 0\l  %132 = load double, ptr %arrayidx103, align 16\l  %133 = call double @llvm.fmuladd.f64(double %mul98, double %131, double %132)\l  store double %133, ptr %arrayidx103, align 16\l  %134 = load double, ptr %inertiaone, align 8\l  %135 = load ptr, ptr %omega, align 8\l  %136 = load i32, ptr %i, align 4\l  %idxprom104 = sext i32 %136 to i64\l  %arrayidx105 = getelementptr inbounds ptr, ptr %135, i64 %idxprom104\l  %137 = load ptr, ptr %arrayidx105, align 8\l  %arrayidx106 = getelementptr inbounds double, ptr %137, i64 1\l  %138 = load double, ptr %arrayidx106, align 8\l  %mul107 = fmul double %134, %138\l  %139 = load ptr, ptr %omega, align 8\l  %140 = load i32, ptr %i, align 4\l  %idxprom108 = sext i32 %140 to i64\l  %arrayidx109 = getelementptr inbounds ptr, ptr %139, i64 %idxprom108\l  %141 = load ptr, ptr %arrayidx109, align 8\l  %arrayidx110 = getelementptr inbounds double, ptr %141, i64 1\l  %142 = load double, ptr %arrayidx110, align 8\l  %arrayidx112 = getelementptr inbounds [6 x double], ptr %t, i64 0, i64 1\l  %143 = load double, ptr %arrayidx112, align 8\l  %144 = call double @llvm.fmuladd.f64(double %mul107, double %142, double\l... %143)\l  store double %144, ptr %arrayidx112, align 8\l  %145 = load double, ptr %inertiaone, align 8\l  %146 = load ptr, ptr %omega, align 8\l  %147 = load i32, ptr %i, align 4\l  %idxprom113 = sext i32 %147 to i64\l  %arrayidx114 = getelementptr inbounds ptr, ptr %146, i64 %idxprom113\l  %148 = load ptr, ptr %arrayidx114, align 8\l  %arrayidx115 = getelementptr inbounds double, ptr %148, i64 2\l  %149 = load double, ptr %arrayidx115, align 8\l  %mul116 = fmul double %145, %149\l  %150 = load ptr, ptr %omega, align 8\l  %151 = load i32, ptr %i, align 4\l  %idxprom117 = sext i32 %151 to i64\l  %arrayidx118 = getelementptr inbounds ptr, ptr %150, i64 %idxprom117\l  %152 = load ptr, ptr %arrayidx118, align 8\l  %arrayidx119 = getelementptr inbounds double, ptr %152, i64 2\l  %153 = load double, ptr %arrayidx119, align 8\l  %arrayidx121 = getelementptr inbounds [6 x double], ptr %t, i64 0, i64 2\l  %154 = load double, ptr %arrayidx121, align 16\l  %155 = call double @llvm.fmuladd.f64(double %mul116, double %153, double\l... %154)\l  store double %155, ptr %arrayidx121, align 16\l  %156 = load double, ptr %inertiaone, align 8\l  %157 = load ptr, ptr %omega, align 8\l  %158 = load i32, ptr %i, align 4\l  %idxprom122 = sext i32 %158 to i64\l  %arrayidx123 = getelementptr inbounds ptr, ptr %157, i64 %idxprom122\l  %159 = load ptr, ptr %arrayidx123, align 8\l  %arrayidx124 = getelementptr inbounds double, ptr %159, i64 0\l  %160 = load double, ptr %arrayidx124, align 8\l  %mul125 = fmul double %156, %160\l  %161 = load ptr, ptr %omega, align 8\l  %162 = load i32, ptr %i, align 4\l  %idxprom126 = sext i32 %162 to i64\l  %arrayidx127 = getelementptr inbounds ptr, ptr %161, i64 %idxprom126\l  %163 = load ptr, ptr %arrayidx127, align 8\l  %arrayidx128 = getelementptr inbounds double, ptr %163, i64 1\l  %164 = load double, ptr %arrayidx128, align 8\l  %arrayidx130 = getelementptr inbounds [6 x double], ptr %t, i64 0, i64 3\l  %165 = load double, ptr %arrayidx130, align 8\l  %166 = call double @llvm.fmuladd.f64(double %mul125, double %164, double\l... %165)\l  store double %166, ptr %arrayidx130, align 8\l  %167 = load double, ptr %inertiaone, align 8\l  %168 = load ptr, ptr %omega, align 8\l  %169 = load i32, ptr %i, align 4\l  %idxprom131 = sext i32 %169 to i64\l  %arrayidx132 = getelementptr inbounds ptr, ptr %168, i64 %idxprom131\l  %170 = load ptr, ptr %arrayidx132, align 8\l  %arrayidx133 = getelementptr inbounds double, ptr %170, i64 0\l  %171 = load double, ptr %arrayidx133, align 8\l  %mul134 = fmul double %167, %171\l  %172 = load ptr, ptr %omega, align 8\l  %173 = load i32, ptr %i, align 4\l  %idxprom135 = sext i32 %173 to i64\l  %arrayidx136 = getelementptr inbounds ptr, ptr %172, i64 %idxprom135\l  %174 = load ptr, ptr %arrayidx136, align 8\l  %arrayidx137 = getelementptr inbounds double, ptr %174, i64 2\l  %175 = load double, ptr %arrayidx137, align 8\l  %arrayidx139 = getelementptr inbounds [6 x double], ptr %t, i64 0, i64 4\l  %176 = load double, ptr %arrayidx139, align 16\l  %177 = call double @llvm.fmuladd.f64(double %mul134, double %175, double\l... %176)\l  store double %177, ptr %arrayidx139, align 16\l  %178 = load double, ptr %inertiaone, align 8\l  %179 = load ptr, ptr %omega, align 8\l  %180 = load i32, ptr %i, align 4\l  %idxprom140 = sext i32 %180 to i64\l  %arrayidx141 = getelementptr inbounds ptr, ptr %179, i64 %idxprom140\l  %181 = load ptr, ptr %arrayidx141, align 8\l  %arrayidx142 = getelementptr inbounds double, ptr %181, i64 1\l  %182 = load double, ptr %arrayidx142, align 8\l  %mul143 = fmul double %178, %182\l  %183 = load ptr, ptr %omega, align 8\l  %184 = load i32, ptr %i, align 4\l  %idxprom144 = sext i32 %184 to i64\l  %arrayidx145 = getelementptr inbounds ptr, ptr %183, i64 %idxprom144\l  %185 = load ptr, ptr %arrayidx145, align 8\l  %arrayidx146 = getelementptr inbounds double, ptr %185, i64 2\l  %186 = load double, ptr %arrayidx146, align 8\l  %arrayidx148 = getelementptr inbounds [6 x double], ptr %t, i64 0, i64 5\l  %187 = load double, ptr %arrayidx148, align 8\l  %188 = call double @llvm.fmuladd.f64(double %mul143, double %186, double\l... %187)\l  store double %188, ptr %arrayidx148, align 8\l  br label %if.end149\l}"];
	Node0x55f2e4053a10 -> Node0x55f2e4053a90[tooltip="if.then30 -> if.end149\nProbability 100.00%" ];
	Node0x55f2e4053a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end149:\l|  br label %for.inc150\l}"];
	Node0x55f2e4053a90 -> Node0x55f2e405fc90[tooltip="if.end149 -> for.inc150\nProbability 100.00%" ];
	Node0x55f2e405fc90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{for.inc150:\l|  %189 = load i32, ptr %i, align 4\l  %inc = add nsw i32 %189, 1\l  store i32 %inc, ptr %i, align 4\l  br label %for.cond26, !llvm.loop !6\l}"];
	Node0x55f2e405fc90 -> Node0x55f2e4053000[tooltip="for.inc150 -> for.cond26\nProbability 100.00%" ];
	Node0x55f2e4053320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{for.end151:\l|  br label %if.end229\l}"];
	Node0x55f2e4053320 -> Node0x55f2e4060000[tooltip="for.end151 -> if.end229\nProbability 100.00%" ];
	Node0x55f2e4052e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{if.else:\l|  store i32 0, ptr %i152, align 4\l  br label %for.cond153\l}"];
	Node0x55f2e4052e40 -> Node0x55f2e4060160[tooltip="if.else -> for.cond153\nProbability 100.00%" ];
	Node0x55f2e4060160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{for.cond153:\l|  %190 = load i32, ptr %i152, align 4\l  %191 = load i32, ptr %nlocal, align 4\l  %cmp154 = icmp slt i32 %190, %191\l  br i1 %cmp154, label %for.body155, label %for.end228\l|{<s0>T|<s1>F}}"];
	Node0x55f2e4060160:s0 -> Node0x55f2e4058490[tooltip="for.cond153 -> for.body155\nProbability 96.88%" ];
	Node0x55f2e4060160:s1 -> Node0x55f2e4058510[tooltip="for.cond153 -> for.end228\nProbability 3.12%" ];
	Node0x55f2e4058490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{for.body155:\l|  %192 = load ptr, ptr %mask, align 8\l  %193 = load i32, ptr %i152, align 4\l  %idxprom156 = sext i32 %193 to i64\l  %arrayidx157 = getelementptr inbounds i32, ptr %192, i64 %idxprom156\l  %194 = load i32, ptr %arrayidx157, align 4\l  %groupbit158 = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr\l... %this1, i32 0, i32 4\l  %195 = load i32, ptr %groupbit158, align 4\l  %and159 = and i32 %194, %195\l  %tobool160 = icmp ne i32 %and159, 0\l  br i1 %tobool160, label %if.then161, label %if.end225\l|{<s0>T|<s1>F}}"];
	Node0x55f2e4058490:s0 -> Node0x55f2e4058c10[tooltip="for.body155 -> if.then161\nProbability 62.50%" ];
	Node0x55f2e4058490:s1 -> Node0x55f2e4058c90[tooltip="for.body155 -> if.end225\nProbability 37.50%" ];
	Node0x55f2e4058c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.then161:\l|  %196 = load ptr, ptr %rmass, align 8\l  %197 = load i32, ptr %i152, align 4\l  %idxprom162 = sext i32 %197 to i64\l  %arrayidx163 = getelementptr inbounds double, ptr %196, i64 %idxprom162\l  %198 = load double, ptr %arrayidx163, align 8\l  %mul164 = fmul double 4.000000e-01, %198\l  %199 = load ptr, ptr %radius, align 8\l  %200 = load i32, ptr %i152, align 4\l  %idxprom165 = sext i32 %200 to i64\l  %arrayidx166 = getelementptr inbounds double, ptr %199, i64 %idxprom165\l  %201 = load double, ptr %arrayidx166, align 8\l  %mul167 = fmul double %mul164, %201\l  %202 = load ptr, ptr %radius, align 8\l  %203 = load i32, ptr %i152, align 4\l  %idxprom168 = sext i32 %203 to i64\l  %arrayidx169 = getelementptr inbounds double, ptr %202, i64 %idxprom168\l  %204 = load double, ptr %arrayidx169, align 8\l  %mul170 = fmul double %mul167, %204\l  store double %mul170, ptr %inertiaone, align 8\l  %205 = load double, ptr %inertiaone, align 8\l  %206 = load ptr, ptr %omega, align 8\l  %207 = load i32, ptr %i152, align 4\l  %idxprom171 = sext i32 %207 to i64\l  %arrayidx172 = getelementptr inbounds ptr, ptr %206, i64 %idxprom171\l  %208 = load ptr, ptr %arrayidx172, align 8\l  %arrayidx173 = getelementptr inbounds double, ptr %208, i64 0\l  %209 = load double, ptr %arrayidx173, align 8\l  %mul174 = fmul double %205, %209\l  %210 = load ptr, ptr %omega, align 8\l  %211 = load i32, ptr %i152, align 4\l  %idxprom175 = sext i32 %211 to i64\l  %arrayidx176 = getelementptr inbounds ptr, ptr %210, i64 %idxprom175\l  %212 = load ptr, ptr %arrayidx176, align 8\l  %arrayidx177 = getelementptr inbounds double, ptr %212, i64 0\l  %213 = load double, ptr %arrayidx177, align 8\l  %arrayidx179 = getelementptr inbounds [6 x double], ptr %t, i64 0, i64 0\l  %214 = load double, ptr %arrayidx179, align 16\l  %215 = call double @llvm.fmuladd.f64(double %mul174, double %213, double\l... %214)\l  store double %215, ptr %arrayidx179, align 16\l  %216 = load double, ptr %inertiaone, align 8\l  %217 = load ptr, ptr %omega, align 8\l  %218 = load i32, ptr %i152, align 4\l  %idxprom180 = sext i32 %218 to i64\l  %arrayidx181 = getelementptr inbounds ptr, ptr %217, i64 %idxprom180\l  %219 = load ptr, ptr %arrayidx181, align 8\l  %arrayidx182 = getelementptr inbounds double, ptr %219, i64 1\l  %220 = load double, ptr %arrayidx182, align 8\l  %mul183 = fmul double %216, %220\l  %221 = load ptr, ptr %omega, align 8\l  %222 = load i32, ptr %i152, align 4\l  %idxprom184 = sext i32 %222 to i64\l  %arrayidx185 = getelementptr inbounds ptr, ptr %221, i64 %idxprom184\l  %223 = load ptr, ptr %arrayidx185, align 8\l  %arrayidx186 = getelementptr inbounds double, ptr %223, i64 1\l  %224 = load double, ptr %arrayidx186, align 8\l  %arrayidx188 = getelementptr inbounds [6 x double], ptr %t, i64 0, i64 1\l  %225 = load double, ptr %arrayidx188, align 8\l  %226 = call double @llvm.fmuladd.f64(double %mul183, double %224, double\l... %225)\l  store double %226, ptr %arrayidx188, align 8\l  %227 = load double, ptr %inertiaone, align 8\l  %228 = load ptr, ptr %omega, align 8\l  %229 = load i32, ptr %i152, align 4\l  %idxprom189 = sext i32 %229 to i64\l  %arrayidx190 = getelementptr inbounds ptr, ptr %228, i64 %idxprom189\l  %230 = load ptr, ptr %arrayidx190, align 8\l  %arrayidx191 = getelementptr inbounds double, ptr %230, i64 2\l  %231 = load double, ptr %arrayidx191, align 8\l  %mul192 = fmul double %227, %231\l  %232 = load ptr, ptr %omega, align 8\l  %233 = load i32, ptr %i152, align 4\l  %idxprom193 = sext i32 %233 to i64\l  %arrayidx194 = getelementptr inbounds ptr, ptr %232, i64 %idxprom193\l  %234 = load ptr, ptr %arrayidx194, align 8\l  %arrayidx195 = getelementptr inbounds double, ptr %234, i64 2\l  %235 = load double, ptr %arrayidx195, align 8\l  %arrayidx197 = getelementptr inbounds [6 x double], ptr %t, i64 0, i64 2\l  %236 = load double, ptr %arrayidx197, align 16\l  %237 = call double @llvm.fmuladd.f64(double %mul192, double %235, double\l... %236)\l  store double %237, ptr %arrayidx197, align 16\l  %238 = load double, ptr %inertiaone, align 8\l  %239 = load ptr, ptr %omega, align 8\l  %240 = load i32, ptr %i152, align 4\l  %idxprom198 = sext i32 %240 to i64\l  %arrayidx199 = getelementptr inbounds ptr, ptr %239, i64 %idxprom198\l  %241 = load ptr, ptr %arrayidx199, align 8\l  %arrayidx200 = getelementptr inbounds double, ptr %241, i64 0\l  %242 = load double, ptr %arrayidx200, align 8\l  %mul201 = fmul double %238, %242\l  %243 = load ptr, ptr %omega, align 8\l  %244 = load i32, ptr %i152, align 4\l  %idxprom202 = sext i32 %244 to i64\l  %arrayidx203 = getelementptr inbounds ptr, ptr %243, i64 %idxprom202\l  %245 = load ptr, ptr %arrayidx203, align 8\l  %arrayidx204 = getelementptr inbounds double, ptr %245, i64 1\l  %246 = load double, ptr %arrayidx204, align 8\l  %arrayidx206 = getelementptr inbounds [6 x double], ptr %t, i64 0, i64 3\l  %247 = load double, ptr %arrayidx206, align 8\l  %248 = call double @llvm.fmuladd.f64(double %mul201, double %246, double\l... %247)\l  store double %248, ptr %arrayidx206, align 8\l  %249 = load double, ptr %inertiaone, align 8\l  %250 = load ptr, ptr %omega, align 8\l  %251 = load i32, ptr %i152, align 4\l  %idxprom207 = sext i32 %251 to i64\l  %arrayidx208 = getelementptr inbounds ptr, ptr %250, i64 %idxprom207\l  %252 = load ptr, ptr %arrayidx208, align 8\l  %arrayidx209 = getelementptr inbounds double, ptr %252, i64 0\l  %253 = load double, ptr %arrayidx209, align 8\l  %mul210 = fmul double %249, %253\l  %254 = load ptr, ptr %omega, align 8\l  %255 = load i32, ptr %i152, align 4\l  %idxprom211 = sext i32 %255 to i64\l  %arrayidx212 = getelementptr inbounds ptr, ptr %254, i64 %idxprom211\l  %256 = load ptr, ptr %arrayidx212, align 8\l  %arrayidx213 = getelementptr inbounds double, ptr %256, i64 2\l  %257 = load double, ptr %arrayidx213, align 8\l  %arrayidx215 = getelementptr inbounds [6 x double], ptr %t, i64 0, i64 4\l  %258 = load double, ptr %arrayidx215, align 16\l  %259 = call double @llvm.fmuladd.f64(double %mul210, double %257, double\l... %258)\l  store double %259, ptr %arrayidx215, align 16\l  %260 = load double, ptr %inertiaone, align 8\l  %261 = load ptr, ptr %omega, align 8\l  %262 = load i32, ptr %i152, align 4\l  %idxprom216 = sext i32 %262 to i64\l  %arrayidx217 = getelementptr inbounds ptr, ptr %261, i64 %idxprom216\l  %263 = load ptr, ptr %arrayidx217, align 8\l  %arrayidx218 = getelementptr inbounds double, ptr %263, i64 1\l  %264 = load double, ptr %arrayidx218, align 8\l  %mul219 = fmul double %260, %264\l  %265 = load ptr, ptr %omega, align 8\l  %266 = load i32, ptr %i152, align 4\l  %idxprom220 = sext i32 %266 to i64\l  %arrayidx221 = getelementptr inbounds ptr, ptr %265, i64 %idxprom220\l  %267 = load ptr, ptr %arrayidx221, align 8\l  %arrayidx222 = getelementptr inbounds double, ptr %267, i64 2\l  %268 = load double, ptr %arrayidx222, align 8\l  %arrayidx224 = getelementptr inbounds [6 x double], ptr %t, i64 0, i64 5\l  %269 = load double, ptr %arrayidx224, align 8\l  %270 = call double @llvm.fmuladd.f64(double %mul219, double %268, double\l... %269)\l  store double %270, ptr %arrayidx224, align 8\l  br label %if.end225\l}"];
	Node0x55f2e4058c10 -> Node0x55f2e4058c90[tooltip="if.then161 -> if.end225\nProbability 100.00%" ];
	Node0x55f2e4058c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end225:\l|  br label %for.inc226\l}"];
	Node0x55f2e4058c90 -> Node0x55f2e4068360[tooltip="if.end225 -> for.inc226\nProbability 100.00%" ];
	Node0x55f2e4068360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{for.inc226:\l|  %271 = load i32, ptr %i152, align 4\l  %inc227 = add nsw i32 %271, 1\l  store i32 %inc227, ptr %i152, align 4\l  br label %for.cond153, !llvm.loop !8\l}"];
	Node0x55f2e4068360 -> Node0x55f2e4060160[tooltip="for.inc226 -> for.cond153\nProbability 100.00%" ];
	Node0x55f2e4058510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{for.end228:\l|  br label %if.end229\l}"];
	Node0x55f2e4058510 -> Node0x55f2e4060000[tooltip="for.end228 -> if.end229\nProbability 100.00%" ];
	Node0x55f2e4060000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.end229:\l|  %tempbias230 = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr\l... %this1, i32 0, i32 36\l  %272 = load i32, ptr %tempbias230, align 4\l  %tobool231 = icmp ne i32 %272, 0\l  br i1 %tobool231, label %if.then232, label %if.end236\l|{<s0>T|<s1>F}}"];
	Node0x55f2e4060000:s0 -> Node0x55f2e4068a00[tooltip="if.end229 -> if.then232\nProbability 62.50%" ];
	Node0x55f2e4060000:s1 -> Node0x55f2e4068a80[tooltip="if.end229 -> if.end236\nProbability 37.50%" ];
	Node0x55f2e4068a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670" fontname="Courier",label="{if.then232:\l|  %tbias233 = getelementptr inbounds %\"class.LAMMPS_NS::ComputeTempSphere\",\l... ptr %this1, i32 0, i32 4\l  %273 = load ptr, ptr %tbias233, align 8\l  %vtable234 = load ptr, ptr %273, align 8\l  %vfn235 = getelementptr inbounds ptr, ptr %vtable234, i64 30\l  %274 = load ptr, ptr %vfn235, align 8\l  call void %274(ptr noundef nonnull align 8 dereferenceable(564) %273)\l  br label %if.end236\l}"];
	Node0x55f2e4068a00 -> Node0x55f2e4068a80[tooltip="if.then232 -> if.end236\nProbability 100.00%" ];
	Node0x55f2e4068a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.end236:\l|  %arraydecay237 = getelementptr inbounds [6 x double], ptr %t, i64 0, i64 0\l  %vector = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr %this1,\l... i32 0, i32 6\l  %275 = load ptr, ptr %vector, align 8\l  %world = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 16\l  %276 = load ptr, ptr %world, align 8\l  %277 = load ptr, ptr %276, align 8\l  %call = call i32 @MPI_Allreduce(ptr noundef %arraydecay237, ptr noundef\l... %275, i32 noundef 6, ptr noundef @ompi_mpi_double, ptr noundef\l... @ompi_mpi_op_sum, ptr noundef %277)\l  store i32 0, ptr %i238, align 4\l  br label %for.cond239\l}"];
	Node0x55f2e4068a80 -> Node0x55f2e4069720[tooltip="if.end236 -> for.cond239\nProbability 100.00%" ];
	Node0x55f2e4069720 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond239:\l|  %278 = load i32, ptr %i238, align 4\l  %cmp240 = icmp slt i32 %278, 6\l  br i1 %cmp240, label %for.body241, label %for.end248\l|{<s0>T|<s1>F}}"];
	Node0x55f2e4069720:s0 -> Node0x55f2e40698f0[tooltip="for.cond239 -> for.body241\nProbability 96.88%" ];
	Node0x55f2e4069720:s1 -> Node0x55f2e4069970[tooltip="for.cond239 -> for.end248\nProbability 3.12%" ];
	Node0x55f2e40698f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body241:\l|  %force = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 11\l  %279 = load ptr, ptr %force, align 8\l  %280 = load ptr, ptr %279, align 8\l  %mvv2e = getelementptr inbounds %\"class.LAMMPS_NS::Force\", ptr %280, i32 0,\l... i32 3\l  %281 = load double, ptr %mvv2e, align 8\l  %vector242 = getelementptr inbounds %\"class.LAMMPS_NS::Compute\", ptr %this1,\l... i32 0, i32 6\l  %282 = load ptr, ptr %vector242, align 8\l  %283 = load i32, ptr %i238, align 4\l  %idxprom243 = sext i32 %283 to i64\l  %arrayidx244 = getelementptr inbounds double, ptr %282, i64 %idxprom243\l  %284 = load double, ptr %arrayidx244, align 8\l  %mul245 = fmul double %284, %281\l  store double %mul245, ptr %arrayidx244, align 8\l  br label %for.inc246\l}"];
	Node0x55f2e40698f0 -> Node0x55f2e406a310[tooltip="for.body241 -> for.inc246\nProbability 100.00%" ];
	Node0x55f2e406a310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc246:\l|  %285 = load i32, ptr %i238, align 4\l  %inc247 = add nsw i32 %285, 1\l  store i32 %inc247, ptr %i238, align 4\l  br label %for.cond239, !llvm.loop !9\l}"];
	Node0x55f2e406a310 -> Node0x55f2e4069720[tooltip="for.inc246 -> for.cond239\nProbability 100.00%" ];
	Node0x55f2e4069970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end248:\l|  ret void\l}"];
}
