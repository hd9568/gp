digraph "CFG for '_ZNK9MathEigen6JacobiIdPdPS1_PKPKdE8SortRowsES1_S2_iNS7_13eSortCriteriaE' function" {
	label="CFG for '_ZNK9MathEigen6JacobiIdPdPS1_PKPKdE8SortRowsES1_S2_iNS7_13eSortCriteriaE' function";

	Node0x5600924e5640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %eval.addr = alloca ptr, align 8\l  %evec.addr = alloca ptr, align 8\l  %n.addr = alloca i32, align 4\l  %sort_criteria.addr = alloca i32, align 4\l  %i = alloca i32, align 4\l  %i_max = alloca i32, align 4\l  %j = alloca i32, align 4\l  %k = alloca i32, align 4\l  store ptr %this, ptr %this.addr, align 8\l  store ptr %eval, ptr %eval.addr, align 8\l  store ptr %evec, ptr %evec.addr, align 8\l  store i32 %n, ptr %n.addr, align 4\l  store i32 %sort_criteria, ptr %sort_criteria.addr, align 4\l  %this1 = load ptr, ptr %this.addr, align 8\l  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x5600924e5640 -> Node0x5600924e6610[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x5600924e6610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.cond:\l|  %0 = load i32, ptr %i, align 4\l  %1 = load i32, ptr %n.addr, align 4\l  %sub = sub nsw i32 %1, 1\l  %cmp = icmp slt i32 %0, %sub\l  br i1 %cmp, label %for.body, label %for.end55\l|{<s0>T|<s1>F}}"];
	Node0x5600924e6610:s0 -> Node0x5600924e6930[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x5600924e6610:s1 -> Node0x5600924e6980[tooltip="for.cond -> for.end55\nProbability 3.12%" ];
	Node0x5600924e6930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.body:\l|  %2 = load i32, ptr %i, align 4\l  store i32 %2, ptr %i_max, align 4\l  %3 = load i32, ptr %i, align 4\l  %add = add nsw i32 %3, 1\l  store i32 %add, ptr %j, align 4\l  br label %for.cond2\l}"];
	Node0x5600924e6930 -> Node0x5600924e6d70[tooltip="for.body -> for.cond2\nProbability 100.00%" ];
	Node0x5600924e6d70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond2:\l|  %4 = load i32, ptr %j, align 4\l  %5 = load i32, ptr %n.addr, align 4\l  %cmp3 = icmp slt i32 %4, %5\l  br i1 %cmp3, label %for.body4, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5600924e6d70:s0 -> Node0x5600924e7010[tooltip="for.cond2 -> for.body4\nProbability 96.88%" ];
	Node0x5600924e6d70:s1 -> Node0x5600924e5e70[tooltip="for.cond2 -> for.end\nProbability 3.12%" ];
	Node0x5600924e7010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body4:\l|  %6 = load i32, ptr %sort_criteria.addr, align 4\l  switch i32 %6, label %sw.default [\l    i32 1, label %sw.bb\l    i32 2, label %sw.bb8\l    i32 3, label %sw.bb16\l    i32 4, label %sw.bb25\l  ]\l|{<s0>def|<s1>1|<s2>2|<s3>3|<s4>4}}"];
	Node0x5600924e7010:s0 -> Node0x5600924e7430[tooltip="for.body4 -> sw.default\nProbability 20.00%" ];
	Node0x5600924e7010:s1 -> Node0x5600924e7480[tooltip="for.body4 -> sw.bb\nProbability 20.00%" ];
	Node0x5600924e7010:s2 -> Node0x5600924e74d0[tooltip="for.body4 -> sw.bb8\nProbability 20.00%" ];
	Node0x5600924e7010:s3 -> Node0x5600924e7540[tooltip="for.body4 -> sw.bb16\nProbability 20.00%" ];
	Node0x5600924e7010:s4 -> Node0x5600924e75b0[tooltip="for.body4 -> sw.bb25\nProbability 20.00%" ];
	Node0x5600924e7480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{sw.bb:\l|  %7 = load ptr, ptr %eval.addr, align 8\l  %8 = load i32, ptr %j, align 4\l  %idxprom = sext i32 %8 to i64\l  %arrayidx = getelementptr inbounds double, ptr %7, i64 %idxprom\l  %9 = load double, ptr %arrayidx, align 8\l  %10 = load ptr, ptr %eval.addr, align 8\l  %11 = load i32, ptr %i_max, align 4\l  %idxprom5 = sext i32 %11 to i64\l  %arrayidx6 = getelementptr inbounds double, ptr %10, i64 %idxprom5\l  %12 = load double, ptr %arrayidx6, align 8\l  %cmp7 = fcmp ogt double %9, %12\l  br i1 %cmp7, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5600924e7480:s0 -> Node0x5600924e7dc0[tooltip="sw.bb -> if.then\nProbability 50.00%" ];
	Node0x5600924e7480:s1 -> Node0x5600924e7e30[tooltip="sw.bb -> if.end\nProbability 50.00%" ];
	Node0x5600924e7dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70" fontname="Courier",label="{if.then:\l|  %13 = load i32, ptr %j, align 4\l  store i32 %13, ptr %i_max, align 4\l  br label %if.end\l}"];
	Node0x5600924e7dc0 -> Node0x5600924e7e30[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x5600924e7e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.end:\l|  br label %sw.epilog\l}"];
	Node0x5600924e7e30 -> Node0x5600924e80e0[tooltip="if.end -> sw.epilog\nProbability 100.00%" ];
	Node0x5600924e74d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{sw.bb8:\l|  %14 = load ptr, ptr %eval.addr, align 8\l  %15 = load i32, ptr %j, align 4\l  %idxprom9 = sext i32 %15 to i64\l  %arrayidx10 = getelementptr inbounds double, ptr %14, i64 %idxprom9\l  %16 = load double, ptr %arrayidx10, align 8\l  %17 = load ptr, ptr %eval.addr, align 8\l  %18 = load i32, ptr %i_max, align 4\l  %idxprom11 = sext i32 %18 to i64\l  %arrayidx12 = getelementptr inbounds double, ptr %17, i64 %idxprom11\l  %19 = load double, ptr %arrayidx12, align 8\l  %cmp13 = fcmp olt double %16, %19\l  br i1 %cmp13, label %if.then14, label %if.end15\l|{<s0>T|<s1>F}}"];
	Node0x5600924e74d0:s0 -> Node0x5600924e8860[tooltip="sw.bb8 -> if.then14\nProbability 50.00%" ];
	Node0x5600924e74d0:s1 -> Node0x5600924e88e0[tooltip="sw.bb8 -> if.end15\nProbability 50.00%" ];
	Node0x5600924e8860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70" fontname="Courier",label="{if.then14:\l|  %20 = load i32, ptr %j, align 4\l  store i32 %20, ptr %i_max, align 4\l  br label %if.end15\l}"];
	Node0x5600924e8860 -> Node0x5600924e88e0[tooltip="if.then14 -> if.end15\nProbability 100.00%" ];
	Node0x5600924e88e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.end15:\l|  br label %sw.epilog\l}"];
	Node0x5600924e88e0 -> Node0x5600924e80e0[tooltip="if.end15 -> sw.epilog\nProbability 100.00%" ];
	Node0x5600924e7540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{sw.bb16:\l|  %21 = load ptr, ptr %eval.addr, align 8\l  %22 = load i32, ptr %j, align 4\l  %idxprom17 = sext i32 %22 to i64\l  %arrayidx18 = getelementptr inbounds double, ptr %21, i64 %idxprom17\l  %23 = load double, ptr %arrayidx18, align 8\l  %call = call noundef double @_ZSt3absd(double noundef %23)\l  %24 = load ptr, ptr %eval.addr, align 8\l  %25 = load i32, ptr %i_max, align 4\l  %idxprom19 = sext i32 %25 to i64\l  %arrayidx20 = getelementptr inbounds double, ptr %24, i64 %idxprom19\l  %26 = load double, ptr %arrayidx20, align 8\l  %call21 = call noundef double @_ZSt3absd(double noundef %26)\l  %cmp22 = fcmp ogt double %call, %call21\l  br i1 %cmp22, label %if.then23, label %if.end24\l|{<s0>T|<s1>F}}"];
	Node0x5600924e7540:s0 -> Node0x5600924e97f0[tooltip="sw.bb16 -> if.then23\nProbability 50.00%" ];
	Node0x5600924e7540:s1 -> Node0x5600924e9840[tooltip="sw.bb16 -> if.end24\nProbability 50.00%" ];
	Node0x5600924e97f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70" fontname="Courier",label="{if.then23:\l|  %27 = load i32, ptr %j, align 4\l  store i32 %27, ptr %i_max, align 4\l  br label %if.end24\l}"];
	Node0x5600924e97f0 -> Node0x5600924e9840[tooltip="if.then23 -> if.end24\nProbability 100.00%" ];
	Node0x5600924e9840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.end24:\l|  br label %sw.epilog\l}"];
	Node0x5600924e9840 -> Node0x5600924e80e0[tooltip="if.end24 -> sw.epilog\nProbability 100.00%" ];
	Node0x5600924e75b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{sw.bb25:\l|  %28 = load ptr, ptr %eval.addr, align 8\l  %29 = load i32, ptr %j, align 4\l  %idxprom26 = sext i32 %29 to i64\l  %arrayidx27 = getelementptr inbounds double, ptr %28, i64 %idxprom26\l  %30 = load double, ptr %arrayidx27, align 8\l  %call28 = call noundef double @_ZSt3absd(double noundef %30)\l  %31 = load ptr, ptr %eval.addr, align 8\l  %32 = load i32, ptr %i_max, align 4\l  %idxprom29 = sext i32 %32 to i64\l  %arrayidx30 = getelementptr inbounds double, ptr %31, i64 %idxprom29\l  %33 = load double, ptr %arrayidx30, align 8\l  %call31 = call noundef double @_ZSt3absd(double noundef %33)\l  %cmp32 = fcmp olt double %call28, %call31\l  br i1 %cmp32, label %if.then33, label %if.end34\l|{<s0>T|<s1>F}}"];
	Node0x5600924e75b0:s0 -> Node0x5600924ea420[tooltip="sw.bb25 -> if.then33\nProbability 50.00%" ];
	Node0x5600924e75b0:s1 -> Node0x5600924ea4a0[tooltip="sw.bb25 -> if.end34\nProbability 50.00%" ];
	Node0x5600924ea420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70" fontname="Courier",label="{if.then33:\l|  %34 = load i32, ptr %j, align 4\l  store i32 %34, ptr %i_max, align 4\l  br label %if.end34\l}"];
	Node0x5600924ea420 -> Node0x5600924ea4a0[tooltip="if.then33 -> if.end34\nProbability 100.00%" ];
	Node0x5600924ea4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.end34:\l|  br label %sw.epilog\l}"];
	Node0x5600924ea4a0 -> Node0x5600924e80e0[tooltip="if.end34 -> sw.epilog\nProbability 100.00%" ];
	Node0x5600924e7430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{sw.default:\l|  br label %sw.epilog\l}"];
	Node0x5600924e7430 -> Node0x5600924e80e0[tooltip="sw.default -> sw.epilog\nProbability 100.00%" ];
	Node0x5600924e80e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{sw.epilog:\l|  br label %for.inc\l}"];
	Node0x5600924e80e0 -> Node0x5600924ea840[tooltip="sw.epilog -> for.inc\nProbability 100.00%" ];
	Node0x5600924ea840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %35 = load i32, ptr %j, align 4\l  %inc = add nsw i32 %35, 1\l  store i32 %inc, ptr %j, align 4\l  br label %for.cond2, !llvm.loop !6\l}"];
	Node0x5600924ea840 -> Node0x5600924e6d70[tooltip="for.inc -> for.cond2\nProbability 100.00%" ];
	Node0x5600924e5e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  %36 = load ptr, ptr %eval.addr, align 8\l  %37 = load i32, ptr %i, align 4\l  %idxprom35 = sext i32 %37 to i64\l  %arrayidx36 = getelementptr inbounds double, ptr %36, i64 %idxprom35\l  %38 = load ptr, ptr %eval.addr, align 8\l  %39 = load i32, ptr %i_max, align 4\l  %idxprom37 = sext i32 %39 to i64\l  %arrayidx38 = getelementptr inbounds double, ptr %38, i64 %idxprom37\l  call void\l... @_ZSt4swapIdENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is\l..._move_constructibleIS3_ESt18is_move_assignableIS3_EEE5valueEvE4typeERS3_SC_(ptr\l... noundef nonnull align 8 dereferenceable(8) %arrayidx36, ptr noundef nonnull\l... align 8 dereferenceable(8) %arrayidx38) #7\l  store i32 0, ptr %k, align 4\l  br label %for.cond39\l}"];
	Node0x5600924e5e70 -> Node0x5600924eb500[tooltip="for.end -> for.cond39\nProbability 100.00%" ];
	Node0x5600924eb500 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond39:\l|  %40 = load i32, ptr %k, align 4\l  %41 = load i32, ptr %n.addr, align 4\l  %cmp40 = icmp slt i32 %40, %41\l  br i1 %cmp40, label %for.body41, label %for.end52\l|{<s0>T|<s1>F}}"];
	Node0x5600924eb500:s0 -> Node0x5600924eb780[tooltip="for.cond39 -> for.body41\nProbability 96.88%" ];
	Node0x5600924eb500:s1 -> Node0x5600924eb800[tooltip="for.cond39 -> for.end52\nProbability 3.12%" ];
	Node0x5600924eb780 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body41:\l|  %42 = load ptr, ptr %evec.addr, align 8\l  %43 = load i32, ptr %i, align 4\l  %idxprom42 = sext i32 %43 to i64\l  %arrayidx43 = getelementptr inbounds ptr, ptr %42, i64 %idxprom42\l  %44 = load ptr, ptr %arrayidx43, align 8\l  %45 = load i32, ptr %k, align 4\l  %idxprom44 = sext i32 %45 to i64\l  %arrayidx45 = getelementptr inbounds double, ptr %44, i64 %idxprom44\l  %46 = load ptr, ptr %evec.addr, align 8\l  %47 = load i32, ptr %i_max, align 4\l  %idxprom46 = sext i32 %47 to i64\l  %arrayidx47 = getelementptr inbounds ptr, ptr %46, i64 %idxprom46\l  %48 = load ptr, ptr %arrayidx47, align 8\l  %49 = load i32, ptr %k, align 4\l  %idxprom48 = sext i32 %49 to i64\l  %arrayidx49 = getelementptr inbounds double, ptr %48, i64 %idxprom48\l  call void\l... @_ZSt4swapIdENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is\l..._move_constructibleIS3_ESt18is_move_assignableIS3_EEE5valueEvE4typeERS3_SC_(ptr\l... noundef nonnull align 8 dereferenceable(8) %arrayidx45, ptr noundef nonnull\l... align 8 dereferenceable(8) %arrayidx49) #7\l  br label %for.inc50\l}"];
	Node0x5600924eb780 -> Node0x5600924ecc50[tooltip="for.body41 -> for.inc50\nProbability 100.00%" ];
	Node0x5600924ecc50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc50:\l|  %50 = load i32, ptr %k, align 4\l  %inc51 = add nsw i32 %50, 1\l  store i32 %inc51, ptr %k, align 4\l  br label %for.cond39, !llvm.loop !8\l}"];
	Node0x5600924ecc50 -> Node0x5600924eb500[tooltip="for.inc50 -> for.cond39\nProbability 100.00%" ];
	Node0x5600924eb800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end52:\l|  br label %for.inc53\l}"];
	Node0x5600924eb800 -> Node0x5600924ed0b0[tooltip="for.end52 -> for.inc53\nProbability 100.00%" ];
	Node0x5600924ed0b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.inc53:\l|  %51 = load i32, ptr %i, align 4\l  %inc54 = add nsw i32 %51, 1\l  store i32 %inc54, ptr %i, align 4\l  br label %for.cond, !llvm.loop !9\l}"];
	Node0x5600924ed0b0 -> Node0x5600924e6610[tooltip="for.inc53 -> for.cond\nProbability 100.00%" ];
	Node0x5600924e6980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{for.end55:\l|  ret void\l}"];
}
