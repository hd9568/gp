digraph "CFG for '_ZN3fmt6v9_lmp6detail8copy_strIcPKcSt20back_insert_iteratorINS1_6bufferIcEEEEET1_T0_SA_S9_' function" {
	label="CFG for '_ZN3fmt6v9_lmp6detail8copy_strIcPKcSt20back_insert_iteratorINS1_6bufferIcEEEEET1_T0_SA_S9_' function";

	Node0x55fec3061fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %retval = alloca %\"class.std::back_insert_iterator\", align 8\l  %out = alloca %\"class.std::back_insert_iterator\", align 8\l  %begin.addr = alloca ptr, align 8\l  %end.addr = alloca ptr, align 8\l  %ref.tmp = alloca i8, align 1\l  %ref.tmp1 = alloca %\"class.std::back_insert_iterator\", align 8\l  %coerce.dive = getelementptr inbounds %\"class.std::back_insert_iterator\",\l... ptr %out, i32 0, i32 0\l  store ptr %out.coerce, ptr %coerce.dive, align 8\l  store ptr %begin, ptr %begin.addr, align 8\l  store ptr %end, ptr %end.addr, align 8\l  br label %while.cond\l}"];
	Node0x55fec3061fc0 -> Node0x55fec3062620[tooltip="entry -> while.cond\nProbability 100.00%" ];
	Node0x55fec3062620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{while.cond:\l|  %0 = load ptr, ptr %begin.addr, align 8\l  %1 = load ptr, ptr %end.addr, align 8\l  %cmp = icmp ne ptr %0, %1\l  br i1 %cmp, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x55fec3062620:s0 -> Node0x55fec30629f0[tooltip="while.cond -> while.body\nProbability 96.88%" ];
	Node0x55fec3062620:s1 -> Node0x55fec3062a70[tooltip="while.cond -> while.end\nProbability 3.12%" ];
	Node0x55fec30629f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{while.body:\l|  %2 = load ptr, ptr %begin.addr, align 8\l  %incdec.ptr = getelementptr inbounds i8, ptr %2, i32 1\l  store ptr %incdec.ptr, ptr %begin.addr, align 8\l  %3 = load i8, ptr %2, align 1\l  store i8 %3, ptr %ref.tmp, align 1\l  %call = call ptr\l... @_ZNSt20back_insert_iteratorIN3fmt6v9_lmp6detail6bufferIcEEEppEi(ptr noundef\l... nonnull align 8 dereferenceable(8) %out, i32 noundef 0)\l  %coerce.dive2 = getelementptr inbounds %\"class.std::back_insert_iterator\",\l... ptr %ref.tmp1, i32 0, i32 0\l  store ptr %call, ptr %coerce.dive2, align 8\l  %call3 = call noundef nonnull align 8 dereferenceable(8) ptr\l... @_ZNSt20back_insert_iteratorIN3fmt6v9_lmp6detail6bufferIcEEEdeEv(ptr noundef\l... nonnull align 8 dereferenceable(8) %ref.tmp1)\l  %call4 = call noundef nonnull align 8 dereferenceable(8) ptr\l... @_ZNSt20back_insert_iteratorIN3fmt6v9_lmp6detail6bufferIcEEEaSEOc(ptr noundef\l... nonnull align 8 dereferenceable(8) %call3, ptr noundef nonnull align 1\l... dereferenceable(1) %ref.tmp)\l  br label %while.cond, !llvm.loop !6\l}"];
	Node0x55fec30629f0 -> Node0x55fec3062620[tooltip="while.body -> while.cond\nProbability 100.00%" ];
	Node0x55fec3062a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{while.end:\l|  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %retval, ptr align 8 %out,\l... i64 8, i1 false)\l  %coerce.dive5 = getelementptr inbounds %\"class.std::back_insert_iterator\",\l... ptr %retval, i32 0, i32 0\l  %4 = load ptr, ptr %coerce.dive5, align 8\l  ret ptr %4\l}"];
}
