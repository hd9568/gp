digraph "CFG for '_ZN3fmt6v9_lmp6detail11utf8_decodeEPKcPjPi' function" {
	label="CFG for '_ZN3fmt6v9_lmp6detail11utf8_decodeEPKcPjPi' function";

	Node0x55fec30518a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %s.addr = alloca ptr, align 8\l  %c.addr = alloca ptr, align 8\l  %e.addr = alloca ptr, align 8\l  %masks = alloca [5 x i32], align 16\l  %mins = alloca [5 x i32], align 16\l  %shiftc = alloca [5 x i32], align 16\l  %shifte = alloca [5 x i32], align 16\l  %len = alloca i32, align 4\l  %next = alloca ptr, align 8\l  store ptr %s, ptr %s.addr, align 8\l  store ptr %c, ptr %c.addr, align 8\l  store ptr %e, ptr %e.addr, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %masks, ptr align 16\l... @__const._ZN3fmt6v9_lmp6detail11utf8_decodeEPKcPjPi.masks, i64 20, i1 false)\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %mins, ptr align 16\l... @__const._ZN3fmt6v9_lmp6detail11utf8_decodeEPKcPjPi.mins, i64 20, i1 false)\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %shiftc, ptr align 16\l... @__const._ZN3fmt6v9_lmp6detail11utf8_decodeEPKcPjPi.shiftc, i64 20, i1 false)\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %shifte, ptr align 16\l... @__const._ZN3fmt6v9_lmp6detail11utf8_decodeEPKcPjPi.shifte, i64 20, i1 false)\l  %0 = load ptr, ptr %s.addr, align 8\l  %1 = load i8, ptr %0, align 1\l  %call = call noundef i32 @_ZN3fmt6v9_lmp6detail22code_point_length_implEc(i8\l... noundef signext %1)\l  store i32 %call, ptr %len, align 4\l  %2 = load ptr, ptr %s.addr, align 8\l  %3 = load i32, ptr %len, align 4\l  %idx.ext = sext i32 %3 to i64\l  %add.ptr = getelementptr inbounds i8, ptr %2, i64 %idx.ext\l  %4 = load i32, ptr %len, align 4\l  %tobool = icmp ne i32 %4, 0\l  %lnot = xor i1 %tobool, true\l  %conv = zext i1 %lnot to i32\l  %idx.ext1 = sext i32 %conv to i64\l  %add.ptr2 = getelementptr inbounds i8, ptr %add.ptr, i64 %idx.ext1\l  store ptr %add.ptr2, ptr %next, align 8\l  %5 = load ptr, ptr %s.addr, align 8\l  %arrayidx = getelementptr inbounds i8, ptr %5, i64 0\l  %6 = load i8, ptr %arrayidx, align 1\l  %conv3 = zext i8 %6 to i32\l  %7 = load i32, ptr %len, align 4\l  %idxprom = sext i32 %7 to i64\l  %arrayidx4 = getelementptr inbounds [5 x i32], ptr %masks, i64 0, i64\l... %idxprom\l  %8 = load i32, ptr %arrayidx4, align 4\l  %and = and i32 %conv3, %8\l  %shl = shl i32 %and, 18\l  %9 = load ptr, ptr %c.addr, align 8\l  store i32 %shl, ptr %9, align 4\l  %10 = load ptr, ptr %s.addr, align 8\l  %arrayidx5 = getelementptr inbounds i8, ptr %10, i64 1\l  %11 = load i8, ptr %arrayidx5, align 1\l  %conv6 = zext i8 %11 to i32\l  %and7 = and i32 %conv6, 63\l  %shl8 = shl i32 %and7, 12\l  %12 = load ptr, ptr %c.addr, align 8\l  %13 = load i32, ptr %12, align 4\l  %or = or i32 %13, %shl8\l  store i32 %or, ptr %12, align 4\l  %14 = load ptr, ptr %s.addr, align 8\l  %arrayidx9 = getelementptr inbounds i8, ptr %14, i64 2\l  %15 = load i8, ptr %arrayidx9, align 1\l  %conv10 = zext i8 %15 to i32\l  %and11 = and i32 %conv10, 63\l  %shl12 = shl i32 %and11, 6\l  %16 = load ptr, ptr %c.addr, align 8\l  %17 = load i32, ptr %16, align 4\l  %or13 = or i32 %17, %shl12\l  store i32 %or13, ptr %16, align 4\l  %18 = load ptr, ptr %s.addr, align 8\l  %arrayidx14 = getelementptr inbounds i8, ptr %18, i64 3\l  %19 = load i8, ptr %arrayidx14, align 1\l  %conv15 = zext i8 %19 to i32\l  %and16 = and i32 %conv15, 63\l  %shl17 = shl i32 %and16, 0\l  %20 = load ptr, ptr %c.addr, align 8\l  %21 = load i32, ptr %20, align 4\l  %or18 = or i32 %21, %shl17\l  store i32 %or18, ptr %20, align 4\l  %22 = load i32, ptr %len, align 4\l  %idxprom19 = sext i32 %22 to i64\l  %arrayidx20 = getelementptr inbounds [5 x i32], ptr %shiftc, i64 0, i64\l... %idxprom19\l  %23 = load i32, ptr %arrayidx20, align 4\l  %24 = load ptr, ptr %c.addr, align 8\l  %25 = load i32, ptr %24, align 4\l  %shr = lshr i32 %25, %23\l  store i32 %shr, ptr %24, align 4\l  %26 = load ptr, ptr %c.addr, align 8\l  %27 = load i32, ptr %26, align 4\l  %28 = load i32, ptr %len, align 4\l  %idxprom21 = sext i32 %28 to i64\l  %arrayidx22 = getelementptr inbounds [5 x i32], ptr %mins, i64 0, i64\l... %idxprom21\l  %29 = load i32, ptr %arrayidx22, align 4\l  %cmp = icmp ult i32 %27, %29\l  %conv23 = zext i1 %cmp to i32\l  %shl24 = shl i32 %conv23, 6\l  %30 = load ptr, ptr %e.addr, align 8\l  store i32 %shl24, ptr %30, align 4\l  %31 = load ptr, ptr %c.addr, align 8\l  %32 = load i32, ptr %31, align 4\l  %shr25 = lshr i32 %32, 11\l  %cmp26 = icmp eq i32 %shr25, 27\l  %conv27 = zext i1 %cmp26 to i32\l  %shl28 = shl i32 %conv27, 7\l  %33 = load ptr, ptr %e.addr, align 8\l  %34 = load i32, ptr %33, align 4\l  %or29 = or i32 %34, %shl28\l  store i32 %or29, ptr %33, align 4\l  %35 = load ptr, ptr %c.addr, align 8\l  %36 = load i32, ptr %35, align 4\l  %cmp30 = icmp ugt i32 %36, 1114111\l  %conv31 = zext i1 %cmp30 to i32\l  %shl32 = shl i32 %conv31, 8\l  %37 = load ptr, ptr %e.addr, align 8\l  %38 = load i32, ptr %37, align 4\l  %or33 = or i32 %38, %shl32\l  store i32 %or33, ptr %37, align 4\l  %39 = load ptr, ptr %s.addr, align 8\l  %arrayidx34 = getelementptr inbounds i8, ptr %39, i64 1\l  %40 = load i8, ptr %arrayidx34, align 1\l  %conv35 = zext i8 %40 to i32\l  %and36 = and i32 %conv35, 192\l  %shr37 = ashr i32 %and36, 2\l  %41 = load ptr, ptr %e.addr, align 8\l  %42 = load i32, ptr %41, align 4\l  %or38 = or i32 %42, %shr37\l  store i32 %or38, ptr %41, align 4\l  %43 = load ptr, ptr %s.addr, align 8\l  %arrayidx39 = getelementptr inbounds i8, ptr %43, i64 2\l  %44 = load i8, ptr %arrayidx39, align 1\l  %conv40 = zext i8 %44 to i32\l  %and41 = and i32 %conv40, 192\l  %shr42 = ashr i32 %and41, 4\l  %45 = load ptr, ptr %e.addr, align 8\l  %46 = load i32, ptr %45, align 4\l  %or43 = or i32 %46, %shr42\l  store i32 %or43, ptr %45, align 4\l  %47 = load ptr, ptr %s.addr, align 8\l  %arrayidx44 = getelementptr inbounds i8, ptr %47, i64 3\l  %48 = load i8, ptr %arrayidx44, align 1\l  %conv45 = zext i8 %48 to i32\l  %shr46 = ashr i32 %conv45, 6\l  %49 = load ptr, ptr %e.addr, align 8\l  %50 = load i32, ptr %49, align 4\l  %or47 = or i32 %50, %shr46\l  store i32 %or47, ptr %49, align 4\l  %51 = load ptr, ptr %e.addr, align 8\l  %52 = load i32, ptr %51, align 4\l  %xor = xor i32 %52, 42\l  store i32 %xor, ptr %51, align 4\l  %53 = load i32, ptr %len, align 4\l  %idxprom48 = sext i32 %53 to i64\l  %arrayidx49 = getelementptr inbounds [5 x i32], ptr %shifte, i64 0, i64\l... %idxprom48\l  %54 = load i32, ptr %arrayidx49, align 4\l  %55 = load ptr, ptr %e.addr, align 8\l  %56 = load i32, ptr %55, align 4\l  %shr50 = ashr i32 %56, %54\l  store i32 %shr50, ptr %55, align 4\l  %57 = load ptr, ptr %next, align 8\l  ret ptr %57\l}"];
}
