digraph "CFG for '_ZN9LAMMPS_NS6Domain13closest_imageEii' function" {
	label="CFG for '_ZN9LAMMPS_NS6Domain13closest_imageEii' function";

	Node0x561837d37e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{entry:\l|  %retval = alloca i32, align 4\l  %this.addr = alloca ptr, align 8\l  %i.addr = alloca i32, align 4\l  %j.addr = alloca i32, align 4\l  %sametag = alloca ptr, align 8\l  %x = alloca ptr, align 8\l  %xi = alloca ptr, align 8\l  %closest = alloca i32, align 4\l  %delx = alloca double, align 8\l  %dely = alloca double, align 8\l  %delz = alloca double, align 8\l  %rsqmin = alloca double, align 8\l  %rsq = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store i32 %i, ptr %i.addr, align 4\l  store i32 %j, ptr %j.addr, align 4\l  %this1 = load ptr, ptr %this.addr, align 8\l  %0 = load i32, ptr %j.addr, align 4\l  %cmp = icmp slt i32 %0, 0\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x561837d37e90:s0 -> Node0x561837d38c30[tooltip="entry -> if.then\nProbability 37.50%" ];
	Node0x561837d37e90:s1 -> Node0x561837d38ca0[tooltip="entry -> if.end\nProbability 62.50%" ];
	Node0x561837d38c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{if.then:\l|  %1 = load i32, ptr %j.addr, align 4\l  store i32 %1, ptr %retval, align 4\l  br label %return\l}"];
	Node0x561837d38c30 -> Node0x561837d38f40[tooltip="if.then -> return\nProbability 100.00%" ];
	Node0x561837d38ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.end:\l|  %atom = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %2 = load ptr, ptr %atom, align 8\l  %3 = load ptr, ptr %2, align 8\l  %sametag2 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %3, i32 0,\l... i32 224\l  %4 = load ptr, ptr %sametag2, align 8\l  store ptr %4, ptr %sametag, align 8\l  %atom3 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %5 = load ptr, ptr %atom3, align 8\l  %6 = load ptr, ptr %5, align 8\l  %x4 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %6, i32 0, i32 37\l  %7 = load ptr, ptr %x4, align 8\l  store ptr %7, ptr %x, align 8\l  %8 = load ptr, ptr %x, align 8\l  %9 = load i32, ptr %i.addr, align 4\l  %idxprom = sext i32 %9 to i64\l  %arrayidx = getelementptr inbounds ptr, ptr %8, i64 %idxprom\l  %10 = load ptr, ptr %arrayidx, align 8\l  store ptr %10, ptr %xi, align 8\l  %11 = load i32, ptr %j.addr, align 4\l  store i32 %11, ptr %closest, align 4\l  %12 = load ptr, ptr %xi, align 8\l  %arrayidx5 = getelementptr inbounds double, ptr %12, i64 0\l  %13 = load double, ptr %arrayidx5, align 8\l  %14 = load ptr, ptr %x, align 8\l  %15 = load i32, ptr %j.addr, align 4\l  %idxprom6 = sext i32 %15 to i64\l  %arrayidx7 = getelementptr inbounds ptr, ptr %14, i64 %idxprom6\l  %16 = load ptr, ptr %arrayidx7, align 8\l  %arrayidx8 = getelementptr inbounds double, ptr %16, i64 0\l  %17 = load double, ptr %arrayidx8, align 8\l  %sub = fsub double %13, %17\l  store double %sub, ptr %delx, align 8\l  %18 = load ptr, ptr %xi, align 8\l  %arrayidx9 = getelementptr inbounds double, ptr %18, i64 1\l  %19 = load double, ptr %arrayidx9, align 8\l  %20 = load ptr, ptr %x, align 8\l  %21 = load i32, ptr %j.addr, align 4\l  %idxprom10 = sext i32 %21 to i64\l  %arrayidx11 = getelementptr inbounds ptr, ptr %20, i64 %idxprom10\l  %22 = load ptr, ptr %arrayidx11, align 8\l  %arrayidx12 = getelementptr inbounds double, ptr %22, i64 1\l  %23 = load double, ptr %arrayidx12, align 8\l  %sub13 = fsub double %19, %23\l  store double %sub13, ptr %dely, align 8\l  %24 = load ptr, ptr %xi, align 8\l  %arrayidx14 = getelementptr inbounds double, ptr %24, i64 2\l  %25 = load double, ptr %arrayidx14, align 8\l  %26 = load ptr, ptr %x, align 8\l  %27 = load i32, ptr %j.addr, align 4\l  %idxprom15 = sext i32 %27 to i64\l  %arrayidx16 = getelementptr inbounds ptr, ptr %26, i64 %idxprom15\l  %28 = load ptr, ptr %arrayidx16, align 8\l  %arrayidx17 = getelementptr inbounds double, ptr %28, i64 2\l  %29 = load double, ptr %arrayidx17, align 8\l  %sub18 = fsub double %25, %29\l  store double %sub18, ptr %delz, align 8\l  %30 = load double, ptr %delx, align 8\l  %31 = load double, ptr %delx, align 8\l  %32 = load double, ptr %dely, align 8\l  %33 = load double, ptr %dely, align 8\l  %mul19 = fmul double %32, %33\l  %34 = call double @llvm.fmuladd.f64(double %30, double %31, double %mul19)\l  %35 = load double, ptr %delz, align 8\l  %36 = load double, ptr %delz, align 8\l  %37 = call double @llvm.fmuladd.f64(double %35, double %36, double %34)\l  store double %37, ptr %rsqmin, align 8\l  br label %while.cond\l}"];
	Node0x561837d38ca0 -> Node0x561837d3b8b0[tooltip="if.end -> while.cond\nProbability 100.00%" ];
	Node0x561837d3b8b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{while.cond:\l|  %38 = load ptr, ptr %sametag, align 8\l  %39 = load i32, ptr %j.addr, align 4\l  %idxprom20 = sext i32 %39 to i64\l  %arrayidx21 = getelementptr inbounds i32, ptr %38, i64 %idxprom20\l  %40 = load i32, ptr %arrayidx21, align 4\l  %cmp22 = icmp sge i32 %40, 0\l  br i1 %cmp22, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x561837d3b8b0:s0 -> Node0x561837d3bcc0[tooltip="while.cond -> while.body\nProbability 96.88%" ];
	Node0x561837d3b8b0:s1 -> Node0x561837d39450[tooltip="while.cond -> while.end\nProbability 3.12%" ];
	Node0x561837d3bcc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{while.body:\l|  %41 = load ptr, ptr %sametag, align 8\l  %42 = load i32, ptr %j.addr, align 4\l  %idxprom23 = sext i32 %42 to i64\l  %arrayidx24 = getelementptr inbounds i32, ptr %41, i64 %idxprom23\l  %43 = load i32, ptr %arrayidx24, align 4\l  store i32 %43, ptr %j.addr, align 4\l  %44 = load ptr, ptr %xi, align 8\l  %arrayidx25 = getelementptr inbounds double, ptr %44, i64 0\l  %45 = load double, ptr %arrayidx25, align 8\l  %46 = load ptr, ptr %x, align 8\l  %47 = load i32, ptr %j.addr, align 4\l  %idxprom26 = sext i32 %47 to i64\l  %arrayidx27 = getelementptr inbounds ptr, ptr %46, i64 %idxprom26\l  %48 = load ptr, ptr %arrayidx27, align 8\l  %arrayidx28 = getelementptr inbounds double, ptr %48, i64 0\l  %49 = load double, ptr %arrayidx28, align 8\l  %sub29 = fsub double %45, %49\l  store double %sub29, ptr %delx, align 8\l  %50 = load ptr, ptr %xi, align 8\l  %arrayidx30 = getelementptr inbounds double, ptr %50, i64 1\l  %51 = load double, ptr %arrayidx30, align 8\l  %52 = load ptr, ptr %x, align 8\l  %53 = load i32, ptr %j.addr, align 4\l  %idxprom31 = sext i32 %53 to i64\l  %arrayidx32 = getelementptr inbounds ptr, ptr %52, i64 %idxprom31\l  %54 = load ptr, ptr %arrayidx32, align 8\l  %arrayidx33 = getelementptr inbounds double, ptr %54, i64 1\l  %55 = load double, ptr %arrayidx33, align 8\l  %sub34 = fsub double %51, %55\l  store double %sub34, ptr %dely, align 8\l  %56 = load ptr, ptr %xi, align 8\l  %arrayidx35 = getelementptr inbounds double, ptr %56, i64 2\l  %57 = load double, ptr %arrayidx35, align 8\l  %58 = load ptr, ptr %x, align 8\l  %59 = load i32, ptr %j.addr, align 4\l  %idxprom36 = sext i32 %59 to i64\l  %arrayidx37 = getelementptr inbounds ptr, ptr %58, i64 %idxprom36\l  %60 = load ptr, ptr %arrayidx37, align 8\l  %arrayidx38 = getelementptr inbounds double, ptr %60, i64 2\l  %61 = load double, ptr %arrayidx38, align 8\l  %sub39 = fsub double %57, %61\l  store double %sub39, ptr %delz, align 8\l  %62 = load double, ptr %delx, align 8\l  %63 = load double, ptr %delx, align 8\l  %64 = load double, ptr %dely, align 8\l  %65 = load double, ptr %dely, align 8\l  %mul40 = fmul double %64, %65\l  %66 = call double @llvm.fmuladd.f64(double %62, double %63, double %mul40)\l  %67 = load double, ptr %delz, align 8\l  %68 = load double, ptr %delz, align 8\l  %69 = call double @llvm.fmuladd.f64(double %67, double %68, double %66)\l  store double %69, ptr %rsq, align 8\l  %70 = load double, ptr %rsq, align 8\l  %71 = load double, ptr %rsqmin, align 8\l  %cmp41 = fcmp olt double %70, %71\l  br i1 %cmp41, label %if.then42, label %if.end43\l|{<s0>T|<s1>F}}"];
	Node0x561837d3bcc0:s0 -> Node0x561837d3ea90[tooltip="while.body -> if.then42\nProbability 50.00%" ];
	Node0x561837d3bcc0:s1 -> Node0x561837d3eae0[tooltip="while.body -> if.end43\nProbability 50.00%" ];
	Node0x561837d3ea90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then42:\l|  %72 = load double, ptr %rsq, align 8\l  store double %72, ptr %rsqmin, align 8\l  %73 = load i32, ptr %j.addr, align 4\l  store i32 %73, ptr %closest, align 4\l  br label %if.end43\l}"];
	Node0x561837d3ea90 -> Node0x561837d3eae0[tooltip="if.then42 -> if.end43\nProbability 100.00%" ];
	Node0x561837d3eae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end43:\l|  br label %while.cond, !llvm.loop !6\l}"];
	Node0x561837d3eae0 -> Node0x561837d3b8b0[tooltip="if.end43 -> while.cond\nProbability 100.00%" ];
	Node0x561837d39450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{while.end:\l|  %74 = load i32, ptr %closest, align 4\l  store i32 %74, ptr %retval, align 4\l  br label %return\l}"];
	Node0x561837d39450 -> Node0x561837d38f40[tooltip="while.end -> return\nProbability 100.00%" ];
	Node0x561837d38f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{return:\l|  %75 = load i32, ptr %retval, align 4\l  ret i32 %75\l}"];
}
