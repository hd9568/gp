digraph "CFG for '_ZN9LAMMPS_NS11PairCoulDSF6singleEiiiidddRd' function" {
	label="CFG for '_ZN9LAMMPS_NS11PairCoulDSF6singleEiiiidddRd' function";

	Node0x56228222cda0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %i.addr = alloca i32, align 4\l  %j.addr = alloca i32, align 4\l  %.addr = alloca i32, align 4\l  %.addr1 = alloca i32, align 4\l  %rsq.addr = alloca double, align 8\l  %factor_coul.addr = alloca double, align 8\l  %.addr2 = alloca double, align 8\l  %fforce.addr = alloca ptr, align 8\l  %r = alloca double, align 8\l  %erfcc = alloca double, align 8\l  %erfcd = alloca double, align 8\l  %prefactor = alloca double, align 8\l  %t = alloca double, align 8\l  %forcecoul = alloca double, align 8\l  %phicoul = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store i32 %i, ptr %i.addr, align 4\l  store i32 %j, ptr %j.addr, align 4\l  store i32 %0, ptr %.addr, align 4\l  store i32 %1, ptr %.addr1, align 4\l  store double %rsq, ptr %rsq.addr, align 8\l  store double %factor_coul, ptr %factor_coul.addr, align 8\l  store double %2, ptr %.addr2, align 8\l  store ptr %fforce, ptr %fforce.addr, align 8\l  %this3 = load ptr, ptr %this.addr, align 8\l  store double 0.000000e+00, ptr %phicoul, align 8\l  store double 0.000000e+00, ptr %forcecoul, align 8\l  %3 = load double, ptr %rsq.addr, align 8\l  %cut_coulsq = getelementptr inbounds %\"class.LAMMPS_NS::PairCoulDSF\", ptr\l... %this3, i32 0, i32 2\l  %4 = load double, ptr %cut_coulsq, align 8\l  %cmp = fcmp olt double %3, %4\l  br i1 %cmp, label %if.then, label %if.end46\l|{<s0>T|<s1>F}}"];
	Node0x56228222cda0:s0 -> Node0x56228222d1f0[tooltip="entry -> if.then\nProbability 50.00%" ];
	Node0x56228222cda0:s1 -> Node0x56228222d260[tooltip="entry -> if.end46\nProbability 50.00%" ];
	Node0x56228222d1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then:\l|  %5 = load double, ptr %rsq.addr, align 8\l  %call = call double @sqrt(double noundef %5) #9\l  store double %call, ptr %r, align 8\l  %force = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this3,\l... i32 0, i32 11\l  %6 = load ptr, ptr %force, align 8\l  %7 = load ptr, ptr %6, align 8\l  %qqrd2e = getelementptr inbounds %\"class.LAMMPS_NS::Force\", ptr %7, i32 0,\l... i32 12\l  %8 = load double, ptr %qqrd2e, align 8\l  %atom = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this3, i32\l... 0, i32 6\l  %9 = load ptr, ptr %atom, align 8\l  %10 = load ptr, ptr %9, align 8\l  %q = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %10, i32 0, i32 41\l  %11 = load ptr, ptr %q, align 8\l  %12 = load i32, ptr %i.addr, align 4\l  %idxprom = sext i32 %12 to i64\l  %arrayidx = getelementptr inbounds double, ptr %11, i64 %idxprom\l  %13 = load double, ptr %arrayidx, align 8\l  %mul = fmul double %8, %13\l  %atom4 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this3,\l... i32 0, i32 6\l  %14 = load ptr, ptr %atom4, align 8\l  %15 = load ptr, ptr %14, align 8\l  %q5 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %15, i32 0, i32 41\l  %16 = load ptr, ptr %q5, align 8\l  %17 = load i32, ptr %j.addr, align 4\l  %idxprom6 = sext i32 %17 to i64\l  %arrayidx7 = getelementptr inbounds double, ptr %16, i64 %idxprom6\l  %18 = load double, ptr %arrayidx7, align 8\l  %mul8 = fmul double %mul, %18\l  %19 = load double, ptr %r, align 8\l  %div = fdiv double %mul8, %19\l  store double %div, ptr %prefactor, align 8\l  %alpha = getelementptr inbounds %\"class.LAMMPS_NS::PairCoulDSF\", ptr %this3,\l... i32 0, i32 3\l  %20 = load double, ptr %alpha, align 8\l  %fneg = fneg double %20\l  %alpha9 = getelementptr inbounds %\"class.LAMMPS_NS::PairCoulDSF\", ptr\l... %this3, i32 0, i32 3\l  %21 = load double, ptr %alpha9, align 8\l  %mul10 = fmul double %fneg, %21\l  %22 = load double, ptr %rsq.addr, align 8\l  %mul11 = fmul double %mul10, %22\l  %call12 = call double @exp(double noundef %mul11) #9\l  store double %call12, ptr %erfcd, align 8\l  %alpha13 = getelementptr inbounds %\"class.LAMMPS_NS::PairCoulDSF\", ptr\l... %this3, i32 0, i32 3\l  %23 = load double, ptr %alpha13, align 8\l  %mul14 = fmul double 0x3FD4F740A93D7B8C, %23\l  %24 = load double, ptr %r, align 8\l  %25 = call double @llvm.fmuladd.f64(double %mul14, double %24, double\l... 1.000000e+00)\l  %div16 = fdiv double 1.000000e+00, %25\l  store double %div16, ptr %t, align 8\l  %26 = load double, ptr %t, align 8\l  %27 = load double, ptr %t, align 8\l  %28 = load double, ptr %t, align 8\l  %29 = load double, ptr %t, align 8\l  %30 = load double, ptr %t, align 8\l  %31 = call double @llvm.fmuladd.f64(double %30, double 0x3FF0FB844255A12D,\l... double 0xBFF7401C57014C39)\l  %32 = call double @llvm.fmuladd.f64(double %29, double %31, double\l... 0x3FF6BE1C55BAE157)\l  %33 = call double @llvm.fmuladd.f64(double %28, double %32, double\l... 0xBFD23531CC3C1469)\l  %34 = call double @llvm.fmuladd.f64(double %27, double %33, double\l... 0x3FD04F20C6EC5A7E)\l  %mul21 = fmul double %26, %34\l  %35 = load double, ptr %erfcd, align 8\l  %mul22 = fmul double %mul21, %35\l  store double %mul22, ptr %erfcc, align 8\l  %36 = load double, ptr %prefactor, align 8\l  %37 = load double, ptr %erfcc, align 8\l  %38 = load double, ptr %r, align 8\l  %div23 = fdiv double %37, %38\l  %alpha24 = getelementptr inbounds %\"class.LAMMPS_NS::PairCoulDSF\", ptr\l... %this3, i32 0, i32 3\l  %39 = load double, ptr %alpha24, align 8\l  %mul25 = fmul double 2.000000e+00, %39\l  %div26 = fdiv double %mul25, 0x3FFC5BF891B4EF6B\l  %40 = load double, ptr %erfcd, align 8\l  %41 = call double @llvm.fmuladd.f64(double %div26, double %40, double %div23)\l  %42 = load double, ptr %r, align 8\l  %f_shift = getelementptr inbounds %\"class.LAMMPS_NS::PairCoulDSF\", ptr\l... %this3, i32 0, i32 4\l  %43 = load double, ptr %f_shift, align 8\l  %44 = call double @llvm.fmuladd.f64(double %42, double %43, double %41)\l  %mul29 = fmul double %36, %44\l  %45 = load double, ptr %r, align 8\l  %mul30 = fmul double %mul29, %45\l  store double %mul30, ptr %forcecoul, align 8\l  %46 = load double, ptr %factor_coul.addr, align 8\l  %cmp31 = fcmp olt double %46, 1.000000e+00\l  br i1 %cmp31, label %if.then32, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x56228222d1f0:s0 -> Node0x562282231ef0[tooltip="if.then -> if.then32\nProbability 50.00%" ];
	Node0x56228222d1f0:s1 -> Node0x562282231f40[tooltip="if.then -> if.end\nProbability 50.00%" ];
	Node0x562282231ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.then32:\l|  %47 = load double, ptr %factor_coul.addr, align 8\l  %sub = fsub double 1.000000e+00, %47\l  %48 = load double, ptr %prefactor, align 8\l  %49 = load double, ptr %forcecoul, align 8\l  %neg = fneg double %sub\l  %50 = call double @llvm.fmuladd.f64(double %neg, double %48, double %49)\l  store double %50, ptr %forcecoul, align 8\l  br label %if.end\l}"];
	Node0x562282231ef0 -> Node0x562282231f40[tooltip="if.then32 -> if.end\nProbability 100.00%" ];
	Node0x562282231f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end:\l|  %51 = load double, ptr %prefactor, align 8\l  %52 = load double, ptr %erfcc, align 8\l  %53 = load double, ptr %r, align 8\l  %e_shift = getelementptr inbounds %\"class.LAMMPS_NS::PairCoulDSF\", ptr\l... %this3, i32 0, i32 5\l  %54 = load double, ptr %e_shift, align 8\l  %neg35 = fneg double %53\l  %55 = call double @llvm.fmuladd.f64(double %neg35, double %54, double %52)\l  %56 = load double, ptr %rsq.addr, align 8\l  %f_shift36 = getelementptr inbounds %\"class.LAMMPS_NS::PairCoulDSF\", ptr\l... %this3, i32 0, i32 4\l  %57 = load double, ptr %f_shift36, align 8\l  %neg38 = fneg double %56\l  %58 = call double @llvm.fmuladd.f64(double %neg38, double %57, double %55)\l  %mul39 = fmul double %51, %58\l  store double %mul39, ptr %phicoul, align 8\l  %59 = load double, ptr %factor_coul.addr, align 8\l  %cmp40 = fcmp olt double %59, 1.000000e+00\l  br i1 %cmp40, label %if.then41, label %if.end45\l|{<s0>T|<s1>F}}"];
	Node0x562282231f40:s0 -> Node0x562282233870[tooltip="if.end -> if.then41\nProbability 50.00%" ];
	Node0x562282231f40:s1 -> Node0x5622822338c0[tooltip="if.end -> if.end45\nProbability 50.00%" ];
	Node0x562282233870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.then41:\l|  %60 = load double, ptr %factor_coul.addr, align 8\l  %sub42 = fsub double 1.000000e+00, %60\l  %61 = load double, ptr %prefactor, align 8\l  %62 = load double, ptr %phicoul, align 8\l  %neg44 = fneg double %sub42\l  %63 = call double @llvm.fmuladd.f64(double %neg44, double %61, double %62)\l  store double %63, ptr %phicoul, align 8\l  br label %if.end45\l}"];
	Node0x562282233870 -> Node0x5622822338c0[tooltip="if.then41 -> if.end45\nProbability 100.00%" ];
	Node0x5622822338c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end45:\l|  br label %if.end46\l}"];
	Node0x5622822338c0 -> Node0x56228222d260[tooltip="if.end45 -> if.end46\nProbability 100.00%" ];
	Node0x56228222d260 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end46:\l|  %64 = load double, ptr %forcecoul, align 8\l  %65 = load double, ptr %rsq.addr, align 8\l  %div47 = fdiv double %64, %65\l  %66 = load ptr, ptr %fforce.addr, align 8\l  store double %div47, ptr %66, align 8\l  %67 = load double, ptr %phicoul, align 8\l  ret double %67\l}"];
}
