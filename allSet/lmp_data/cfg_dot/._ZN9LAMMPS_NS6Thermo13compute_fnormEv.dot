digraph "CFG for '_ZN9LAMMPS_NS6Thermo13compute_fnormEv' function" {
	label="CFG for '_ZN9LAMMPS_NS6Thermo13compute_fnormEv' function";

	Node0x55bd40507010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %f = alloca ptr, align 8\l  %nlocal = alloca i32, align 4\l  %dot = alloca double, align 8\l  %i = alloca i32, align 4\l  %dotall = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %atom = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1, i32\l... 0, i32 6\l  %0 = load ptr, ptr %atom, align 8\l  %1 = load ptr, ptr %0, align 8\l  %f2 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %1, i32 0, i32 39\l  %2 = load ptr, ptr %f2, align 8\l  store ptr %2, ptr %f, align 8\l  %atom3 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %3 = load ptr, ptr %atom3, align 8\l  %4 = load ptr, ptr %3, align 8\l  %nlocal4 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %4, i32 0,\l... i32 4\l  %5 = load i32, ptr %nlocal4, align 8\l  store i32 %5, ptr %nlocal, align 4\l  store double 0.000000e+00, ptr %dot, align 8\l  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x55bd40507010 -> Node0x55bd403189d0[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x55bd403189d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %6 = load i32, ptr %i, align 4\l  %7 = load i32, ptr %nlocal, align 4\l  %cmp = icmp slt i32 %6, %7\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x55bd403189d0:s0 -> Node0x55bd403171f0[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x55bd403189d0:s1 -> Node0x55bd40315a10[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x55bd403171f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %8 = load ptr, ptr %f, align 8\l  %9 = load i32, ptr %i, align 4\l  %idxprom = sext i32 %9 to i64\l  %arrayidx = getelementptr inbounds ptr, ptr %8, i64 %idxprom\l  %10 = load ptr, ptr %arrayidx, align 8\l  %arrayidx5 = getelementptr inbounds double, ptr %10, i64 0\l  %11 = load double, ptr %arrayidx5, align 8\l  %12 = load ptr, ptr %f, align 8\l  %13 = load i32, ptr %i, align 4\l  %idxprom6 = sext i32 %13 to i64\l  %arrayidx7 = getelementptr inbounds ptr, ptr %12, i64 %idxprom6\l  %14 = load ptr, ptr %arrayidx7, align 8\l  %arrayidx8 = getelementptr inbounds double, ptr %14, i64 0\l  %15 = load double, ptr %arrayidx8, align 8\l  %16 = load ptr, ptr %f, align 8\l  %17 = load i32, ptr %i, align 4\l  %idxprom9 = sext i32 %17 to i64\l  %arrayidx10 = getelementptr inbounds ptr, ptr %16, i64 %idxprom9\l  %18 = load ptr, ptr %arrayidx10, align 8\l  %arrayidx11 = getelementptr inbounds double, ptr %18, i64 1\l  %19 = load double, ptr %arrayidx11, align 8\l  %20 = load ptr, ptr %f, align 8\l  %21 = load i32, ptr %i, align 4\l  %idxprom12 = sext i32 %21 to i64\l  %arrayidx13 = getelementptr inbounds ptr, ptr %20, i64 %idxprom12\l  %22 = load ptr, ptr %arrayidx13, align 8\l  %arrayidx14 = getelementptr inbounds double, ptr %22, i64 1\l  %23 = load double, ptr %arrayidx14, align 8\l  %mul15 = fmul double %19, %23\l  %24 = call double @llvm.fmuladd.f64(double %11, double %15, double %mul15)\l  %25 = load ptr, ptr %f, align 8\l  %26 = load i32, ptr %i, align 4\l  %idxprom16 = sext i32 %26 to i64\l  %arrayidx17 = getelementptr inbounds ptr, ptr %25, i64 %idxprom16\l  %27 = load ptr, ptr %arrayidx17, align 8\l  %arrayidx18 = getelementptr inbounds double, ptr %27, i64 2\l  %28 = load double, ptr %arrayidx18, align 8\l  %29 = load ptr, ptr %f, align 8\l  %30 = load i32, ptr %i, align 4\l  %idxprom19 = sext i32 %30 to i64\l  %arrayidx20 = getelementptr inbounds ptr, ptr %29, i64 %idxprom19\l  %31 = load ptr, ptr %arrayidx20, align 8\l  %arrayidx21 = getelementptr inbounds double, ptr %31, i64 2\l  %32 = load double, ptr %arrayidx21, align 8\l  %33 = call double @llvm.fmuladd.f64(double %28, double %32, double %24)\l  %34 = load double, ptr %dot, align 8\l  %add = fadd double %34, %33\l  store double %add, ptr %dot, align 8\l  br label %for.inc\l}"];
	Node0x55bd403171f0 -> Node0x55bd40509dd0[tooltip="for.body -> for.inc\nProbability 100.00%" ];
	Node0x55bd40509dd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %35 = load i32, ptr %i, align 4\l  %inc = add nsw i32 %35, 1\l  store i32 %inc, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x55bd40509dd0 -> Node0x55bd403189d0[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x55bd40315a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  %world = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 16\l  %36 = load ptr, ptr %world, align 8\l  %37 = load ptr, ptr %36, align 8\l  %call = call i32 @MPI_Allreduce(ptr noundef %dot, ptr noundef %dotall, i32\l... noundef 1, ptr noundef @ompi_mpi_double, ptr noundef @ompi_mpi_op_sum, ptr\l... noundef %37)\l  %38 = load double, ptr %dotall, align 8\l  %call22 = call double @sqrt(double noundef %38) #15\l  %dvalue = getelementptr inbounds %\"class.LAMMPS_NS::Thermo\", ptr %this1, i32\l... 0, i32 35\l  store double %call22, ptr %dvalue, align 8\l  ret void\l}"];
}
