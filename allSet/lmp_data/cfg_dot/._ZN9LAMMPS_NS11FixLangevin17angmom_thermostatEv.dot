digraph "CFG for '_ZN9LAMMPS_NS11FixLangevin17angmom_thermostatEv' function" {
	label="CFG for '_ZN9LAMMPS_NS11FixLangevin17angmom_thermostatEv' function";

	Node0x55e6b2354680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %gamma1 = alloca double, align 8\l  %gamma2 = alloca double, align 8\l  %boltz = alloca double, align 8\l  %dt = alloca double, align 8\l  %mvv2e = alloca double, align 8\l  %ftm2v = alloca double, align 8\l  %bonus = alloca ptr, align 8\l  %torque = alloca ptr, align 8\l  %angmom = alloca ptr, align 8\l  %rmass = alloca ptr, align 8\l  %ellipsoid = alloca ptr, align 8\l  %mask = alloca ptr, align 8\l  %type = alloca ptr, align 8\l  %nlocal = alloca i32, align 4\l  %inertia = alloca [3 x double], align 16\l  %omega = alloca [3 x double], align 16\l  %tran = alloca [3 x double], align 16\l  %shape = alloca ptr, align 8\l  %quat = alloca ptr, align 8\l  %i = alloca i32, align 4\l  store ptr %this, ptr %this.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %force = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 11\l  %0 = load ptr, ptr %force, align 8\l  %1 = load ptr, ptr %0, align 8\l  %boltz2 = getelementptr inbounds %\"class.LAMMPS_NS::Force\", ptr %1, i32 0,\l... i32 1\l  %2 = load double, ptr %boltz2, align 8\l  store double %2, ptr %boltz, align 8\l  %update = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 7\l  %3 = load ptr, ptr %update, align 8\l  %4 = load ptr, ptr %3, align 8\l  %dt3 = getelementptr inbounds %\"class.LAMMPS_NS::Update\", ptr %4, i32 0, i32\l... 1\l  %5 = load double, ptr %dt3, align 8\l  store double %5, ptr %dt, align 8\l  %force4 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 11\l  %6 = load ptr, ptr %force4, align 8\l  %7 = load ptr, ptr %6, align 8\l  %mvv2e5 = getelementptr inbounds %\"class.LAMMPS_NS::Force\", ptr %7, i32 0,\l... i32 3\l  %8 = load double, ptr %mvv2e5, align 8\l  store double %8, ptr %mvv2e, align 8\l  %force6 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 11\l  %9 = load ptr, ptr %force6, align 8\l  %10 = load ptr, ptr %9, align 8\l  %ftm2v7 = getelementptr inbounds %\"class.LAMMPS_NS::Force\", ptr %10, i32 0,\l... i32 4\l  %11 = load double, ptr %ftm2v7, align 8\l  store double %11, ptr %ftm2v, align 8\l  %avec = getelementptr inbounds %\"class.LAMMPS_NS::FixLangevin\", ptr %this1,\l... i32 0, i32 25\l  %12 = load ptr, ptr %avec, align 8\l  %bonus8 = getelementptr inbounds %\"class.LAMMPS_NS::AtomVecEllipsoid\", ptr\l... %12, i32 0, i32 1\l  %13 = load ptr, ptr %bonus8, align 8\l  store ptr %13, ptr %bonus, align 8\l  %atom = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1, i32\l... 0, i32 6\l  %14 = load ptr, ptr %atom, align 8\l  %15 = load ptr, ptr %14, align 8\l  %torque9 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %15, i32 0,\l... i32 46\l  %16 = load ptr, ptr %torque9, align 8\l  store ptr %16, ptr %torque, align 8\l  %atom10 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %17 = load ptr, ptr %atom10, align 8\l  %18 = load ptr, ptr %17, align 8\l  %angmom11 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %18, i32 0,\l... i32 45\l  %19 = load ptr, ptr %angmom11, align 8\l  store ptr %19, ptr %angmom, align 8\l  %atom12 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %20 = load ptr, ptr %atom12, align 8\l  %21 = load ptr, ptr %20, align 8\l  %rmass13 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %21, i32 0,\l... i32 40\l  %22 = load ptr, ptr %rmass13, align 8\l  store ptr %22, ptr %rmass, align 8\l  %atom14 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %23 = load ptr, ptr %atom14, align 8\l  %24 = load ptr, ptr %23, align 8\l  %ellipsoid15 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %24, i32\l... 0, i32 47\l  %25 = load ptr, ptr %ellipsoid15, align 8\l  store ptr %25, ptr %ellipsoid, align 8\l  %atom16 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %26 = load ptr, ptr %atom16, align 8\l  %27 = load ptr, ptr %26, align 8\l  %mask17 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %27, i32 0,\l... i32 35\l  %28 = load ptr, ptr %mask17, align 8\l  store ptr %28, ptr %mask, align 8\l  %atom18 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %29 = load ptr, ptr %atom18, align 8\l  %30 = load ptr, ptr %29, align 8\l  %type19 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %30, i32 0,\l... i32 34\l  %31 = load ptr, ptr %type19, align 8\l  store ptr %31, ptr %type, align 8\l  %atom20 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %32 = load ptr, ptr %atom20, align 8\l  %33 = load ptr, ptr %32, align 8\l  %nlocal21 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %33, i32 0,\l... i32 4\l  %34 = load i32, ptr %nlocal21, align 8\l  store i32 %34, ptr %nlocal, align 4\l  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x55e6b2354680 -> Node0x55e6b2359a80[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x55e6b2359a80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %35 = load i32, ptr %i, align 4\l  %36 = load i32, ptr %nlocal, align 4\l  %cmp = icmp slt i32 %35, %36\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x55e6b2359a80:s0 -> Node0x55e6b2356d30[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x55e6b2359a80:s1 -> Node0x55e6b2356db0[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x55e6b2356d30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %37 = load ptr, ptr %mask, align 8\l  %38 = load i32, ptr %i, align 4\l  %idxprom = sext i32 %38 to i64\l  %arrayidx = getelementptr inbounds i32, ptr %37, i64 %idxprom\l  %39 = load i32, ptr %arrayidx, align 4\l  %groupbit = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32\l... 0, i32 4\l  %40 = load i32, ptr %groupbit, align 4\l  %and = and i32 %39, %40\l  %tobool = icmp ne i32 %and, 0\l  br i1 %tobool, label %if.then, label %if.end147\l|{<s0>T|<s1>F}}"];
	Node0x55e6b2356d30:s0 -> Node0x55e6b235a6e0[tooltip="for.body -> if.then\nProbability 62.50%" ];
	Node0x55e6b2356d30:s1 -> Node0x55e6b235a750[tooltip="for.body -> if.end147\nProbability 37.50%" ];
	Node0x55e6b235a6e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.then:\l|  %41 = load ptr, ptr %bonus, align 8\l  %42 = load ptr, ptr %ellipsoid, align 8\l  %43 = load i32, ptr %i, align 4\l  %idxprom22 = sext i32 %43 to i64\l  %arrayidx23 = getelementptr inbounds i32, ptr %42, i64 %idxprom22\l  %44 = load i32, ptr %arrayidx23, align 4\l  %idxprom24 = sext i32 %44 to i64\l  %arrayidx25 = getelementptr inbounds\l... %\"struct.LAMMPS_NS::AtomVecEllipsoid::Bonus\", ptr %41, i64 %idxprom24\l  %shape26 = getelementptr inbounds\l... %\"struct.LAMMPS_NS::AtomVecEllipsoid::Bonus\", ptr %arrayidx25, i32 0, i32 0\l  %arraydecay = getelementptr inbounds [3 x double], ptr %shape26, i64 0, i64 0\l  store ptr %arraydecay, ptr %shape, align 8\l  %45 = load ptr, ptr %rmass, align 8\l  %46 = load i32, ptr %i, align 4\l  %idxprom27 = sext i32 %46 to i64\l  %arrayidx28 = getelementptr inbounds double, ptr %45, i64 %idxprom27\l  %47 = load double, ptr %arrayidx28, align 8\l  %mul = fmul double 2.000000e-01, %47\l  %48 = load ptr, ptr %shape, align 8\l  %arrayidx29 = getelementptr inbounds double, ptr %48, i64 1\l  %49 = load double, ptr %arrayidx29, align 8\l  %50 = load ptr, ptr %shape, align 8\l  %arrayidx30 = getelementptr inbounds double, ptr %50, i64 1\l  %51 = load double, ptr %arrayidx30, align 8\l  %52 = load ptr, ptr %shape, align 8\l  %arrayidx32 = getelementptr inbounds double, ptr %52, i64 2\l  %53 = load double, ptr %arrayidx32, align 8\l  %54 = load ptr, ptr %shape, align 8\l  %arrayidx33 = getelementptr inbounds double, ptr %54, i64 2\l  %55 = load double, ptr %arrayidx33, align 8\l  %mul34 = fmul double %53, %55\l  %56 = call double @llvm.fmuladd.f64(double %49, double %51, double %mul34)\l  %mul35 = fmul double %mul, %56\l  %arrayidx36 = getelementptr inbounds [3 x double], ptr %inertia, i64 0, i64 0\l  store double %mul35, ptr %arrayidx36, align 16\l  %57 = load ptr, ptr %rmass, align 8\l  %58 = load i32, ptr %i, align 4\l  %idxprom37 = sext i32 %58 to i64\l  %arrayidx38 = getelementptr inbounds double, ptr %57, i64 %idxprom37\l  %59 = load double, ptr %arrayidx38, align 8\l  %mul39 = fmul double 2.000000e-01, %59\l  %60 = load ptr, ptr %shape, align 8\l  %arrayidx40 = getelementptr inbounds double, ptr %60, i64 0\l  %61 = load double, ptr %arrayidx40, align 8\l  %62 = load ptr, ptr %shape, align 8\l  %arrayidx41 = getelementptr inbounds double, ptr %62, i64 0\l  %63 = load double, ptr %arrayidx41, align 8\l  %64 = load ptr, ptr %shape, align 8\l  %arrayidx43 = getelementptr inbounds double, ptr %64, i64 2\l  %65 = load double, ptr %arrayidx43, align 8\l  %66 = load ptr, ptr %shape, align 8\l  %arrayidx44 = getelementptr inbounds double, ptr %66, i64 2\l  %67 = load double, ptr %arrayidx44, align 8\l  %mul45 = fmul double %65, %67\l  %68 = call double @llvm.fmuladd.f64(double %61, double %63, double %mul45)\l  %mul46 = fmul double %mul39, %68\l  %arrayidx47 = getelementptr inbounds [3 x double], ptr %inertia, i64 0, i64 1\l  store double %mul46, ptr %arrayidx47, align 8\l  %69 = load ptr, ptr %rmass, align 8\l  %70 = load i32, ptr %i, align 4\l  %idxprom48 = sext i32 %70 to i64\l  %arrayidx49 = getelementptr inbounds double, ptr %69, i64 %idxprom48\l  %71 = load double, ptr %arrayidx49, align 8\l  %mul50 = fmul double 2.000000e-01, %71\l  %72 = load ptr, ptr %shape, align 8\l  %arrayidx51 = getelementptr inbounds double, ptr %72, i64 0\l  %73 = load double, ptr %arrayidx51, align 8\l  %74 = load ptr, ptr %shape, align 8\l  %arrayidx52 = getelementptr inbounds double, ptr %74, i64 0\l  %75 = load double, ptr %arrayidx52, align 8\l  %76 = load ptr, ptr %shape, align 8\l  %arrayidx54 = getelementptr inbounds double, ptr %76, i64 1\l  %77 = load double, ptr %arrayidx54, align 8\l  %78 = load ptr, ptr %shape, align 8\l  %arrayidx55 = getelementptr inbounds double, ptr %78, i64 1\l  %79 = load double, ptr %arrayidx55, align 8\l  %mul56 = fmul double %77, %79\l  %80 = call double @llvm.fmuladd.f64(double %73, double %75, double %mul56)\l  %mul57 = fmul double %mul50, %80\l  %arrayidx58 = getelementptr inbounds [3 x double], ptr %inertia, i64 0, i64 2\l  store double %mul57, ptr %arrayidx58, align 16\l  %81 = load ptr, ptr %bonus, align 8\l  %82 = load ptr, ptr %ellipsoid, align 8\l  %83 = load i32, ptr %i, align 4\l  %idxprom59 = sext i32 %83 to i64\l  %arrayidx60 = getelementptr inbounds i32, ptr %82, i64 %idxprom59\l  %84 = load i32, ptr %arrayidx60, align 4\l  %idxprom61 = sext i32 %84 to i64\l  %arrayidx62 = getelementptr inbounds\l... %\"struct.LAMMPS_NS::AtomVecEllipsoid::Bonus\", ptr %81, i64 %idxprom61\l  %quat63 = getelementptr inbounds\l... %\"struct.LAMMPS_NS::AtomVecEllipsoid::Bonus\", ptr %arrayidx62, i32 0, i32 1\l  %arraydecay64 = getelementptr inbounds [4 x double], ptr %quat63, i64 0, i64\l... 0\l  store ptr %arraydecay64, ptr %quat, align 8\l  %85 = load ptr, ptr %angmom, align 8\l  %86 = load i32, ptr %i, align 4\l  %idxprom65 = sext i32 %86 to i64\l  %arrayidx66 = getelementptr inbounds ptr, ptr %85, i64 %idxprom65\l  %87 = load ptr, ptr %arrayidx66, align 8\l  %88 = load ptr, ptr %quat, align 8\l  %arraydecay67 = getelementptr inbounds [3 x double], ptr %inertia, i64 0,\l... i64 0\l  %arraydecay68 = getelementptr inbounds [3 x double], ptr %omega, i64 0, i64 0\l  call void @_ZN9MathExtra11mq_to_omegaEPdS0_S0_S0_(ptr noundef %87, ptr\l... noundef %88, ptr noundef %arraydecay67, ptr noundef %arraydecay68)\l  %tstyle = getelementptr inbounds %\"class.LAMMPS_NS::FixLangevin\", ptr\l... %this1, i32 0, i32 20\l  %89 = load i32, ptr %tstyle, align 8\l  %cmp69 = icmp eq i32 %89, 2\l  br i1 %cmp69, label %if.then70, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x55e6b235a6e0:s0 -> Node0x55e6b235f930[tooltip="if.then -> if.then70\nProbability 50.00%" ];
	Node0x55e6b235a6e0:s1 -> Node0x55e6b235f980[tooltip="if.then -> if.end\nProbability 50.00%" ];
	Node0x55e6b235f930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.then70:\l|  %tforce = getelementptr inbounds %\"class.LAMMPS_NS::FixLangevin\", ptr\l... %this1, i32 0, i32 29\l  %90 = load ptr, ptr %tforce, align 8\l  %91 = load i32, ptr %i, align 4\l  %idxprom71 = sext i32 %91 to i64\l  %arrayidx72 = getelementptr inbounds double, ptr %90, i64 %idxprom71\l  %92 = load double, ptr %arrayidx72, align 8\l  %call = call double @sqrt(double noundef %92) #12\l  %tsqrt = getelementptr inbounds %\"class.LAMMPS_NS::FixLangevin\", ptr %this1,\l... i32 0, i32 19\l  store double %call, ptr %tsqrt, align 8\l  br label %if.end\l}"];
	Node0x55e6b235f930 -> Node0x55e6b235f980[tooltip="if.then70 -> if.end\nProbability 100.00%" ];
	Node0x55e6b235f980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.end:\l|  %ascale = getelementptr inbounds %\"class.LAMMPS_NS::FixLangevin\", ptr\l... %this1, i32 0, i32 9\l  %93 = load double, ptr %ascale, align 8\l  %fneg = fneg double %93\l  %t_period = getelementptr inbounds %\"class.LAMMPS_NS::FixLangevin\", ptr\l... %this1, i32 0, i32 12\l  %94 = load double, ptr %t_period, align 8\l  %div = fdiv double %fneg, %94\l  %95 = load double, ptr %ftm2v, align 8\l  %div73 = fdiv double %div, %95\l  store double %div73, ptr %gamma1, align 8\l  %ascale74 = getelementptr inbounds %\"class.LAMMPS_NS::FixLangevin\", ptr\l... %this1, i32 0, i32 9\l  %96 = load double, ptr %ascale74, align 8\l  %mul75 = fmul double %96, 2.400000e+01\l  %97 = load double, ptr %boltz, align 8\l  %mul76 = fmul double %mul75, %97\l  %t_period77 = getelementptr inbounds %\"class.LAMMPS_NS::FixLangevin\", ptr\l... %this1, i32 0, i32 12\l  %98 = load double, ptr %t_period77, align 8\l  %div78 = fdiv double %mul76, %98\l  %99 = load double, ptr %dt, align 8\l  %div79 = fdiv double %div78, %99\l  %100 = load double, ptr %mvv2e, align 8\l  %div80 = fdiv double %div79, %100\l  %call81 = call double @sqrt(double noundef %div80) #12\l  %101 = load double, ptr %ftm2v, align 8\l  %div82 = fdiv double %call81, %101\l  store double %div82, ptr %gamma2, align 8\l  %ratio = getelementptr inbounds %\"class.LAMMPS_NS::FixLangevin\", ptr %this1,\l... i32 0, i32 16\l  %102 = load ptr, ptr %ratio, align 8\l  %103 = load ptr, ptr %type, align 8\l  %104 = load i32, ptr %i, align 4\l  %idxprom83 = sext i32 %104 to i64\l  %arrayidx84 = getelementptr inbounds i32, ptr %103, i64 %idxprom83\l  %105 = load i32, ptr %arrayidx84, align 4\l  %idxprom85 = sext i32 %105 to i64\l  %arrayidx86 = getelementptr inbounds double, ptr %102, i64 %idxprom85\l  %106 = load double, ptr %arrayidx86, align 8\l  %div87 = fdiv double 1.000000e+00, %106\l  %107 = load double, ptr %gamma1, align 8\l  %mul88 = fmul double %107, %div87\l  store double %mul88, ptr %gamma1, align 8\l  %ratio89 = getelementptr inbounds %\"class.LAMMPS_NS::FixLangevin\", ptr\l... %this1, i32 0, i32 16\l  %108 = load ptr, ptr %ratio89, align 8\l  %109 = load ptr, ptr %type, align 8\l  %110 = load i32, ptr %i, align 4\l  %idxprom90 = sext i32 %110 to i64\l  %arrayidx91 = getelementptr inbounds i32, ptr %109, i64 %idxprom90\l  %111 = load i32, ptr %arrayidx91, align 4\l  %idxprom92 = sext i32 %111 to i64\l  %arrayidx93 = getelementptr inbounds double, ptr %108, i64 %idxprom92\l  %112 = load double, ptr %arrayidx93, align 8\l  %call94 = call double @sqrt(double noundef %112) #12\l  %div95 = fdiv double 1.000000e+00, %call94\l  %tsqrt96 = getelementptr inbounds %\"class.LAMMPS_NS::FixLangevin\", ptr\l... %this1, i32 0, i32 19\l  %113 = load double, ptr %tsqrt96, align 8\l  %mul97 = fmul double %div95, %113\l  %114 = load double, ptr %gamma2, align 8\l  %mul98 = fmul double %114, %mul97\l  store double %mul98, ptr %gamma2, align 8\l  %arrayidx99 = getelementptr inbounds [3 x double], ptr %inertia, i64 0, i64 0\l  %115 = load double, ptr %arrayidx99, align 16\l  %call100 = call double @sqrt(double noundef %115) #12\l  %116 = load double, ptr %gamma2, align 8\l  %mul101 = fmul double %call100, %116\l  %random = getelementptr inbounds %\"class.LAMMPS_NS::FixLangevin\", ptr\l... %this1, i32 0, i32 36\l  %117 = load ptr, ptr %random, align 8\l  %call102 = call noundef double @_ZN9LAMMPS_NS7RanMars7uniformEv(ptr noundef\l... nonnull align 8 dereferenceable(240) %117)\l  %sub = fsub double %call102, 5.000000e-01\l  %mul103 = fmul double %mul101, %sub\l  %arrayidx104 = getelementptr inbounds [3 x double], ptr %tran, i64 0, i64 0\l  store double %mul103, ptr %arrayidx104, align 16\l  %arrayidx105 = getelementptr inbounds [3 x double], ptr %inertia, i64 0, i64\l... 1\l  %118 = load double, ptr %arrayidx105, align 8\l  %call106 = call double @sqrt(double noundef %118) #12\l  %119 = load double, ptr %gamma2, align 8\l  %mul107 = fmul double %call106, %119\l  %random108 = getelementptr inbounds %\"class.LAMMPS_NS::FixLangevin\", ptr\l... %this1, i32 0, i32 36\l  %120 = load ptr, ptr %random108, align 8\l  %call109 = call noundef double @_ZN9LAMMPS_NS7RanMars7uniformEv(ptr noundef\l... nonnull align 8 dereferenceable(240) %120)\l  %sub110 = fsub double %call109, 5.000000e-01\l  %mul111 = fmul double %mul107, %sub110\l  %arrayidx112 = getelementptr inbounds [3 x double], ptr %tran, i64 0, i64 1\l  store double %mul111, ptr %arrayidx112, align 8\l  %arrayidx113 = getelementptr inbounds [3 x double], ptr %inertia, i64 0, i64\l... 2\l  %121 = load double, ptr %arrayidx113, align 16\l  %call114 = call double @sqrt(double noundef %121) #12\l  %122 = load double, ptr %gamma2, align 8\l  %mul115 = fmul double %call114, %122\l  %random116 = getelementptr inbounds %\"class.LAMMPS_NS::FixLangevin\", ptr\l... %this1, i32 0, i32 36\l  %123 = load ptr, ptr %random116, align 8\l  %call117 = call noundef double @_ZN9LAMMPS_NS7RanMars7uniformEv(ptr noundef\l... nonnull align 8 dereferenceable(240) %123)\l  %sub118 = fsub double %call117, 5.000000e-01\l  %mul119 = fmul double %mul115, %sub118\l  %arrayidx120 = getelementptr inbounds [3 x double], ptr %tran, i64 0, i64 2\l  store double %mul119, ptr %arrayidx120, align 16\l  %arrayidx121 = getelementptr inbounds [3 x double], ptr %inertia, i64 0, i64\l... 0\l  %124 = load double, ptr %arrayidx121, align 16\l  %125 = load double, ptr %gamma1, align 8\l  %mul122 = fmul double %124, %125\l  %arrayidx123 = getelementptr inbounds [3 x double], ptr %omega, i64 0, i64 0\l  %126 = load double, ptr %arrayidx123, align 16\l  %arrayidx125 = getelementptr inbounds [3 x double], ptr %tran, i64 0, i64 0\l  %127 = load double, ptr %arrayidx125, align 16\l  %128 = call double @llvm.fmuladd.f64(double %mul122, double %126, double\l... %127)\l  %129 = load ptr, ptr %torque, align 8\l  %130 = load i32, ptr %i, align 4\l  %idxprom126 = sext i32 %130 to i64\l  %arrayidx127 = getelementptr inbounds ptr, ptr %129, i64 %idxprom126\l  %131 = load ptr, ptr %arrayidx127, align 8\l  %arrayidx128 = getelementptr inbounds double, ptr %131, i64 0\l  %132 = load double, ptr %arrayidx128, align 8\l  %add = fadd double %132, %128\l  store double %add, ptr %arrayidx128, align 8\l  %arrayidx129 = getelementptr inbounds [3 x double], ptr %inertia, i64 0, i64\l... 1\l  %133 = load double, ptr %arrayidx129, align 8\l  %134 = load double, ptr %gamma1, align 8\l  %mul130 = fmul double %133, %134\l  %arrayidx131 = getelementptr inbounds [3 x double], ptr %omega, i64 0, i64 1\l  %135 = load double, ptr %arrayidx131, align 8\l  %arrayidx133 = getelementptr inbounds [3 x double], ptr %tran, i64 0, i64 1\l  %136 = load double, ptr %arrayidx133, align 8\l  %137 = call double @llvm.fmuladd.f64(double %mul130, double %135, double\l... %136)\l  %138 = load ptr, ptr %torque, align 8\l  %139 = load i32, ptr %i, align 4\l  %idxprom134 = sext i32 %139 to i64\l  %arrayidx135 = getelementptr inbounds ptr, ptr %138, i64 %idxprom134\l  %140 = load ptr, ptr %arrayidx135, align 8\l  %arrayidx136 = getelementptr inbounds double, ptr %140, i64 1\l  %141 = load double, ptr %arrayidx136, align 8\l  %add137 = fadd double %141, %137\l  store double %add137, ptr %arrayidx136, align 8\l  %arrayidx138 = getelementptr inbounds [3 x double], ptr %inertia, i64 0, i64\l... 2\l  %142 = load double, ptr %arrayidx138, align 16\l  %143 = load double, ptr %gamma1, align 8\l  %mul139 = fmul double %142, %143\l  %arrayidx140 = getelementptr inbounds [3 x double], ptr %omega, i64 0, i64 2\l  %144 = load double, ptr %arrayidx140, align 16\l  %arrayidx142 = getelementptr inbounds [3 x double], ptr %tran, i64 0, i64 2\l  %145 = load double, ptr %arrayidx142, align 16\l  %146 = call double @llvm.fmuladd.f64(double %mul139, double %144, double\l... %145)\l  %147 = load ptr, ptr %torque, align 8\l  %148 = load i32, ptr %i, align 4\l  %idxprom143 = sext i32 %148 to i64\l  %arrayidx144 = getelementptr inbounds ptr, ptr %147, i64 %idxprom143\l  %149 = load ptr, ptr %arrayidx144, align 8\l  %arrayidx145 = getelementptr inbounds double, ptr %149, i64 2\l  %150 = load double, ptr %arrayidx145, align 8\l  %add146 = fadd double %150, %146\l  store double %add146, ptr %arrayidx145, align 8\l  br label %if.end147\l}"];
	Node0x55e6b235f980 -> Node0x55e6b235a750[tooltip="if.end -> if.end147\nProbability 100.00%" ];
	Node0x55e6b235a750 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end147:\l|  br label %for.inc\l}"];
	Node0x55e6b235a750 -> Node0x55e6b235e660[tooltip="if.end147 -> for.inc\nProbability 100.00%" ];
	Node0x55e6b235e660 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %151 = load i32, ptr %i, align 4\l  %inc = add nsw i32 %151, 1\l  store i32 %inc, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x55e6b235e660 -> Node0x55e6b2359a80[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x55e6b2356db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  ret void\l}"];
}
