digraph "CFG for '_ZN9LAMMPS_NS7FixHalt7bondmaxEv' function" {
	label="CFG for '_ZN9LAMMPS_NS7FixHalt7bondmaxEv' function";

	Node0x5603f57fdf00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %x = alloca ptr, align 8\l  %bondlist = alloca ptr, align 8\l  %nbondlist = alloca i32, align 4\l  %i1 = alloca i32, align 4\l  %i2 = alloca i32, align 4\l  %delx = alloca double, align 8\l  %dely = alloca double, align 8\l  %delz = alloca double, align 8\l  %rsq = alloca double, align 8\l  %maxone = alloca double, align 8\l  %n = alloca i32, align 4\l  %maxall = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %atom = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1, i32\l... 0, i32 6\l  %0 = load ptr, ptr %atom, align 8\l  %1 = load ptr, ptr %0, align 8\l  %x2 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %1, i32 0, i32 37\l  %2 = load ptr, ptr %x2, align 8\l  store ptr %2, ptr %x, align 8\l  %neighbor = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 8\l  %3 = load ptr, ptr %neighbor, align 8\l  %4 = load ptr, ptr %3, align 8\l  %bondlist3 = getelementptr inbounds %\"class.LAMMPS_NS::Neighbor\", ptr %4,\l... i32 0, i32 57\l  %5 = load ptr, ptr %bondlist3, align 8\l  store ptr %5, ptr %bondlist, align 8\l  %neighbor4 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr\l... %this1, i32 0, i32 8\l  %6 = load ptr, ptr %neighbor4, align 8\l  %7 = load ptr, ptr %6, align 8\l  %nbondlist5 = getelementptr inbounds %\"class.LAMMPS_NS::Neighbor\", ptr %7,\l... i32 0, i32 55\l  %8 = load i32, ptr %nbondlist5, align 8\l  store i32 %8, ptr %nbondlist, align 4\l  store double 0.000000e+00, ptr %maxone, align 8\l  store i32 0, ptr %n, align 4\l  br label %for.cond\l}"];
	Node0x5603f57fdf00 -> Node0x5603f578ed20[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x5603f578ed20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %9 = load i32, ptr %n, align 4\l  %10 = load i32, ptr %nbondlist, align 4\l  %cmp = icmp slt i32 %9, %10\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5603f578ed20:s0 -> Node0x5603f5800420[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x5603f578ed20:s1 -> Node0x5603f57fe590[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x5603f5800420 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %11 = load ptr, ptr %bondlist, align 8\l  %12 = load i32, ptr %n, align 4\l  %idxprom = sext i32 %12 to i64\l  %arrayidx = getelementptr inbounds ptr, ptr %11, i64 %idxprom\l  %13 = load ptr, ptr %arrayidx, align 8\l  %arrayidx6 = getelementptr inbounds i32, ptr %13, i64 0\l  %14 = load i32, ptr %arrayidx6, align 4\l  store i32 %14, ptr %i1, align 4\l  %15 = load ptr, ptr %bondlist, align 8\l  %16 = load i32, ptr %n, align 4\l  %idxprom7 = sext i32 %16 to i64\l  %arrayidx8 = getelementptr inbounds ptr, ptr %15, i64 %idxprom7\l  %17 = load ptr, ptr %arrayidx8, align 8\l  %arrayidx9 = getelementptr inbounds i32, ptr %17, i64 1\l  %18 = load i32, ptr %arrayidx9, align 4\l  store i32 %18, ptr %i2, align 4\l  %19 = load ptr, ptr %x, align 8\l  %20 = load i32, ptr %i1, align 4\l  %idxprom10 = sext i32 %20 to i64\l  %arrayidx11 = getelementptr inbounds ptr, ptr %19, i64 %idxprom10\l  %21 = load ptr, ptr %arrayidx11, align 8\l  %arrayidx12 = getelementptr inbounds double, ptr %21, i64 0\l  %22 = load double, ptr %arrayidx12, align 8\l  %23 = load ptr, ptr %x, align 8\l  %24 = load i32, ptr %i2, align 4\l  %idxprom13 = sext i32 %24 to i64\l  %arrayidx14 = getelementptr inbounds ptr, ptr %23, i64 %idxprom13\l  %25 = load ptr, ptr %arrayidx14, align 8\l  %arrayidx15 = getelementptr inbounds double, ptr %25, i64 0\l  %26 = load double, ptr %arrayidx15, align 8\l  %sub = fsub double %22, %26\l  store double %sub, ptr %delx, align 8\l  %27 = load ptr, ptr %x, align 8\l  %28 = load i32, ptr %i1, align 4\l  %idxprom16 = sext i32 %28 to i64\l  %arrayidx17 = getelementptr inbounds ptr, ptr %27, i64 %idxprom16\l  %29 = load ptr, ptr %arrayidx17, align 8\l  %arrayidx18 = getelementptr inbounds double, ptr %29, i64 1\l  %30 = load double, ptr %arrayidx18, align 8\l  %31 = load ptr, ptr %x, align 8\l  %32 = load i32, ptr %i2, align 4\l  %idxprom19 = sext i32 %32 to i64\l  %arrayidx20 = getelementptr inbounds ptr, ptr %31, i64 %idxprom19\l  %33 = load ptr, ptr %arrayidx20, align 8\l  %arrayidx21 = getelementptr inbounds double, ptr %33, i64 1\l  %34 = load double, ptr %arrayidx21, align 8\l  %sub22 = fsub double %30, %34\l  store double %sub22, ptr %dely, align 8\l  %35 = load ptr, ptr %x, align 8\l  %36 = load i32, ptr %i1, align 4\l  %idxprom23 = sext i32 %36 to i64\l  %arrayidx24 = getelementptr inbounds ptr, ptr %35, i64 %idxprom23\l  %37 = load ptr, ptr %arrayidx24, align 8\l  %arrayidx25 = getelementptr inbounds double, ptr %37, i64 2\l  %38 = load double, ptr %arrayidx25, align 8\l  %39 = load ptr, ptr %x, align 8\l  %40 = load i32, ptr %i2, align 4\l  %idxprom26 = sext i32 %40 to i64\l  %arrayidx27 = getelementptr inbounds ptr, ptr %39, i64 %idxprom26\l  %41 = load ptr, ptr %arrayidx27, align 8\l  %arrayidx28 = getelementptr inbounds double, ptr %41, i64 2\l  %42 = load double, ptr %arrayidx28, align 8\l  %sub29 = fsub double %38, %42\l  store double %sub29, ptr %delz, align 8\l  %43 = load double, ptr %delx, align 8\l  %44 = load double, ptr %delx, align 8\l  %45 = load double, ptr %dely, align 8\l  %46 = load double, ptr %dely, align 8\l  %mul30 = fmul double %45, %46\l  %47 = call double @llvm.fmuladd.f64(double %43, double %44, double %mul30)\l  %48 = load double, ptr %delz, align 8\l  %49 = load double, ptr %delz, align 8\l  %50 = call double @llvm.fmuladd.f64(double %48, double %49, double %47)\l  store double %50, ptr %rsq, align 8\l  %51 = load double, ptr %rsq, align 8\l  %52 = load double, ptr %maxone, align 8\l  %cmp31 = fcmp ogt double %51, %52\l  br i1 %cmp31, label %cond.true, label %cond.false\l|{<s0>T|<s1>F}}"];
	Node0x5603f5800420:s0 -> Node0x5603f5804130[tooltip="for.body -> cond.true\nProbability 50.00%" ];
	Node0x5603f5800420:s1 -> Node0x5603f5804180[tooltip="for.body -> cond.false\nProbability 50.00%" ];
	Node0x5603f5804130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{cond.true:\l|  %53 = load double, ptr %rsq, align 8\l  br label %cond.end\l}"];
	Node0x5603f5804130 -> Node0x5603f5804300[tooltip="cond.true -> cond.end\nProbability 100.00%" ];
	Node0x5603f5804180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{cond.false:\l|  %54 = load double, ptr %maxone, align 8\l  br label %cond.end\l}"];
	Node0x5603f5804180 -> Node0x5603f5804300[tooltip="cond.false -> cond.end\nProbability 100.00%" ];
	Node0x5603f5804300 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{cond.end:\l|  %cond = phi double [ %53, %cond.true ], [ %54, %cond.false ]\l  store double %cond, ptr %maxone, align 8\l  br label %for.inc\l}"];
	Node0x5603f5804300 -> Node0x5603f5804580[tooltip="cond.end -> for.inc\nProbability 100.00%" ];
	Node0x5603f5804580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %55 = load i32, ptr %n, align 4\l  %inc = add nsw i32 %55, 1\l  store i32 %inc, ptr %n, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x5603f5804580 -> Node0x5603f578ed20[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x5603f57fe590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  %world = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 16\l  %56 = load ptr, ptr %world, align 8\l  %57 = load ptr, ptr %56, align 8\l  %call = call i32 @MPI_Allreduce(ptr noundef %maxone, ptr noundef %maxall,\l... i32 noundef 1, ptr noundef @ompi_mpi_double, ptr noundef @ompi_mpi_op_max,\l... ptr noundef %57)\l  %58 = load double, ptr %maxall, align 8\l  %call32 = call double @sqrt(double noundef %58) #11\l  ret double %call32\l}"];
}
