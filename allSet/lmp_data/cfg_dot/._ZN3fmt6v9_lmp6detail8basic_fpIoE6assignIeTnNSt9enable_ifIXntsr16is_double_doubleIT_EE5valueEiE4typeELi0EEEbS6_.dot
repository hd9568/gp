digraph "CFG for '_ZN3fmt6v9_lmp6detail8basic_fpIoE6assignIeTnNSt9enable_ifIXntsr16is_double_doubleIT_EE5valueEiE4typeELi0EEEbS6_' function" {
	label="CFG for '_ZN3fmt6v9_lmp6detail8basic_fpIoE6assignIeTnNSt9enable_ifIXntsr16is_double_doubleIT_EE5valueEiE4typeELi0EEEbS6_' function";

	Node0x55fec331cf20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %n.addr = alloca x86_fp80, align 16\l  %num_float_significand_bits = alloca i32, align 4\l  %implicit_bit = alloca i128, align 16\l  %significand_mask = alloca i128, align 16\l  %u = alloca i128, align 16\l  %coerce = alloca i128, align 16\l  %biased_e = alloca i32, align 4\l  %coerce3 = alloca i128, align 16\l  %is_predecessor_closer = alloca i8, align 1\l  store ptr %this, ptr %this.addr, align 8\l  store x86_fp80 %n, ptr %n.addr, align 16\l  %this1 = load ptr, ptr %this.addr, align 8\l  store i32 64, ptr %num_float_significand_bits, align 4\l  store i128 18446744073709551616, ptr %implicit_bit, align 16\l  store i128 18446744073709551615, ptr %significand_mask, align 16\l  %call = call noundef \{ i64, i64 \}\l... @_ZN3fmt6v9_lmp6detail8bit_castIoeTnNSt9enable_ifIXeqstT_stT0_EiE4typeELi0EEES\l...4_RKS5_(ptr noundef nonnull align 16 dereferenceable(16) %n.addr)\l  %0 = getelementptr inbounds \{ i64, i64 \}, ptr %coerce, i32 0, i32 0\l  %1 = extractvalue \{ i64, i64 \} %call, 0\l  store i64 %1, ptr %0, align 16\l  %2 = getelementptr inbounds \{ i64, i64 \}, ptr %coerce, i32 0, i32 1\l  %3 = extractvalue \{ i64, i64 \} %call, 1\l  store i64 %3, ptr %2, align 8\l  %4 = load i128, ptr %coerce, align 16\l  store i128 %4, ptr %u, align 16\l  %5 = load i128, ptr %u, align 16\l  %and = and i128 %5, 18446744073709551615\l  %f = getelementptr inbounds %\"struct.fmt::v9_lmp::detail::basic_fp\", ptr\l... %this1, i32 0, i32 0\l  store i128 %and, ptr %f, align 16\l  %6 = load i128, ptr %u, align 16\l  %call2 = call noundef \{ i64, i64 \}\l... @_ZN3fmt6v9_lmp6detail13exponent_maskIeEENS1_9dragonbox10float_infoIT_vE12carr\l...ier_uintEv()\l  %7 = getelementptr inbounds \{ i64, i64 \}, ptr %coerce3, i32 0, i32 0\l  %8 = extractvalue \{ i64, i64 \} %call2, 0\l  store i64 %8, ptr %7, align 16\l  %9 = getelementptr inbounds \{ i64, i64 \}, ptr %coerce3, i32 0, i32 1\l  %10 = extractvalue \{ i64, i64 \} %call2, 1\l  store i64 %10, ptr %9, align 8\l  %11 = load i128, ptr %coerce3, align 16\l  %and4 = and i128 %6, %11\l  %shr = lshr i128 %and4, 64\l  %conv = trunc i128 %shr to i32\l  store i32 %conv, ptr %biased_e, align 4\l  %f5 = getelementptr inbounds %\"struct.fmt::v9_lmp::detail::basic_fp\", ptr\l... %this1, i32 0, i32 0\l  %12 = load i128, ptr %f5, align 16\l  %cmp = icmp eq i128 %12, 0\l  br i1 %cmp, label %land.rhs, label %land.end\l|{<s0>T|<s1>F}}"];
	Node0x55fec331cf20:s0 -> Node0x55fec331ef50[tooltip="entry -> land.rhs\nProbability 37.50%" ];
	Node0x55fec331cf20:s1 -> Node0x55fec331efa0[tooltip="entry -> land.end\nProbability 62.50%" ];
	Node0x55fec331ef50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{land.rhs:\l|  %13 = load i32, ptr %biased_e, align 4\l  %cmp6 = icmp sgt i32 %13, 1\l  br label %land.end\l}"];
	Node0x55fec331ef50 -> Node0x55fec331efa0[tooltip="land.rhs -> land.end\nProbability 100.00%" ];
	Node0x55fec331efa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{land.end:\l|  %14 = phi i1 [ false, %entry ], [ %cmp6, %land.rhs ]\l  %frombool = zext i1 %14 to i8\l  store i8 %frombool, ptr %is_predecessor_closer, align 1\l  %15 = load i32, ptr %biased_e, align 4\l  %cmp7 = icmp eq i32 %15, 0\l  br i1 %cmp7, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x55fec331efa0:s0 -> Node0x55fec331f620[tooltip="land.end -> if.then\nProbability 37.50%" ];
	Node0x55fec331efa0:s1 -> Node0x55fec331f6f0[tooltip="land.end -> if.else\nProbability 62.50%" ];
	Node0x55fec331f620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.then:\l|  store i32 1, ptr %biased_e, align 4\l  br label %if.end\l}"];
	Node0x55fec331f620 -> Node0x55fec331f910[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x55fec331f6f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.else:\l|  br label %if.end\l}"];
	Node0x55fec331f6f0 -> Node0x55fec331f910[tooltip="if.else -> if.end\nProbability 100.00%" ];
	Node0x55fec331f910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end:\l|  %16 = load i32, ptr %biased_e, align 4\l  %call8 = call noundef i32 @_ZN3fmt6v9_lmp6detail13exponent_biasIeEEiv()\l  %sub = sub nsw i32 %16, %call8\l  %sub9 = sub nsw i32 %sub, 64\l  %e = getelementptr inbounds %\"struct.fmt::v9_lmp::detail::basic_fp\", ptr\l... %this1, i32 0, i32 1\l  store i32 %sub9, ptr %e, align 16\l  %e10 = getelementptr inbounds %\"struct.fmt::v9_lmp::detail::basic_fp\", ptr\l... %this1, i32 0, i32 1\l  %17 = load i32, ptr %e10, align 16\l  %inc = add nsw i32 %17, 1\l  store i32 %inc, ptr %e10, align 16\l  %18 = load i8, ptr %is_predecessor_closer, align 1\l  %tobool = trunc i8 %18 to i1\l  ret i1 %tobool\l}"];
}
