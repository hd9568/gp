digraph "CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERiSC_EEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSH_' function" {
	label="CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERiSC_EEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSH_' function";

	Node0x557f5f6fa920 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %.addr.i = alloca ptr, align 8\l  %.addr1.i = alloca i32, align 4\l  %.addr2.i = alloca i32, align 4\l  %.addr3.i = alloca ptr, align 8\l  %.addr4.i = alloca ptr, align 8\l  %.addr5.i = alloca ptr, align 8\l  %this.addr.i54.i = alloca ptr, align 8\l  %val.addr.i55.i = alloca i32, align 4\l  %this.addr.i51.i = alloca ptr, align 8\l  %val.addr.i52.i = alloca i32, align 4\l  %this.addr.i48.i = alloca ptr, align 8\l  %val.addr.i49.i = alloca i32, align 4\l  %this.addr.i45.i = alloca ptr, align 8\l  %val.addr.i46.i = alloca i32, align 4\l  %retval.i35.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i36.i = alloca ptr, align 8\l  %arg.i37.i = alloca ptr, align 8\l  %ref.tmp.i38.i = alloca i32, align 4\l  %ref.tmp1.i39.i = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i40.i = alloca i8, align 1\l  %formattable_const.i41.i = alloca i8, align 1\l  %formattable_pointer.i42.i = alloca i8, align 1\l  %formattable.i43.i = alloca i8, align 1\l  %retval.i25.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i26.i = alloca ptr, align 8\l  %arg.i27.i = alloca ptr, align 8\l  %ref.tmp.i28.i = alloca i32, align 4\l  %ref.tmp1.i29.i = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i30.i = alloca i8, align 1\l  %formattable_const.i31.i = alloca i8, align 1\l  %formattable_pointer.i32.i = alloca i8, align 1\l  %formattable.i33.i = alloca i8, align 1\l  %retval.i22.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i23.i = alloca ptr, align 8\l  %retval.i20.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i21.i = alloca ptr, align 8\l  %val.i.i.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i3.i.i = alloca ptr, align 8\l  %retval.i.i.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i.i.i = alloca ptr, align 8\l  %val.addr.i.i.i = alloca ptr, align 8\l  %retval.i18.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i19.i = alloca ptr, align 8\l  %arg.i.i = alloca ptr, align 8\l  %ref.tmp.i.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %ref.tmp1.i.i = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i.i = alloca i8, align 1\l  %formattable_const.i.i = alloca i8, align 1\l  %formattable_pointer.i.i = alloca i8, align 1\l  %formattable.i.i = alloca i8, align 1\l  %agg.tmp.i.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i17.i = alloca ptr, align 8\l  %this.addr.i.i = alloca ptr, align 8\l  %init.addr.i.i = alloca ptr, align 8\l  %init.addr2.i.i = alloca ptr, align 8\l  %init.addr4.i.i = alloca ptr, align 8\l  %retval.i.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i.i = alloca ptr, align 8\l  %this.addr.i = alloca ptr, align 8\l  %args.addr.i = alloca ptr, align 8\l  %args.addr2.i = alloca ptr, align 8\l  %args.addr4.i = alloca ptr, align 8\l  %ref.tmp.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp7.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp11.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %args.addr = alloca ptr, align 8\l  %args.addr2 = alloca ptr, align 8\l  %args.addr4 = alloca ptr, align 8\l  store ptr %args, ptr %args.addr, align 8\l  store ptr %args1, ptr %args.addr2, align 8\l  store ptr %args3, ptr %args.addr4, align 8\l  %0 = load ptr, ptr %args.addr, align 8\l  %1 = load ptr, ptr %args.addr2, align 8\l  %2 = load ptr, ptr %args.addr4, align 8\l  store ptr %agg.result, ptr %this.addr.i, align 8\l  store ptr %0, ptr %args.addr.i, align 8\l  store ptr %1, ptr %args.addr2.i, align 8\l  store ptr %2, ptr %args.addr4.i, align 8\l  %this5.i = load ptr, ptr %this.addr.i, align 8\l  %3 = load ptr, ptr %args.addr.i, align 8\l  store ptr %3, ptr %val.addr.i.i, align 8\l  %4 = load ptr, ptr %val.addr.i.i, align 8\l  store ptr %4, ptr %val.addr.i19.i, align 8\l  %5 = load ptr, ptr %val.addr.i19.i, align 8\l  store ptr %ref.tmp1.i.i, ptr %this.addr.i.i.i, align 8\l  store ptr %5, ptr %val.addr.i.i.i, align 8\l  %this1.i.i.i = load ptr, ptr %this.addr.i.i.i, align 8\l  %6 = load ptr, ptr %val.addr.i.i.i, align 8\l  %call.i.i.i = call \{ ptr, i64 \}\l... @_ZN3fmt6v9_lmp6detail14to_string_viewIcSt11char_traitsIcESaIcEEENS0_17basic_s\l...tring_viewIT_EERKNSt7__cxx1112basic_stringIS7_T0_T1_EE(ptr noundef nonnull\l... align 8 dereferenceable(32) %6)\l  %7 = extractvalue \{ ptr, i64 \} %call.i.i.i, 0\l  store ptr %7, ptr %retval.i.i.i, align 8\l  %8 = getelementptr inbounds \{ ptr, i64 \}, ptr %retval.i.i.i, i32 0, i32 1\l  %9 = extractvalue \{ ptr, i64 \} %call.i.i.i, 1\l  store i64 %9, ptr %8, align 8\l  %10 = load \{ ptr, i64 \}, ptr %retval.i.i.i, align 8\l  %11 = extractvalue \{ ptr, i64 \} %10, 0\l  store ptr %11, ptr %ref.tmp.i.i, align 8\l  %12 = getelementptr inbounds \{ ptr, i64 \}, ptr %ref.tmp.i.i, i32 0, i32 1\l  %13 = extractvalue \{ ptr, i64 \} %10, 1\l  store i64 %13, ptr %12, align 8\l  store ptr %ref.tmp.i.i, ptr %arg.i.i, align 8\l  store i8 1, ptr %formattable_char.i.i, align 1\l  store i8 1, ptr %formattable_const.i.i, align 1\l  store i8 1, ptr %formattable_pointer.i.i, align 1\l  store i8 1, ptr %formattable.i.i, align 1\l  %14 = load ptr, ptr %arg.i.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp.i.i, ptr align 8 %14,\l... i64 16, i1 false)\l  %15 = load ptr, ptr %agg.tmp.i.i, align 8\l  %16 = getelementptr inbounds \{ ptr, i64 \}, ptr %agg.tmp.i.i, i32 0, i32 1\l  %17 = load i64, ptr %16, align 8\l  store ptr %15, ptr %val.i.i.i, align 8\l  %18 = getelementptr inbounds \{ ptr, i64 \}, ptr %val.i.i.i, i32 0, i32 1\l  store i64 %17, ptr %18, align 8\l  store ptr %retval.i18.i, ptr %this.addr.i3.i.i, align 8\l  %this1.i4.i.i = load ptr, ptr %this.addr.i3.i.i, align 8\l  %call.i5.i.i = call noundef ptr\l... @_ZNK3fmt6v9_lmp17basic_string_viewIcE4dataEv(ptr noundef nonnull align 8\l... dereferenceable(16) %val.i.i.i) #11\l  store ptr %call.i5.i.i, ptr %this1.i4.i.i, align 16\l  %call2.i.i.i = call noundef i64\l... @_ZNK3fmt6v9_lmp17basic_string_viewIcE4sizeEv(ptr noundef nonnull align 8\l... dereferenceable(16) %val.i.i.i) #11\l  %size.i.i.i = getelementptr inbounds\l... %\"struct.fmt::v9_lmp::detail::string_value\", ptr %this1.i4.i.i, i32 0, i32 1\l  store i64 %call2.i.i.i, ptr %size.i.i.i, align 8\l  %19 = load \{ i64, i64 \}, ptr %retval.i18.i, align 16\l  %20 = extractvalue \{ i64, i64 \} %19, 0\l  store i64 %20, ptr %retval.i.i, align 16\l  %21 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i.i, i32 0, i32 1\l  %22 = extractvalue \{ i64, i64 \} %19, 1\l  store i64 %22, ptr %21, align 8\l  %23 = load \{ i64, i64 \}, ptr %retval.i.i, align 16\l  %24 = extractvalue \{ i64, i64 \} %23, 0\l  store i64 %24, ptr %ref.tmp.i, align 16\l  %25 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp.i, i32 0, i32 1\l  %26 = extractvalue \{ i64, i64 \} %23, 1\l  store i64 %26, ptr %25, align 8\l  %27 = load ptr, ptr %args.addr2.i, align 8\l  store ptr %27, ptr %val.addr.i23.i, align 8\l  %28 = load ptr, ptr %val.addr.i23.i, align 8\l  store ptr %28, ptr %val.addr.i26.i, align 8\l  %29 = load ptr, ptr %val.addr.i26.i, align 8\l  %30 = load i32, ptr %29, align 4\l  store ptr %ref.tmp1.i29.i, ptr %this.addr.i48.i, align 8\l  store i32 %30, ptr %val.addr.i49.i, align 4\l  %this1.i50.i = load ptr, ptr %this.addr.i48.i, align 8\l  %31 = load i32, ptr %val.addr.i49.i, align 4\l  store i32 %31, ptr %ref.tmp.i28.i, align 4\l  store ptr %ref.tmp.i28.i, ptr %arg.i27.i, align 8\l  store i8 1, ptr %formattable_char.i30.i, align 1\l  store i8 1, ptr %formattable_const.i31.i, align 1\l  store i8 1, ptr %formattable_pointer.i32.i, align 1\l  store i8 1, ptr %formattable.i33.i, align 1\l  %32 = load ptr, ptr %arg.i27.i, align 8\l  %33 = load i32, ptr %32, align 4\l  store ptr %retval.i25.i, ptr %this.addr.i54.i, align 8\l  store i32 %33, ptr %val.addr.i55.i, align 4\l  %this1.i56.i = load ptr, ptr %this.addr.i54.i, align 8\l  %34 = load i32, ptr %val.addr.i55.i, align 4\l  store i32 %34, ptr %this1.i56.i, align 16\l  %35 = load \{ i64, i64 \}, ptr %retval.i25.i, align 16\l  %36 = extractvalue \{ i64, i64 \} %35, 0\l  store i64 %36, ptr %retval.i22.i, align 16\l  %37 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i22.i, i32 0, i32 1\l  %38 = extractvalue \{ i64, i64 \} %35, 1\l  store i64 %38, ptr %37, align 8\l  %39 = load \{ i64, i64 \}, ptr %retval.i22.i, align 16\l  %40 = extractvalue \{ i64, i64 \} %39, 0\l  store i64 %40, ptr %ref.tmp7.i, align 16\l  %41 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp7.i, i32 0, i32 1\l  %42 = extractvalue \{ i64, i64 \} %39, 1\l  store i64 %42, ptr %41, align 8\l  %43 = load ptr, ptr %args.addr4.i, align 8\l  store ptr %43, ptr %val.addr.i21.i, align 8\l  %44 = load ptr, ptr %val.addr.i21.i, align 8\l  store ptr %44, ptr %val.addr.i36.i, align 8\l  %45 = load ptr, ptr %val.addr.i36.i, align 8\l  %46 = load i32, ptr %45, align 4\l  store ptr %ref.tmp1.i39.i, ptr %this.addr.i45.i, align 8\l  store i32 %46, ptr %val.addr.i46.i, align 4\l  %this1.i47.i = load ptr, ptr %this.addr.i45.i, align 8\l  %47 = load i32, ptr %val.addr.i46.i, align 4\l  store i32 %47, ptr %ref.tmp.i38.i, align 4\l  store ptr %ref.tmp.i38.i, ptr %arg.i37.i, align 8\l  store i8 1, ptr %formattable_char.i40.i, align 1\l  store i8 1, ptr %formattable_const.i41.i, align 1\l  store i8 1, ptr %formattable_pointer.i42.i, align 1\l  store i8 1, ptr %formattable.i43.i, align 1\l  %48 = load ptr, ptr %arg.i37.i, align 8\l  %49 = load i32, ptr %48, align 4\l  store ptr %retval.i35.i, ptr %this.addr.i51.i, align 8\l  store i32 %49, ptr %val.addr.i52.i, align 4\l  %this1.i53.i = load ptr, ptr %this.addr.i51.i, align 8\l  %50 = load i32, ptr %val.addr.i52.i, align 4\l  store i32 %50, ptr %this1.i53.i, align 16\l  %51 = load \{ i64, i64 \}, ptr %retval.i35.i, align 16\l  %52 = extractvalue \{ i64, i64 \} %51, 0\l  store i64 %52, ptr %retval.i20.i, align 16\l  %53 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i20.i, i32 0, i32 1\l  %54 = extractvalue \{ i64, i64 \} %51, 1\l  store i64 %54, ptr %53, align 8\l  %55 = load \{ i64, i64 \}, ptr %retval.i20.i, align 16\l  %56 = extractvalue \{ i64, i64 \} %55, 0\l  store i64 %56, ptr %ref.tmp11.i, align 16\l  %57 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp11.i, i32 0, i32 1\l  %58 = extractvalue \{ i64, i64 \} %55, 1\l  store i64 %58, ptr %57, align 8\l  store ptr %this5.i, ptr %this.addr.i.i, align 8\l  store ptr %ref.tmp.i, ptr %init.addr.i.i, align 8\l  store ptr %ref.tmp7.i, ptr %init.addr2.i.i, align 8\l  store ptr %ref.tmp11.i, ptr %init.addr4.i.i, align 8\l  %this5.i.i = load ptr, ptr %this.addr.i.i, align 8\l  %59 = load ptr, ptr %init.addr.i.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %this5.i.i, ptr align 16 %59,\l... i64 16, i1 false)\l  %arrayinit.element.i.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %this5.i.i, i64 1\l  %60 = load ptr, ptr %init.addr2.i.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element.i.i, ptr\l... align 16 %60, i64 16, i1 false)\l  %arrayinit.element6.i.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element.i.i, i64 1\l  %61 = load ptr, ptr %init.addr4.i.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element6.i.i, ptr\l... align 16 %61, i64 16, i1 false)\l  store ptr %this5.i, ptr %this.addr.i17.i, align 8\l  %this1.i.i = load ptr, ptr %this.addr.i17.i, align 8\l  %62 = load ptr, ptr %args.addr.i, align 8\l  %63 = load ptr, ptr %args.addr2.i, align 8\l  %64 = load ptr, ptr %args.addr4.i, align 8\l  store ptr null, ptr %.addr.i, align 8\l  store i32 0, ptr %.addr1.i, align 4\l  store i32 0, ptr %.addr2.i, align 4\l  store ptr %62, ptr %.addr3.i, align 8\l  store ptr %63, ptr %.addr4.i, align 8\l  store ptr %64, ptr %.addr5.i, align 8\l  ret void\l}"];
}
