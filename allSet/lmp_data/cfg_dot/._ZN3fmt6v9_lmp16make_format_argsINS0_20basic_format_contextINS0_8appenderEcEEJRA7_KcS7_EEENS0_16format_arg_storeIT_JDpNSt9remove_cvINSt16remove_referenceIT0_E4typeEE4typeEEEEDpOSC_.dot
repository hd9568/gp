digraph "CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRA7_KcS7_EEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSC_' function" {
	label="CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRA7_KcS7_EEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSC_' function";

	Node0x56346577a1a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr.i3.i12 = alloca ptr, align 8\l  %val.addr.i4.i13 = alloca ptr, align 8\l  %this.addr.i.i14 = alloca ptr, align 8\l  %val.addr.i.i15 = alloca ptr, align 8\l  %retval.i16 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i17 = alloca ptr, align 8\l  %arg.i18 = alloca ptr, align 8\l  %ref.tmp.i19 = alloca ptr, align 8\l  %ref.tmp1.i20 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i21 = alloca i8, align 1\l  %formattable_const.i22 = alloca i8, align 1\l  %formattable_pointer.i23 = alloca i8, align 1\l  %formattable.i24 = alloca i8, align 1\l  %this.addr.i3.i = alloca ptr, align 8\l  %val.addr.i4.i = alloca ptr, align 8\l  %this.addr.i.i7 = alloca ptr, align 8\l  %val.addr.i.i = alloca ptr, align 8\l  %retval.i8 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i9 = alloca ptr, align 8\l  %arg.i = alloca ptr, align 8\l  %ref.tmp.i10 = alloca ptr, align 8\l  %ref.tmp1.i = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i = alloca i8, align 1\l  %formattable_const.i = alloca i8, align 1\l  %formattable_pointer.i = alloca i8, align 1\l  %formattable.i = alloca i8, align 1\l  %.addr.i = alloca ptr, align 8\l  %.addr1.i = alloca i32, align 4\l  %.addr2.i = alloca i32, align 4\l  %.addr3.i = alloca ptr, align 8\l  %.addr4.i = alloca ptr, align 8\l  %retval.i4 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i5 = alloca ptr, align 8\l  %retval.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i = alloca ptr, align 8\l  %this.addr.i11.i = alloca ptr, align 8\l  %this.addr.i.i = alloca ptr, align 8\l  %init.addr.i.i = alloca ptr, align 8\l  %init.addr2.i.i = alloca ptr, align 8\l  %this.addr.i = alloca ptr, align 8\l  %args.addr.i = alloca ptr, align 8\l  %args.addr2.i = alloca ptr, align 8\l  %ref.tmp.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp5.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %args.addr = alloca ptr, align 8\l  %args.addr2 = alloca ptr, align 8\l  store ptr %args, ptr %args.addr, align 8\l  store ptr %args1, ptr %args.addr2, align 8\l  %0 = load ptr, ptr %args.addr, align 8\l  %1 = load ptr, ptr %args.addr2, align 8\l  store ptr %agg.result, ptr %this.addr.i, align 8\l  store ptr %0, ptr %args.addr.i, align 8\l  store ptr %1, ptr %args.addr2.i, align 8\l  %this3.i = load ptr, ptr %this.addr.i, align 8\l  %2 = load ptr, ptr %args.addr.i, align 8\l  store ptr %2, ptr %val.addr.i5, align 8\l  %3 = load ptr, ptr %val.addr.i5, align 8\l  store ptr %3, ptr %val.addr.i9, align 8\l  %4 = load ptr, ptr %val.addr.i9, align 8\l  store ptr %ref.tmp1.i, ptr %this.addr.i.i7, align 8\l  store ptr %4, ptr %val.addr.i.i, align 8\l  %this1.i.i11 = load ptr, ptr %this.addr.i.i7, align 8\l  %5 = load ptr, ptr %val.addr.i.i, align 8\l  store ptr %5, ptr %ref.tmp.i10, align 8\l  store ptr %ref.tmp.i10, ptr %arg.i, align 8\l  store i8 1, ptr %formattable_char.i, align 1\l  store i8 1, ptr %formattable_const.i, align 1\l  store i8 1, ptr %formattable_pointer.i, align 1\l  store i8 1, ptr %formattable.i, align 1\l  %6 = load ptr, ptr %arg.i, align 8\l  %7 = load ptr, ptr %6, align 8\l  store ptr %retval.i8, ptr %this.addr.i3.i, align 8\l  store ptr %7, ptr %val.addr.i4.i, align 8\l  %this1.i5.i = load ptr, ptr %this.addr.i3.i, align 8\l  %8 = load ptr, ptr %val.addr.i4.i, align 8\l  store ptr %8, ptr %this1.i5.i, align 16\l  %9 = load \{ i64, i64 \}, ptr %retval.i8, align 16\l  %10 = extractvalue \{ i64, i64 \} %9, 0\l  store i64 %10, ptr %retval.i4, align 16\l  %11 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i4, i32 0, i32 1\l  %12 = extractvalue \{ i64, i64 \} %9, 1\l  store i64 %12, ptr %11, align 8\l  %13 = load \{ i64, i64 \}, ptr %retval.i4, align 16\l  %14 = extractvalue \{ i64, i64 \} %13, 0\l  store i64 %14, ptr %ref.tmp.i, align 16\l  %15 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp.i, i32 0, i32 1\l  %16 = extractvalue \{ i64, i64 \} %13, 1\l  store i64 %16, ptr %15, align 8\l  %17 = load ptr, ptr %args.addr2.i, align 8\l  store ptr %17, ptr %val.addr.i, align 8\l  %18 = load ptr, ptr %val.addr.i, align 8\l  store ptr %18, ptr %val.addr.i17, align 8\l  %19 = load ptr, ptr %val.addr.i17, align 8\l  store ptr %ref.tmp1.i20, ptr %this.addr.i.i14, align 8\l  store ptr %19, ptr %val.addr.i.i15, align 8\l  %this1.i.i25 = load ptr, ptr %this.addr.i.i14, align 8\l  %20 = load ptr, ptr %val.addr.i.i15, align 8\l  store ptr %20, ptr %ref.tmp.i19, align 8\l  store ptr %ref.tmp.i19, ptr %arg.i18, align 8\l  store i8 1, ptr %formattable_char.i21, align 1\l  store i8 1, ptr %formattable_const.i22, align 1\l  store i8 1, ptr %formattable_pointer.i23, align 1\l  store i8 1, ptr %formattable.i24, align 1\l  %21 = load ptr, ptr %arg.i18, align 8\l  %22 = load ptr, ptr %21, align 8\l  store ptr %retval.i16, ptr %this.addr.i3.i12, align 8\l  store ptr %22, ptr %val.addr.i4.i13, align 8\l  %this1.i5.i26 = load ptr, ptr %this.addr.i3.i12, align 8\l  %23 = load ptr, ptr %val.addr.i4.i13, align 8\l  store ptr %23, ptr %this1.i5.i26, align 16\l  %24 = load \{ i64, i64 \}, ptr %retval.i16, align 16\l  %25 = extractvalue \{ i64, i64 \} %24, 0\l  store i64 %25, ptr %retval.i, align 16\l  %26 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i, i32 0, i32 1\l  %27 = extractvalue \{ i64, i64 \} %24, 1\l  store i64 %27, ptr %26, align 8\l  %28 = load \{ i64, i64 \}, ptr %retval.i, align 16\l  %29 = extractvalue \{ i64, i64 \} %28, 0\l  store i64 %29, ptr %ref.tmp5.i, align 16\l  %30 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp5.i, i32 0, i32 1\l  %31 = extractvalue \{ i64, i64 \} %28, 1\l  store i64 %31, ptr %30, align 8\l  store ptr %this3.i, ptr %this.addr.i.i, align 8\l  store ptr %ref.tmp.i, ptr %init.addr.i.i, align 8\l  store ptr %ref.tmp5.i, ptr %init.addr2.i.i, align 8\l  %this3.i.i = load ptr, ptr %this.addr.i.i, align 8\l  %32 = load ptr, ptr %init.addr.i.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %this3.i.i, ptr align 16 %32,\l... i64 16, i1 false)\l  %arrayinit.element.i.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %this3.i.i, i64 1\l  %33 = load ptr, ptr %init.addr2.i.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element.i.i, ptr\l... align 16 %33, i64 16, i1 false)\l  store ptr %this3.i, ptr %this.addr.i11.i, align 8\l  %this1.i.i = load ptr, ptr %this.addr.i11.i, align 8\l  %34 = load ptr, ptr %args.addr.i, align 8\l  %35 = load ptr, ptr %args.addr2.i, align 8\l  store ptr null, ptr %.addr.i, align 8\l  store i32 0, ptr %.addr1.i, align 4\l  store i32 0, ptr %.addr2.i, align 4\l  store ptr %34, ptr %.addr3.i, align 8\l  store ptr %35, ptr %.addr4.i, align 8\l  ret void\l}"];
}
