digraph "CFG for '_ZN9LAMMPS_NS8Dihedral8ev_tallyEiiiiiidPdS1_S1_ddddddddd' function" {
	label="CFG for '_ZN9LAMMPS_NS8Dihedral8ev_tallyEiiiiiidPdS1_S1_ddddddddd' function";

	Node0x55fe70d4c140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %i1.addr = alloca i32, align 4\l  %i2.addr = alloca i32, align 4\l  %i3.addr = alloca i32, align 4\l  %i4.addr = alloca i32, align 4\l  %nlocal.addr = alloca i32, align 4\l  %newton_bond.addr = alloca i32, align 4\l  %edihedral.addr = alloca double, align 8\l  %f1.addr = alloca ptr, align 8\l  %f3.addr = alloca ptr, align 8\l  %f4.addr = alloca ptr, align 8\l  %vb1x.addr = alloca double, align 8\l  %vb1y.addr = alloca double, align 8\l  %vb1z.addr = alloca double, align 8\l  %vb2x.addr = alloca double, align 8\l  %vb2y.addr = alloca double, align 8\l  %vb2z.addr = alloca double, align 8\l  %vb3x.addr = alloca double, align 8\l  %vb3y.addr = alloca double, align 8\l  %vb3z.addr = alloca double, align 8\l  %edihedralquarter = alloca double, align 8\l  %v = alloca [6 x double], align 16\l  %a1 = alloca [3 x double], align 16\l  %a2 = alloca [3 x double], align 16\l  %f2 = alloca [3 x double], align 16\l  %a3 = alloca [3 x double], align 16\l  %a4 = alloca [3 x double], align 16\l  store ptr %this, ptr %this.addr, align 8\l  store i32 %i1, ptr %i1.addr, align 4\l  store i32 %i2, ptr %i2.addr, align 4\l  store i32 %i3, ptr %i3.addr, align 4\l  store i32 %i4, ptr %i4.addr, align 4\l  store i32 %nlocal, ptr %nlocal.addr, align 4\l  store i32 %newton_bond, ptr %newton_bond.addr, align 4\l  store double %edihedral, ptr %edihedral.addr, align 8\l  store ptr %f1, ptr %f1.addr, align 8\l  store ptr %f3, ptr %f3.addr, align 8\l  store ptr %f4, ptr %f4.addr, align 8\l  store double %vb1x, ptr %vb1x.addr, align 8\l  store double %vb1y, ptr %vb1y.addr, align 8\l  store double %vb1z, ptr %vb1z.addr, align 8\l  store double %vb2x, ptr %vb2x.addr, align 8\l  store double %vb2y, ptr %vb2y.addr, align 8\l  store double %vb2z, ptr %vb2z.addr, align 8\l  store double %vb3x, ptr %vb3x.addr, align 8\l  store double %vb3y, ptr %vb3y.addr, align 8\l  store double %vb3z, ptr %vb3z.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %eflag_either = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 18\l  %0 = load i32, ptr %eflag_either, align 4\l  %tobool = icmp ne i32 %0, 0\l  br i1 %tobool, label %if.then, label %if.end62\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d4c140:s0 -> Node0x55fe70d4f770[tooltip="entry -> if.then\nProbability 62.50%" ];
	Node0x55fe70d4c140:s1 -> Node0x55fe70d4f7e0[tooltip="entry -> if.end62\nProbability 37.50%" ];
	Node0x55fe70d4f770 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.then:\l|  %eflag_global = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 19\l  %1 = load i32, ptr %eflag_global, align 8\l  %tobool2 = icmp ne i32 %1, 0\l  br i1 %tobool2, label %if.then3, label %if.end25\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d4f770:s0 -> Node0x55fe70d4fad0[tooltip="if.then -> if.then3\nProbability 62.50%" ];
	Node0x55fe70d4f770:s1 -> Node0x55fe70d4fb50[tooltip="if.then -> if.end25\nProbability 37.50%" ];
	Node0x55fe70d4fad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then3:\l|  %2 = load i32, ptr %newton_bond.addr, align 4\l  %tobool4 = icmp ne i32 %2, 0\l  br i1 %tobool4, label %if.then5, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d4fad0:s0 -> Node0x55fe70d4fe10[tooltip="if.then3 -> if.then5\nProbability 62.50%" ];
	Node0x55fe70d4fad0:s1 -> Node0x55fe70d4fe60[tooltip="if.then3 -> if.else\nProbability 37.50%" ];
	Node0x55fe70d4fe10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.then5:\l|  %3 = load double, ptr %edihedral.addr, align 8\l  %energy = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 6\l  %4 = load double, ptr %energy, align 8\l  %add = fadd double %4, %3\l  store double %add, ptr %energy, align 8\l  br label %if.end24\l}"];
	Node0x55fe70d4fe10 -> Node0x55fe70d50310[tooltip="if.then5 -> if.end24\nProbability 100.00%" ];
	Node0x55fe70d4fe60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{if.else:\l|  %5 = load double, ptr %edihedral.addr, align 8\l  %mul = fmul double 2.500000e-01, %5\l  store double %mul, ptr %edihedralquarter, align 8\l  %6 = load i32, ptr %i1.addr, align 4\l  %7 = load i32, ptr %nlocal.addr, align 4\l  %cmp = icmp slt i32 %6, %7\l  br i1 %cmp, label %if.then6, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d4fe60:s0 -> Node0x55fe70d507b0[tooltip="if.else -> if.then6\nProbability 50.00%" ];
	Node0x55fe70d4fe60:s1 -> Node0x55fe70d50800[tooltip="if.else -> if.end\nProbability 50.00%" ];
	Node0x55fe70d507b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{if.then6:\l|  %8 = load double, ptr %edihedralquarter, align 8\l  %energy7 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 6\l  %9 = load double, ptr %energy7, align 8\l  %add8 = fadd double %9, %8\l  store double %add8, ptr %energy7, align 8\l  br label %if.end\l}"];
	Node0x55fe70d507b0 -> Node0x55fe70d50800[tooltip="if.then6 -> if.end\nProbability 100.00%" ];
	Node0x55fe70d50800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{if.end:\l|  %10 = load i32, ptr %i2.addr, align 4\l  %11 = load i32, ptr %nlocal.addr, align 4\l  %cmp9 = icmp slt i32 %10, %11\l  br i1 %cmp9, label %if.then10, label %if.end13\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d50800:s0 -> Node0x55fe70d50f00[tooltip="if.end -> if.then10\nProbability 50.00%" ];
	Node0x55fe70d50800:s1 -> Node0x55fe70d50f50[tooltip="if.end -> if.end13\nProbability 50.00%" ];
	Node0x55fe70d50f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{if.then10:\l|  %12 = load double, ptr %edihedralquarter, align 8\l  %energy11 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 6\l  %13 = load double, ptr %energy11, align 8\l  %add12 = fadd double %13, %12\l  store double %add12, ptr %energy11, align 8\l  br label %if.end13\l}"];
	Node0x55fe70d50f00 -> Node0x55fe70d50f50[tooltip="if.then10 -> if.end13\nProbability 100.00%" ];
	Node0x55fe70d50f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{if.end13:\l|  %14 = load i32, ptr %i3.addr, align 4\l  %15 = load i32, ptr %nlocal.addr, align 4\l  %cmp14 = icmp slt i32 %14, %15\l  br i1 %cmp14, label %if.then15, label %if.end18\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d50f50:s0 -> Node0x55fe70d515e0[tooltip="if.end13 -> if.then15\nProbability 50.00%" ];
	Node0x55fe70d50f50:s1 -> Node0x55fe70d51630[tooltip="if.end13 -> if.end18\nProbability 50.00%" ];
	Node0x55fe70d515e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{if.then15:\l|  %16 = load double, ptr %edihedralquarter, align 8\l  %energy16 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 6\l  %17 = load double, ptr %energy16, align 8\l  %add17 = fadd double %17, %16\l  store double %add17, ptr %energy16, align 8\l  br label %if.end18\l}"];
	Node0x55fe70d515e0 -> Node0x55fe70d51630[tooltip="if.then15 -> if.end18\nProbability 100.00%" ];
	Node0x55fe70d51630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{if.end18:\l|  %18 = load i32, ptr %i4.addr, align 4\l  %19 = load i32, ptr %nlocal.addr, align 4\l  %cmp19 = icmp slt i32 %18, %19\l  br i1 %cmp19, label %if.then20, label %if.end23\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d51630:s0 -> Node0x55fe70d51cf0[tooltip="if.end18 -> if.then20\nProbability 50.00%" ];
	Node0x55fe70d51630:s1 -> Node0x55fe70d51d40[tooltip="if.end18 -> if.end23\nProbability 50.00%" ];
	Node0x55fe70d51cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{if.then20:\l|  %20 = load double, ptr %edihedralquarter, align 8\l  %energy21 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 6\l  %21 = load double, ptr %energy21, align 8\l  %add22 = fadd double %21, %20\l  store double %add22, ptr %energy21, align 8\l  br label %if.end23\l}"];
	Node0x55fe70d51cf0 -> Node0x55fe70d51d40[tooltip="if.then20 -> if.end23\nProbability 100.00%" ];
	Node0x55fe70d51d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{if.end23:\l|  br label %if.end24\l}"];
	Node0x55fe70d51d40 -> Node0x55fe70d50310[tooltip="if.end23 -> if.end24\nProbability 100.00%" ];
	Node0x55fe70d50310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end24:\l|  br label %if.end25\l}"];
	Node0x55fe70d50310 -> Node0x55fe70d4fb50[tooltip="if.end24 -> if.end25\nProbability 100.00%" ];
	Node0x55fe70d4fb50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.end25:\l|  %eflag_atom = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 20\l  %22 = load i32, ptr %eflag_atom, align 4\l  %tobool26 = icmp ne i32 %22, 0\l  br i1 %tobool26, label %if.then27, label %if.end61\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d4fb50:s0 -> Node0x55fe70d52530[tooltip="if.end25 -> if.then27\nProbability 62.50%" ];
	Node0x55fe70d4fb50:s1 -> Node0x55fe70d525b0[tooltip="if.end25 -> if.end61\nProbability 37.50%" ];
	Node0x55fe70d52530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then27:\l|  %23 = load double, ptr %edihedral.addr, align 8\l  %mul28 = fmul double 2.500000e-01, %23\l  store double %mul28, ptr %edihedralquarter, align 8\l  %24 = load i32, ptr %newton_bond.addr, align 4\l  %tobool29 = icmp ne i32 %24, 0\l  br i1 %tobool29, label %if.then31, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d52530:s0 -> Node0x55fe70d52a20[tooltip="if.then27 -> if.then31\nProbability 62.50%" ];
	Node0x55fe70d52530:s1 -> Node0x55fe70d52a70[tooltip="if.then27 -> lor.lhs.false\nProbability 37.50%" ];
	Node0x55fe70d52a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{lor.lhs.false:\l|  %25 = load i32, ptr %i1.addr, align 4\l  %26 = load i32, ptr %nlocal.addr, align 4\l  %cmp30 = icmp slt i32 %25, %26\l  br i1 %cmp30, label %if.then31, label %if.end33\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d52a70:s0 -> Node0x55fe70d52a20[tooltip="lor.lhs.false -> if.then31\nProbability 50.00%" ];
	Node0x55fe70d52a70:s1 -> Node0x55fe70d52d50[tooltip="lor.lhs.false -> if.end33\nProbability 50.00%" ];
	Node0x55fe70d52a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.then31:\l|  %27 = load double, ptr %edihedralquarter, align 8\l  %eatom = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 8\l  %28 = load ptr, ptr %eatom, align 8\l  %29 = load i32, ptr %i1.addr, align 4\l  %idxprom = sext i32 %29 to i64\l  %arrayidx = getelementptr inbounds double, ptr %28, i64 %idxprom\l  %30 = load double, ptr %arrayidx, align 8\l  %add32 = fadd double %30, %27\l  store double %add32, ptr %arrayidx, align 8\l  br label %if.end33\l}"];
	Node0x55fe70d52a20 -> Node0x55fe70d52d50[tooltip="if.then31 -> if.end33\nProbability 100.00%" ];
	Node0x55fe70d52d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end33:\l|  %31 = load i32, ptr %newton_bond.addr, align 4\l  %tobool34 = icmp ne i32 %31, 0\l  br i1 %tobool34, label %if.then37, label %lor.lhs.false35\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d52d50:s0 -> Node0x55fe70d4f430[tooltip="if.end33 -> if.then37\nProbability 62.50%" ];
	Node0x55fe70d52d50:s1 -> Node0x55fe70d4f480[tooltip="if.end33 -> lor.lhs.false35\nProbability 37.50%" ];
	Node0x55fe70d4f480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{lor.lhs.false35:\l|  %32 = load i32, ptr %i2.addr, align 4\l  %33 = load i32, ptr %nlocal.addr, align 4\l  %cmp36 = icmp slt i32 %32, %33\l  br i1 %cmp36, label %if.then37, label %if.end42\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d4f480:s0 -> Node0x55fe70d4f430[tooltip="lor.lhs.false35 -> if.then37\nProbability 50.00%" ];
	Node0x55fe70d4f480:s1 -> Node0x55fe70d4f680[tooltip="lor.lhs.false35 -> if.end42\nProbability 50.00%" ];
	Node0x55fe70d4f430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.then37:\l|  %34 = load double, ptr %edihedralquarter, align 8\l  %eatom38 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 8\l  %35 = load ptr, ptr %eatom38, align 8\l  %36 = load i32, ptr %i2.addr, align 4\l  %idxprom39 = sext i32 %36 to i64\l  %arrayidx40 = getelementptr inbounds double, ptr %35, i64 %idxprom39\l  %37 = load double, ptr %arrayidx40, align 8\l  %add41 = fadd double %37, %34\l  store double %add41, ptr %arrayidx40, align 8\l  br label %if.end42\l}"];
	Node0x55fe70d4f430 -> Node0x55fe70d4f680[tooltip="if.then37 -> if.end42\nProbability 100.00%" ];
	Node0x55fe70d4f680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end42:\l|  %38 = load i32, ptr %newton_bond.addr, align 4\l  %tobool43 = icmp ne i32 %38, 0\l  br i1 %tobool43, label %if.then46, label %lor.lhs.false44\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d4f680:s0 -> Node0x55fe70d547d0[tooltip="if.end42 -> if.then46\nProbability 62.50%" ];
	Node0x55fe70d4f680:s1 -> Node0x55fe70d54820[tooltip="if.end42 -> lor.lhs.false44\nProbability 37.50%" ];
	Node0x55fe70d54820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{lor.lhs.false44:\l|  %39 = load i32, ptr %i3.addr, align 4\l  %40 = load i32, ptr %nlocal.addr, align 4\l  %cmp45 = icmp slt i32 %39, %40\l  br i1 %cmp45, label %if.then46, label %if.end51\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d54820:s0 -> Node0x55fe70d547d0[tooltip="lor.lhs.false44 -> if.then46\nProbability 50.00%" ];
	Node0x55fe70d54820:s1 -> Node0x55fe70d54b30[tooltip="lor.lhs.false44 -> if.end51\nProbability 50.00%" ];
	Node0x55fe70d547d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.then46:\l|  %41 = load double, ptr %edihedralquarter, align 8\l  %eatom47 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 8\l  %42 = load ptr, ptr %eatom47, align 8\l  %43 = load i32, ptr %i3.addr, align 4\l  %idxprom48 = sext i32 %43 to i64\l  %arrayidx49 = getelementptr inbounds double, ptr %42, i64 %idxprom48\l  %44 = load double, ptr %arrayidx49, align 8\l  %add50 = fadd double %44, %41\l  store double %add50, ptr %arrayidx49, align 8\l  br label %if.end51\l}"];
	Node0x55fe70d547d0 -> Node0x55fe70d54b30[tooltip="if.then46 -> if.end51\nProbability 100.00%" ];
	Node0x55fe70d54b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end51:\l|  %45 = load i32, ptr %newton_bond.addr, align 4\l  %tobool52 = icmp ne i32 %45, 0\l  br i1 %tobool52, label %if.then55, label %lor.lhs.false53\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d54b30:s0 -> Node0x55fe70d553b0[tooltip="if.end51 -> if.then55\nProbability 62.50%" ];
	Node0x55fe70d54b30:s1 -> Node0x55fe70d55400[tooltip="if.end51 -> lor.lhs.false53\nProbability 37.50%" ];
	Node0x55fe70d55400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{lor.lhs.false53:\l|  %46 = load i32, ptr %i4.addr, align 4\l  %47 = load i32, ptr %nlocal.addr, align 4\l  %cmp54 = icmp slt i32 %46, %47\l  br i1 %cmp54, label %if.then55, label %if.end60\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d55400:s0 -> Node0x55fe70d553b0[tooltip="lor.lhs.false53 -> if.then55\nProbability 50.00%" ];
	Node0x55fe70d55400:s1 -> Node0x55fe70d55f20[tooltip="lor.lhs.false53 -> if.end60\nProbability 50.00%" ];
	Node0x55fe70d553b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.then55:\l|  %48 = load double, ptr %edihedralquarter, align 8\l  %eatom56 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 8\l  %49 = load ptr, ptr %eatom56, align 8\l  %50 = load i32, ptr %i4.addr, align 4\l  %idxprom57 = sext i32 %50 to i64\l  %arrayidx58 = getelementptr inbounds double, ptr %49, i64 %idxprom57\l  %51 = load double, ptr %arrayidx58, align 8\l  %add59 = fadd double %51, %48\l  store double %add59, ptr %arrayidx58, align 8\l  br label %if.end60\l}"];
	Node0x55fe70d553b0 -> Node0x55fe70d55f20[tooltip="if.then55 -> if.end60\nProbability 100.00%" ];
	Node0x55fe70d55f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end60:\l|  br label %if.end61\l}"];
	Node0x55fe70d55f20 -> Node0x55fe70d525b0[tooltip="if.end60 -> if.end61\nProbability 100.00%" ];
	Node0x55fe70d525b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.end61:\l|  br label %if.end62\l}"];
	Node0x55fe70d525b0 -> Node0x55fe70d4f7e0[tooltip="if.end61 -> if.end62\nProbability 100.00%" ];
	Node0x55fe70d4f7e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end62:\l|  %vflag_either = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 21\l  %52 = load i32, ptr %vflag_either, align 8\l  %tobool63 = icmp ne i32 %52, 0\l  br i1 %tobool63, label %if.then64, label %if.end417\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d4f7e0:s0 -> Node0x55fe70d56940[tooltip="if.end62 -> if.then64\nProbability 62.50%" ];
	Node0x55fe70d4f7e0:s1 -> Node0x55fe70d569c0[tooltip="if.end62 -> if.end417\nProbability 37.50%" ];
	Node0x55fe70d56940 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.then64:\l|  %53 = load double, ptr %vb1x.addr, align 8\l  %54 = load ptr, ptr %f1.addr, align 8\l  %arrayidx65 = getelementptr inbounds double, ptr %54, i64 0\l  %55 = load double, ptr %arrayidx65, align 8\l  %56 = load double, ptr %vb2x.addr, align 8\l  %57 = load ptr, ptr %f3.addr, align 8\l  %arrayidx67 = getelementptr inbounds double, ptr %57, i64 0\l  %58 = load double, ptr %arrayidx67, align 8\l  %mul68 = fmul double %56, %58\l  %59 = call double @llvm.fmuladd.f64(double %53, double %55, double %mul68)\l  %60 = load double, ptr %vb3x.addr, align 8\l  %61 = load double, ptr %vb2x.addr, align 8\l  %add69 = fadd double %60, %61\l  %62 = load ptr, ptr %f4.addr, align 8\l  %arrayidx70 = getelementptr inbounds double, ptr %62, i64 0\l  %63 = load double, ptr %arrayidx70, align 8\l  %64 = call double @llvm.fmuladd.f64(double %add69, double %63, double %59)\l  %arrayidx72 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 0\l  store double %64, ptr %arrayidx72, align 16\l  %65 = load double, ptr %vb1y.addr, align 8\l  %66 = load ptr, ptr %f1.addr, align 8\l  %arrayidx73 = getelementptr inbounds double, ptr %66, i64 1\l  %67 = load double, ptr %arrayidx73, align 8\l  %68 = load double, ptr %vb2y.addr, align 8\l  %69 = load ptr, ptr %f3.addr, align 8\l  %arrayidx75 = getelementptr inbounds double, ptr %69, i64 1\l  %70 = load double, ptr %arrayidx75, align 8\l  %mul76 = fmul double %68, %70\l  %71 = call double @llvm.fmuladd.f64(double %65, double %67, double %mul76)\l  %72 = load double, ptr %vb3y.addr, align 8\l  %73 = load double, ptr %vb2y.addr, align 8\l  %add77 = fadd double %72, %73\l  %74 = load ptr, ptr %f4.addr, align 8\l  %arrayidx78 = getelementptr inbounds double, ptr %74, i64 1\l  %75 = load double, ptr %arrayidx78, align 8\l  %76 = call double @llvm.fmuladd.f64(double %add77, double %75, double %71)\l  %arrayidx80 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 1\l  store double %76, ptr %arrayidx80, align 8\l  %77 = load double, ptr %vb1z.addr, align 8\l  %78 = load ptr, ptr %f1.addr, align 8\l  %arrayidx81 = getelementptr inbounds double, ptr %78, i64 2\l  %79 = load double, ptr %arrayidx81, align 8\l  %80 = load double, ptr %vb2z.addr, align 8\l  %81 = load ptr, ptr %f3.addr, align 8\l  %arrayidx83 = getelementptr inbounds double, ptr %81, i64 2\l  %82 = load double, ptr %arrayidx83, align 8\l  %mul84 = fmul double %80, %82\l  %83 = call double @llvm.fmuladd.f64(double %77, double %79, double %mul84)\l  %84 = load double, ptr %vb3z.addr, align 8\l  %85 = load double, ptr %vb2z.addr, align 8\l  %add85 = fadd double %84, %85\l  %86 = load ptr, ptr %f4.addr, align 8\l  %arrayidx86 = getelementptr inbounds double, ptr %86, i64 2\l  %87 = load double, ptr %arrayidx86, align 8\l  %88 = call double @llvm.fmuladd.f64(double %add85, double %87, double %83)\l  %arrayidx88 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 2\l  store double %88, ptr %arrayidx88, align 16\l  %89 = load double, ptr %vb1x.addr, align 8\l  %90 = load ptr, ptr %f1.addr, align 8\l  %arrayidx89 = getelementptr inbounds double, ptr %90, i64 1\l  %91 = load double, ptr %arrayidx89, align 8\l  %92 = load double, ptr %vb2x.addr, align 8\l  %93 = load ptr, ptr %f3.addr, align 8\l  %arrayidx91 = getelementptr inbounds double, ptr %93, i64 1\l  %94 = load double, ptr %arrayidx91, align 8\l  %mul92 = fmul double %92, %94\l  %95 = call double @llvm.fmuladd.f64(double %89, double %91, double %mul92)\l  %96 = load double, ptr %vb3x.addr, align 8\l  %97 = load double, ptr %vb2x.addr, align 8\l  %add93 = fadd double %96, %97\l  %98 = load ptr, ptr %f4.addr, align 8\l  %arrayidx94 = getelementptr inbounds double, ptr %98, i64 1\l  %99 = load double, ptr %arrayidx94, align 8\l  %100 = call double @llvm.fmuladd.f64(double %add93, double %99, double %95)\l  %arrayidx96 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 3\l  store double %100, ptr %arrayidx96, align 8\l  %101 = load double, ptr %vb1x.addr, align 8\l  %102 = load ptr, ptr %f1.addr, align 8\l  %arrayidx97 = getelementptr inbounds double, ptr %102, i64 2\l  %103 = load double, ptr %arrayidx97, align 8\l  %104 = load double, ptr %vb2x.addr, align 8\l  %105 = load ptr, ptr %f3.addr, align 8\l  %arrayidx99 = getelementptr inbounds double, ptr %105, i64 2\l  %106 = load double, ptr %arrayidx99, align 8\l  %mul100 = fmul double %104, %106\l  %107 = call double @llvm.fmuladd.f64(double %101, double %103, double\l... %mul100)\l  %108 = load double, ptr %vb3x.addr, align 8\l  %109 = load double, ptr %vb2x.addr, align 8\l  %add101 = fadd double %108, %109\l  %110 = load ptr, ptr %f4.addr, align 8\l  %arrayidx102 = getelementptr inbounds double, ptr %110, i64 2\l  %111 = load double, ptr %arrayidx102, align 8\l  %112 = call double @llvm.fmuladd.f64(double %add101, double %111, double\l... %107)\l  %arrayidx104 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 4\l  store double %112, ptr %arrayidx104, align 16\l  %113 = load double, ptr %vb1y.addr, align 8\l  %114 = load ptr, ptr %f1.addr, align 8\l  %arrayidx105 = getelementptr inbounds double, ptr %114, i64 2\l  %115 = load double, ptr %arrayidx105, align 8\l  %116 = load double, ptr %vb2y.addr, align 8\l  %117 = load ptr, ptr %f3.addr, align 8\l  %arrayidx107 = getelementptr inbounds double, ptr %117, i64 2\l  %118 = load double, ptr %arrayidx107, align 8\l  %mul108 = fmul double %116, %118\l  %119 = call double @llvm.fmuladd.f64(double %113, double %115, double\l... %mul108)\l  %120 = load double, ptr %vb3y.addr, align 8\l  %121 = load double, ptr %vb2y.addr, align 8\l  %add109 = fadd double %120, %121\l  %122 = load ptr, ptr %f4.addr, align 8\l  %arrayidx110 = getelementptr inbounds double, ptr %122, i64 2\l  %123 = load double, ptr %arrayidx110, align 8\l  %124 = call double @llvm.fmuladd.f64(double %add109, double %123, double\l... %119)\l  %arrayidx112 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 5\l  store double %124, ptr %arrayidx112, align 8\l  %vflag_global = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 22\l  %125 = load i32, ptr %vflag_global, align 4\l  %tobool113 = icmp ne i32 %125, 0\l  br i1 %tobool113, label %if.then114, label %if.end250\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d56940:s0 -> Node0x55fe70d5fd80[tooltip="if.then64 -> if.then114\nProbability 62.50%" ];
	Node0x55fe70d56940:s1 -> Node0x55fe70d5fe00[tooltip="if.then64 -> if.end250\nProbability 37.50%" ];
	Node0x55fe70d5fd80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then114:\l|  %126 = load i32, ptr %newton_bond.addr, align 4\l  %tobool115 = icmp ne i32 %126, 0\l  br i1 %tobool115, label %if.then116, label %if.else140\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d5fd80:s0 -> Node0x55fe70d600a0[tooltip="if.then114 -> if.then116\nProbability 62.50%" ];
	Node0x55fe70d5fd80:s1 -> Node0x55fe70d600f0[tooltip="if.then114 -> if.else140\nProbability 37.50%" ];
	Node0x55fe70d600a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.then116:\l|  %arrayidx117 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 0\l  %127 = load double, ptr %arrayidx117, align 16\l  %virial = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 7\l  %arrayidx118 = getelementptr inbounds [6 x double], ptr %virial, i64 0, i64 0\l  %128 = load double, ptr %arrayidx118, align 8\l  %add119 = fadd double %128, %127\l  store double %add119, ptr %arrayidx118, align 8\l  %arrayidx120 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 1\l  %129 = load double, ptr %arrayidx120, align 8\l  %virial121 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx122 = getelementptr inbounds [6 x double], ptr %virial121, i64 0,\l... i64 1\l  %130 = load double, ptr %arrayidx122, align 8\l  %add123 = fadd double %130, %129\l  store double %add123, ptr %arrayidx122, align 8\l  %arrayidx124 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 2\l  %131 = load double, ptr %arrayidx124, align 16\l  %virial125 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx126 = getelementptr inbounds [6 x double], ptr %virial125, i64 0,\l... i64 2\l  %132 = load double, ptr %arrayidx126, align 8\l  %add127 = fadd double %132, %131\l  store double %add127, ptr %arrayidx126, align 8\l  %arrayidx128 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 3\l  %133 = load double, ptr %arrayidx128, align 8\l  %virial129 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx130 = getelementptr inbounds [6 x double], ptr %virial129, i64 0,\l... i64 3\l  %134 = load double, ptr %arrayidx130, align 8\l  %add131 = fadd double %134, %133\l  store double %add131, ptr %arrayidx130, align 8\l  %arrayidx132 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 4\l  %135 = load double, ptr %arrayidx132, align 16\l  %virial133 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx134 = getelementptr inbounds [6 x double], ptr %virial133, i64 0,\l... i64 4\l  %136 = load double, ptr %arrayidx134, align 8\l  %add135 = fadd double %136, %135\l  store double %add135, ptr %arrayidx134, align 8\l  %arrayidx136 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 5\l  %137 = load double, ptr %arrayidx136, align 8\l  %virial137 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx138 = getelementptr inbounds [6 x double], ptr %virial137, i64 0,\l... i64 5\l  %138 = load double, ptr %arrayidx138, align 8\l  %add139 = fadd double %138, %137\l  store double %add139, ptr %arrayidx138, align 8\l  br label %if.end249\l}"];
	Node0x55fe70d600a0 -> Node0x55fe70d536a0[tooltip="if.then116 -> if.end249\nProbability 100.00%" ];
	Node0x55fe70d600f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{if.else140:\l|  %139 = load i32, ptr %i1.addr, align 4\l  %140 = load i32, ptr %nlocal.addr, align 4\l  %cmp141 = icmp slt i32 %139, %140\l  br i1 %cmp141, label %if.then142, label %if.end167\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d600f0:s0 -> Node0x55fe70d53940[tooltip="if.else140 -> if.then142\nProbability 50.00%" ];
	Node0x55fe70d600f0:s1 -> Node0x55fe70d539c0[tooltip="if.else140 -> if.end167\nProbability 50.00%" ];
	Node0x55fe70d53940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{if.then142:\l|  %arrayidx143 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 0\l  %141 = load double, ptr %arrayidx143, align 16\l  %virial145 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx146 = getelementptr inbounds [6 x double], ptr %virial145, i64 0,\l... i64 0\l  %142 = load double, ptr %arrayidx146, align 8\l  %143 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %141,\l... double %142)\l  store double %143, ptr %arrayidx146, align 8\l  %arrayidx147 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 1\l  %144 = load double, ptr %arrayidx147, align 8\l  %virial149 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx150 = getelementptr inbounds [6 x double], ptr %virial149, i64 0,\l... i64 1\l  %145 = load double, ptr %arrayidx150, align 8\l  %146 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %144,\l... double %145)\l  store double %146, ptr %arrayidx150, align 8\l  %arrayidx151 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 2\l  %147 = load double, ptr %arrayidx151, align 16\l  %virial153 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx154 = getelementptr inbounds [6 x double], ptr %virial153, i64 0,\l... i64 2\l  %148 = load double, ptr %arrayidx154, align 8\l  %149 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %147,\l... double %148)\l  store double %149, ptr %arrayidx154, align 8\l  %arrayidx155 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 3\l  %150 = load double, ptr %arrayidx155, align 8\l  %virial157 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx158 = getelementptr inbounds [6 x double], ptr %virial157, i64 0,\l... i64 3\l  %151 = load double, ptr %arrayidx158, align 8\l  %152 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %150,\l... double %151)\l  store double %152, ptr %arrayidx158, align 8\l  %arrayidx159 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 4\l  %153 = load double, ptr %arrayidx159, align 16\l  %virial161 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx162 = getelementptr inbounds [6 x double], ptr %virial161, i64 0,\l... i64 4\l  %154 = load double, ptr %arrayidx162, align 8\l  %155 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %153,\l... double %154)\l  store double %155, ptr %arrayidx162, align 8\l  %arrayidx163 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 5\l  %156 = load double, ptr %arrayidx163, align 8\l  %virial165 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx166 = getelementptr inbounds [6 x double], ptr %virial165, i64 0,\l... i64 5\l  %157 = load double, ptr %arrayidx166, align 8\l  %158 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %156,\l... double %157)\l  store double %158, ptr %arrayidx166, align 8\l  br label %if.end167\l}"];
	Node0x55fe70d53940 -> Node0x55fe70d539c0[tooltip="if.then142 -> if.end167\nProbability 100.00%" ];
	Node0x55fe70d539c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{if.end167:\l|  %159 = load i32, ptr %i2.addr, align 4\l  %160 = load i32, ptr %nlocal.addr, align 4\l  %cmp168 = icmp slt i32 %159, %160\l  br i1 %cmp168, label %if.then169, label %if.end194\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d539c0:s0 -> Node0x55fe70d655a0[tooltip="if.end167 -> if.then169\nProbability 50.00%" ];
	Node0x55fe70d539c0:s1 -> Node0x55fe70d655f0[tooltip="if.end167 -> if.end194\nProbability 50.00%" ];
	Node0x55fe70d655a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{if.then169:\l|  %arrayidx170 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 0\l  %161 = load double, ptr %arrayidx170, align 16\l  %virial172 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx173 = getelementptr inbounds [6 x double], ptr %virial172, i64 0,\l... i64 0\l  %162 = load double, ptr %arrayidx173, align 8\l  %163 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %161,\l... double %162)\l  store double %163, ptr %arrayidx173, align 8\l  %arrayidx174 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 1\l  %164 = load double, ptr %arrayidx174, align 8\l  %virial176 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx177 = getelementptr inbounds [6 x double], ptr %virial176, i64 0,\l... i64 1\l  %165 = load double, ptr %arrayidx177, align 8\l  %166 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %164,\l... double %165)\l  store double %166, ptr %arrayidx177, align 8\l  %arrayidx178 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 2\l  %167 = load double, ptr %arrayidx178, align 16\l  %virial180 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx181 = getelementptr inbounds [6 x double], ptr %virial180, i64 0,\l... i64 2\l  %168 = load double, ptr %arrayidx181, align 8\l  %169 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %167,\l... double %168)\l  store double %169, ptr %arrayidx181, align 8\l  %arrayidx182 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 3\l  %170 = load double, ptr %arrayidx182, align 8\l  %virial184 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx185 = getelementptr inbounds [6 x double], ptr %virial184, i64 0,\l... i64 3\l  %171 = load double, ptr %arrayidx185, align 8\l  %172 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %170,\l... double %171)\l  store double %172, ptr %arrayidx185, align 8\l  %arrayidx186 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 4\l  %173 = load double, ptr %arrayidx186, align 16\l  %virial188 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx189 = getelementptr inbounds [6 x double], ptr %virial188, i64 0,\l... i64 4\l  %174 = load double, ptr %arrayidx189, align 8\l  %175 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %173,\l... double %174)\l  store double %175, ptr %arrayidx189, align 8\l  %arrayidx190 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 5\l  %176 = load double, ptr %arrayidx190, align 8\l  %virial192 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx193 = getelementptr inbounds [6 x double], ptr %virial192, i64 0,\l... i64 5\l  %177 = load double, ptr %arrayidx193, align 8\l  %178 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %176,\l... double %177)\l  store double %178, ptr %arrayidx193, align 8\l  br label %if.end194\l}"];
	Node0x55fe70d655a0 -> Node0x55fe70d655f0[tooltip="if.then169 -> if.end194\nProbability 100.00%" ];
	Node0x55fe70d655f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{if.end194:\l|  %179 = load i32, ptr %i3.addr, align 4\l  %180 = load i32, ptr %nlocal.addr, align 4\l  %cmp195 = icmp slt i32 %179, %180\l  br i1 %cmp195, label %if.then196, label %if.end221\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d655f0:s0 -> Node0x55fe70d67b30[tooltip="if.end194 -> if.then196\nProbability 50.00%" ];
	Node0x55fe70d655f0:s1 -> Node0x55fe70d67b80[tooltip="if.end194 -> if.end221\nProbability 50.00%" ];
	Node0x55fe70d67b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{if.then196:\l|  %arrayidx197 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 0\l  %181 = load double, ptr %arrayidx197, align 16\l  %virial199 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx200 = getelementptr inbounds [6 x double], ptr %virial199, i64 0,\l... i64 0\l  %182 = load double, ptr %arrayidx200, align 8\l  %183 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %181,\l... double %182)\l  store double %183, ptr %arrayidx200, align 8\l  %arrayidx201 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 1\l  %184 = load double, ptr %arrayidx201, align 8\l  %virial203 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx204 = getelementptr inbounds [6 x double], ptr %virial203, i64 0,\l... i64 1\l  %185 = load double, ptr %arrayidx204, align 8\l  %186 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %184,\l... double %185)\l  store double %186, ptr %arrayidx204, align 8\l  %arrayidx205 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 2\l  %187 = load double, ptr %arrayidx205, align 16\l  %virial207 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx208 = getelementptr inbounds [6 x double], ptr %virial207, i64 0,\l... i64 2\l  %188 = load double, ptr %arrayidx208, align 8\l  %189 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %187,\l... double %188)\l  store double %189, ptr %arrayidx208, align 8\l  %arrayidx209 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 3\l  %190 = load double, ptr %arrayidx209, align 8\l  %virial211 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx212 = getelementptr inbounds [6 x double], ptr %virial211, i64 0,\l... i64 3\l  %191 = load double, ptr %arrayidx212, align 8\l  %192 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %190,\l... double %191)\l  store double %192, ptr %arrayidx212, align 8\l  %arrayidx213 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 4\l  %193 = load double, ptr %arrayidx213, align 16\l  %virial215 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx216 = getelementptr inbounds [6 x double], ptr %virial215, i64 0,\l... i64 4\l  %194 = load double, ptr %arrayidx216, align 8\l  %195 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %193,\l... double %194)\l  store double %195, ptr %arrayidx216, align 8\l  %arrayidx217 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 5\l  %196 = load double, ptr %arrayidx217, align 8\l  %virial219 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx220 = getelementptr inbounds [6 x double], ptr %virial219, i64 0,\l... i64 5\l  %197 = load double, ptr %arrayidx220, align 8\l  %198 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %196,\l... double %197)\l  store double %198, ptr %arrayidx220, align 8\l  br label %if.end221\l}"];
	Node0x55fe70d67b30 -> Node0x55fe70d67b80[tooltip="if.then196 -> if.end221\nProbability 100.00%" ];
	Node0x55fe70d67b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{if.end221:\l|  %199 = load i32, ptr %i4.addr, align 4\l  %200 = load i32, ptr %nlocal.addr, align 4\l  %cmp222 = icmp slt i32 %199, %200\l  br i1 %cmp222, label %if.then223, label %if.end248\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d67b80:s0 -> Node0x55fe70d36c30[tooltip="if.end221 -> if.then223\nProbability 50.00%" ];
	Node0x55fe70d67b80:s1 -> Node0x55fe70d36c80[tooltip="if.end221 -> if.end248\nProbability 50.00%" ];
	Node0x55fe70d36c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{if.then223:\l|  %arrayidx224 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 0\l  %201 = load double, ptr %arrayidx224, align 16\l  %virial226 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx227 = getelementptr inbounds [6 x double], ptr %virial226, i64 0,\l... i64 0\l  %202 = load double, ptr %arrayidx227, align 8\l  %203 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %201,\l... double %202)\l  store double %203, ptr %arrayidx227, align 8\l  %arrayidx228 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 1\l  %204 = load double, ptr %arrayidx228, align 8\l  %virial230 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx231 = getelementptr inbounds [6 x double], ptr %virial230, i64 0,\l... i64 1\l  %205 = load double, ptr %arrayidx231, align 8\l  %206 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %204,\l... double %205)\l  store double %206, ptr %arrayidx231, align 8\l  %arrayidx232 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 2\l  %207 = load double, ptr %arrayidx232, align 16\l  %virial234 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx235 = getelementptr inbounds [6 x double], ptr %virial234, i64 0,\l... i64 2\l  %208 = load double, ptr %arrayidx235, align 8\l  %209 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %207,\l... double %208)\l  store double %209, ptr %arrayidx235, align 8\l  %arrayidx236 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 3\l  %210 = load double, ptr %arrayidx236, align 8\l  %virial238 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx239 = getelementptr inbounds [6 x double], ptr %virial238, i64 0,\l... i64 3\l  %211 = load double, ptr %arrayidx239, align 8\l  %212 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %210,\l... double %211)\l  store double %212, ptr %arrayidx239, align 8\l  %arrayidx240 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 4\l  %213 = load double, ptr %arrayidx240, align 16\l  %virial242 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx243 = getelementptr inbounds [6 x double], ptr %virial242, i64 0,\l... i64 4\l  %214 = load double, ptr %arrayidx243, align 8\l  %215 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %213,\l... double %214)\l  store double %215, ptr %arrayidx243, align 8\l  %arrayidx244 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 5\l  %216 = load double, ptr %arrayidx244, align 8\l  %virial246 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 7\l  %arrayidx247 = getelementptr inbounds [6 x double], ptr %virial246, i64 0,\l... i64 5\l  %217 = load double, ptr %arrayidx247, align 8\l  %218 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %216,\l... double %217)\l  store double %218, ptr %arrayidx247, align 8\l  br label %if.end248\l}"];
	Node0x55fe70d36c30 -> Node0x55fe70d36c80[tooltip="if.then223 -> if.end248\nProbability 100.00%" ];
	Node0x55fe70d36c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{if.end248:\l|  br label %if.end249\l}"];
	Node0x55fe70d36c80 -> Node0x55fe70d536a0[tooltip="if.end248 -> if.end249\nProbability 100.00%" ];
	Node0x55fe70d536a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end249:\l|  br label %if.end250\l}"];
	Node0x55fe70d536a0 -> Node0x55fe70d5fe00[tooltip="if.end249 -> if.end250\nProbability 100.00%" ];
	Node0x55fe70d5fe00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.end250:\l|  %vflag_atom = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 23\l  %219 = load i32, ptr %vflag_atom, align 8\l  %tobool251 = icmp ne i32 %219, 0\l  br i1 %tobool251, label %if.then252, label %if.end416\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d5fe00:s0 -> Node0x55fe70d6d770[tooltip="if.end250 -> if.then252\nProbability 62.50%" ];
	Node0x55fe70d5fe00:s1 -> Node0x55fe70d6d7f0[tooltip="if.end250 -> if.end416\nProbability 37.50%" ];
	Node0x55fe70d6d770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then252:\l|  %220 = load i32, ptr %newton_bond.addr, align 4\l  %tobool253 = icmp ne i32 %220, 0\l  br i1 %tobool253, label %if.then256, label %lor.lhs.false254\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d6d770:s0 -> Node0x55fe70d6da90[tooltip="if.then252 -> if.then256\nProbability 62.50%" ];
	Node0x55fe70d6d770:s1 -> Node0x55fe70d6db10[tooltip="if.then252 -> lor.lhs.false254\nProbability 37.50%" ];
	Node0x55fe70d6db10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{lor.lhs.false254:\l|  %221 = load i32, ptr %i1.addr, align 4\l  %222 = load i32, ptr %nlocal.addr, align 4\l  %cmp255 = icmp slt i32 %221, %222\l  br i1 %cmp255, label %if.then256, label %if.end292\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d6db10:s0 -> Node0x55fe70d6da90[tooltip="lor.lhs.false254 -> if.then256\nProbability 50.00%" ];
	Node0x55fe70d6db10:s1 -> Node0x55fe70d6de00[tooltip="lor.lhs.false254 -> if.end292\nProbability 50.00%" ];
	Node0x55fe70d6da90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.then256:\l|  %arrayidx257 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 0\l  %223 = load double, ptr %arrayidx257, align 16\l  %vatom = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 9\l  %224 = load ptr, ptr %vatom, align 8\l  %225 = load i32, ptr %i1.addr, align 4\l  %idxprom259 = sext i32 %225 to i64\l  %arrayidx260 = getelementptr inbounds ptr, ptr %224, i64 %idxprom259\l  %226 = load ptr, ptr %arrayidx260, align 8\l  %arrayidx261 = getelementptr inbounds double, ptr %226, i64 0\l  %227 = load double, ptr %arrayidx261, align 8\l  %228 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %223,\l... double %227)\l  store double %228, ptr %arrayidx261, align 8\l  %arrayidx262 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 1\l  %229 = load double, ptr %arrayidx262, align 8\l  %vatom264 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 9\l  %230 = load ptr, ptr %vatom264, align 8\l  %231 = load i32, ptr %i1.addr, align 4\l  %idxprom265 = sext i32 %231 to i64\l  %arrayidx266 = getelementptr inbounds ptr, ptr %230, i64 %idxprom265\l  %232 = load ptr, ptr %arrayidx266, align 8\l  %arrayidx267 = getelementptr inbounds double, ptr %232, i64 1\l  %233 = load double, ptr %arrayidx267, align 8\l  %234 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %229,\l... double %233)\l  store double %234, ptr %arrayidx267, align 8\l  %arrayidx268 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 2\l  %235 = load double, ptr %arrayidx268, align 16\l  %vatom270 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 9\l  %236 = load ptr, ptr %vatom270, align 8\l  %237 = load i32, ptr %i1.addr, align 4\l  %idxprom271 = sext i32 %237 to i64\l  %arrayidx272 = getelementptr inbounds ptr, ptr %236, i64 %idxprom271\l  %238 = load ptr, ptr %arrayidx272, align 8\l  %arrayidx273 = getelementptr inbounds double, ptr %238, i64 2\l  %239 = load double, ptr %arrayidx273, align 8\l  %240 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %235,\l... double %239)\l  store double %240, ptr %arrayidx273, align 8\l  %arrayidx274 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 3\l  %241 = load double, ptr %arrayidx274, align 8\l  %vatom276 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 9\l  %242 = load ptr, ptr %vatom276, align 8\l  %243 = load i32, ptr %i1.addr, align 4\l  %idxprom277 = sext i32 %243 to i64\l  %arrayidx278 = getelementptr inbounds ptr, ptr %242, i64 %idxprom277\l  %244 = load ptr, ptr %arrayidx278, align 8\l  %arrayidx279 = getelementptr inbounds double, ptr %244, i64 3\l  %245 = load double, ptr %arrayidx279, align 8\l  %246 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %241,\l... double %245)\l  store double %246, ptr %arrayidx279, align 8\l  %arrayidx280 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 4\l  %247 = load double, ptr %arrayidx280, align 16\l  %vatom282 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 9\l  %248 = load ptr, ptr %vatom282, align 8\l  %249 = load i32, ptr %i1.addr, align 4\l  %idxprom283 = sext i32 %249 to i64\l  %arrayidx284 = getelementptr inbounds ptr, ptr %248, i64 %idxprom283\l  %250 = load ptr, ptr %arrayidx284, align 8\l  %arrayidx285 = getelementptr inbounds double, ptr %250, i64 4\l  %251 = load double, ptr %arrayidx285, align 8\l  %252 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %247,\l... double %251)\l  store double %252, ptr %arrayidx285, align 8\l  %arrayidx286 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 5\l  %253 = load double, ptr %arrayidx286, align 8\l  %vatom288 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 9\l  %254 = load ptr, ptr %vatom288, align 8\l  %255 = load i32, ptr %i1.addr, align 4\l  %idxprom289 = sext i32 %255 to i64\l  %arrayidx290 = getelementptr inbounds ptr, ptr %254, i64 %idxprom289\l  %256 = load ptr, ptr %arrayidx290, align 8\l  %arrayidx291 = getelementptr inbounds double, ptr %256, i64 5\l  %257 = load double, ptr %arrayidx291, align 8\l  %258 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %253,\l... double %257)\l  store double %258, ptr %arrayidx291, align 8\l  br label %if.end292\l}"];
	Node0x55fe70d6da90 -> Node0x55fe70d6de00[tooltip="if.then256 -> if.end292\nProbability 100.00%" ];
	Node0x55fe70d6de00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end292:\l|  %259 = load i32, ptr %newton_bond.addr, align 4\l  %tobool293 = icmp ne i32 %259, 0\l  br i1 %tobool293, label %if.then296, label %lor.lhs.false294\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d6de00:s0 -> Node0x55fe70d71360[tooltip="if.end292 -> if.then296\nProbability 62.50%" ];
	Node0x55fe70d6de00:s1 -> Node0x55fe70d713e0[tooltip="if.end292 -> lor.lhs.false294\nProbability 37.50%" ];
	Node0x55fe70d713e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{lor.lhs.false294:\l|  %260 = load i32, ptr %i2.addr, align 4\l  %261 = load i32, ptr %nlocal.addr, align 4\l  %cmp295 = icmp slt i32 %260, %261\l  br i1 %cmp295, label %if.then296, label %if.end333\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d713e0:s0 -> Node0x55fe70d71360[tooltip="lor.lhs.false294 -> if.then296\nProbability 50.00%" ];
	Node0x55fe70d713e0:s1 -> Node0x55fe70d716d0[tooltip="lor.lhs.false294 -> if.end333\nProbability 50.00%" ];
	Node0x55fe70d71360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.then296:\l|  %arrayidx297 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 0\l  %262 = load double, ptr %arrayidx297, align 16\l  %vatom299 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 9\l  %263 = load ptr, ptr %vatom299, align 8\l  %264 = load i32, ptr %i2.addr, align 4\l  %idxprom300 = sext i32 %264 to i64\l  %arrayidx301 = getelementptr inbounds ptr, ptr %263, i64 %idxprom300\l  %265 = load ptr, ptr %arrayidx301, align 8\l  %arrayidx302 = getelementptr inbounds double, ptr %265, i64 0\l  %266 = load double, ptr %arrayidx302, align 8\l  %267 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %262,\l... double %266)\l  store double %267, ptr %arrayidx302, align 8\l  %arrayidx303 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 1\l  %268 = load double, ptr %arrayidx303, align 8\l  %vatom305 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 9\l  %269 = load ptr, ptr %vatom305, align 8\l  %270 = load i32, ptr %i2.addr, align 4\l  %idxprom306 = sext i32 %270 to i64\l  %arrayidx307 = getelementptr inbounds ptr, ptr %269, i64 %idxprom306\l  %271 = load ptr, ptr %arrayidx307, align 8\l  %arrayidx308 = getelementptr inbounds double, ptr %271, i64 1\l  %272 = load double, ptr %arrayidx308, align 8\l  %273 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %268,\l... double %272)\l  store double %273, ptr %arrayidx308, align 8\l  %arrayidx309 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 2\l  %274 = load double, ptr %arrayidx309, align 16\l  %vatom311 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 9\l  %275 = load ptr, ptr %vatom311, align 8\l  %276 = load i32, ptr %i2.addr, align 4\l  %idxprom312 = sext i32 %276 to i64\l  %arrayidx313 = getelementptr inbounds ptr, ptr %275, i64 %idxprom312\l  %277 = load ptr, ptr %arrayidx313, align 8\l  %arrayidx314 = getelementptr inbounds double, ptr %277, i64 2\l  %278 = load double, ptr %arrayidx314, align 8\l  %279 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %274,\l... double %278)\l  store double %279, ptr %arrayidx314, align 8\l  %arrayidx315 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 3\l  %280 = load double, ptr %arrayidx315, align 8\l  %vatom317 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 9\l  %281 = load ptr, ptr %vatom317, align 8\l  %282 = load i32, ptr %i2.addr, align 4\l  %idxprom318 = sext i32 %282 to i64\l  %arrayidx319 = getelementptr inbounds ptr, ptr %281, i64 %idxprom318\l  %283 = load ptr, ptr %arrayidx319, align 8\l  %arrayidx320 = getelementptr inbounds double, ptr %283, i64 3\l  %284 = load double, ptr %arrayidx320, align 8\l  %285 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %280,\l... double %284)\l  store double %285, ptr %arrayidx320, align 8\l  %arrayidx321 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 4\l  %286 = load double, ptr %arrayidx321, align 16\l  %vatom323 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 9\l  %287 = load ptr, ptr %vatom323, align 8\l  %288 = load i32, ptr %i2.addr, align 4\l  %idxprom324 = sext i32 %288 to i64\l  %arrayidx325 = getelementptr inbounds ptr, ptr %287, i64 %idxprom324\l  %289 = load ptr, ptr %arrayidx325, align 8\l  %arrayidx326 = getelementptr inbounds double, ptr %289, i64 4\l  %290 = load double, ptr %arrayidx326, align 8\l  %291 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %286,\l... double %290)\l  store double %291, ptr %arrayidx326, align 8\l  %arrayidx327 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 5\l  %292 = load double, ptr %arrayidx327, align 8\l  %vatom329 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 9\l  %293 = load ptr, ptr %vatom329, align 8\l  %294 = load i32, ptr %i2.addr, align 4\l  %idxprom330 = sext i32 %294 to i64\l  %arrayidx331 = getelementptr inbounds ptr, ptr %293, i64 %idxprom330\l  %295 = load ptr, ptr %arrayidx331, align 8\l  %arrayidx332 = getelementptr inbounds double, ptr %295, i64 5\l  %296 = load double, ptr %arrayidx332, align 8\l  %297 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %292,\l... double %296)\l  store double %297, ptr %arrayidx332, align 8\l  br label %if.end333\l}"];
	Node0x55fe70d71360 -> Node0x55fe70d716d0[tooltip="if.then296 -> if.end333\nProbability 100.00%" ];
	Node0x55fe70d716d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end333:\l|  %298 = load i32, ptr %newton_bond.addr, align 4\l  %tobool334 = icmp ne i32 %298, 0\l  br i1 %tobool334, label %if.then337, label %lor.lhs.false335\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d716d0:s0 -> Node0x55fe70d74c40[tooltip="if.end333 -> if.then337\nProbability 62.50%" ];
	Node0x55fe70d716d0:s1 -> Node0x55fe70d74cc0[tooltip="if.end333 -> lor.lhs.false335\nProbability 37.50%" ];
	Node0x55fe70d74cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{lor.lhs.false335:\l|  %299 = load i32, ptr %i3.addr, align 4\l  %300 = load i32, ptr %nlocal.addr, align 4\l  %cmp336 = icmp slt i32 %299, %300\l  br i1 %cmp336, label %if.then337, label %if.end374\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d74cc0:s0 -> Node0x55fe70d74c40[tooltip="lor.lhs.false335 -> if.then337\nProbability 50.00%" ];
	Node0x55fe70d74cc0:s1 -> Node0x55fe70d74fb0[tooltip="lor.lhs.false335 -> if.end374\nProbability 50.00%" ];
	Node0x55fe70d74c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.then337:\l|  %arrayidx338 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 0\l  %301 = load double, ptr %arrayidx338, align 16\l  %vatom340 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 9\l  %302 = load ptr, ptr %vatom340, align 8\l  %303 = load i32, ptr %i3.addr, align 4\l  %idxprom341 = sext i32 %303 to i64\l  %arrayidx342 = getelementptr inbounds ptr, ptr %302, i64 %idxprom341\l  %304 = load ptr, ptr %arrayidx342, align 8\l  %arrayidx343 = getelementptr inbounds double, ptr %304, i64 0\l  %305 = load double, ptr %arrayidx343, align 8\l  %306 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %301,\l... double %305)\l  store double %306, ptr %arrayidx343, align 8\l  %arrayidx344 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 1\l  %307 = load double, ptr %arrayidx344, align 8\l  %vatom346 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 9\l  %308 = load ptr, ptr %vatom346, align 8\l  %309 = load i32, ptr %i3.addr, align 4\l  %idxprom347 = sext i32 %309 to i64\l  %arrayidx348 = getelementptr inbounds ptr, ptr %308, i64 %idxprom347\l  %310 = load ptr, ptr %arrayidx348, align 8\l  %arrayidx349 = getelementptr inbounds double, ptr %310, i64 1\l  %311 = load double, ptr %arrayidx349, align 8\l  %312 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %307,\l... double %311)\l  store double %312, ptr %arrayidx349, align 8\l  %arrayidx350 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 2\l  %313 = load double, ptr %arrayidx350, align 16\l  %vatom352 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 9\l  %314 = load ptr, ptr %vatom352, align 8\l  %315 = load i32, ptr %i3.addr, align 4\l  %idxprom353 = sext i32 %315 to i64\l  %arrayidx354 = getelementptr inbounds ptr, ptr %314, i64 %idxprom353\l  %316 = load ptr, ptr %arrayidx354, align 8\l  %arrayidx355 = getelementptr inbounds double, ptr %316, i64 2\l  %317 = load double, ptr %arrayidx355, align 8\l  %318 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %313,\l... double %317)\l  store double %318, ptr %arrayidx355, align 8\l  %arrayidx356 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 3\l  %319 = load double, ptr %arrayidx356, align 8\l  %vatom358 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 9\l  %320 = load ptr, ptr %vatom358, align 8\l  %321 = load i32, ptr %i3.addr, align 4\l  %idxprom359 = sext i32 %321 to i64\l  %arrayidx360 = getelementptr inbounds ptr, ptr %320, i64 %idxprom359\l  %322 = load ptr, ptr %arrayidx360, align 8\l  %arrayidx361 = getelementptr inbounds double, ptr %322, i64 3\l  %323 = load double, ptr %arrayidx361, align 8\l  %324 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %319,\l... double %323)\l  store double %324, ptr %arrayidx361, align 8\l  %arrayidx362 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 4\l  %325 = load double, ptr %arrayidx362, align 16\l  %vatom364 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 9\l  %326 = load ptr, ptr %vatom364, align 8\l  %327 = load i32, ptr %i3.addr, align 4\l  %idxprom365 = sext i32 %327 to i64\l  %arrayidx366 = getelementptr inbounds ptr, ptr %326, i64 %idxprom365\l  %328 = load ptr, ptr %arrayidx366, align 8\l  %arrayidx367 = getelementptr inbounds double, ptr %328, i64 4\l  %329 = load double, ptr %arrayidx367, align 8\l  %330 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %325,\l... double %329)\l  store double %330, ptr %arrayidx367, align 8\l  %arrayidx368 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 5\l  %331 = load double, ptr %arrayidx368, align 8\l  %vatom370 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 9\l  %332 = load ptr, ptr %vatom370, align 8\l  %333 = load i32, ptr %i3.addr, align 4\l  %idxprom371 = sext i32 %333 to i64\l  %arrayidx372 = getelementptr inbounds ptr, ptr %332, i64 %idxprom371\l  %334 = load ptr, ptr %arrayidx372, align 8\l  %arrayidx373 = getelementptr inbounds double, ptr %334, i64 5\l  %335 = load double, ptr %arrayidx373, align 8\l  %336 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %331,\l... double %335)\l  store double %336, ptr %arrayidx373, align 8\l  br label %if.end374\l}"];
	Node0x55fe70d74c40 -> Node0x55fe70d74fb0[tooltip="if.then337 -> if.end374\nProbability 100.00%" ];
	Node0x55fe70d74fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end374:\l|  %337 = load i32, ptr %newton_bond.addr, align 4\l  %tobool375 = icmp ne i32 %337, 0\l  br i1 %tobool375, label %if.then378, label %lor.lhs.false376\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d74fb0:s0 -> Node0x55fe70d62900[tooltip="if.end374 -> if.then378\nProbability 62.50%" ];
	Node0x55fe70d74fb0:s1 -> Node0x55fe70d62980[tooltip="if.end374 -> lor.lhs.false376\nProbability 37.50%" ];
	Node0x55fe70d62980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{lor.lhs.false376:\l|  %338 = load i32, ptr %i4.addr, align 4\l  %339 = load i32, ptr %nlocal.addr, align 4\l  %cmp377 = icmp slt i32 %338, %339\l  br i1 %cmp377, label %if.then378, label %if.end415\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d62980:s0 -> Node0x55fe70d62900[tooltip="lor.lhs.false376 -> if.then378\nProbability 50.00%" ];
	Node0x55fe70d62980:s1 -> Node0x55fe70d62c70[tooltip="lor.lhs.false376 -> if.end415\nProbability 50.00%" ];
	Node0x55fe70d62900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.then378:\l|  %arrayidx379 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 0\l  %340 = load double, ptr %arrayidx379, align 16\l  %vatom381 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 9\l  %341 = load ptr, ptr %vatom381, align 8\l  %342 = load i32, ptr %i4.addr, align 4\l  %idxprom382 = sext i32 %342 to i64\l  %arrayidx383 = getelementptr inbounds ptr, ptr %341, i64 %idxprom382\l  %343 = load ptr, ptr %arrayidx383, align 8\l  %arrayidx384 = getelementptr inbounds double, ptr %343, i64 0\l  %344 = load double, ptr %arrayidx384, align 8\l  %345 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %340,\l... double %344)\l  store double %345, ptr %arrayidx384, align 8\l  %arrayidx385 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 1\l  %346 = load double, ptr %arrayidx385, align 8\l  %vatom387 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 9\l  %347 = load ptr, ptr %vatom387, align 8\l  %348 = load i32, ptr %i4.addr, align 4\l  %idxprom388 = sext i32 %348 to i64\l  %arrayidx389 = getelementptr inbounds ptr, ptr %347, i64 %idxprom388\l  %349 = load ptr, ptr %arrayidx389, align 8\l  %arrayidx390 = getelementptr inbounds double, ptr %349, i64 1\l  %350 = load double, ptr %arrayidx390, align 8\l  %351 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %346,\l... double %350)\l  store double %351, ptr %arrayidx390, align 8\l  %arrayidx391 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 2\l  %352 = load double, ptr %arrayidx391, align 16\l  %vatom393 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 9\l  %353 = load ptr, ptr %vatom393, align 8\l  %354 = load i32, ptr %i4.addr, align 4\l  %idxprom394 = sext i32 %354 to i64\l  %arrayidx395 = getelementptr inbounds ptr, ptr %353, i64 %idxprom394\l  %355 = load ptr, ptr %arrayidx395, align 8\l  %arrayidx396 = getelementptr inbounds double, ptr %355, i64 2\l  %356 = load double, ptr %arrayidx396, align 8\l  %357 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %352,\l... double %356)\l  store double %357, ptr %arrayidx396, align 8\l  %arrayidx397 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 3\l  %358 = load double, ptr %arrayidx397, align 8\l  %vatom399 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 9\l  %359 = load ptr, ptr %vatom399, align 8\l  %360 = load i32, ptr %i4.addr, align 4\l  %idxprom400 = sext i32 %360 to i64\l  %arrayidx401 = getelementptr inbounds ptr, ptr %359, i64 %idxprom400\l  %361 = load ptr, ptr %arrayidx401, align 8\l  %arrayidx402 = getelementptr inbounds double, ptr %361, i64 3\l  %362 = load double, ptr %arrayidx402, align 8\l  %363 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %358,\l... double %362)\l  store double %363, ptr %arrayidx402, align 8\l  %arrayidx403 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 4\l  %364 = load double, ptr %arrayidx403, align 16\l  %vatom405 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 9\l  %365 = load ptr, ptr %vatom405, align 8\l  %366 = load i32, ptr %i4.addr, align 4\l  %idxprom406 = sext i32 %366 to i64\l  %arrayidx407 = getelementptr inbounds ptr, ptr %365, i64 %idxprom406\l  %367 = load ptr, ptr %arrayidx407, align 8\l  %arrayidx408 = getelementptr inbounds double, ptr %367, i64 4\l  %368 = load double, ptr %arrayidx408, align 8\l  %369 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %364,\l... double %368)\l  store double %369, ptr %arrayidx408, align 8\l  %arrayidx409 = getelementptr inbounds [6 x double], ptr %v, i64 0, i64 5\l  %370 = load double, ptr %arrayidx409, align 8\l  %vatom411 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 9\l  %371 = load ptr, ptr %vatom411, align 8\l  %372 = load i32, ptr %i4.addr, align 4\l  %idxprom412 = sext i32 %372 to i64\l  %arrayidx413 = getelementptr inbounds ptr, ptr %371, i64 %idxprom412\l  %373 = load ptr, ptr %arrayidx413, align 8\l  %arrayidx414 = getelementptr inbounds double, ptr %373, i64 5\l  %374 = load double, ptr %arrayidx414, align 8\l  %375 = call double @llvm.fmuladd.f64(double 2.500000e-01, double %370,\l... double %374)\l  store double %375, ptr %arrayidx414, align 8\l  br label %if.end415\l}"];
	Node0x55fe70d62900 -> Node0x55fe70d62c70[tooltip="if.then378 -> if.end415\nProbability 100.00%" ];
	Node0x55fe70d62c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end415:\l|  br label %if.end416\l}"];
	Node0x55fe70d62c70 -> Node0x55fe70d6d7f0[tooltip="if.end415 -> if.end416\nProbability 100.00%" ];
	Node0x55fe70d6d7f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.end416:\l|  br label %if.end417\l}"];
	Node0x55fe70d6d7f0 -> Node0x55fe70d569c0[tooltip="if.end416 -> if.end417\nProbability 100.00%" ];
	Node0x55fe70d569c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end417:\l|  %cvflag_atom = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 24\l  %376 = load i32, ptr %cvflag_atom, align 4\l  %tobool418 = icmp ne i32 %376, 0\l  br i1 %tobool418, label %if.then419, label %if.end772\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d569c0:s0 -> Node0x55fe70d7d7c0[tooltip="if.end417 -> if.then419\nProbability 62.50%" ];
	Node0x55fe70d569c0:s1 -> Node0x55fe70d7d840[tooltip="if.end417 -> if.end772\nProbability 37.50%" ];
	Node0x55fe70d7d7c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.then419:\l|  %377 = load i32, ptr %newton_bond.addr, align 4\l  %tobool420 = icmp ne i32 %377, 0\l  br i1 %tobool420, label %if.then423, label %lor.lhs.false421\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d7d7c0:s0 -> Node0x55fe70d7dae0[tooltip="if.then419 -> if.then423\nProbability 62.50%" ];
	Node0x55fe70d7d7c0:s1 -> Node0x55fe70d7db60[tooltip="if.then419 -> lor.lhs.false421\nProbability 37.50%" ];
	Node0x55fe70d7db60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{lor.lhs.false421:\l|  %378 = load i32, ptr %i1.addr, align 4\l  %379 = load i32, ptr %nlocal.addr, align 4\l  %cmp422 = icmp slt i32 %378, %379\l  br i1 %cmp422, label %if.then423, label %if.end502\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d7db60:s0 -> Node0x55fe70d7dae0[tooltip="lor.lhs.false421 -> if.then423\nProbability 50.00%" ];
	Node0x55fe70d7db60:s1 -> Node0x55fe70d7de50[tooltip="lor.lhs.false421 -> if.end502\nProbability 50.00%" ];
	Node0x55fe70d7dae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then423:\l|  %380 = load double, ptr %vb1x.addr, align 8\l  %381 = load double, ptr %vb2x.addr, align 8\l  %mul425 = fmul double 2.000000e+00, %381\l  %neg = fneg double %mul425\l  %382 = call double @llvm.fmuladd.f64(double 3.000000e+00, double %380,\l... double %neg)\l  %383 = load double, ptr %vb3x.addr, align 8\l  %sub = fsub double %382, %383\l  %mul426 = fmul double 2.500000e-01, %sub\l  %arrayidx427 = getelementptr inbounds [3 x double], ptr %a1, i64 0, i64 0\l  store double %mul426, ptr %arrayidx427, align 16\l  %384 = load double, ptr %vb1y.addr, align 8\l  %385 = load double, ptr %vb2y.addr, align 8\l  %mul429 = fmul double 2.000000e+00, %385\l  %neg430 = fneg double %mul429\l  %386 = call double @llvm.fmuladd.f64(double 3.000000e+00, double %384,\l... double %neg430)\l  %387 = load double, ptr %vb3y.addr, align 8\l  %sub431 = fsub double %386, %387\l  %mul432 = fmul double 2.500000e-01, %sub431\l  %arrayidx433 = getelementptr inbounds [3 x double], ptr %a1, i64 0, i64 1\l  store double %mul432, ptr %arrayidx433, align 8\l  %388 = load double, ptr %vb1z.addr, align 8\l  %389 = load double, ptr %vb2z.addr, align 8\l  %mul435 = fmul double 2.000000e+00, %389\l  %neg436 = fneg double %mul435\l  %390 = call double @llvm.fmuladd.f64(double 3.000000e+00, double %388,\l... double %neg436)\l  %391 = load double, ptr %vb3z.addr, align 8\l  %sub437 = fsub double %390, %391\l  %mul438 = fmul double 2.500000e-01, %sub437\l  %arrayidx439 = getelementptr inbounds [3 x double], ptr %a1, i64 0, i64 2\l  store double %mul438, ptr %arrayidx439, align 16\l  %arrayidx440 = getelementptr inbounds [3 x double], ptr %a1, i64 0, i64 0\l  %392 = load double, ptr %arrayidx440, align 16\l  %393 = load ptr, ptr %f1.addr, align 8\l  %arrayidx441 = getelementptr inbounds double, ptr %393, i64 0\l  %394 = load double, ptr %arrayidx441, align 8\l  %cvatom = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr %this1,\l... i32 0, i32 10\l  %395 = load ptr, ptr %cvatom, align 8\l  %396 = load i32, ptr %i1.addr, align 4\l  %idxprom443 = sext i32 %396 to i64\l  %arrayidx444 = getelementptr inbounds ptr, ptr %395, i64 %idxprom443\l  %397 = load ptr, ptr %arrayidx444, align 8\l  %arrayidx445 = getelementptr inbounds double, ptr %397, i64 0\l  %398 = load double, ptr %arrayidx445, align 8\l  %399 = call double @llvm.fmuladd.f64(double %392, double %394, double %398)\l  store double %399, ptr %arrayidx445, align 8\l  %arrayidx446 = getelementptr inbounds [3 x double], ptr %a1, i64 0, i64 1\l  %400 = load double, ptr %arrayidx446, align 8\l  %401 = load ptr, ptr %f1.addr, align 8\l  %arrayidx447 = getelementptr inbounds double, ptr %401, i64 1\l  %402 = load double, ptr %arrayidx447, align 8\l  %cvatom449 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %403 = load ptr, ptr %cvatom449, align 8\l  %404 = load i32, ptr %i1.addr, align 4\l  %idxprom450 = sext i32 %404 to i64\l  %arrayidx451 = getelementptr inbounds ptr, ptr %403, i64 %idxprom450\l  %405 = load ptr, ptr %arrayidx451, align 8\l  %arrayidx452 = getelementptr inbounds double, ptr %405, i64 1\l  %406 = load double, ptr %arrayidx452, align 8\l  %407 = call double @llvm.fmuladd.f64(double %400, double %402, double %406)\l  store double %407, ptr %arrayidx452, align 8\l  %arrayidx453 = getelementptr inbounds [3 x double], ptr %a1, i64 0, i64 2\l  %408 = load double, ptr %arrayidx453, align 16\l  %409 = load ptr, ptr %f1.addr, align 8\l  %arrayidx454 = getelementptr inbounds double, ptr %409, i64 2\l  %410 = load double, ptr %arrayidx454, align 8\l  %cvatom456 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %411 = load ptr, ptr %cvatom456, align 8\l  %412 = load i32, ptr %i1.addr, align 4\l  %idxprom457 = sext i32 %412 to i64\l  %arrayidx458 = getelementptr inbounds ptr, ptr %411, i64 %idxprom457\l  %413 = load ptr, ptr %arrayidx458, align 8\l  %arrayidx459 = getelementptr inbounds double, ptr %413, i64 2\l  %414 = load double, ptr %arrayidx459, align 8\l  %415 = call double @llvm.fmuladd.f64(double %408, double %410, double %414)\l  store double %415, ptr %arrayidx459, align 8\l  %arrayidx460 = getelementptr inbounds [3 x double], ptr %a1, i64 0, i64 0\l  %416 = load double, ptr %arrayidx460, align 16\l  %417 = load ptr, ptr %f1.addr, align 8\l  %arrayidx461 = getelementptr inbounds double, ptr %417, i64 1\l  %418 = load double, ptr %arrayidx461, align 8\l  %cvatom463 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %419 = load ptr, ptr %cvatom463, align 8\l  %420 = load i32, ptr %i1.addr, align 4\l  %idxprom464 = sext i32 %420 to i64\l  %arrayidx465 = getelementptr inbounds ptr, ptr %419, i64 %idxprom464\l  %421 = load ptr, ptr %arrayidx465, align 8\l  %arrayidx466 = getelementptr inbounds double, ptr %421, i64 3\l  %422 = load double, ptr %arrayidx466, align 8\l  %423 = call double @llvm.fmuladd.f64(double %416, double %418, double %422)\l  store double %423, ptr %arrayidx466, align 8\l  %arrayidx467 = getelementptr inbounds [3 x double], ptr %a1, i64 0, i64 0\l  %424 = load double, ptr %arrayidx467, align 16\l  %425 = load ptr, ptr %f1.addr, align 8\l  %arrayidx468 = getelementptr inbounds double, ptr %425, i64 2\l  %426 = load double, ptr %arrayidx468, align 8\l  %cvatom470 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %427 = load ptr, ptr %cvatom470, align 8\l  %428 = load i32, ptr %i1.addr, align 4\l  %idxprom471 = sext i32 %428 to i64\l  %arrayidx472 = getelementptr inbounds ptr, ptr %427, i64 %idxprom471\l  %429 = load ptr, ptr %arrayidx472, align 8\l  %arrayidx473 = getelementptr inbounds double, ptr %429, i64 4\l  %430 = load double, ptr %arrayidx473, align 8\l  %431 = call double @llvm.fmuladd.f64(double %424, double %426, double %430)\l  store double %431, ptr %arrayidx473, align 8\l  %arrayidx474 = getelementptr inbounds [3 x double], ptr %a1, i64 0, i64 1\l  %432 = load double, ptr %arrayidx474, align 8\l  %433 = load ptr, ptr %f1.addr, align 8\l  %arrayidx475 = getelementptr inbounds double, ptr %433, i64 2\l  %434 = load double, ptr %arrayidx475, align 8\l  %cvatom477 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %435 = load ptr, ptr %cvatom477, align 8\l  %436 = load i32, ptr %i1.addr, align 4\l  %idxprom478 = sext i32 %436 to i64\l  %arrayidx479 = getelementptr inbounds ptr, ptr %435, i64 %idxprom478\l  %437 = load ptr, ptr %arrayidx479, align 8\l  %arrayidx480 = getelementptr inbounds double, ptr %437, i64 5\l  %438 = load double, ptr %arrayidx480, align 8\l  %439 = call double @llvm.fmuladd.f64(double %432, double %434, double %438)\l  store double %439, ptr %arrayidx480, align 8\l  %arrayidx481 = getelementptr inbounds [3 x double], ptr %a1, i64 0, i64 1\l  %440 = load double, ptr %arrayidx481, align 8\l  %441 = load ptr, ptr %f1.addr, align 8\l  %arrayidx482 = getelementptr inbounds double, ptr %441, i64 0\l  %442 = load double, ptr %arrayidx482, align 8\l  %cvatom484 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %443 = load ptr, ptr %cvatom484, align 8\l  %444 = load i32, ptr %i1.addr, align 4\l  %idxprom485 = sext i32 %444 to i64\l  %arrayidx486 = getelementptr inbounds ptr, ptr %443, i64 %idxprom485\l  %445 = load ptr, ptr %arrayidx486, align 8\l  %arrayidx487 = getelementptr inbounds double, ptr %445, i64 6\l  %446 = load double, ptr %arrayidx487, align 8\l  %447 = call double @llvm.fmuladd.f64(double %440, double %442, double %446)\l  store double %447, ptr %arrayidx487, align 8\l  %arrayidx488 = getelementptr inbounds [3 x double], ptr %a1, i64 0, i64 2\l  %448 = load double, ptr %arrayidx488, align 16\l  %449 = load ptr, ptr %f1.addr, align 8\l  %arrayidx489 = getelementptr inbounds double, ptr %449, i64 0\l  %450 = load double, ptr %arrayidx489, align 8\l  %cvatom491 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %451 = load ptr, ptr %cvatom491, align 8\l  %452 = load i32, ptr %i1.addr, align 4\l  %idxprom492 = sext i32 %452 to i64\l  %arrayidx493 = getelementptr inbounds ptr, ptr %451, i64 %idxprom492\l  %453 = load ptr, ptr %arrayidx493, align 8\l  %arrayidx494 = getelementptr inbounds double, ptr %453, i64 7\l  %454 = load double, ptr %arrayidx494, align 8\l  %455 = call double @llvm.fmuladd.f64(double %448, double %450, double %454)\l  store double %455, ptr %arrayidx494, align 8\l  %arrayidx495 = getelementptr inbounds [3 x double], ptr %a1, i64 0, i64 2\l  %456 = load double, ptr %arrayidx495, align 16\l  %457 = load ptr, ptr %f1.addr, align 8\l  %arrayidx496 = getelementptr inbounds double, ptr %457, i64 1\l  %458 = load double, ptr %arrayidx496, align 8\l  %cvatom498 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %459 = load ptr, ptr %cvatom498, align 8\l  %460 = load i32, ptr %i1.addr, align 4\l  %idxprom499 = sext i32 %460 to i64\l  %arrayidx500 = getelementptr inbounds ptr, ptr %459, i64 %idxprom499\l  %461 = load ptr, ptr %arrayidx500, align 8\l  %arrayidx501 = getelementptr inbounds double, ptr %461, i64 8\l  %462 = load double, ptr %arrayidx501, align 8\l  %463 = call double @llvm.fmuladd.f64(double %456, double %458, double %462)\l  store double %463, ptr %arrayidx501, align 8\l  br label %if.end502\l}"];
	Node0x55fe70d7dae0 -> Node0x55fe70d7de50[tooltip="if.then423 -> if.end502\nProbability 100.00%" ];
	Node0x55fe70d7de50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.end502:\l|  %464 = load i32, ptr %newton_bond.addr, align 4\l  %tobool503 = icmp ne i32 %464, 0\l  br i1 %tobool503, label %if.then506, label %lor.lhs.false504\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d7de50:s0 -> Node0x55fe70d87210[tooltip="if.end502 -> if.then506\nProbability 62.50%" ];
	Node0x55fe70d7de50:s1 -> Node0x55fe70d87290[tooltip="if.end502 -> lor.lhs.false504\nProbability 37.50%" ];
	Node0x55fe70d87290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{lor.lhs.false504:\l|  %465 = load i32, ptr %i2.addr, align 4\l  %466 = load i32, ptr %nlocal.addr, align 4\l  %cmp505 = icmp slt i32 %465, %466\l  br i1 %cmp505, label %if.then506, label %if.end605\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d87290:s0 -> Node0x55fe70d87210[tooltip="lor.lhs.false504 -> if.then506\nProbability 50.00%" ];
	Node0x55fe70d87290:s1 -> Node0x55fe70d87580[tooltip="lor.lhs.false504 -> if.end605\nProbability 50.00%" ];
	Node0x55fe70d87210 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then506:\l|  %467 = load double, ptr %vb1x.addr, align 8\l  %fneg = fneg double %467\l  %468 = load double, ptr %vb2x.addr, align 8\l  %469 = call double @llvm.fmuladd.f64(double -2.000000e+00, double %468,\l... double %fneg)\l  %470 = load double, ptr %vb3x.addr, align 8\l  %sub508 = fsub double %469, %470\l  %mul509 = fmul double 2.500000e-01, %sub508\l  %arrayidx510 = getelementptr inbounds [3 x double], ptr %a2, i64 0, i64 0\l  store double %mul509, ptr %arrayidx510, align 16\l  %471 = load double, ptr %vb1y.addr, align 8\l  %fneg511 = fneg double %471\l  %472 = load double, ptr %vb2y.addr, align 8\l  %473 = call double @llvm.fmuladd.f64(double -2.000000e+00, double %472,\l... double %fneg511)\l  %474 = load double, ptr %vb3y.addr, align 8\l  %sub513 = fsub double %473, %474\l  %mul514 = fmul double 2.500000e-01, %sub513\l  %arrayidx515 = getelementptr inbounds [3 x double], ptr %a2, i64 0, i64 1\l  store double %mul514, ptr %arrayidx515, align 8\l  %475 = load double, ptr %vb1z.addr, align 8\l  %fneg516 = fneg double %475\l  %476 = load double, ptr %vb2z.addr, align 8\l  %477 = call double @llvm.fmuladd.f64(double -2.000000e+00, double %476,\l... double %fneg516)\l  %478 = load double, ptr %vb3z.addr, align 8\l  %sub518 = fsub double %477, %478\l  %mul519 = fmul double 2.500000e-01, %sub518\l  %arrayidx520 = getelementptr inbounds [3 x double], ptr %a2, i64 0, i64 2\l  store double %mul519, ptr %arrayidx520, align 16\l  %479 = load ptr, ptr %f1.addr, align 8\l  %arrayidx521 = getelementptr inbounds double, ptr %479, i64 0\l  %480 = load double, ptr %arrayidx521, align 8\l  %fneg522 = fneg double %480\l  %481 = load ptr, ptr %f3.addr, align 8\l  %arrayidx523 = getelementptr inbounds double, ptr %481, i64 0\l  %482 = load double, ptr %arrayidx523, align 8\l  %sub524 = fsub double %fneg522, %482\l  %483 = load ptr, ptr %f4.addr, align 8\l  %arrayidx525 = getelementptr inbounds double, ptr %483, i64 0\l  %484 = load double, ptr %arrayidx525, align 8\l  %sub526 = fsub double %sub524, %484\l  %arrayidx527 = getelementptr inbounds [3 x double], ptr %f2, i64 0, i64 0\l  store double %sub526, ptr %arrayidx527, align 16\l  %485 = load ptr, ptr %f1.addr, align 8\l  %arrayidx528 = getelementptr inbounds double, ptr %485, i64 1\l  %486 = load double, ptr %arrayidx528, align 8\l  %fneg529 = fneg double %486\l  %487 = load ptr, ptr %f3.addr, align 8\l  %arrayidx530 = getelementptr inbounds double, ptr %487, i64 1\l  %488 = load double, ptr %arrayidx530, align 8\l  %sub531 = fsub double %fneg529, %488\l  %489 = load ptr, ptr %f4.addr, align 8\l  %arrayidx532 = getelementptr inbounds double, ptr %489, i64 1\l  %490 = load double, ptr %arrayidx532, align 8\l  %sub533 = fsub double %sub531, %490\l  %arrayidx534 = getelementptr inbounds [3 x double], ptr %f2, i64 0, i64 1\l  store double %sub533, ptr %arrayidx534, align 8\l  %491 = load ptr, ptr %f1.addr, align 8\l  %arrayidx535 = getelementptr inbounds double, ptr %491, i64 2\l  %492 = load double, ptr %arrayidx535, align 8\l  %fneg536 = fneg double %492\l  %493 = load ptr, ptr %f3.addr, align 8\l  %arrayidx537 = getelementptr inbounds double, ptr %493, i64 2\l  %494 = load double, ptr %arrayidx537, align 8\l  %sub538 = fsub double %fneg536, %494\l  %495 = load ptr, ptr %f4.addr, align 8\l  %arrayidx539 = getelementptr inbounds double, ptr %495, i64 2\l  %496 = load double, ptr %arrayidx539, align 8\l  %sub540 = fsub double %sub538, %496\l  %arrayidx541 = getelementptr inbounds [3 x double], ptr %f2, i64 0, i64 2\l  store double %sub540, ptr %arrayidx541, align 16\l  %arrayidx542 = getelementptr inbounds [3 x double], ptr %a2, i64 0, i64 0\l  %497 = load double, ptr %arrayidx542, align 16\l  %arrayidx543 = getelementptr inbounds [3 x double], ptr %f2, i64 0, i64 0\l  %498 = load double, ptr %arrayidx543, align 16\l  %cvatom545 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %499 = load ptr, ptr %cvatom545, align 8\l  %500 = load i32, ptr %i2.addr, align 4\l  %idxprom546 = sext i32 %500 to i64\l  %arrayidx547 = getelementptr inbounds ptr, ptr %499, i64 %idxprom546\l  %501 = load ptr, ptr %arrayidx547, align 8\l  %arrayidx548 = getelementptr inbounds double, ptr %501, i64 0\l  %502 = load double, ptr %arrayidx548, align 8\l  %503 = call double @llvm.fmuladd.f64(double %497, double %498, double %502)\l  store double %503, ptr %arrayidx548, align 8\l  %arrayidx549 = getelementptr inbounds [3 x double], ptr %a2, i64 0, i64 1\l  %504 = load double, ptr %arrayidx549, align 8\l  %arrayidx550 = getelementptr inbounds [3 x double], ptr %f2, i64 0, i64 1\l  %505 = load double, ptr %arrayidx550, align 8\l  %cvatom552 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %506 = load ptr, ptr %cvatom552, align 8\l  %507 = load i32, ptr %i2.addr, align 4\l  %idxprom553 = sext i32 %507 to i64\l  %arrayidx554 = getelementptr inbounds ptr, ptr %506, i64 %idxprom553\l  %508 = load ptr, ptr %arrayidx554, align 8\l  %arrayidx555 = getelementptr inbounds double, ptr %508, i64 1\l  %509 = load double, ptr %arrayidx555, align 8\l  %510 = call double @llvm.fmuladd.f64(double %504, double %505, double %509)\l  store double %510, ptr %arrayidx555, align 8\l  %arrayidx556 = getelementptr inbounds [3 x double], ptr %a2, i64 0, i64 2\l  %511 = load double, ptr %arrayidx556, align 16\l  %arrayidx557 = getelementptr inbounds [3 x double], ptr %f2, i64 0, i64 2\l  %512 = load double, ptr %arrayidx557, align 16\l  %cvatom559 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %513 = load ptr, ptr %cvatom559, align 8\l  %514 = load i32, ptr %i2.addr, align 4\l  %idxprom560 = sext i32 %514 to i64\l  %arrayidx561 = getelementptr inbounds ptr, ptr %513, i64 %idxprom560\l  %515 = load ptr, ptr %arrayidx561, align 8\l  %arrayidx562 = getelementptr inbounds double, ptr %515, i64 2\l  %516 = load double, ptr %arrayidx562, align 8\l  %517 = call double @llvm.fmuladd.f64(double %511, double %512, double %516)\l  store double %517, ptr %arrayidx562, align 8\l  %arrayidx563 = getelementptr inbounds [3 x double], ptr %a2, i64 0, i64 0\l  %518 = load double, ptr %arrayidx563, align 16\l  %arrayidx564 = getelementptr inbounds [3 x double], ptr %f2, i64 0, i64 1\l  %519 = load double, ptr %arrayidx564, align 8\l  %cvatom566 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %520 = load ptr, ptr %cvatom566, align 8\l  %521 = load i32, ptr %i2.addr, align 4\l  %idxprom567 = sext i32 %521 to i64\l  %arrayidx568 = getelementptr inbounds ptr, ptr %520, i64 %idxprom567\l  %522 = load ptr, ptr %arrayidx568, align 8\l  %arrayidx569 = getelementptr inbounds double, ptr %522, i64 3\l  %523 = load double, ptr %arrayidx569, align 8\l  %524 = call double @llvm.fmuladd.f64(double %518, double %519, double %523)\l  store double %524, ptr %arrayidx569, align 8\l  %arrayidx570 = getelementptr inbounds [3 x double], ptr %a2, i64 0, i64 0\l  %525 = load double, ptr %arrayidx570, align 16\l  %arrayidx571 = getelementptr inbounds [3 x double], ptr %f2, i64 0, i64 2\l  %526 = load double, ptr %arrayidx571, align 16\l  %cvatom573 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %527 = load ptr, ptr %cvatom573, align 8\l  %528 = load i32, ptr %i2.addr, align 4\l  %idxprom574 = sext i32 %528 to i64\l  %arrayidx575 = getelementptr inbounds ptr, ptr %527, i64 %idxprom574\l  %529 = load ptr, ptr %arrayidx575, align 8\l  %arrayidx576 = getelementptr inbounds double, ptr %529, i64 4\l  %530 = load double, ptr %arrayidx576, align 8\l  %531 = call double @llvm.fmuladd.f64(double %525, double %526, double %530)\l  store double %531, ptr %arrayidx576, align 8\l  %arrayidx577 = getelementptr inbounds [3 x double], ptr %a2, i64 0, i64 1\l  %532 = load double, ptr %arrayidx577, align 8\l  %arrayidx578 = getelementptr inbounds [3 x double], ptr %f2, i64 0, i64 2\l  %533 = load double, ptr %arrayidx578, align 16\l  %cvatom580 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %534 = load ptr, ptr %cvatom580, align 8\l  %535 = load i32, ptr %i2.addr, align 4\l  %idxprom581 = sext i32 %535 to i64\l  %arrayidx582 = getelementptr inbounds ptr, ptr %534, i64 %idxprom581\l  %536 = load ptr, ptr %arrayidx582, align 8\l  %arrayidx583 = getelementptr inbounds double, ptr %536, i64 5\l  %537 = load double, ptr %arrayidx583, align 8\l  %538 = call double @llvm.fmuladd.f64(double %532, double %533, double %537)\l  store double %538, ptr %arrayidx583, align 8\l  %arrayidx584 = getelementptr inbounds [3 x double], ptr %a2, i64 0, i64 1\l  %539 = load double, ptr %arrayidx584, align 8\l  %arrayidx585 = getelementptr inbounds [3 x double], ptr %f2, i64 0, i64 0\l  %540 = load double, ptr %arrayidx585, align 16\l  %cvatom587 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %541 = load ptr, ptr %cvatom587, align 8\l  %542 = load i32, ptr %i2.addr, align 4\l  %idxprom588 = sext i32 %542 to i64\l  %arrayidx589 = getelementptr inbounds ptr, ptr %541, i64 %idxprom588\l  %543 = load ptr, ptr %arrayidx589, align 8\l  %arrayidx590 = getelementptr inbounds double, ptr %543, i64 6\l  %544 = load double, ptr %arrayidx590, align 8\l  %545 = call double @llvm.fmuladd.f64(double %539, double %540, double %544)\l  store double %545, ptr %arrayidx590, align 8\l  %arrayidx591 = getelementptr inbounds [3 x double], ptr %a2, i64 0, i64 2\l  %546 = load double, ptr %arrayidx591, align 16\l  %arrayidx592 = getelementptr inbounds [3 x double], ptr %f2, i64 0, i64 0\l  %547 = load double, ptr %arrayidx592, align 16\l  %cvatom594 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %548 = load ptr, ptr %cvatom594, align 8\l  %549 = load i32, ptr %i2.addr, align 4\l  %idxprom595 = sext i32 %549 to i64\l  %arrayidx596 = getelementptr inbounds ptr, ptr %548, i64 %idxprom595\l  %550 = load ptr, ptr %arrayidx596, align 8\l  %arrayidx597 = getelementptr inbounds double, ptr %550, i64 7\l  %551 = load double, ptr %arrayidx597, align 8\l  %552 = call double @llvm.fmuladd.f64(double %546, double %547, double %551)\l  store double %552, ptr %arrayidx597, align 8\l  %arrayidx598 = getelementptr inbounds [3 x double], ptr %a2, i64 0, i64 2\l  %553 = load double, ptr %arrayidx598, align 16\l  %arrayidx599 = getelementptr inbounds [3 x double], ptr %f2, i64 0, i64 1\l  %554 = load double, ptr %arrayidx599, align 8\l  %cvatom601 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %555 = load ptr, ptr %cvatom601, align 8\l  %556 = load i32, ptr %i2.addr, align 4\l  %idxprom602 = sext i32 %556 to i64\l  %arrayidx603 = getelementptr inbounds ptr, ptr %555, i64 %idxprom602\l  %557 = load ptr, ptr %arrayidx603, align 8\l  %arrayidx604 = getelementptr inbounds double, ptr %557, i64 8\l  %558 = load double, ptr %arrayidx604, align 8\l  %559 = call double @llvm.fmuladd.f64(double %553, double %554, double %558)\l  store double %559, ptr %arrayidx604, align 8\l  br label %if.end605\l}"];
	Node0x55fe70d87210 -> Node0x55fe70d87580[tooltip="if.then506 -> if.end605\nProbability 100.00%" ];
	Node0x55fe70d87580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.end605:\l|  %560 = load i32, ptr %newton_bond.addr, align 4\l  %tobool606 = icmp ne i32 %560, 0\l  br i1 %tobool606, label %if.then609, label %lor.lhs.false607\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d87580:s0 -> Node0x55fe70d8fed0[tooltip="if.end605 -> if.then609\nProbability 62.50%" ];
	Node0x55fe70d87580:s1 -> Node0x55fe70d8ff50[tooltip="if.end605 -> lor.lhs.false607\nProbability 37.50%" ];
	Node0x55fe70d8ff50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{lor.lhs.false607:\l|  %561 = load i32, ptr %i3.addr, align 4\l  %562 = load i32, ptr %nlocal.addr, align 4\l  %cmp608 = icmp slt i32 %561, %562\l  br i1 %cmp608, label %if.then609, label %if.end688\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d8ff50:s0 -> Node0x55fe70d8fed0[tooltip="lor.lhs.false607 -> if.then609\nProbability 50.00%" ];
	Node0x55fe70d8ff50:s1 -> Node0x55fe70d90240[tooltip="lor.lhs.false607 -> if.end688\nProbability 50.00%" ];
	Node0x55fe70d8fed0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then609:\l|  %563 = load double, ptr %vb1x.addr, align 8\l  %fneg610 = fneg double %563\l  %564 = load double, ptr %vb2x.addr, align 8\l  %565 = call double @llvm.fmuladd.f64(double 2.000000e+00, double %564,\l... double %fneg610)\l  %566 = load double, ptr %vb3x.addr, align 8\l  %sub612 = fsub double %565, %566\l  %mul613 = fmul double 2.500000e-01, %sub612\l  %arrayidx614 = getelementptr inbounds [3 x double], ptr %a3, i64 0, i64 0\l  store double %mul613, ptr %arrayidx614, align 16\l  %567 = load double, ptr %vb1y.addr, align 8\l  %fneg615 = fneg double %567\l  %568 = load double, ptr %vb2y.addr, align 8\l  %569 = call double @llvm.fmuladd.f64(double 2.000000e+00, double %568,\l... double %fneg615)\l  %570 = load double, ptr %vb3y.addr, align 8\l  %sub617 = fsub double %569, %570\l  %mul618 = fmul double 2.500000e-01, %sub617\l  %arrayidx619 = getelementptr inbounds [3 x double], ptr %a3, i64 0, i64 1\l  store double %mul618, ptr %arrayidx619, align 8\l  %571 = load double, ptr %vb1z.addr, align 8\l  %fneg620 = fneg double %571\l  %572 = load double, ptr %vb2z.addr, align 8\l  %573 = call double @llvm.fmuladd.f64(double 2.000000e+00, double %572,\l... double %fneg620)\l  %574 = load double, ptr %vb3z.addr, align 8\l  %sub622 = fsub double %573, %574\l  %mul623 = fmul double 2.500000e-01, %sub622\l  %arrayidx624 = getelementptr inbounds [3 x double], ptr %a3, i64 0, i64 2\l  store double %mul623, ptr %arrayidx624, align 16\l  %arrayidx625 = getelementptr inbounds [3 x double], ptr %a3, i64 0, i64 0\l  %575 = load double, ptr %arrayidx625, align 16\l  %576 = load ptr, ptr %f3.addr, align 8\l  %arrayidx626 = getelementptr inbounds double, ptr %576, i64 0\l  %577 = load double, ptr %arrayidx626, align 8\l  %cvatom628 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %578 = load ptr, ptr %cvatom628, align 8\l  %579 = load i32, ptr %i3.addr, align 4\l  %idxprom629 = sext i32 %579 to i64\l  %arrayidx630 = getelementptr inbounds ptr, ptr %578, i64 %idxprom629\l  %580 = load ptr, ptr %arrayidx630, align 8\l  %arrayidx631 = getelementptr inbounds double, ptr %580, i64 0\l  %581 = load double, ptr %arrayidx631, align 8\l  %582 = call double @llvm.fmuladd.f64(double %575, double %577, double %581)\l  store double %582, ptr %arrayidx631, align 8\l  %arrayidx632 = getelementptr inbounds [3 x double], ptr %a3, i64 0, i64 1\l  %583 = load double, ptr %arrayidx632, align 8\l  %584 = load ptr, ptr %f3.addr, align 8\l  %arrayidx633 = getelementptr inbounds double, ptr %584, i64 1\l  %585 = load double, ptr %arrayidx633, align 8\l  %cvatom635 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %586 = load ptr, ptr %cvatom635, align 8\l  %587 = load i32, ptr %i3.addr, align 4\l  %idxprom636 = sext i32 %587 to i64\l  %arrayidx637 = getelementptr inbounds ptr, ptr %586, i64 %idxprom636\l  %588 = load ptr, ptr %arrayidx637, align 8\l  %arrayidx638 = getelementptr inbounds double, ptr %588, i64 1\l  %589 = load double, ptr %arrayidx638, align 8\l  %590 = call double @llvm.fmuladd.f64(double %583, double %585, double %589)\l  store double %590, ptr %arrayidx638, align 8\l  %arrayidx639 = getelementptr inbounds [3 x double], ptr %a3, i64 0, i64 2\l  %591 = load double, ptr %arrayidx639, align 16\l  %592 = load ptr, ptr %f3.addr, align 8\l  %arrayidx640 = getelementptr inbounds double, ptr %592, i64 2\l  %593 = load double, ptr %arrayidx640, align 8\l  %cvatom642 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %594 = load ptr, ptr %cvatom642, align 8\l  %595 = load i32, ptr %i3.addr, align 4\l  %idxprom643 = sext i32 %595 to i64\l  %arrayidx644 = getelementptr inbounds ptr, ptr %594, i64 %idxprom643\l  %596 = load ptr, ptr %arrayidx644, align 8\l  %arrayidx645 = getelementptr inbounds double, ptr %596, i64 2\l  %597 = load double, ptr %arrayidx645, align 8\l  %598 = call double @llvm.fmuladd.f64(double %591, double %593, double %597)\l  store double %598, ptr %arrayidx645, align 8\l  %arrayidx646 = getelementptr inbounds [3 x double], ptr %a3, i64 0, i64 0\l  %599 = load double, ptr %arrayidx646, align 16\l  %600 = load ptr, ptr %f3.addr, align 8\l  %arrayidx647 = getelementptr inbounds double, ptr %600, i64 1\l  %601 = load double, ptr %arrayidx647, align 8\l  %cvatom649 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %602 = load ptr, ptr %cvatom649, align 8\l  %603 = load i32, ptr %i3.addr, align 4\l  %idxprom650 = sext i32 %603 to i64\l  %arrayidx651 = getelementptr inbounds ptr, ptr %602, i64 %idxprom650\l  %604 = load ptr, ptr %arrayidx651, align 8\l  %arrayidx652 = getelementptr inbounds double, ptr %604, i64 3\l  %605 = load double, ptr %arrayidx652, align 8\l  %606 = call double @llvm.fmuladd.f64(double %599, double %601, double %605)\l  store double %606, ptr %arrayidx652, align 8\l  %arrayidx653 = getelementptr inbounds [3 x double], ptr %a3, i64 0, i64 0\l  %607 = load double, ptr %arrayidx653, align 16\l  %608 = load ptr, ptr %f3.addr, align 8\l  %arrayidx654 = getelementptr inbounds double, ptr %608, i64 2\l  %609 = load double, ptr %arrayidx654, align 8\l  %cvatom656 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %610 = load ptr, ptr %cvatom656, align 8\l  %611 = load i32, ptr %i3.addr, align 4\l  %idxprom657 = sext i32 %611 to i64\l  %arrayidx658 = getelementptr inbounds ptr, ptr %610, i64 %idxprom657\l  %612 = load ptr, ptr %arrayidx658, align 8\l  %arrayidx659 = getelementptr inbounds double, ptr %612, i64 4\l  %613 = load double, ptr %arrayidx659, align 8\l  %614 = call double @llvm.fmuladd.f64(double %607, double %609, double %613)\l  store double %614, ptr %arrayidx659, align 8\l  %arrayidx660 = getelementptr inbounds [3 x double], ptr %a3, i64 0, i64 1\l  %615 = load double, ptr %arrayidx660, align 8\l  %616 = load ptr, ptr %f3.addr, align 8\l  %arrayidx661 = getelementptr inbounds double, ptr %616, i64 2\l  %617 = load double, ptr %arrayidx661, align 8\l  %cvatom663 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %618 = load ptr, ptr %cvatom663, align 8\l  %619 = load i32, ptr %i3.addr, align 4\l  %idxprom664 = sext i32 %619 to i64\l  %arrayidx665 = getelementptr inbounds ptr, ptr %618, i64 %idxprom664\l  %620 = load ptr, ptr %arrayidx665, align 8\l  %arrayidx666 = getelementptr inbounds double, ptr %620, i64 5\l  %621 = load double, ptr %arrayidx666, align 8\l  %622 = call double @llvm.fmuladd.f64(double %615, double %617, double %621)\l  store double %622, ptr %arrayidx666, align 8\l  %arrayidx667 = getelementptr inbounds [3 x double], ptr %a3, i64 0, i64 1\l  %623 = load double, ptr %arrayidx667, align 8\l  %624 = load ptr, ptr %f3.addr, align 8\l  %arrayidx668 = getelementptr inbounds double, ptr %624, i64 0\l  %625 = load double, ptr %arrayidx668, align 8\l  %cvatom670 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %626 = load ptr, ptr %cvatom670, align 8\l  %627 = load i32, ptr %i3.addr, align 4\l  %idxprom671 = sext i32 %627 to i64\l  %arrayidx672 = getelementptr inbounds ptr, ptr %626, i64 %idxprom671\l  %628 = load ptr, ptr %arrayidx672, align 8\l  %arrayidx673 = getelementptr inbounds double, ptr %628, i64 6\l  %629 = load double, ptr %arrayidx673, align 8\l  %630 = call double @llvm.fmuladd.f64(double %623, double %625, double %629)\l  store double %630, ptr %arrayidx673, align 8\l  %arrayidx674 = getelementptr inbounds [3 x double], ptr %a3, i64 0, i64 2\l  %631 = load double, ptr %arrayidx674, align 16\l  %632 = load ptr, ptr %f3.addr, align 8\l  %arrayidx675 = getelementptr inbounds double, ptr %632, i64 0\l  %633 = load double, ptr %arrayidx675, align 8\l  %cvatom677 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %634 = load ptr, ptr %cvatom677, align 8\l  %635 = load i32, ptr %i3.addr, align 4\l  %idxprom678 = sext i32 %635 to i64\l  %arrayidx679 = getelementptr inbounds ptr, ptr %634, i64 %idxprom678\l  %636 = load ptr, ptr %arrayidx679, align 8\l  %arrayidx680 = getelementptr inbounds double, ptr %636, i64 7\l  %637 = load double, ptr %arrayidx680, align 8\l  %638 = call double @llvm.fmuladd.f64(double %631, double %633, double %637)\l  store double %638, ptr %arrayidx680, align 8\l  %arrayidx681 = getelementptr inbounds [3 x double], ptr %a3, i64 0, i64 2\l  %639 = load double, ptr %arrayidx681, align 16\l  %640 = load ptr, ptr %f3.addr, align 8\l  %arrayidx682 = getelementptr inbounds double, ptr %640, i64 1\l  %641 = load double, ptr %arrayidx682, align 8\l  %cvatom684 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %642 = load ptr, ptr %cvatom684, align 8\l  %643 = load i32, ptr %i3.addr, align 4\l  %idxprom685 = sext i32 %643 to i64\l  %arrayidx686 = getelementptr inbounds ptr, ptr %642, i64 %idxprom685\l  %644 = load ptr, ptr %arrayidx686, align 8\l  %arrayidx687 = getelementptr inbounds double, ptr %644, i64 8\l  %645 = load double, ptr %arrayidx687, align 8\l  %646 = call double @llvm.fmuladd.f64(double %639, double %641, double %645)\l  store double %646, ptr %arrayidx687, align 8\l  br label %if.end688\l}"];
	Node0x55fe70d8fed0 -> Node0x55fe70d90240[tooltip="if.then609 -> if.end688\nProbability 100.00%" ];
	Node0x55fe70d90240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.end688:\l|  %647 = load i32, ptr %newton_bond.addr, align 4\l  %tobool689 = icmp ne i32 %647, 0\l  br i1 %tobool689, label %if.then692, label %lor.lhs.false690\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d90240:s0 -> Node0x55fe70d973e0[tooltip="if.end688 -> if.then692\nProbability 62.50%" ];
	Node0x55fe70d90240:s1 -> Node0x55fe70d97460[tooltip="if.end688 -> lor.lhs.false690\nProbability 37.50%" ];
	Node0x55fe70d97460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{lor.lhs.false690:\l|  %648 = load i32, ptr %i4.addr, align 4\l  %649 = load i32, ptr %nlocal.addr, align 4\l  %cmp691 = icmp slt i32 %648, %649\l  br i1 %cmp691, label %if.then692, label %if.end771\l|{<s0>T|<s1>F}}"];
	Node0x55fe70d97460:s0 -> Node0x55fe70d973e0[tooltip="lor.lhs.false690 -> if.then692\nProbability 50.00%" ];
	Node0x55fe70d97460:s1 -> Node0x55fe70d97750[tooltip="lor.lhs.false690 -> if.end771\nProbability 50.00%" ];
	Node0x55fe70d973e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then692:\l|  %650 = load double, ptr %vb1x.addr, align 8\l  %fneg693 = fneg double %650\l  %651 = load double, ptr %vb2x.addr, align 8\l  %652 = call double @llvm.fmuladd.f64(double 2.000000e+00, double %651,\l... double %fneg693)\l  %653 = load double, ptr %vb3x.addr, align 8\l  %654 = call double @llvm.fmuladd.f64(double 3.000000e+00, double %653,\l... double %652)\l  %mul696 = fmul double 2.500000e-01, %654\l  %arrayidx697 = getelementptr inbounds [3 x double], ptr %a4, i64 0, i64 0\l  store double %mul696, ptr %arrayidx697, align 16\l  %655 = load double, ptr %vb1y.addr, align 8\l  %fneg698 = fneg double %655\l  %656 = load double, ptr %vb2y.addr, align 8\l  %657 = call double @llvm.fmuladd.f64(double 2.000000e+00, double %656,\l... double %fneg698)\l  %658 = load double, ptr %vb3y.addr, align 8\l  %659 = call double @llvm.fmuladd.f64(double 3.000000e+00, double %658,\l... double %657)\l  %mul701 = fmul double 2.500000e-01, %659\l  %arrayidx702 = getelementptr inbounds [3 x double], ptr %a4, i64 0, i64 1\l  store double %mul701, ptr %arrayidx702, align 8\l  %660 = load double, ptr %vb1z.addr, align 8\l  %fneg703 = fneg double %660\l  %661 = load double, ptr %vb2z.addr, align 8\l  %662 = call double @llvm.fmuladd.f64(double 2.000000e+00, double %661,\l... double %fneg703)\l  %663 = load double, ptr %vb3z.addr, align 8\l  %664 = call double @llvm.fmuladd.f64(double 3.000000e+00, double %663,\l... double %662)\l  %mul706 = fmul double 2.500000e-01, %664\l  %arrayidx707 = getelementptr inbounds [3 x double], ptr %a4, i64 0, i64 2\l  store double %mul706, ptr %arrayidx707, align 16\l  %arrayidx708 = getelementptr inbounds [3 x double], ptr %a4, i64 0, i64 0\l  %665 = load double, ptr %arrayidx708, align 16\l  %666 = load ptr, ptr %f4.addr, align 8\l  %arrayidx709 = getelementptr inbounds double, ptr %666, i64 0\l  %667 = load double, ptr %arrayidx709, align 8\l  %cvatom711 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %668 = load ptr, ptr %cvatom711, align 8\l  %669 = load i32, ptr %i4.addr, align 4\l  %idxprom712 = sext i32 %669 to i64\l  %arrayidx713 = getelementptr inbounds ptr, ptr %668, i64 %idxprom712\l  %670 = load ptr, ptr %arrayidx713, align 8\l  %arrayidx714 = getelementptr inbounds double, ptr %670, i64 0\l  %671 = load double, ptr %arrayidx714, align 8\l  %672 = call double @llvm.fmuladd.f64(double %665, double %667, double %671)\l  store double %672, ptr %arrayidx714, align 8\l  %arrayidx715 = getelementptr inbounds [3 x double], ptr %a4, i64 0, i64 1\l  %673 = load double, ptr %arrayidx715, align 8\l  %674 = load ptr, ptr %f4.addr, align 8\l  %arrayidx716 = getelementptr inbounds double, ptr %674, i64 1\l  %675 = load double, ptr %arrayidx716, align 8\l  %cvatom718 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %676 = load ptr, ptr %cvatom718, align 8\l  %677 = load i32, ptr %i4.addr, align 4\l  %idxprom719 = sext i32 %677 to i64\l  %arrayidx720 = getelementptr inbounds ptr, ptr %676, i64 %idxprom719\l  %678 = load ptr, ptr %arrayidx720, align 8\l  %arrayidx721 = getelementptr inbounds double, ptr %678, i64 1\l  %679 = load double, ptr %arrayidx721, align 8\l  %680 = call double @llvm.fmuladd.f64(double %673, double %675, double %679)\l  store double %680, ptr %arrayidx721, align 8\l  %arrayidx722 = getelementptr inbounds [3 x double], ptr %a4, i64 0, i64 2\l  %681 = load double, ptr %arrayidx722, align 16\l  %682 = load ptr, ptr %f4.addr, align 8\l  %arrayidx723 = getelementptr inbounds double, ptr %682, i64 2\l  %683 = load double, ptr %arrayidx723, align 8\l  %cvatom725 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %684 = load ptr, ptr %cvatom725, align 8\l  %685 = load i32, ptr %i4.addr, align 4\l  %idxprom726 = sext i32 %685 to i64\l  %arrayidx727 = getelementptr inbounds ptr, ptr %684, i64 %idxprom726\l  %686 = load ptr, ptr %arrayidx727, align 8\l  %arrayidx728 = getelementptr inbounds double, ptr %686, i64 2\l  %687 = load double, ptr %arrayidx728, align 8\l  %688 = call double @llvm.fmuladd.f64(double %681, double %683, double %687)\l  store double %688, ptr %arrayidx728, align 8\l  %arrayidx729 = getelementptr inbounds [3 x double], ptr %a4, i64 0, i64 0\l  %689 = load double, ptr %arrayidx729, align 16\l  %690 = load ptr, ptr %f4.addr, align 8\l  %arrayidx730 = getelementptr inbounds double, ptr %690, i64 1\l  %691 = load double, ptr %arrayidx730, align 8\l  %cvatom732 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %692 = load ptr, ptr %cvatom732, align 8\l  %693 = load i32, ptr %i4.addr, align 4\l  %idxprom733 = sext i32 %693 to i64\l  %arrayidx734 = getelementptr inbounds ptr, ptr %692, i64 %idxprom733\l  %694 = load ptr, ptr %arrayidx734, align 8\l  %arrayidx735 = getelementptr inbounds double, ptr %694, i64 3\l  %695 = load double, ptr %arrayidx735, align 8\l  %696 = call double @llvm.fmuladd.f64(double %689, double %691, double %695)\l  store double %696, ptr %arrayidx735, align 8\l  %arrayidx736 = getelementptr inbounds [3 x double], ptr %a4, i64 0, i64 0\l  %697 = load double, ptr %arrayidx736, align 16\l  %698 = load ptr, ptr %f4.addr, align 8\l  %arrayidx737 = getelementptr inbounds double, ptr %698, i64 2\l  %699 = load double, ptr %arrayidx737, align 8\l  %cvatom739 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %700 = load ptr, ptr %cvatom739, align 8\l  %701 = load i32, ptr %i4.addr, align 4\l  %idxprom740 = sext i32 %701 to i64\l  %arrayidx741 = getelementptr inbounds ptr, ptr %700, i64 %idxprom740\l  %702 = load ptr, ptr %arrayidx741, align 8\l  %arrayidx742 = getelementptr inbounds double, ptr %702, i64 4\l  %703 = load double, ptr %arrayidx742, align 8\l  %704 = call double @llvm.fmuladd.f64(double %697, double %699, double %703)\l  store double %704, ptr %arrayidx742, align 8\l  %arrayidx743 = getelementptr inbounds [3 x double], ptr %a4, i64 0, i64 1\l  %705 = load double, ptr %arrayidx743, align 8\l  %706 = load ptr, ptr %f4.addr, align 8\l  %arrayidx744 = getelementptr inbounds double, ptr %706, i64 2\l  %707 = load double, ptr %arrayidx744, align 8\l  %cvatom746 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %708 = load ptr, ptr %cvatom746, align 8\l  %709 = load i32, ptr %i4.addr, align 4\l  %idxprom747 = sext i32 %709 to i64\l  %arrayidx748 = getelementptr inbounds ptr, ptr %708, i64 %idxprom747\l  %710 = load ptr, ptr %arrayidx748, align 8\l  %arrayidx749 = getelementptr inbounds double, ptr %710, i64 5\l  %711 = load double, ptr %arrayidx749, align 8\l  %712 = call double @llvm.fmuladd.f64(double %705, double %707, double %711)\l  store double %712, ptr %arrayidx749, align 8\l  %arrayidx750 = getelementptr inbounds [3 x double], ptr %a4, i64 0, i64 1\l  %713 = load double, ptr %arrayidx750, align 8\l  %714 = load ptr, ptr %f4.addr, align 8\l  %arrayidx751 = getelementptr inbounds double, ptr %714, i64 0\l  %715 = load double, ptr %arrayidx751, align 8\l  %cvatom753 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %716 = load ptr, ptr %cvatom753, align 8\l  %717 = load i32, ptr %i4.addr, align 4\l  %idxprom754 = sext i32 %717 to i64\l  %arrayidx755 = getelementptr inbounds ptr, ptr %716, i64 %idxprom754\l  %718 = load ptr, ptr %arrayidx755, align 8\l  %arrayidx756 = getelementptr inbounds double, ptr %718, i64 6\l  %719 = load double, ptr %arrayidx756, align 8\l  %720 = call double @llvm.fmuladd.f64(double %713, double %715, double %719)\l  store double %720, ptr %arrayidx756, align 8\l  %arrayidx757 = getelementptr inbounds [3 x double], ptr %a4, i64 0, i64 2\l  %721 = load double, ptr %arrayidx757, align 16\l  %722 = load ptr, ptr %f4.addr, align 8\l  %arrayidx758 = getelementptr inbounds double, ptr %722, i64 0\l  %723 = load double, ptr %arrayidx758, align 8\l  %cvatom760 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %724 = load ptr, ptr %cvatom760, align 8\l  %725 = load i32, ptr %i4.addr, align 4\l  %idxprom761 = sext i32 %725 to i64\l  %arrayidx762 = getelementptr inbounds ptr, ptr %724, i64 %idxprom761\l  %726 = load ptr, ptr %arrayidx762, align 8\l  %arrayidx763 = getelementptr inbounds double, ptr %726, i64 7\l  %727 = load double, ptr %arrayidx763, align 8\l  %728 = call double @llvm.fmuladd.f64(double %721, double %723, double %727)\l  store double %728, ptr %arrayidx763, align 8\l  %arrayidx764 = getelementptr inbounds [3 x double], ptr %a4, i64 0, i64 2\l  %729 = load double, ptr %arrayidx764, align 16\l  %730 = load ptr, ptr %f4.addr, align 8\l  %arrayidx765 = getelementptr inbounds double, ptr %730, i64 1\l  %731 = load double, ptr %arrayidx765, align 8\l  %cvatom767 = getelementptr inbounds %\"class.LAMMPS_NS::Dihedral\", ptr\l... %this1, i32 0, i32 10\l  %732 = load ptr, ptr %cvatom767, align 8\l  %733 = load i32, ptr %i4.addr, align 4\l  %idxprom768 = sext i32 %733 to i64\l  %arrayidx769 = getelementptr inbounds ptr, ptr %732, i64 %idxprom768\l  %734 = load ptr, ptr %arrayidx769, align 8\l  %arrayidx770 = getelementptr inbounds double, ptr %734, i64 8\l  %735 = load double, ptr %arrayidx770, align 8\l  %736 = call double @llvm.fmuladd.f64(double %729, double %731, double %735)\l  store double %736, ptr %arrayidx770, align 8\l  br label %if.end771\l}"];
	Node0x55fe70d973e0 -> Node0x55fe70d97750[tooltip="if.then692 -> if.end771\nProbability 100.00%" ];
	Node0x55fe70d97750 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.end771:\l|  br label %if.end772\l}"];
	Node0x55fe70d97750 -> Node0x55fe70d7d840[tooltip="if.end771 -> if.end772\nProbability 100.00%" ];
	Node0x55fe70d7d840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end772:\l|  ret void\l}"];
}
