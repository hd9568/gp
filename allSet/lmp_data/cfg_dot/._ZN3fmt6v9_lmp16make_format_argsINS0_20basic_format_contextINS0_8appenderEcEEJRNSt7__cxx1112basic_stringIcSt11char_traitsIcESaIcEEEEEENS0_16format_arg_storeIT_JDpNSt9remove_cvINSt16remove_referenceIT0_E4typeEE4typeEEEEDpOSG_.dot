digraph "CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSG_' function" {
	label="CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSG_' function";

	Node0x556bfed67230 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %val.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i11 = alloca ptr, align 8\l  %retval.i6 = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i7 = alloca ptr, align 8\l  %val.addr.i8 = alloca ptr, align 8\l  %retval.i3 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i4 = alloca ptr, align 8\l  %arg.i = alloca ptr, align 8\l  %ref.tmp.i5 = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %ref.tmp1.i = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i = alloca i8, align 1\l  %formattable_const.i = alloca i8, align 1\l  %formattable_pointer.i = alloca i8, align 1\l  %formattable.i = alloca i8, align 1\l  %agg.tmp.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %.addr.i = alloca ptr, align 8\l  %.addr1.i = alloca i32, align 4\l  %.addr2.i = alloca i32, align 4\l  %.addr3.i = alloca ptr, align 8\l  %retval.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i = alloca ptr, align 8\l  %this.addr.i5.i = alloca ptr, align 8\l  %this.addr.i.i = alloca ptr, align 8\l  %init.addr.i.i = alloca ptr, align 8\l  %this.addr.i = alloca ptr, align 8\l  %args.addr.i = alloca ptr, align 8\l  %ref.tmp.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %retval = alloca %\"class.fmt::v9_lmp::format_arg_store.140\", align 16\l  %args.addr = alloca ptr, align 8\l  store ptr %args, ptr %args.addr, align 8\l  %0 = load ptr, ptr %args.addr, align 8\l  store ptr %retval, ptr %this.addr.i, align 8\l  store ptr %0, ptr %args.addr.i, align 8\l  %this1.i = load ptr, ptr %this.addr.i, align 8\l  %1 = load ptr, ptr %args.addr.i, align 8\l  store ptr %1, ptr %val.addr.i, align 8\l  %2 = load ptr, ptr %val.addr.i, align 8\l  store ptr %2, ptr %val.addr.i4, align 8\l  %3 = load ptr, ptr %val.addr.i4, align 8\l  store ptr %ref.tmp1.i, ptr %this.addr.i7, align 8\l  store ptr %3, ptr %val.addr.i8, align 8\l  %this1.i9 = load ptr, ptr %this.addr.i7, align 8\l  %4 = load ptr, ptr %val.addr.i8, align 8\l  %call.i10 = call \{ ptr, i64 \}\l... @_ZN3fmt6v9_lmp6detail14to_string_viewIcSt11char_traitsIcESaIcEEENS0_17basic_s\l...tring_viewIT_EERKNSt7__cxx1112basic_stringIS7_T0_T1_EE(ptr noundef nonnull\l... align 8 dereferenceable(32) %4)\l  %5 = extractvalue \{ ptr, i64 \} %call.i10, 0\l  store ptr %5, ptr %retval.i6, align 8\l  %6 = getelementptr inbounds \{ ptr, i64 \}, ptr %retval.i6, i32 0, i32 1\l  %7 = extractvalue \{ ptr, i64 \} %call.i10, 1\l  store i64 %7, ptr %6, align 8\l  %8 = load \{ ptr, i64 \}, ptr %retval.i6, align 8\l  %9 = extractvalue \{ ptr, i64 \} %8, 0\l  store ptr %9, ptr %ref.tmp.i5, align 8\l  %10 = getelementptr inbounds \{ ptr, i64 \}, ptr %ref.tmp.i5, i32 0, i32 1\l  %11 = extractvalue \{ ptr, i64 \} %8, 1\l  store i64 %11, ptr %10, align 8\l  store ptr %ref.tmp.i5, ptr %arg.i, align 8\l  store i8 1, ptr %formattable_char.i, align 1\l  store i8 1, ptr %formattable_const.i, align 1\l  store i8 1, ptr %formattable_pointer.i, align 1\l  store i8 1, ptr %formattable.i, align 1\l  %12 = load ptr, ptr %arg.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp.i, ptr align 8 %12,\l... i64 16, i1 false)\l  %13 = load ptr, ptr %agg.tmp.i, align 8\l  %14 = getelementptr inbounds \{ ptr, i64 \}, ptr %agg.tmp.i, i32 0, i32 1\l  %15 = load i64, ptr %14, align 8\l  store ptr %13, ptr %val.i, align 8\l  %16 = getelementptr inbounds \{ ptr, i64 \}, ptr %val.i, i32 0, i32 1\l  store i64 %15, ptr %16, align 8\l  store ptr %retval.i3, ptr %this.addr.i11, align 8\l  %this1.i12 = load ptr, ptr %this.addr.i11, align 8\l  %call.i = call noundef ptr @_ZNK3fmt6v9_lmp17basic_string_viewIcE4dataEv(ptr\l... noundef nonnull align 8 dereferenceable(16) %val.i) #3\l  store ptr %call.i, ptr %this1.i12, align 16\l  %call2.i = call noundef i64\l... @_ZNK3fmt6v9_lmp17basic_string_viewIcE4sizeEv(ptr noundef nonnull align 8\l... dereferenceable(16) %val.i) #3\l  %size.i = getelementptr inbounds\l... %\"struct.fmt::v9_lmp::detail::string_value\", ptr %this1.i12, i32 0, i32 1\l  store i64 %call2.i, ptr %size.i, align 8\l  %17 = load \{ i64, i64 \}, ptr %retval.i3, align 16\l  %18 = extractvalue \{ i64, i64 \} %17, 0\l  store i64 %18, ptr %retval.i, align 16\l  %19 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i, i32 0, i32 1\l  %20 = extractvalue \{ i64, i64 \} %17, 1\l  store i64 %20, ptr %19, align 8\l  %21 = load \{ i64, i64 \}, ptr %retval.i, align 16\l  %22 = extractvalue \{ i64, i64 \} %21, 0\l  store i64 %22, ptr %ref.tmp.i, align 16\l  %23 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp.i, i32 0, i32 1\l  %24 = extractvalue \{ i64, i64 \} %21, 1\l  store i64 %24, ptr %23, align 8\l  store ptr %this1.i, ptr %this.addr.i.i, align 8\l  store ptr %ref.tmp.i, ptr %init.addr.i.i, align 8\l  %this1.i.i = load ptr, ptr %this.addr.i.i, align 8\l  %25 = load ptr, ptr %init.addr.i.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %this1.i.i, ptr align 16 %25,\l... i64 16, i1 false)\l  store ptr %this1.i, ptr %this.addr.i5.i, align 8\l  %this1.i6.i = load ptr, ptr %this.addr.i5.i, align 8\l  %26 = load ptr, ptr %args.addr.i, align 8\l  store ptr null, ptr %.addr.i, align 8\l  store i32 0, ptr %.addr1.i, align 4\l  store i32 0, ptr %.addr2.i, align 4\l  store ptr %26, ptr %.addr3.i, align 8\l  %coerce.dive = getelementptr inbounds\l... %\"class.fmt::v9_lmp::format_arg_store.140\", ptr %retval, i32 0, i32 0\l  %coerce.dive1 = getelementptr inbounds\l... %\"struct.fmt::v9_lmp::detail::arg_data\", ptr %coerce.dive, i32 0, i32 0\l  %27 = load \{ i64, i64 \}, ptr %coerce.dive1, align 16\l  ret \{ i64, i64 \} %27\l}"];
}
