digraph "CFG for '_ZN9LAMMPS_NS9PairLJCut6singleEiiiidddRd' function" {
	label="CFG for '_ZN9LAMMPS_NS9PairLJCut6singleEiiiidddRd' function";

	Node0x5599308e8550 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %.addr = alloca i32, align 4\l  %.addr1 = alloca i32, align 4\l  %itype.addr = alloca i32, align 4\l  %jtype.addr = alloca i32, align 4\l  %rsq.addr = alloca double, align 8\l  %.addr2 = alloca double, align 8\l  %factor_lj.addr = alloca double, align 8\l  %fforce.addr = alloca ptr, align 8\l  %r2inv = alloca double, align 8\l  %r6inv = alloca double, align 8\l  %forcelj = alloca double, align 8\l  %philj = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store i32 %0, ptr %.addr, align 4\l  store i32 %1, ptr %.addr1, align 4\l  store i32 %itype, ptr %itype.addr, align 4\l  store i32 %jtype, ptr %jtype.addr, align 4\l  store double %rsq, ptr %rsq.addr, align 8\l  store double %2, ptr %.addr2, align 8\l  store double %factor_lj, ptr %factor_lj.addr, align 8\l  store ptr %fforce, ptr %fforce.addr, align 8\l  %this3 = load ptr, ptr %this.addr, align 8\l  %3 = load double, ptr %rsq.addr, align 8\l  %div = fdiv double 1.000000e+00, %3\l  store double %div, ptr %r2inv, align 8\l  %4 = load double, ptr %r2inv, align 8\l  %5 = load double, ptr %r2inv, align 8\l  %mul = fmul double %4, %5\l  %6 = load double, ptr %r2inv, align 8\l  %mul4 = fmul double %mul, %6\l  store double %mul4, ptr %r6inv, align 8\l  %7 = load double, ptr %r6inv, align 8\l  %lj1 = getelementptr inbounds %\"class.LAMMPS_NS::PairLJCut\", ptr %this3, i32\l... 0, i32 5\l  %8 = load ptr, ptr %lj1, align 8\l  %9 = load i32, ptr %itype.addr, align 4\l  %idxprom = sext i32 %9 to i64\l  %arrayidx = getelementptr inbounds ptr, ptr %8, i64 %idxprom\l  %10 = load ptr, ptr %arrayidx, align 8\l  %11 = load i32, ptr %jtype.addr, align 4\l  %idxprom5 = sext i32 %11 to i64\l  %arrayidx6 = getelementptr inbounds double, ptr %10, i64 %idxprom5\l  %12 = load double, ptr %arrayidx6, align 8\l  %13 = load double, ptr %r6inv, align 8\l  %lj2 = getelementptr inbounds %\"class.LAMMPS_NS::PairLJCut\", ptr %this3, i32\l... 0, i32 6\l  %14 = load ptr, ptr %lj2, align 8\l  %15 = load i32, ptr %itype.addr, align 4\l  %idxprom8 = sext i32 %15 to i64\l  %arrayidx9 = getelementptr inbounds ptr, ptr %14, i64 %idxprom8\l  %16 = load ptr, ptr %arrayidx9, align 8\l  %17 = load i32, ptr %jtype.addr, align 4\l  %idxprom10 = sext i32 %17 to i64\l  %arrayidx11 = getelementptr inbounds double, ptr %16, i64 %idxprom10\l  %18 = load double, ptr %arrayidx11, align 8\l  %neg = fneg double %18\l  %19 = call double @llvm.fmuladd.f64(double %12, double %13, double %neg)\l  %mul12 = fmul double %7, %19\l  store double %mul12, ptr %forcelj, align 8\l  %20 = load double, ptr %factor_lj.addr, align 8\l  %21 = load double, ptr %forcelj, align 8\l  %mul13 = fmul double %20, %21\l  %22 = load double, ptr %r2inv, align 8\l  %mul14 = fmul double %mul13, %22\l  %23 = load ptr, ptr %fforce.addr, align 8\l  store double %mul14, ptr %23, align 8\l  %24 = load double, ptr %r6inv, align 8\l  %lj3 = getelementptr inbounds %\"class.LAMMPS_NS::PairLJCut\", ptr %this3, i32\l... 0, i32 7\l  %25 = load ptr, ptr %lj3, align 8\l  %26 = load i32, ptr %itype.addr, align 4\l  %idxprom15 = sext i32 %26 to i64\l  %arrayidx16 = getelementptr inbounds ptr, ptr %25, i64 %idxprom15\l  %27 = load ptr, ptr %arrayidx16, align 8\l  %28 = load i32, ptr %jtype.addr, align 4\l  %idxprom17 = sext i32 %28 to i64\l  %arrayidx18 = getelementptr inbounds double, ptr %27, i64 %idxprom17\l  %29 = load double, ptr %arrayidx18, align 8\l  %30 = load double, ptr %r6inv, align 8\l  %lj4 = getelementptr inbounds %\"class.LAMMPS_NS::PairLJCut\", ptr %this3, i32\l... 0, i32 8\l  %31 = load ptr, ptr %lj4, align 8\l  %32 = load i32, ptr %itype.addr, align 4\l  %idxprom20 = sext i32 %32 to i64\l  %arrayidx21 = getelementptr inbounds ptr, ptr %31, i64 %idxprom20\l  %33 = load ptr, ptr %arrayidx21, align 8\l  %34 = load i32, ptr %jtype.addr, align 4\l  %idxprom22 = sext i32 %34 to i64\l  %arrayidx23 = getelementptr inbounds double, ptr %33, i64 %idxprom22\l  %35 = load double, ptr %arrayidx23, align 8\l  %neg24 = fneg double %35\l  %36 = call double @llvm.fmuladd.f64(double %29, double %30, double %neg24)\l  %offset = getelementptr inbounds %\"class.LAMMPS_NS::PairLJCut\", ptr %this3,\l... i32 0, i32 9\l  %37 = load ptr, ptr %offset, align 8\l  %38 = load i32, ptr %itype.addr, align 4\l  %idxprom26 = sext i32 %38 to i64\l  %arrayidx27 = getelementptr inbounds ptr, ptr %37, i64 %idxprom26\l  %39 = load ptr, ptr %arrayidx27, align 8\l  %40 = load i32, ptr %jtype.addr, align 4\l  %idxprom28 = sext i32 %40 to i64\l  %arrayidx29 = getelementptr inbounds double, ptr %39, i64 %idxprom28\l  %41 = load double, ptr %arrayidx29, align 8\l  %neg30 = fneg double %41\l  %42 = call double @llvm.fmuladd.f64(double %24, double %36, double %neg30)\l  store double %42, ptr %philj, align 8\l  %43 = load double, ptr %factor_lj.addr, align 8\l  %44 = load double, ptr %philj, align 8\l  %mul31 = fmul double %43, %44\l  ret double %mul31\l}"];
}
