digraph "CFG for '_ZN9LAMMPS_NS8PairBorn11born_matrixEiiiidddRdS1_' function" {
	label="CFG for '_ZN9LAMMPS_NS8PairBorn11born_matrixEiiiidddRdS1_' function";

	Node0x55bd041ed850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %.addr = alloca i32, align 4\l  %.addr1 = alloca i32, align 4\l  %itype.addr = alloca i32, align 4\l  %jtype.addr = alloca i32, align 4\l  %rsq.addr = alloca double, align 8\l  %.addr2 = alloca double, align 8\l  %factor_lj.addr = alloca double, align 8\l  %dupair.addr = alloca ptr, align 8\l  %du2pair.addr = alloca ptr, align 8\l  %rinv = alloca double, align 8\l  %r2inv = alloca double, align 8\l  %r7inv = alloca double, align 8\l  %r8inv = alloca double, align 8\l  %r9inv = alloca double, align 8\l  %r10inv = alloca double, align 8\l  %du = alloca double, align 8\l  %du2 = alloca double, align 8\l  %r = alloca double, align 8\l  %rexp = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store i32 %0, ptr %.addr, align 4\l  store i32 %1, ptr %.addr1, align 4\l  store i32 %itype, ptr %itype.addr, align 4\l  store i32 %jtype, ptr %jtype.addr, align 4\l  store double %rsq, ptr %rsq.addr, align 8\l  store double %2, ptr %.addr2, align 8\l  store double %factor_lj, ptr %factor_lj.addr, align 8\l  store ptr %dupair, ptr %dupair.addr, align 8\l  store ptr %du2pair, ptr %du2pair.addr, align 8\l  %this3 = load ptr, ptr %this.addr, align 8\l  %3 = load double, ptr %rsq.addr, align 8\l  %call = call double @sqrt(double noundef %3) #9\l  store double %call, ptr %r, align 8\l  %sigma = getelementptr inbounds %\"class.LAMMPS_NS::PairBorn\", ptr %this3,\l... i32 0, i32 5\l  %4 = load ptr, ptr %sigma, align 8\l  %5 = load i32, ptr %itype.addr, align 4\l  %idxprom = sext i32 %5 to i64\l  %arrayidx = getelementptr inbounds ptr, ptr %4, i64 %idxprom\l  %6 = load ptr, ptr %arrayidx, align 8\l  %7 = load i32, ptr %jtype.addr, align 4\l  %idxprom4 = sext i32 %7 to i64\l  %arrayidx5 = getelementptr inbounds double, ptr %6, i64 %idxprom4\l  %8 = load double, ptr %arrayidx5, align 8\l  %9 = load double, ptr %r, align 8\l  %sub = fsub double %8, %9\l  %rhoinv = getelementptr inbounds %\"class.LAMMPS_NS::PairBorn\", ptr %this3,\l... i32 0, i32 8\l  %10 = load ptr, ptr %rhoinv, align 8\l  %11 = load i32, ptr %itype.addr, align 4\l  %idxprom6 = sext i32 %11 to i64\l  %arrayidx7 = getelementptr inbounds ptr, ptr %10, i64 %idxprom6\l  %12 = load ptr, ptr %arrayidx7, align 8\l  %13 = load i32, ptr %jtype.addr, align 4\l  %idxprom8 = sext i32 %13 to i64\l  %arrayidx9 = getelementptr inbounds double, ptr %12, i64 %idxprom8\l  %14 = load double, ptr %arrayidx9, align 8\l  %mul = fmul double %sub, %14\l  %call10 = call double @exp(double noundef %mul) #9\l  store double %call10, ptr %rexp, align 8\l  %15 = load double, ptr %rsq.addr, align 8\l  %div = fdiv double 1.000000e+00, %15\l  store double %div, ptr %r2inv, align 8\l  %16 = load double, ptr %r2inv, align 8\l  %call11 = call double @sqrt(double noundef %16) #9\l  store double %call11, ptr %rinv, align 8\l  %17 = load double, ptr %r2inv, align 8\l  %18 = load double, ptr %r2inv, align 8\l  %mul12 = fmul double %17, %18\l  %19 = load double, ptr %r2inv, align 8\l  %mul13 = fmul double %mul12, %19\l  %20 = load double, ptr %rinv, align 8\l  %mul14 = fmul double %mul13, %20\l  store double %mul14, ptr %r7inv, align 8\l  %21 = load double, ptr %r7inv, align 8\l  %22 = load double, ptr %rinv, align 8\l  %mul15 = fmul double %21, %22\l  store double %mul15, ptr %r8inv, align 8\l  %23 = load double, ptr %r7inv, align 8\l  %24 = load double, ptr %r2inv, align 8\l  %mul16 = fmul double %23, %24\l  store double %mul16, ptr %r9inv, align 8\l  %25 = load double, ptr %r9inv, align 8\l  %26 = load double, ptr %rinv, align 8\l  %mul17 = fmul double %25, %26\l  store double %mul17, ptr %r10inv, align 8\l  %born2 = getelementptr inbounds %\"class.LAMMPS_NS::PairBorn\", ptr %this3,\l... i32 0, i32 10\l  %27 = load ptr, ptr %born2, align 8\l  %28 = load i32, ptr %itype.addr, align 4\l  %idxprom18 = sext i32 %28 to i64\l  %arrayidx19 = getelementptr inbounds ptr, ptr %27, i64 %idxprom18\l  %29 = load ptr, ptr %arrayidx19, align 8\l  %30 = load i32, ptr %jtype.addr, align 4\l  %idxprom20 = sext i32 %30 to i64\l  %arrayidx21 = getelementptr inbounds double, ptr %29, i64 %idxprom20\l  %31 = load double, ptr %arrayidx21, align 8\l  %32 = load double, ptr %r7inv, align 8\l  %born1 = getelementptr inbounds %\"class.LAMMPS_NS::PairBorn\", ptr %this3,\l... i32 0, i32 9\l  %33 = load ptr, ptr %born1, align 8\l  %34 = load i32, ptr %itype.addr, align 4\l  %idxprom23 = sext i32 %34 to i64\l  %arrayidx24 = getelementptr inbounds ptr, ptr %33, i64 %idxprom23\l  %35 = load ptr, ptr %arrayidx24, align 8\l  %36 = load i32, ptr %jtype.addr, align 4\l  %idxprom25 = sext i32 %36 to i64\l  %arrayidx26 = getelementptr inbounds double, ptr %35, i64 %idxprom25\l  %37 = load double, ptr %arrayidx26, align 8\l  %38 = load double, ptr %rexp, align 8\l  %mul27 = fmul double %37, %38\l  %neg = fneg double %mul27\l  %39 = call double @llvm.fmuladd.f64(double %31, double %32, double %neg)\l  %born3 = getelementptr inbounds %\"class.LAMMPS_NS::PairBorn\", ptr %this3,\l... i32 0, i32 11\l  %40 = load ptr, ptr %born3, align 8\l  %41 = load i32, ptr %itype.addr, align 4\l  %idxprom28 = sext i32 %41 to i64\l  %arrayidx29 = getelementptr inbounds ptr, ptr %40, i64 %idxprom28\l  %42 = load ptr, ptr %arrayidx29, align 8\l  %43 = load i32, ptr %jtype.addr, align 4\l  %idxprom30 = sext i32 %43 to i64\l  %arrayidx31 = getelementptr inbounds double, ptr %42, i64 %idxprom30\l  %44 = load double, ptr %arrayidx31, align 8\l  %45 = load double, ptr %r9inv, align 8\l  %neg33 = fneg double %44\l  %46 = call double @llvm.fmuladd.f64(double %neg33, double %45, double %39)\l  store double %46, ptr %du, align 8\l  %born134 = getelementptr inbounds %\"class.LAMMPS_NS::PairBorn\", ptr %this3,\l... i32 0, i32 9\l  %47 = load ptr, ptr %born134, align 8\l  %48 = load i32, ptr %itype.addr, align 4\l  %idxprom35 = sext i32 %48 to i64\l  %arrayidx36 = getelementptr inbounds ptr, ptr %47, i64 %idxprom35\l  %49 = load ptr, ptr %arrayidx36, align 8\l  %50 = load i32, ptr %jtype.addr, align 4\l  %idxprom37 = sext i32 %50 to i64\l  %arrayidx38 = getelementptr inbounds double, ptr %49, i64 %idxprom37\l  %51 = load double, ptr %arrayidx38, align 8\l  %rho = getelementptr inbounds %\"class.LAMMPS_NS::PairBorn\", ptr %this3, i32\l... 0, i32 4\l  %52 = load ptr, ptr %rho, align 8\l  %53 = load i32, ptr %itype.addr, align 4\l  %idxprom39 = sext i32 %53 to i64\l  %arrayidx40 = getelementptr inbounds ptr, ptr %52, i64 %idxprom39\l  %54 = load ptr, ptr %arrayidx40, align 8\l  %55 = load i32, ptr %jtype.addr, align 4\l  %idxprom41 = sext i32 %55 to i64\l  %arrayidx42 = getelementptr inbounds double, ptr %54, i64 %idxprom41\l  %56 = load double, ptr %arrayidx42, align 8\l  %div43 = fdiv double %51, %56\l  %57 = load double, ptr %rexp, align 8\l  %born245 = getelementptr inbounds %\"class.LAMMPS_NS::PairBorn\", ptr %this3,\l... i32 0, i32 10\l  %58 = load ptr, ptr %born245, align 8\l  %59 = load i32, ptr %itype.addr, align 4\l  %idxprom46 = sext i32 %59 to i64\l  %arrayidx47 = getelementptr inbounds ptr, ptr %58, i64 %idxprom46\l  %60 = load ptr, ptr %arrayidx47, align 8\l  %61 = load i32, ptr %jtype.addr, align 4\l  %idxprom48 = sext i32 %61 to i64\l  %arrayidx49 = getelementptr inbounds double, ptr %60, i64 %idxprom48\l  %62 = load double, ptr %arrayidx49, align 8\l  %mul50 = fmul double 7.000000e+00, %62\l  %63 = load double, ptr %r8inv, align 8\l  %mul51 = fmul double %mul50, %63\l  %neg52 = fneg double %mul51\l  %64 = call double @llvm.fmuladd.f64(double %div43, double %57, double %neg52)\l  %born353 = getelementptr inbounds %\"class.LAMMPS_NS::PairBorn\", ptr %this3,\l... i32 0, i32 11\l  %65 = load ptr, ptr %born353, align 8\l  %66 = load i32, ptr %itype.addr, align 4\l  %idxprom54 = sext i32 %66 to i64\l  %arrayidx55 = getelementptr inbounds ptr, ptr %65, i64 %idxprom54\l  %67 = load ptr, ptr %arrayidx55, align 8\l  %68 = load i32, ptr %jtype.addr, align 4\l  %idxprom56 = sext i32 %68 to i64\l  %arrayidx57 = getelementptr inbounds double, ptr %67, i64 %idxprom56\l  %69 = load double, ptr %arrayidx57, align 8\l  %mul58 = fmul double 9.000000e+00, %69\l  %70 = load double, ptr %r10inv, align 8\l  %71 = call double @llvm.fmuladd.f64(double %mul58, double %70, double %64)\l  store double %71, ptr %du2, align 8\l  %72 = load double, ptr %factor_lj.addr, align 8\l  %73 = load double, ptr %du, align 8\l  %mul60 = fmul double %72, %73\l  %74 = load ptr, ptr %dupair.addr, align 8\l  store double %mul60, ptr %74, align 8\l  %75 = load double, ptr %factor_lj.addr, align 8\l  %76 = load double, ptr %du2, align 8\l  %mul61 = fmul double %75, %76\l  %77 = load ptr, ptr %du2pair.addr, align 8\l  store double %mul61, ptr %77, align 8\l  ret void\l}"];
}
