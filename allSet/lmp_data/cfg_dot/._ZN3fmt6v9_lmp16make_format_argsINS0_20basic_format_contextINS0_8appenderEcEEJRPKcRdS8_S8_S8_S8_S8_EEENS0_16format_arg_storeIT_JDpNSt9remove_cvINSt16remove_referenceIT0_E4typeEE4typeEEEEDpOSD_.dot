digraph "CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRPKcRdS8_S8_S8_S8_S8_EEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSD_' function" {
	label="CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRPKcRdS8_S8_S8_S8_S8_EEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSD_' function";

	Node0x55e52284ded0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr.i137 = alloca ptr, align 8\l  %val.addr.i138 = alloca double, align 8\l  %this.addr.i134 = alloca ptr, align 8\l  %val.addr.i135 = alloca double, align 8\l  %this.addr.i131 = alloca ptr, align 8\l  %val.addr.i132 = alloca double, align 8\l  %this.addr.i128 = alloca ptr, align 8\l  %val.addr.i129 = alloca double, align 8\l  %this.addr.i125 = alloca ptr, align 8\l  %val.addr.i126 = alloca double, align 8\l  %this.addr.i122 = alloca ptr, align 8\l  %val.addr.i123 = alloca double, align 8\l  %this.addr.i119 = alloca ptr, align 8\l  %val.addr.i120 = alloca double, align 8\l  %this.addr.i116 = alloca ptr, align 8\l  %val.addr.i117 = alloca double, align 8\l  %this.addr.i113 = alloca ptr, align 8\l  %val.addr.i114 = alloca double, align 8\l  %this.addr.i110 = alloca ptr, align 8\l  %val.addr.i111 = alloca double, align 8\l  %this.addr.i107 = alloca ptr, align 8\l  %val.addr.i108 = alloca double, align 8\l  %this.addr.i104 = alloca ptr, align 8\l  %val.addr.i105 = alloca double, align 8\l  %retval.i94 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i95 = alloca ptr, align 8\l  %arg.i96 = alloca ptr, align 8\l  %ref.tmp.i97 = alloca double, align 8\l  %ref.tmp1.i98 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i99 = alloca i8, align 1\l  %formattable_const.i100 = alloca i8, align 1\l  %formattable_pointer.i101 = alloca i8, align 1\l  %formattable.i102 = alloca i8, align 1\l  %retval.i84 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i85 = alloca ptr, align 8\l  %arg.i86 = alloca ptr, align 8\l  %ref.tmp.i87 = alloca double, align 8\l  %ref.tmp1.i88 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i89 = alloca i8, align 1\l  %formattable_const.i90 = alloca i8, align 1\l  %formattable_pointer.i91 = alloca i8, align 1\l  %formattable.i92 = alloca i8, align 1\l  %retval.i74 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i75 = alloca ptr, align 8\l  %arg.i76 = alloca ptr, align 8\l  %ref.tmp.i77 = alloca double, align 8\l  %ref.tmp1.i78 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i79 = alloca i8, align 1\l  %formattable_const.i80 = alloca i8, align 1\l  %formattable_pointer.i81 = alloca i8, align 1\l  %formattable.i82 = alloca i8, align 1\l  %retval.i64 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i65 = alloca ptr, align 8\l  %arg.i66 = alloca ptr, align 8\l  %ref.tmp.i67 = alloca double, align 8\l  %ref.tmp1.i68 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i69 = alloca i8, align 1\l  %formattable_const.i70 = alloca i8, align 1\l  %formattable_pointer.i71 = alloca i8, align 1\l  %formattable.i72 = alloca i8, align 1\l  %retval.i54 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i55 = alloca ptr, align 8\l  %arg.i56 = alloca ptr, align 8\l  %ref.tmp.i57 = alloca double, align 8\l  %ref.tmp1.i58 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i59 = alloca i8, align 1\l  %formattable_const.i60 = alloca i8, align 1\l  %formattable_pointer.i61 = alloca i8, align 1\l  %formattable.i62 = alloca i8, align 1\l  %retval.i44 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i45 = alloca ptr, align 8\l  %arg.i46 = alloca ptr, align 8\l  %ref.tmp.i47 = alloca double, align 8\l  %ref.tmp1.i48 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i49 = alloca i8, align 1\l  %formattable_const.i50 = alloca i8, align 1\l  %formattable_pointer.i51 = alloca i8, align 1\l  %formattable.i52 = alloca i8, align 1\l  %this.addr.i41 = alloca ptr, align 8\l  %val.addr.i42 = alloca ptr, align 8\l  %this.addr.i38 = alloca ptr, align 8\l  %val.addr.i39 = alloca ptr, align 8\l  %retval.i34 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i35 = alloca ptr, align 8\l  %arg.i = alloca ptr, align 8\l  %ref.tmp.i36 = alloca ptr, align 8\l  %ref.tmp1.i = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i = alloca i8, align 1\l  %formattable_const.i = alloca i8, align 1\l  %formattable_pointer.i = alloca i8, align 1\l  %formattable.i = alloca i8, align 1\l  %this.addr.i33 = alloca ptr, align 8\l  %.addr.i = alloca ptr, align 8\l  %.addr1.i = alloca i32, align 4\l  %.addr2.i = alloca i32, align 4\l  %.addr3.i = alloca ptr, align 8\l  %.addr4.i = alloca ptr, align 8\l  %.addr5.i = alloca ptr, align 8\l  %.addr6.i = alloca ptr, align 8\l  %.addr7.i = alloca ptr, align 8\l  %.addr8.i = alloca ptr, align 8\l  %.addr9.i = alloca ptr, align 8\l  %this.addr.i31 = alloca ptr, align 8\l  %init.addr.i = alloca ptr, align 8\l  %init.addr2.i = alloca ptr, align 8\l  %init.addr4.i = alloca ptr, align 8\l  %init.addr6.i = alloca ptr, align 8\l  %init.addr8.i = alloca ptr, align 8\l  %init.addr10.i = alloca ptr, align 8\l  %init.addr12.i = alloca ptr, align 8\l  %retval.i28 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i29 = alloca ptr, align 8\l  %retval.i25 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i26 = alloca ptr, align 8\l  %retval.i22 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i23 = alloca ptr, align 8\l  %retval.i19 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i20 = alloca ptr, align 8\l  %retval.i16 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i17 = alloca ptr, align 8\l  %retval.i14 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i15 = alloca ptr, align 8\l  %retval.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i = alloca ptr, align 8\l  %this.addr.i = alloca ptr, align 8\l  %args.addr.i = alloca ptr, align 8\l  %args.addr2.i = alloca ptr, align 8\l  %args.addr4.i = alloca ptr, align 8\l  %args.addr6.i = alloca ptr, align 8\l  %args.addr8.i = alloca ptr, align 8\l  %args.addr10.i = alloca ptr, align 8\l  %args.addr12.i = alloca ptr, align 8\l  %ref.tmp.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp15.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp19.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp23.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp27.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp31.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp35.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %args.addr = alloca ptr, align 8\l  %args.addr2 = alloca ptr, align 8\l  %args.addr4 = alloca ptr, align 8\l  %args.addr6 = alloca ptr, align 8\l  %args.addr8 = alloca ptr, align 8\l  %args.addr10 = alloca ptr, align 8\l  %args.addr12 = alloca ptr, align 8\l  store ptr %args, ptr %args.addr, align 8\l  store ptr %args1, ptr %args.addr2, align 8\l  store ptr %args3, ptr %args.addr4, align 8\l  store ptr %args5, ptr %args.addr6, align 8\l  store ptr %args7, ptr %args.addr8, align 8\l  store ptr %args9, ptr %args.addr10, align 8\l  store ptr %args11, ptr %args.addr12, align 8\l  %0 = load ptr, ptr %args.addr, align 8\l  %1 = load ptr, ptr %args.addr2, align 8\l  %2 = load ptr, ptr %args.addr4, align 8\l  %3 = load ptr, ptr %args.addr6, align 8\l  %4 = load ptr, ptr %args.addr8, align 8\l  %5 = load ptr, ptr %args.addr10, align 8\l  %6 = load ptr, ptr %args.addr12, align 8\l  store ptr %agg.result, ptr %this.addr.i, align 8\l  store ptr %0, ptr %args.addr.i, align 8\l  store ptr %1, ptr %args.addr2.i, align 8\l  store ptr %2, ptr %args.addr4.i, align 8\l  store ptr %3, ptr %args.addr6.i, align 8\l  store ptr %4, ptr %args.addr8.i, align 8\l  store ptr %5, ptr %args.addr10.i, align 8\l  store ptr %6, ptr %args.addr12.i, align 8\l  %this13.i = load ptr, ptr %this.addr.i, align 8\l  %7 = load ptr, ptr %args.addr.i, align 8\l  store ptr %7, ptr %val.addr.i, align 8\l  %8 = load ptr, ptr %val.addr.i, align 8\l  store ptr %8, ptr %val.addr.i35, align 8\l  %9 = load ptr, ptr %val.addr.i35, align 8\l  %10 = load ptr, ptr %9, align 8\l  store ptr %ref.tmp1.i, ptr %this.addr.i38, align 8\l  store ptr %10, ptr %val.addr.i39, align 8\l  %this1.i40 = load ptr, ptr %this.addr.i38, align 8\l  %11 = load ptr, ptr %val.addr.i39, align 8\l  store ptr %11, ptr %ref.tmp.i36, align 8\l  store ptr %ref.tmp.i36, ptr %arg.i, align 8\l  store i8 1, ptr %formattable_char.i, align 1\l  store i8 1, ptr %formattable_const.i, align 1\l  store i8 1, ptr %formattable_pointer.i, align 1\l  store i8 1, ptr %formattable.i, align 1\l  %12 = load ptr, ptr %arg.i, align 8\l  %13 = load ptr, ptr %12, align 8\l  store ptr %retval.i34, ptr %this.addr.i41, align 8\l  store ptr %13, ptr %val.addr.i42, align 8\l  %this1.i43 = load ptr, ptr %this.addr.i41, align 8\l  %14 = load ptr, ptr %val.addr.i42, align 8\l  store ptr %14, ptr %this1.i43, align 16\l  %15 = load \{ i64, i64 \}, ptr %retval.i34, align 16\l  %16 = extractvalue \{ i64, i64 \} %15, 0\l  store i64 %16, ptr %retval.i, align 16\l  %17 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i, i32 0, i32 1\l  %18 = extractvalue \{ i64, i64 \} %15, 1\l  store i64 %18, ptr %17, align 8\l  %19 = load \{ i64, i64 \}, ptr %retval.i, align 16\l  %20 = extractvalue \{ i64, i64 \} %19, 0\l  store i64 %20, ptr %ref.tmp.i, align 16\l  %21 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp.i, i32 0, i32 1\l  %22 = extractvalue \{ i64, i64 \} %19, 1\l  store i64 %22, ptr %21, align 8\l  %23 = load ptr, ptr %args.addr2.i, align 8\l  store ptr %23, ptr %val.addr.i29, align 8\l  %24 = load ptr, ptr %val.addr.i29, align 8\l  store ptr %24, ptr %val.addr.i45, align 8\l  %25 = load ptr, ptr %val.addr.i45, align 8\l  %26 = load double, ptr %25, align 8\l  store ptr %ref.tmp1.i48, ptr %this.addr.i119, align 8\l  store double %26, ptr %val.addr.i120, align 8\l  %this1.i121 = load ptr, ptr %this.addr.i119, align 8\l  %27 = load double, ptr %val.addr.i120, align 8\l  store double %27, ptr %ref.tmp.i47, align 8\l  store ptr %ref.tmp.i47, ptr %arg.i46, align 8\l  store i8 1, ptr %formattable_char.i49, align 1\l  store i8 1, ptr %formattable_const.i50, align 1\l  store i8 1, ptr %formattable_pointer.i51, align 1\l  store i8 1, ptr %formattable.i52, align 1\l  %28 = load ptr, ptr %arg.i46, align 8\l  %29 = load double, ptr %28, align 8\l  store ptr %retval.i44, ptr %this.addr.i137, align 8\l  store double %29, ptr %val.addr.i138, align 8\l  %this1.i139 = load ptr, ptr %this.addr.i137, align 8\l  %30 = load double, ptr %val.addr.i138, align 8\l  store double %30, ptr %this1.i139, align 16\l  %31 = load \{ i64, i64 \}, ptr %retval.i44, align 16\l  %32 = extractvalue \{ i64, i64 \} %31, 0\l  store i64 %32, ptr %retval.i28, align 16\l  %33 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i28, i32 0, i32 1\l  %34 = extractvalue \{ i64, i64 \} %31, 1\l  store i64 %34, ptr %33, align 8\l  %35 = load \{ i64, i64 \}, ptr %retval.i28, align 16\l  %36 = extractvalue \{ i64, i64 \} %35, 0\l  store i64 %36, ptr %ref.tmp15.i, align 16\l  %37 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp15.i, i32 0, i32 1\l  %38 = extractvalue \{ i64, i64 \} %35, 1\l  store i64 %38, ptr %37, align 8\l  %39 = load ptr, ptr %args.addr4.i, align 8\l  store ptr %39, ptr %val.addr.i26, align 8\l  %40 = load ptr, ptr %val.addr.i26, align 8\l  store ptr %40, ptr %val.addr.i55, align 8\l  %41 = load ptr, ptr %val.addr.i55, align 8\l  %42 = load double, ptr %41, align 8\l  store ptr %ref.tmp1.i58, ptr %this.addr.i116, align 8\l  store double %42, ptr %val.addr.i117, align 8\l  %this1.i118 = load ptr, ptr %this.addr.i116, align 8\l  %43 = load double, ptr %val.addr.i117, align 8\l  store double %43, ptr %ref.tmp.i57, align 8\l  store ptr %ref.tmp.i57, ptr %arg.i56, align 8\l  store i8 1, ptr %formattable_char.i59, align 1\l  store i8 1, ptr %formattable_const.i60, align 1\l  store i8 1, ptr %formattable_pointer.i61, align 1\l  store i8 1, ptr %formattable.i62, align 1\l  %44 = load ptr, ptr %arg.i56, align 8\l  %45 = load double, ptr %44, align 8\l  store ptr %retval.i54, ptr %this.addr.i134, align 8\l  store double %45, ptr %val.addr.i135, align 8\l  %this1.i136 = load ptr, ptr %this.addr.i134, align 8\l  %46 = load double, ptr %val.addr.i135, align 8\l  store double %46, ptr %this1.i136, align 16\l  %47 = load \{ i64, i64 \}, ptr %retval.i54, align 16\l  %48 = extractvalue \{ i64, i64 \} %47, 0\l  store i64 %48, ptr %retval.i25, align 16\l  %49 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i25, i32 0, i32 1\l  %50 = extractvalue \{ i64, i64 \} %47, 1\l  store i64 %50, ptr %49, align 8\l  %51 = load \{ i64, i64 \}, ptr %retval.i25, align 16\l  %52 = extractvalue \{ i64, i64 \} %51, 0\l  store i64 %52, ptr %ref.tmp19.i, align 16\l  %53 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp19.i, i32 0, i32 1\l  %54 = extractvalue \{ i64, i64 \} %51, 1\l  store i64 %54, ptr %53, align 8\l  %55 = load ptr, ptr %args.addr6.i, align 8\l  store ptr %55, ptr %val.addr.i23, align 8\l  %56 = load ptr, ptr %val.addr.i23, align 8\l  store ptr %56, ptr %val.addr.i65, align 8\l  %57 = load ptr, ptr %val.addr.i65, align 8\l  %58 = load double, ptr %57, align 8\l  store ptr %ref.tmp1.i68, ptr %this.addr.i113, align 8\l  store double %58, ptr %val.addr.i114, align 8\l  %this1.i115 = load ptr, ptr %this.addr.i113, align 8\l  %59 = load double, ptr %val.addr.i114, align 8\l  store double %59, ptr %ref.tmp.i67, align 8\l  store ptr %ref.tmp.i67, ptr %arg.i66, align 8\l  store i8 1, ptr %formattable_char.i69, align 1\l  store i8 1, ptr %formattable_const.i70, align 1\l  store i8 1, ptr %formattable_pointer.i71, align 1\l  store i8 1, ptr %formattable.i72, align 1\l  %60 = load ptr, ptr %arg.i66, align 8\l  %61 = load double, ptr %60, align 8\l  store ptr %retval.i64, ptr %this.addr.i131, align 8\l  store double %61, ptr %val.addr.i132, align 8\l  %this1.i133 = load ptr, ptr %this.addr.i131, align 8\l  %62 = load double, ptr %val.addr.i132, align 8\l  store double %62, ptr %this1.i133, align 16\l  %63 = load \{ i64, i64 \}, ptr %retval.i64, align 16\l  %64 = extractvalue \{ i64, i64 \} %63, 0\l  store i64 %64, ptr %retval.i22, align 16\l  %65 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i22, i32 0, i32 1\l  %66 = extractvalue \{ i64, i64 \} %63, 1\l  store i64 %66, ptr %65, align 8\l  %67 = load \{ i64, i64 \}, ptr %retval.i22, align 16\l  %68 = extractvalue \{ i64, i64 \} %67, 0\l  store i64 %68, ptr %ref.tmp23.i, align 16\l  %69 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp23.i, i32 0, i32 1\l  %70 = extractvalue \{ i64, i64 \} %67, 1\l  store i64 %70, ptr %69, align 8\l  %71 = load ptr, ptr %args.addr8.i, align 8\l  store ptr %71, ptr %val.addr.i20, align 8\l  %72 = load ptr, ptr %val.addr.i20, align 8\l  store ptr %72, ptr %val.addr.i75, align 8\l  %73 = load ptr, ptr %val.addr.i75, align 8\l  %74 = load double, ptr %73, align 8\l  store ptr %ref.tmp1.i78, ptr %this.addr.i110, align 8\l  store double %74, ptr %val.addr.i111, align 8\l  %this1.i112 = load ptr, ptr %this.addr.i110, align 8\l  %75 = load double, ptr %val.addr.i111, align 8\l  store double %75, ptr %ref.tmp.i77, align 8\l  store ptr %ref.tmp.i77, ptr %arg.i76, align 8\l  store i8 1, ptr %formattable_char.i79, align 1\l  store i8 1, ptr %formattable_const.i80, align 1\l  store i8 1, ptr %formattable_pointer.i81, align 1\l  store i8 1, ptr %formattable.i82, align 1\l  %76 = load ptr, ptr %arg.i76, align 8\l  %77 = load double, ptr %76, align 8\l  store ptr %retval.i74, ptr %this.addr.i128, align 8\l  store double %77, ptr %val.addr.i129, align 8\l  %this1.i130 = load ptr, ptr %this.addr.i128, align 8\l  %78 = load double, ptr %val.addr.i129, align 8\l  store double %78, ptr %this1.i130, align 16\l  %79 = load \{ i64, i64 \}, ptr %retval.i74, align 16\l  %80 = extractvalue \{ i64, i64 \} %79, 0\l  store i64 %80, ptr %retval.i19, align 16\l  %81 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i19, i32 0, i32 1\l  %82 = extractvalue \{ i64, i64 \} %79, 1\l  store i64 %82, ptr %81, align 8\l  %83 = load \{ i64, i64 \}, ptr %retval.i19, align 16\l  %84 = extractvalue \{ i64, i64 \} %83, 0\l  store i64 %84, ptr %ref.tmp27.i, align 16\l  %85 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp27.i, i32 0, i32 1\l  %86 = extractvalue \{ i64, i64 \} %83, 1\l  store i64 %86, ptr %85, align 8\l  %87 = load ptr, ptr %args.addr10.i, align 8\l  store ptr %87, ptr %val.addr.i17, align 8\l  %88 = load ptr, ptr %val.addr.i17, align 8\l  store ptr %88, ptr %val.addr.i85, align 8\l  %89 = load ptr, ptr %val.addr.i85, align 8\l  %90 = load double, ptr %89, align 8\l  store ptr %ref.tmp1.i88, ptr %this.addr.i107, align 8\l  store double %90, ptr %val.addr.i108, align 8\l  %this1.i109 = load ptr, ptr %this.addr.i107, align 8\l  %91 = load double, ptr %val.addr.i108, align 8\l  store double %91, ptr %ref.tmp.i87, align 8\l  store ptr %ref.tmp.i87, ptr %arg.i86, align 8\l  store i8 1, ptr %formattable_char.i89, align 1\l  store i8 1, ptr %formattable_const.i90, align 1\l  store i8 1, ptr %formattable_pointer.i91, align 1\l  store i8 1, ptr %formattable.i92, align 1\l  %92 = load ptr, ptr %arg.i86, align 8\l  %93 = load double, ptr %92, align 8\l  store ptr %retval.i84, ptr %this.addr.i125, align 8\l  store double %93, ptr %val.addr.i126, align 8\l  %this1.i127 = load ptr, ptr %this.addr.i125, align 8\l  %94 = load double, ptr %val.addr.i126, align 8\l  store double %94, ptr %this1.i127, align 16\l  %95 = load \{ i64, i64 \}, ptr %retval.i84, align 16\l  %96 = extractvalue \{ i64, i64 \} %95, 0\l  store i64 %96, ptr %retval.i16, align 16\l  %97 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i16, i32 0, i32 1\l  %98 = extractvalue \{ i64, i64 \} %95, 1\l  store i64 %98, ptr %97, align 8\l  %99 = load \{ i64, i64 \}, ptr %retval.i16, align 16\l  %100 = extractvalue \{ i64, i64 \} %99, 0\l  store i64 %100, ptr %ref.tmp31.i, align 16\l  %101 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp31.i, i32 0, i32 1\l  %102 = extractvalue \{ i64, i64 \} %99, 1\l  store i64 %102, ptr %101, align 8\l  %103 = load ptr, ptr %args.addr12.i, align 8\l  store ptr %103, ptr %val.addr.i15, align 8\l  %104 = load ptr, ptr %val.addr.i15, align 8\l  store ptr %104, ptr %val.addr.i95, align 8\l  %105 = load ptr, ptr %val.addr.i95, align 8\l  %106 = load double, ptr %105, align 8\l  store ptr %ref.tmp1.i98, ptr %this.addr.i104, align 8\l  store double %106, ptr %val.addr.i105, align 8\l  %this1.i106 = load ptr, ptr %this.addr.i104, align 8\l  %107 = load double, ptr %val.addr.i105, align 8\l  store double %107, ptr %ref.tmp.i97, align 8\l  store ptr %ref.tmp.i97, ptr %arg.i96, align 8\l  store i8 1, ptr %formattable_char.i99, align 1\l  store i8 1, ptr %formattable_const.i100, align 1\l  store i8 1, ptr %formattable_pointer.i101, align 1\l  store i8 1, ptr %formattable.i102, align 1\l  %108 = load ptr, ptr %arg.i96, align 8\l  %109 = load double, ptr %108, align 8\l  store ptr %retval.i94, ptr %this.addr.i122, align 8\l  store double %109, ptr %val.addr.i123, align 8\l  %this1.i124 = load ptr, ptr %this.addr.i122, align 8\l  %110 = load double, ptr %val.addr.i123, align 8\l  store double %110, ptr %this1.i124, align 16\l  %111 = load \{ i64, i64 \}, ptr %retval.i94, align 16\l  %112 = extractvalue \{ i64, i64 \} %111, 0\l  store i64 %112, ptr %retval.i14, align 16\l  %113 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i14, i32 0, i32 1\l  %114 = extractvalue \{ i64, i64 \} %111, 1\l  store i64 %114, ptr %113, align 8\l  %115 = load \{ i64, i64 \}, ptr %retval.i14, align 16\l  %116 = extractvalue \{ i64, i64 \} %115, 0\l  store i64 %116, ptr %ref.tmp35.i, align 16\l  %117 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp35.i, i32 0, i32 1\l  %118 = extractvalue \{ i64, i64 \} %115, 1\l  store i64 %118, ptr %117, align 8\l  store ptr %this13.i, ptr %this.addr.i31, align 8\l  store ptr %ref.tmp.i, ptr %init.addr.i, align 8\l  store ptr %ref.tmp15.i, ptr %init.addr2.i, align 8\l  store ptr %ref.tmp19.i, ptr %init.addr4.i, align 8\l  store ptr %ref.tmp23.i, ptr %init.addr6.i, align 8\l  store ptr %ref.tmp27.i, ptr %init.addr8.i, align 8\l  store ptr %ref.tmp31.i, ptr %init.addr10.i, align 8\l  store ptr %ref.tmp35.i, ptr %init.addr12.i, align 8\l  %this13.i32 = load ptr, ptr %this.addr.i31, align 8\l  %119 = load ptr, ptr %init.addr.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %this13.i32, ptr align 16\l... %119, i64 16, i1 false)\l  %arrayinit.element.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %this13.i32, i64 1\l  %120 = load ptr, ptr %init.addr2.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element.i, ptr\l... align 16 %120, i64 16, i1 false)\l  %arrayinit.element14.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element.i, i64 1\l  %121 = load ptr, ptr %init.addr4.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element14.i, ptr\l... align 16 %121, i64 16, i1 false)\l  %arrayinit.element15.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element14.i, i64 1\l  %122 = load ptr, ptr %init.addr6.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element15.i, ptr\l... align 16 %122, i64 16, i1 false)\l  %arrayinit.element16.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element15.i, i64 1\l  %123 = load ptr, ptr %init.addr8.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element16.i, ptr\l... align 16 %123, i64 16, i1 false)\l  %arrayinit.element17.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element16.i, i64 1\l  %124 = load ptr, ptr %init.addr10.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element17.i, ptr\l... align 16 %124, i64 16, i1 false)\l  %arrayinit.element18.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element17.i, i64 1\l  %125 = load ptr, ptr %init.addr12.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element18.i, ptr\l... align 16 %125, i64 16, i1 false)\l  store ptr %this13.i, ptr %this.addr.i33, align 8\l  %this1.i = load ptr, ptr %this.addr.i33, align 8\l  %126 = load ptr, ptr %args.addr.i, align 8\l  %127 = load ptr, ptr %args.addr2.i, align 8\l  %128 = load ptr, ptr %args.addr4.i, align 8\l  %129 = load ptr, ptr %args.addr6.i, align 8\l  %130 = load ptr, ptr %args.addr8.i, align 8\l  %131 = load ptr, ptr %args.addr10.i, align 8\l  %132 = load ptr, ptr %args.addr12.i, align 8\l  store ptr null, ptr %.addr.i, align 8\l  store i32 0, ptr %.addr1.i, align 4\l  store i32 0, ptr %.addr2.i, align 4\l  store ptr %126, ptr %.addr3.i, align 8\l  store ptr %127, ptr %.addr4.i, align 8\l  store ptr %128, ptr %.addr5.i, align 8\l  store ptr %129, ptr %.addr6.i, align 8\l  store ptr %130, ptr %.addr7.i, align 8\l  store ptr %131, ptr %.addr8.i, align 8\l  store ptr %132, ptr %.addr9.i, align 8\l  ret void\l}"];
}
