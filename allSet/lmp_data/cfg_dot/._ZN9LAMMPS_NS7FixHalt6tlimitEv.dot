digraph "CFG for '_ZN9LAMMPS_NS7FixHalt6tlimitEv' function" {
	label="CFG for '_ZN9LAMMPS_NS7FixHalt6tlimitEv' function";

	Node0x5603f57f92c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %cpu = alloca double, align 8\l  %elapsed = alloca i64, align 8\l  %final = alloca i64, align 8\l  store ptr %this, ptr %this.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %timer = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 15\l  %0 = load ptr, ptr %timer, align 8\l  %1 = load ptr, ptr %0, align 8\l  %call = call noundef double @_ZN9LAMMPS_NS5Timer7elapsedENS0_5ttypeE(ptr\l... noundef nonnull align 8 dereferenceable(488) %1, i32 noundef 0)\l  store double %call, ptr %cpu, align 8\l  %world = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 16\l  %2 = load ptr, ptr %world, align 8\l  %3 = load ptr, ptr %2, align 8\l  %call2 = call i32 @MPI_Bcast(ptr noundef %cpu, i32 noundef 1, ptr noundef\l... @ompi_mpi_double, i32 noundef 0, ptr noundef %3)\l  %4 = load double, ptr %cpu, align 8\l  %value = getelementptr inbounds %\"class.LAMMPS_NS::FixHalt\", ptr %this1, i32\l... 0, i32 8\l  %5 = load double, ptr %value, align 8\l  %cmp = fcmp olt double %4, %5\l  br i1 %cmp, label %if.then, label %if.end27\l|{<s0>T|<s1>F}}"];
	Node0x5603f57f92c0:s0 -> Node0x5603f57fa920[tooltip="entry -> if.then\nProbability 50.00%" ];
	Node0x5603f57f92c0:s1 -> Node0x5603f57fa990[tooltip="entry -> if.end27\nProbability 50.00%" ];
	Node0x5603f57fa920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then:\l|  %update = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 7\l  %6 = load ptr, ptr %update, align 8\l  %7 = load ptr, ptr %6, align 8\l  %ntimestep = getelementptr inbounds %\"class.LAMMPS_NS::Update\", ptr %7, i32\l... 0, i32 4\l  %8 = load i64, ptr %ntimestep, align 8\l  %update3 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 7\l  %9 = load ptr, ptr %update3, align 8\l  %10 = load ptr, ptr %9, align 8\l  %firststep = getelementptr inbounds %\"class.LAMMPS_NS::Update\", ptr %10, i32\l... 0, i32 9\l  %11 = load i64, ptr %firststep, align 8\l  %sub = sub nsw i64 %8, %11\l  store i64 %sub, ptr %elapsed, align 8\l  %update4 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 7\l  %12 = load ptr, ptr %update4, align 8\l  %13 = load ptr, ptr %12, align 8\l  %firststep5 = getelementptr inbounds %\"class.LAMMPS_NS::Update\", ptr %13,\l... i32 0, i32 9\l  %14 = load i64, ptr %firststep5, align 8\l  %tratio = getelementptr inbounds %\"class.LAMMPS_NS::FixHalt\", ptr %this1,\l... i32 0, i32 9\l  %15 = load double, ptr %tratio, align 8\l  %value6 = getelementptr inbounds %\"class.LAMMPS_NS::FixHalt\", ptr %this1,\l... i32 0, i32 8\l  %16 = load double, ptr %value6, align 8\l  %mul = fmul double %15, %16\l  %17 = load double, ptr %cpu, align 8\l  %div = fdiv double %mul, %17\l  %18 = load i64, ptr %elapsed, align 8\l  %conv = sitofp i64 %18 to double\l  %mul7 = fmul double %div, %conv\l  %conv8 = fptosi double %mul7 to i64\l  %add = add nsw i64 %14, %conv8\l  store i64 %add, ptr %final, align 8\l  %19 = load i64, ptr %final, align 8\l  %nevery = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32 0,\l... i32 11\l  %20 = load i32, ptr %nevery, align 8\l  %conv9 = sext i32 %20 to i64\l  %div10 = sdiv i64 %19, %conv9\l  %nevery11 = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32\l... 0, i32 11\l  %21 = load i32, ptr %nevery11, align 8\l  %conv12 = sext i32 %21 to i64\l  %mul13 = mul nsw i64 %div10, %conv12\l  %nevery14 = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1, i32\l... 0, i32 11\l  %22 = load i32, ptr %nevery14, align 8\l  %conv15 = sext i32 %22 to i64\l  %add16 = add nsw i64 %mul13, %conv15\l  %nextstep = getelementptr inbounds %\"class.LAMMPS_NS::FixHalt\", ptr %this1,\l... i32 0, i32 6\l  store i64 %add16, ptr %nextstep, align 8\l  %nextstep17 = getelementptr inbounds %\"class.LAMMPS_NS::FixHalt\", ptr\l... %this1, i32 0, i32 6\l  %23 = load i64, ptr %nextstep17, align 8\l  %update18 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 7\l  %24 = load ptr, ptr %update18, align 8\l  %25 = load ptr, ptr %24, align 8\l  %ntimestep19 = getelementptr inbounds %\"class.LAMMPS_NS::Update\", ptr %25,\l... i32 0, i32 4\l  %26 = load i64, ptr %ntimestep19, align 8\l  %cmp20 = icmp eq i64 %23, %26\l  br i1 %cmp20, label %if.then21, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5603f57fa920:s0 -> Node0x5603f57fcf20[tooltip="if.then -> if.then21\nProbability 50.00%" ];
	Node0x5603f57fa920:s1 -> Node0x5603f57fcfa0[tooltip="if.then -> if.end\nProbability 50.00%" ];
	Node0x5603f57fcf20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.then21:\l|  %nevery22 = getelementptr inbounds %\"class.LAMMPS_NS::Fix\", ptr %this1,\l... i32 0, i32 11\l  %27 = load i32, ptr %nevery22, align 8\l  %conv23 = sext i32 %27 to i64\l  %nextstep24 = getelementptr inbounds %\"class.LAMMPS_NS::FixHalt\", ptr\l... %this1, i32 0, i32 6\l  %28 = load i64, ptr %nextstep24, align 8\l  %add25 = add nsw i64 %28, %conv23\l  store i64 %add25, ptr %nextstep24, align 8\l  br label %if.end\l}"];
	Node0x5603f57fcf20 -> Node0x5603f57fcfa0[tooltip="if.then21 -> if.end\nProbability 100.00%" ];
	Node0x5603f57fcfa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end:\l|  %tratio26 = getelementptr inbounds %\"class.LAMMPS_NS::FixHalt\", ptr\l... %this1, i32 0, i32 9\l  store double 1.000000e+00, ptr %tratio26, align 8\l  br label %if.end27\l}"];
	Node0x5603f57fcfa0 -> Node0x5603f57fa990[tooltip="if.end -> if.end27\nProbability 100.00%" ];
	Node0x5603f57fa990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end27:\l|  %29 = load double, ptr %cpu, align 8\l  ret double %29\l}"];
}
