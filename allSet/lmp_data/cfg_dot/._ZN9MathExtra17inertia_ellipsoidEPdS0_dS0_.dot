digraph "CFG for '_ZN9MathExtra17inertia_ellipsoidEPdS0_dS0_' function" {
	label="CFG for '_ZN9MathExtra17inertia_ellipsoidEPdS0_dS0_' function";

	Node0x55837361e640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %radii.addr = alloca ptr, align 8\l  %quat.addr = alloca ptr, align 8\l  %mass.addr = alloca double, align 8\l  %inertia.addr = alloca ptr, align 8\l  %p = alloca [3 x [3 x double]], align 16\l  %ptrans = alloca [3 x [3 x double]], align 16\l  %itemp = alloca [3 x [3 x double]], align 16\l  %tensor = alloca [3 x [3 x double]], align 16\l  %idiag = alloca [3 x double], align 16\l  store ptr %radii, ptr %radii.addr, align 8\l  store ptr %quat, ptr %quat.addr, align 8\l  store double %mass, ptr %mass.addr, align 8\l  store ptr %inertia, ptr %inertia.addr, align 8\l  %0 = load ptr, ptr %quat.addr, align 8\l  %arraydecay = getelementptr inbounds [3 x [3 x double]], ptr %p, i64 0, i64 0\l  call void @_ZN9MathExtra11quat_to_matEPKdPA3_d(ptr noundef %0, ptr noundef\l... %arraydecay)\l  %1 = load ptr, ptr %quat.addr, align 8\l  %arraydecay1 = getelementptr inbounds [3 x [3 x double]], ptr %ptrans, i64\l... 0, i64 0\l  call void @_ZN9MathExtra17quat_to_mat_transEPKdPA3_d(ptr noundef %1, ptr\l... noundef %arraydecay1)\l  %2 = load double, ptr %mass.addr, align 8\l  %mul = fmul double 2.000000e-01, %2\l  %3 = load ptr, ptr %radii.addr, align 8\l  %arrayidx = getelementptr inbounds double, ptr %3, i64 1\l  %4 = load double, ptr %arrayidx, align 8\l  %5 = load ptr, ptr %radii.addr, align 8\l  %arrayidx2 = getelementptr inbounds double, ptr %5, i64 1\l  %6 = load double, ptr %arrayidx2, align 8\l  %7 = load ptr, ptr %radii.addr, align 8\l  %arrayidx4 = getelementptr inbounds double, ptr %7, i64 2\l  %8 = load double, ptr %arrayidx4, align 8\l  %9 = load ptr, ptr %radii.addr, align 8\l  %arrayidx5 = getelementptr inbounds double, ptr %9, i64 2\l  %10 = load double, ptr %arrayidx5, align 8\l  %mul6 = fmul double %8, %10\l  %11 = call double @llvm.fmuladd.f64(double %4, double %6, double %mul6)\l  %mul7 = fmul double %mul, %11\l  %arrayidx8 = getelementptr inbounds [3 x double], ptr %idiag, i64 0, i64 0\l  store double %mul7, ptr %arrayidx8, align 16\l  %12 = load double, ptr %mass.addr, align 8\l  %mul9 = fmul double 2.000000e-01, %12\l  %13 = load ptr, ptr %radii.addr, align 8\l  %arrayidx10 = getelementptr inbounds double, ptr %13, i64 0\l  %14 = load double, ptr %arrayidx10, align 8\l  %15 = load ptr, ptr %radii.addr, align 8\l  %arrayidx11 = getelementptr inbounds double, ptr %15, i64 0\l  %16 = load double, ptr %arrayidx11, align 8\l  %17 = load ptr, ptr %radii.addr, align 8\l  %arrayidx13 = getelementptr inbounds double, ptr %17, i64 2\l  %18 = load double, ptr %arrayidx13, align 8\l  %19 = load ptr, ptr %radii.addr, align 8\l  %arrayidx14 = getelementptr inbounds double, ptr %19, i64 2\l  %20 = load double, ptr %arrayidx14, align 8\l  %mul15 = fmul double %18, %20\l  %21 = call double @llvm.fmuladd.f64(double %14, double %16, double %mul15)\l  %mul16 = fmul double %mul9, %21\l  %arrayidx17 = getelementptr inbounds [3 x double], ptr %idiag, i64 0, i64 1\l  store double %mul16, ptr %arrayidx17, align 8\l  %22 = load double, ptr %mass.addr, align 8\l  %mul18 = fmul double 2.000000e-01, %22\l  %23 = load ptr, ptr %radii.addr, align 8\l  %arrayidx19 = getelementptr inbounds double, ptr %23, i64 0\l  %24 = load double, ptr %arrayidx19, align 8\l  %25 = load ptr, ptr %radii.addr, align 8\l  %arrayidx20 = getelementptr inbounds double, ptr %25, i64 0\l  %26 = load double, ptr %arrayidx20, align 8\l  %27 = load ptr, ptr %radii.addr, align 8\l  %arrayidx22 = getelementptr inbounds double, ptr %27, i64 1\l  %28 = load double, ptr %arrayidx22, align 8\l  %29 = load ptr, ptr %radii.addr, align 8\l  %arrayidx23 = getelementptr inbounds double, ptr %29, i64 1\l  %30 = load double, ptr %arrayidx23, align 8\l  %mul24 = fmul double %28, %30\l  %31 = call double @llvm.fmuladd.f64(double %24, double %26, double %mul24)\l  %mul25 = fmul double %mul18, %31\l  %arrayidx26 = getelementptr inbounds [3 x double], ptr %idiag, i64 0, i64 2\l  store double %mul25, ptr %arrayidx26, align 16\l  %arraydecay27 = getelementptr inbounds [3 x double], ptr %idiag, i64 0, i64 0\l  %arraydecay28 = getelementptr inbounds [3 x [3 x double]], ptr %ptrans, i64\l... 0, i64 0\l  %arraydecay29 = getelementptr inbounds [3 x [3 x double]], ptr %itemp, i64\l... 0, i64 0\l  call void @_ZN9MathExtra11diag_times3EPKdPA3_S0_PA3_d(ptr noundef\l... %arraydecay27, ptr noundef %arraydecay28, ptr noundef %arraydecay29)\l  %arraydecay30 = getelementptr inbounds [3 x [3 x double]], ptr %p, i64 0,\l... i64 0\l  %arraydecay31 = getelementptr inbounds [3 x [3 x double]], ptr %itemp, i64\l... 0, i64 0\l  %arraydecay32 = getelementptr inbounds [3 x [3 x double]], ptr %tensor, i64\l... 0, i64 0\l  call void @_ZN9MathExtra6times3EPA3_KdS2_PA3_d(ptr noundef %arraydecay30,\l... ptr noundef %arraydecay31, ptr noundef %arraydecay32)\l  %arrayidx33 = getelementptr inbounds [3 x [3 x double]], ptr %tensor, i64 0,\l... i64 0\l  %arrayidx34 = getelementptr inbounds [3 x double], ptr %arrayidx33, i64 0,\l... i64 0\l  %32 = load double, ptr %arrayidx34, align 16\l  %33 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx35 = getelementptr inbounds double, ptr %33, i64 0\l  store double %32, ptr %arrayidx35, align 8\l  %arrayidx36 = getelementptr inbounds [3 x [3 x double]], ptr %tensor, i64 0,\l... i64 1\l  %arrayidx37 = getelementptr inbounds [3 x double], ptr %arrayidx36, i64 0,\l... i64 1\l  %34 = load double, ptr %arrayidx37, align 8\l  %35 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx38 = getelementptr inbounds double, ptr %35, i64 1\l  store double %34, ptr %arrayidx38, align 8\l  %arrayidx39 = getelementptr inbounds [3 x [3 x double]], ptr %tensor, i64 0,\l... i64 2\l  %arrayidx40 = getelementptr inbounds [3 x double], ptr %arrayidx39, i64 0,\l... i64 2\l  %36 = load double, ptr %arrayidx40, align 16\l  %37 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx41 = getelementptr inbounds double, ptr %37, i64 2\l  store double %36, ptr %arrayidx41, align 8\l  %arrayidx42 = getelementptr inbounds [3 x [3 x double]], ptr %tensor, i64 0,\l... i64 1\l  %arrayidx43 = getelementptr inbounds [3 x double], ptr %arrayidx42, i64 0,\l... i64 2\l  %38 = load double, ptr %arrayidx43, align 8\l  %39 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx44 = getelementptr inbounds double, ptr %39, i64 3\l  store double %38, ptr %arrayidx44, align 8\l  %arrayidx45 = getelementptr inbounds [3 x [3 x double]], ptr %tensor, i64 0,\l... i64 0\l  %arrayidx46 = getelementptr inbounds [3 x double], ptr %arrayidx45, i64 0,\l... i64 2\l  %40 = load double, ptr %arrayidx46, align 16\l  %41 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx47 = getelementptr inbounds double, ptr %41, i64 4\l  store double %40, ptr %arrayidx47, align 8\l  %arrayidx48 = getelementptr inbounds [3 x [3 x double]], ptr %tensor, i64 0,\l... i64 0\l  %arrayidx49 = getelementptr inbounds [3 x double], ptr %arrayidx48, i64 0,\l... i64 1\l  %42 = load double, ptr %arrayidx49, align 8\l  %43 = load ptr, ptr %inertia.addr, align 8\l  %arrayidx50 = getelementptr inbounds double, ptr %43, i64 5\l  store double %42, ptr %arrayidx50, align 8\l  ret void\l}"];
}
