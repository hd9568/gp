digraph "CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRlRiRdS7_S7_S7_EEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSC_' function" {
	label="CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRlRiRdS7_S7_S7_EEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSC_' function";

	Node0x557d5be856f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr.i115 = alloca ptr, align 8\l  %val.addr.i116 = alloca double, align 8\l  %this.addr.i112 = alloca ptr, align 8\l  %val.addr.i113 = alloca double, align 8\l  %this.addr.i109 = alloca ptr, align 8\l  %val.addr.i110 = alloca double, align 8\l  %this.addr.i106 = alloca ptr, align 8\l  %val.addr.i107 = alloca double, align 8\l  %this.addr.i103 = alloca ptr, align 8\l  %val.addr.i104 = alloca double, align 8\l  %this.addr.i100 = alloca ptr, align 8\l  %val.addr.i101 = alloca double, align 8\l  %this.addr.i97 = alloca ptr, align 8\l  %val.addr.i98 = alloca double, align 8\l  %this.addr.i94 = alloca ptr, align 8\l  %val.addr.i95 = alloca double, align 8\l  %retval.i84 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i85 = alloca ptr, align 8\l  %arg.i86 = alloca ptr, align 8\l  %ref.tmp.i87 = alloca double, align 8\l  %ref.tmp1.i88 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i89 = alloca i8, align 1\l  %formattable_const.i90 = alloca i8, align 1\l  %formattable_pointer.i91 = alloca i8, align 1\l  %formattable.i92 = alloca i8, align 1\l  %retval.i74 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i75 = alloca ptr, align 8\l  %arg.i76 = alloca ptr, align 8\l  %ref.tmp.i77 = alloca double, align 8\l  %ref.tmp1.i78 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i79 = alloca i8, align 1\l  %formattable_const.i80 = alloca i8, align 1\l  %formattable_pointer.i81 = alloca i8, align 1\l  %formattable.i82 = alloca i8, align 1\l  %retval.i64 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i65 = alloca ptr, align 8\l  %arg.i66 = alloca ptr, align 8\l  %ref.tmp.i67 = alloca double, align 8\l  %ref.tmp1.i68 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i69 = alloca i8, align 1\l  %formattable_const.i70 = alloca i8, align 1\l  %formattable_pointer.i71 = alloca i8, align 1\l  %formattable.i72 = alloca i8, align 1\l  %retval.i55 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i56 = alloca ptr, align 8\l  %arg.i57 = alloca ptr, align 8\l  %ref.tmp.i58 = alloca double, align 8\l  %ref.tmp1.i59 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i60 = alloca i8, align 1\l  %formattable_const.i61 = alloca i8, align 1\l  %formattable_pointer.i62 = alloca i8, align 1\l  %formattable.i63 = alloca i8, align 1\l  %this.addr.i52 = alloca ptr, align 8\l  %val.addr.i53 = alloca i32, align 4\l  %this.addr.i49 = alloca ptr, align 8\l  %val.addr.i50 = alloca i32, align 4\l  %retval.i39 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i40 = alloca ptr, align 8\l  %arg.i41 = alloca ptr, align 8\l  %ref.tmp.i42 = alloca i32, align 4\l  %ref.tmp1.i43 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i44 = alloca i8, align 1\l  %formattable_const.i45 = alloca i8, align 1\l  %formattable_pointer.i46 = alloca i8, align 1\l  %formattable.i47 = alloca i8, align 1\l  %this.addr.i36 = alloca ptr, align 8\l  %val.addr.i37 = alloca i64, align 8\l  %this.addr.i33 = alloca ptr, align 8\l  %val.addr.i34 = alloca i64, align 8\l  %retval.i29 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i30 = alloca ptr, align 8\l  %arg.i = alloca ptr, align 8\l  %ref.tmp.i31 = alloca i64, align 8\l  %ref.tmp1.i = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i = alloca i8, align 1\l  %formattable_const.i = alloca i8, align 1\l  %formattable_pointer.i = alloca i8, align 1\l  %formattable.i = alloca i8, align 1\l  %this.addr.i28 = alloca ptr, align 8\l  %.addr.i = alloca ptr, align 8\l  %.addr1.i = alloca i32, align 4\l  %.addr2.i = alloca i32, align 4\l  %.addr3.i = alloca ptr, align 8\l  %.addr4.i = alloca ptr, align 8\l  %.addr5.i = alloca ptr, align 8\l  %.addr6.i = alloca ptr, align 8\l  %.addr7.i = alloca ptr, align 8\l  %.addr8.i = alloca ptr, align 8\l  %this.addr.i26 = alloca ptr, align 8\l  %init.addr.i = alloca ptr, align 8\l  %init.addr2.i = alloca ptr, align 8\l  %init.addr4.i = alloca ptr, align 8\l  %init.addr6.i = alloca ptr, align 8\l  %init.addr8.i = alloca ptr, align 8\l  %init.addr10.i = alloca ptr, align 8\l  %retval.i23 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i24 = alloca ptr, align 8\l  %retval.i20 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i21 = alloca ptr, align 8\l  %retval.i17 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i18 = alloca ptr, align 8\l  %retval.i14 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i15 = alloca ptr, align 8\l  %retval.i12 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i13 = alloca ptr, align 8\l  %retval.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i = alloca ptr, align 8\l  %this.addr.i = alloca ptr, align 8\l  %args.addr.i = alloca ptr, align 8\l  %args.addr2.i = alloca ptr, align 8\l  %args.addr4.i = alloca ptr, align 8\l  %args.addr6.i = alloca ptr, align 8\l  %args.addr8.i = alloca ptr, align 8\l  %args.addr10.i = alloca ptr, align 8\l  %ref.tmp.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp13.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp17.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp21.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp25.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp29.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %args.addr = alloca ptr, align 8\l  %args.addr2 = alloca ptr, align 8\l  %args.addr4 = alloca ptr, align 8\l  %args.addr6 = alloca ptr, align 8\l  %args.addr8 = alloca ptr, align 8\l  %args.addr10 = alloca ptr, align 8\l  store ptr %args, ptr %args.addr, align 8\l  store ptr %args1, ptr %args.addr2, align 8\l  store ptr %args3, ptr %args.addr4, align 8\l  store ptr %args5, ptr %args.addr6, align 8\l  store ptr %args7, ptr %args.addr8, align 8\l  store ptr %args9, ptr %args.addr10, align 8\l  %0 = load ptr, ptr %args.addr, align 8\l  %1 = load ptr, ptr %args.addr2, align 8\l  %2 = load ptr, ptr %args.addr4, align 8\l  %3 = load ptr, ptr %args.addr6, align 8\l  %4 = load ptr, ptr %args.addr8, align 8\l  %5 = load ptr, ptr %args.addr10, align 8\l  store ptr %agg.result, ptr %this.addr.i, align 8\l  store ptr %0, ptr %args.addr.i, align 8\l  store ptr %1, ptr %args.addr2.i, align 8\l  store ptr %2, ptr %args.addr4.i, align 8\l  store ptr %3, ptr %args.addr6.i, align 8\l  store ptr %4, ptr %args.addr8.i, align 8\l  store ptr %5, ptr %args.addr10.i, align 8\l  %this11.i = load ptr, ptr %this.addr.i, align 8\l  %6 = load ptr, ptr %args.addr.i, align 8\l  store ptr %6, ptr %val.addr.i, align 8\l  %7 = load ptr, ptr %val.addr.i, align 8\l  store ptr %7, ptr %val.addr.i30, align 8\l  %8 = load ptr, ptr %val.addr.i30, align 8\l  %9 = load i64, ptr %8, align 8\l  store ptr %ref.tmp1.i, ptr %this.addr.i33, align 8\l  store i64 %9, ptr %val.addr.i34, align 8\l  %this1.i35 = load ptr, ptr %this.addr.i33, align 8\l  %10 = load i64, ptr %val.addr.i34, align 8\l  store i64 %10, ptr %ref.tmp.i31, align 8\l  store ptr %ref.tmp.i31, ptr %arg.i, align 8\l  store i8 1, ptr %formattable_char.i, align 1\l  store i8 1, ptr %formattable_const.i, align 1\l  store i8 1, ptr %formattable_pointer.i, align 1\l  store i8 1, ptr %formattable.i, align 1\l  %11 = load ptr, ptr %arg.i, align 8\l  %12 = load i64, ptr %11, align 8\l  store ptr %retval.i29, ptr %this.addr.i36, align 8\l  store i64 %12, ptr %val.addr.i37, align 8\l  %this1.i38 = load ptr, ptr %this.addr.i36, align 8\l  %13 = load i64, ptr %val.addr.i37, align 8\l  store i64 %13, ptr %this1.i38, align 16\l  %14 = load \{ i64, i64 \}, ptr %retval.i29, align 16\l  %15 = extractvalue \{ i64, i64 \} %14, 0\l  store i64 %15, ptr %retval.i, align 16\l  %16 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i, i32 0, i32 1\l  %17 = extractvalue \{ i64, i64 \} %14, 1\l  store i64 %17, ptr %16, align 8\l  %18 = load \{ i64, i64 \}, ptr %retval.i, align 16\l  %19 = extractvalue \{ i64, i64 \} %18, 0\l  store i64 %19, ptr %ref.tmp.i, align 16\l  %20 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp.i, i32 0, i32 1\l  %21 = extractvalue \{ i64, i64 \} %18, 1\l  store i64 %21, ptr %20, align 8\l  %22 = load ptr, ptr %args.addr2.i, align 8\l  store ptr %22, ptr %val.addr.i13, align 8\l  %23 = load ptr, ptr %val.addr.i13, align 8\l  store ptr %23, ptr %val.addr.i40, align 8\l  %24 = load ptr, ptr %val.addr.i40, align 8\l  %25 = load i32, ptr %24, align 4\l  store ptr %ref.tmp1.i43, ptr %this.addr.i49, align 8\l  store i32 %25, ptr %val.addr.i50, align 4\l  %this1.i51 = load ptr, ptr %this.addr.i49, align 8\l  %26 = load i32, ptr %val.addr.i50, align 4\l  store i32 %26, ptr %ref.tmp.i42, align 4\l  store ptr %ref.tmp.i42, ptr %arg.i41, align 8\l  store i8 1, ptr %formattable_char.i44, align 1\l  store i8 1, ptr %formattable_const.i45, align 1\l  store i8 1, ptr %formattable_pointer.i46, align 1\l  store i8 1, ptr %formattable.i47, align 1\l  %27 = load ptr, ptr %arg.i41, align 8\l  %28 = load i32, ptr %27, align 4\l  store ptr %retval.i39, ptr %this.addr.i52, align 8\l  store i32 %28, ptr %val.addr.i53, align 4\l  %this1.i54 = load ptr, ptr %this.addr.i52, align 8\l  %29 = load i32, ptr %val.addr.i53, align 4\l  store i32 %29, ptr %this1.i54, align 16\l  %30 = load \{ i64, i64 \}, ptr %retval.i39, align 16\l  %31 = extractvalue \{ i64, i64 \} %30, 0\l  store i64 %31, ptr %retval.i12, align 16\l  %32 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i12, i32 0, i32 1\l  %33 = extractvalue \{ i64, i64 \} %30, 1\l  store i64 %33, ptr %32, align 8\l  %34 = load \{ i64, i64 \}, ptr %retval.i12, align 16\l  %35 = extractvalue \{ i64, i64 \} %34, 0\l  store i64 %35, ptr %ref.tmp13.i, align 16\l  %36 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp13.i, i32 0, i32 1\l  %37 = extractvalue \{ i64, i64 \} %34, 1\l  store i64 %37, ptr %36, align 8\l  %38 = load ptr, ptr %args.addr4.i, align 8\l  store ptr %38, ptr %val.addr.i24, align 8\l  %39 = load ptr, ptr %val.addr.i24, align 8\l  store ptr %39, ptr %val.addr.i56, align 8\l  %40 = load ptr, ptr %val.addr.i56, align 8\l  %41 = load double, ptr %40, align 8\l  store ptr %ref.tmp1.i59, ptr %this.addr.i103, align 8\l  store double %41, ptr %val.addr.i104, align 8\l  %this1.i105 = load ptr, ptr %this.addr.i103, align 8\l  %42 = load double, ptr %val.addr.i104, align 8\l  store double %42, ptr %ref.tmp.i58, align 8\l  store ptr %ref.tmp.i58, ptr %arg.i57, align 8\l  store i8 1, ptr %formattable_char.i60, align 1\l  store i8 1, ptr %formattable_const.i61, align 1\l  store i8 1, ptr %formattable_pointer.i62, align 1\l  store i8 1, ptr %formattable.i63, align 1\l  %43 = load ptr, ptr %arg.i57, align 8\l  %44 = load double, ptr %43, align 8\l  store ptr %retval.i55, ptr %this.addr.i115, align 8\l  store double %44, ptr %val.addr.i116, align 8\l  %this1.i117 = load ptr, ptr %this.addr.i115, align 8\l  %45 = load double, ptr %val.addr.i116, align 8\l  store double %45, ptr %this1.i117, align 16\l  %46 = load \{ i64, i64 \}, ptr %retval.i55, align 16\l  %47 = extractvalue \{ i64, i64 \} %46, 0\l  store i64 %47, ptr %retval.i23, align 16\l  %48 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i23, i32 0, i32 1\l  %49 = extractvalue \{ i64, i64 \} %46, 1\l  store i64 %49, ptr %48, align 8\l  %50 = load \{ i64, i64 \}, ptr %retval.i23, align 16\l  %51 = extractvalue \{ i64, i64 \} %50, 0\l  store i64 %51, ptr %ref.tmp17.i, align 16\l  %52 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp17.i, i32 0, i32 1\l  %53 = extractvalue \{ i64, i64 \} %50, 1\l  store i64 %53, ptr %52, align 8\l  %54 = load ptr, ptr %args.addr6.i, align 8\l  store ptr %54, ptr %val.addr.i21, align 8\l  %55 = load ptr, ptr %val.addr.i21, align 8\l  store ptr %55, ptr %val.addr.i65, align 8\l  %56 = load ptr, ptr %val.addr.i65, align 8\l  %57 = load double, ptr %56, align 8\l  store ptr %ref.tmp1.i68, ptr %this.addr.i100, align 8\l  store double %57, ptr %val.addr.i101, align 8\l  %this1.i102 = load ptr, ptr %this.addr.i100, align 8\l  %58 = load double, ptr %val.addr.i101, align 8\l  store double %58, ptr %ref.tmp.i67, align 8\l  store ptr %ref.tmp.i67, ptr %arg.i66, align 8\l  store i8 1, ptr %formattable_char.i69, align 1\l  store i8 1, ptr %formattable_const.i70, align 1\l  store i8 1, ptr %formattable_pointer.i71, align 1\l  store i8 1, ptr %formattable.i72, align 1\l  %59 = load ptr, ptr %arg.i66, align 8\l  %60 = load double, ptr %59, align 8\l  store ptr %retval.i64, ptr %this.addr.i112, align 8\l  store double %60, ptr %val.addr.i113, align 8\l  %this1.i114 = load ptr, ptr %this.addr.i112, align 8\l  %61 = load double, ptr %val.addr.i113, align 8\l  store double %61, ptr %this1.i114, align 16\l  %62 = load \{ i64, i64 \}, ptr %retval.i64, align 16\l  %63 = extractvalue \{ i64, i64 \} %62, 0\l  store i64 %63, ptr %retval.i20, align 16\l  %64 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i20, i32 0, i32 1\l  %65 = extractvalue \{ i64, i64 \} %62, 1\l  store i64 %65, ptr %64, align 8\l  %66 = load \{ i64, i64 \}, ptr %retval.i20, align 16\l  %67 = extractvalue \{ i64, i64 \} %66, 0\l  store i64 %67, ptr %ref.tmp21.i, align 16\l  %68 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp21.i, i32 0, i32 1\l  %69 = extractvalue \{ i64, i64 \} %66, 1\l  store i64 %69, ptr %68, align 8\l  %70 = load ptr, ptr %args.addr8.i, align 8\l  store ptr %70, ptr %val.addr.i18, align 8\l  %71 = load ptr, ptr %val.addr.i18, align 8\l  store ptr %71, ptr %val.addr.i75, align 8\l  %72 = load ptr, ptr %val.addr.i75, align 8\l  %73 = load double, ptr %72, align 8\l  store ptr %ref.tmp1.i78, ptr %this.addr.i97, align 8\l  store double %73, ptr %val.addr.i98, align 8\l  %this1.i99 = load ptr, ptr %this.addr.i97, align 8\l  %74 = load double, ptr %val.addr.i98, align 8\l  store double %74, ptr %ref.tmp.i77, align 8\l  store ptr %ref.tmp.i77, ptr %arg.i76, align 8\l  store i8 1, ptr %formattable_char.i79, align 1\l  store i8 1, ptr %formattable_const.i80, align 1\l  store i8 1, ptr %formattable_pointer.i81, align 1\l  store i8 1, ptr %formattable.i82, align 1\l  %75 = load ptr, ptr %arg.i76, align 8\l  %76 = load double, ptr %75, align 8\l  store ptr %retval.i74, ptr %this.addr.i109, align 8\l  store double %76, ptr %val.addr.i110, align 8\l  %this1.i111 = load ptr, ptr %this.addr.i109, align 8\l  %77 = load double, ptr %val.addr.i110, align 8\l  store double %77, ptr %this1.i111, align 16\l  %78 = load \{ i64, i64 \}, ptr %retval.i74, align 16\l  %79 = extractvalue \{ i64, i64 \} %78, 0\l  store i64 %79, ptr %retval.i17, align 16\l  %80 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i17, i32 0, i32 1\l  %81 = extractvalue \{ i64, i64 \} %78, 1\l  store i64 %81, ptr %80, align 8\l  %82 = load \{ i64, i64 \}, ptr %retval.i17, align 16\l  %83 = extractvalue \{ i64, i64 \} %82, 0\l  store i64 %83, ptr %ref.tmp25.i, align 16\l  %84 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp25.i, i32 0, i32 1\l  %85 = extractvalue \{ i64, i64 \} %82, 1\l  store i64 %85, ptr %84, align 8\l  %86 = load ptr, ptr %args.addr10.i, align 8\l  store ptr %86, ptr %val.addr.i15, align 8\l  %87 = load ptr, ptr %val.addr.i15, align 8\l  store ptr %87, ptr %val.addr.i85, align 8\l  %88 = load ptr, ptr %val.addr.i85, align 8\l  %89 = load double, ptr %88, align 8\l  store ptr %ref.tmp1.i88, ptr %this.addr.i94, align 8\l  store double %89, ptr %val.addr.i95, align 8\l  %this1.i96 = load ptr, ptr %this.addr.i94, align 8\l  %90 = load double, ptr %val.addr.i95, align 8\l  store double %90, ptr %ref.tmp.i87, align 8\l  store ptr %ref.tmp.i87, ptr %arg.i86, align 8\l  store i8 1, ptr %formattable_char.i89, align 1\l  store i8 1, ptr %formattable_const.i90, align 1\l  store i8 1, ptr %formattable_pointer.i91, align 1\l  store i8 1, ptr %formattable.i92, align 1\l  %91 = load ptr, ptr %arg.i86, align 8\l  %92 = load double, ptr %91, align 8\l  store ptr %retval.i84, ptr %this.addr.i106, align 8\l  store double %92, ptr %val.addr.i107, align 8\l  %this1.i108 = load ptr, ptr %this.addr.i106, align 8\l  %93 = load double, ptr %val.addr.i107, align 8\l  store double %93, ptr %this1.i108, align 16\l  %94 = load \{ i64, i64 \}, ptr %retval.i84, align 16\l  %95 = extractvalue \{ i64, i64 \} %94, 0\l  store i64 %95, ptr %retval.i14, align 16\l  %96 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i14, i32 0, i32 1\l  %97 = extractvalue \{ i64, i64 \} %94, 1\l  store i64 %97, ptr %96, align 8\l  %98 = load \{ i64, i64 \}, ptr %retval.i14, align 16\l  %99 = extractvalue \{ i64, i64 \} %98, 0\l  store i64 %99, ptr %ref.tmp29.i, align 16\l  %100 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp29.i, i32 0, i32 1\l  %101 = extractvalue \{ i64, i64 \} %98, 1\l  store i64 %101, ptr %100, align 8\l  store ptr %this11.i, ptr %this.addr.i26, align 8\l  store ptr %ref.tmp.i, ptr %init.addr.i, align 8\l  store ptr %ref.tmp13.i, ptr %init.addr2.i, align 8\l  store ptr %ref.tmp17.i, ptr %init.addr4.i, align 8\l  store ptr %ref.tmp21.i, ptr %init.addr6.i, align 8\l  store ptr %ref.tmp25.i, ptr %init.addr8.i, align 8\l  store ptr %ref.tmp29.i, ptr %init.addr10.i, align 8\l  %this11.i27 = load ptr, ptr %this.addr.i26, align 8\l  %102 = load ptr, ptr %init.addr.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %this11.i27, ptr align 16\l... %102, i64 16, i1 false)\l  %arrayinit.element.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %this11.i27, i64 1\l  %103 = load ptr, ptr %init.addr2.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element.i, ptr\l... align 16 %103, i64 16, i1 false)\l  %arrayinit.element12.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element.i, i64 1\l  %104 = load ptr, ptr %init.addr4.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element12.i, ptr\l... align 16 %104, i64 16, i1 false)\l  %arrayinit.element13.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element12.i, i64 1\l  %105 = load ptr, ptr %init.addr6.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element13.i, ptr\l... align 16 %105, i64 16, i1 false)\l  %arrayinit.element14.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element13.i, i64 1\l  %106 = load ptr, ptr %init.addr8.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element14.i, ptr\l... align 16 %106, i64 16, i1 false)\l  %arrayinit.element15.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element14.i, i64 1\l  %107 = load ptr, ptr %init.addr10.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element15.i, ptr\l... align 16 %107, i64 16, i1 false)\l  store ptr %this11.i, ptr %this.addr.i28, align 8\l  %this1.i = load ptr, ptr %this.addr.i28, align 8\l  %108 = load ptr, ptr %args.addr.i, align 8\l  %109 = load ptr, ptr %args.addr2.i, align 8\l  %110 = load ptr, ptr %args.addr4.i, align 8\l  %111 = load ptr, ptr %args.addr6.i, align 8\l  %112 = load ptr, ptr %args.addr8.i, align 8\l  %113 = load ptr, ptr %args.addr10.i, align 8\l  store ptr null, ptr %.addr.i, align 8\l  store i32 0, ptr %.addr1.i, align 4\l  store i32 0, ptr %.addr2.i, align 4\l  store ptr %108, ptr %.addr3.i, align 8\l  store ptr %109, ptr %.addr4.i, align 8\l  store ptr %110, ptr %.addr5.i, align 8\l  store ptr %111, ptr %.addr6.i, align 8\l  store ptr %112, ptr %.addr7.i, align 8\l  store ptr %113, ptr %.addr8.i, align 8\l  ret void\l}"];
}
