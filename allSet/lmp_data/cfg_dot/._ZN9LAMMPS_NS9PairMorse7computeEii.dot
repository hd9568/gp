digraph "CFG for '_ZN9LAMMPS_NS9PairMorse7computeEii' function" {
	label="CFG for '_ZN9LAMMPS_NS9PairMorse7computeEii' function";

	Node0x562dfdf3fbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %eflag.addr = alloca i32, align 4\l  %vflag.addr = alloca i32, align 4\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %ii = alloca i32, align 4\l  %jj = alloca i32, align 4\l  %inum = alloca i32, align 4\l  %jnum = alloca i32, align 4\l  %itype = alloca i32, align 4\l  %jtype = alloca i32, align 4\l  %xtmp = alloca double, align 8\l  %ytmp = alloca double, align 8\l  %ztmp = alloca double, align 8\l  %delx = alloca double, align 8\l  %dely = alloca double, align 8\l  %delz = alloca double, align 8\l  %evdwl = alloca double, align 8\l  %fpair = alloca double, align 8\l  %rsq = alloca double, align 8\l  %r = alloca double, align 8\l  %dr = alloca double, align 8\l  %dexp = alloca double, align 8\l  %factor_lj = alloca double, align 8\l  %ilist = alloca ptr, align 8\l  %jlist = alloca ptr, align 8\l  %numneigh = alloca ptr, align 8\l  %firstneigh = alloca ptr, align 8\l  %x = alloca ptr, align 8\l  %f = alloca ptr, align 8\l  %type = alloca ptr, align 8\l  %nlocal = alloca i32, align 4\l  %special_lj = alloca ptr, align 8\l  %newton_pair = alloca i32, align 4\l  store ptr %this, ptr %this.addr, align 8\l  store i32 %eflag, ptr %eflag.addr, align 4\l  store i32 %vflag, ptr %vflag.addr, align 4\l  %this1 = load ptr, ptr %this.addr, align 8\l  store double 0.000000e+00, ptr %evdwl, align 8\l  %0 = load i32, ptr %eflag.addr, align 4\l  %1 = load i32, ptr %vflag.addr, align 4\l  call void @_ZN9LAMMPS_NS4Pair7ev_initEiii(ptr noundef nonnull align 8\l... dereferenceable(908) %this1, i32 noundef %0, i32 noundef %1, i32 noundef 1)\l  %atom = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1, i32\l... 0, i32 6\l  %2 = load ptr, ptr %atom, align 8\l  %3 = load ptr, ptr %2, align 8\l  %x2 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %3, i32 0, i32 37\l  %4 = load ptr, ptr %x2, align 8\l  store ptr %4, ptr %x, align 8\l  %atom3 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %5 = load ptr, ptr %atom3, align 8\l  %6 = load ptr, ptr %5, align 8\l  %f4 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %6, i32 0, i32 39\l  %7 = load ptr, ptr %f4, align 8\l  store ptr %7, ptr %f, align 8\l  %atom5 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %8 = load ptr, ptr %atom5, align 8\l  %9 = load ptr, ptr %8, align 8\l  %type6 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %9, i32 0, i32\l... 34\l  %10 = load ptr, ptr %type6, align 8\l  store ptr %10, ptr %type, align 8\l  %atom7 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %11 = load ptr, ptr %atom7, align 8\l  %12 = load ptr, ptr %11, align 8\l  %nlocal8 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %12, i32 0,\l... i32 4\l  %13 = load i32, ptr %nlocal8, align 8\l  store i32 %13, ptr %nlocal, align 4\l  %force = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 11\l  %14 = load ptr, ptr %force, align 8\l  %15 = load ptr, ptr %14, align 8\l  %special_lj9 = getelementptr inbounds %\"class.LAMMPS_NS::Force\", ptr %15,\l... i32 0, i32 43\l  %arraydecay = getelementptr inbounds [4 x double], ptr %special_lj9, i64 0,\l... i64 0\l  store ptr %arraydecay, ptr %special_lj, align 8\l  %force10 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 11\l  %16 = load ptr, ptr %force10, align 8\l  %17 = load ptr, ptr %16, align 8\l  %newton_pair11 = getelementptr inbounds %\"class.LAMMPS_NS::Force\", ptr %17,\l... i32 0, i32 22\l  %18 = load i32, ptr %newton_pair11, align 4\l  store i32 %18, ptr %newton_pair, align 4\l  %list = getelementptr inbounds %\"class.LAMMPS_NS::Pair\", ptr %this1, i32 0,\l... i32 83\l  %19 = load ptr, ptr %list, align 8\l  %inum12 = getelementptr inbounds %\"class.LAMMPS_NS::NeighList\", ptr %19, i32\l... 0, i32 19\l  %20 = load i32, ptr %inum12, align 4\l  store i32 %20, ptr %inum, align 4\l  %list13 = getelementptr inbounds %\"class.LAMMPS_NS::Pair\", ptr %this1, i32\l... 0, i32 83\l  %21 = load ptr, ptr %list13, align 8\l  %ilist14 = getelementptr inbounds %\"class.LAMMPS_NS::NeighList\", ptr %21,\l... i32 0, i32 21\l  %22 = load ptr, ptr %ilist14, align 8\l  store ptr %22, ptr %ilist, align 8\l  %list15 = getelementptr inbounds %\"class.LAMMPS_NS::Pair\", ptr %this1, i32\l... 0, i32 83\l  %23 = load ptr, ptr %list15, align 8\l  %numneigh16 = getelementptr inbounds %\"class.LAMMPS_NS::NeighList\", ptr %23,\l... i32 0, i32 22\l  %24 = load ptr, ptr %numneigh16, align 8\l  store ptr %24, ptr %numneigh, align 8\l  %list17 = getelementptr inbounds %\"class.LAMMPS_NS::Pair\", ptr %this1, i32\l... 0, i32 83\l  %25 = load ptr, ptr %list17, align 8\l  %firstneigh18 = getelementptr inbounds %\"class.LAMMPS_NS::NeighList\", ptr\l... %25, i32 0, i32 23\l  %26 = load ptr, ptr %firstneigh18, align 8\l  store ptr %26, ptr %firstneigh, align 8\l  store i32 0, ptr %ii, align 4\l  br label %for.cond\l}"];
	Node0x562dfdf3fbc0 -> Node0x562dfdf45320[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x562dfdf45320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.cond:\l|  %27 = load i32, ptr %ii, align 4\l  %28 = load i32, ptr %inum, align 4\l  %cmp = icmp slt i32 %27, %28\l  br i1 %cmp, label %for.body, label %for.end130\l|{<s0>T|<s1>F}}"];
	Node0x562dfdf45320:s0 -> Node0x562dfdf455c0[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x562dfdf45320:s1 -> Node0x562dfdf45640[tooltip="for.cond -> for.end130\nProbability 3.12%" ];
	Node0x562dfdf455c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.body:\l|  %29 = load ptr, ptr %ilist, align 8\l  %30 = load i32, ptr %ii, align 4\l  %idxprom = sext i32 %30 to i64\l  %arrayidx = getelementptr inbounds i32, ptr %29, i64 %idxprom\l  %31 = load i32, ptr %arrayidx, align 4\l  store i32 %31, ptr %i, align 4\l  %32 = load ptr, ptr %x, align 8\l  %33 = load i32, ptr %i, align 4\l  %idxprom19 = sext i32 %33 to i64\l  %arrayidx20 = getelementptr inbounds ptr, ptr %32, i64 %idxprom19\l  %34 = load ptr, ptr %arrayidx20, align 8\l  %arrayidx21 = getelementptr inbounds double, ptr %34, i64 0\l  %35 = load double, ptr %arrayidx21, align 8\l  store double %35, ptr %xtmp, align 8\l  %36 = load ptr, ptr %x, align 8\l  %37 = load i32, ptr %i, align 4\l  %idxprom22 = sext i32 %37 to i64\l  %arrayidx23 = getelementptr inbounds ptr, ptr %36, i64 %idxprom22\l  %38 = load ptr, ptr %arrayidx23, align 8\l  %arrayidx24 = getelementptr inbounds double, ptr %38, i64 1\l  %39 = load double, ptr %arrayidx24, align 8\l  store double %39, ptr %ytmp, align 8\l  %40 = load ptr, ptr %x, align 8\l  %41 = load i32, ptr %i, align 4\l  %idxprom25 = sext i32 %41 to i64\l  %arrayidx26 = getelementptr inbounds ptr, ptr %40, i64 %idxprom25\l  %42 = load ptr, ptr %arrayidx26, align 8\l  %arrayidx27 = getelementptr inbounds double, ptr %42, i64 2\l  %43 = load double, ptr %arrayidx27, align 8\l  store double %43, ptr %ztmp, align 8\l  %44 = load ptr, ptr %type, align 8\l  %45 = load i32, ptr %i, align 4\l  %idxprom28 = sext i32 %45 to i64\l  %arrayidx29 = getelementptr inbounds i32, ptr %44, i64 %idxprom28\l  %46 = load i32, ptr %arrayidx29, align 4\l  store i32 %46, ptr %itype, align 4\l  %47 = load ptr, ptr %firstneigh, align 8\l  %48 = load i32, ptr %i, align 4\l  %idxprom30 = sext i32 %48 to i64\l  %arrayidx31 = getelementptr inbounds ptr, ptr %47, i64 %idxprom30\l  %49 = load ptr, ptr %arrayidx31, align 8\l  store ptr %49, ptr %jlist, align 8\l  %50 = load ptr, ptr %numneigh, align 8\l  %51 = load i32, ptr %i, align 4\l  %idxprom32 = sext i32 %51 to i64\l  %arrayidx33 = getelementptr inbounds i32, ptr %50, i64 %idxprom32\l  %52 = load i32, ptr %arrayidx33, align 4\l  store i32 %52, ptr %jnum, align 4\l  store i32 0, ptr %jj, align 4\l  br label %for.cond34\l}"];
	Node0x562dfdf455c0 -> Node0x562dfdf3e850[tooltip="for.body -> for.cond34\nProbability 100.00%" ];
	Node0x562dfdf3e850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond34:\l|  %53 = load i32, ptr %jj, align 4\l  %54 = load i32, ptr %jnum, align 4\l  %cmp35 = icmp slt i32 %53, %54\l  br i1 %cmp35, label %for.body36, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x562dfdf3e850:s0 -> Node0x562dfdf48fd0[tooltip="for.cond34 -> for.body36\nProbability 96.88%" ];
	Node0x562dfdf3e850:s1 -> Node0x562dfdf49050[tooltip="for.cond34 -> for.end\nProbability 3.12%" ];
	Node0x562dfdf48fd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body36:\l|  %55 = load ptr, ptr %jlist, align 8\l  %56 = load i32, ptr %jj, align 4\l  %idxprom37 = sext i32 %56 to i64\l  %arrayidx38 = getelementptr inbounds i32, ptr %55, i64 %idxprom37\l  %57 = load i32, ptr %arrayidx38, align 4\l  store i32 %57, ptr %j, align 4\l  %58 = load ptr, ptr %special_lj, align 8\l  %59 = load i32, ptr %j, align 4\l  %call = call noundef i32 @_ZNK9LAMMPS_NS4Pair6sbmaskEi(ptr noundef nonnull\l... align 8 dereferenceable(908) %this1, i32 noundef %59)\l  %idxprom39 = sext i32 %call to i64\l  %arrayidx40 = getelementptr inbounds double, ptr %58, i64 %idxprom39\l  %60 = load double, ptr %arrayidx40, align 8\l  store double %60, ptr %factor_lj, align 8\l  %61 = load i32, ptr %j, align 4\l  %and = and i32 %61, 536870911\l  store i32 %and, ptr %j, align 4\l  %62 = load double, ptr %xtmp, align 8\l  %63 = load ptr, ptr %x, align 8\l  %64 = load i32, ptr %j, align 4\l  %idxprom41 = sext i32 %64 to i64\l  %arrayidx42 = getelementptr inbounds ptr, ptr %63, i64 %idxprom41\l  %65 = load ptr, ptr %arrayidx42, align 8\l  %arrayidx43 = getelementptr inbounds double, ptr %65, i64 0\l  %66 = load double, ptr %arrayidx43, align 8\l  %sub = fsub double %62, %66\l  store double %sub, ptr %delx, align 8\l  %67 = load double, ptr %ytmp, align 8\l  %68 = load ptr, ptr %x, align 8\l  %69 = load i32, ptr %j, align 4\l  %idxprom44 = sext i32 %69 to i64\l  %arrayidx45 = getelementptr inbounds ptr, ptr %68, i64 %idxprom44\l  %70 = load ptr, ptr %arrayidx45, align 8\l  %arrayidx46 = getelementptr inbounds double, ptr %70, i64 1\l  %71 = load double, ptr %arrayidx46, align 8\l  %sub47 = fsub double %67, %71\l  store double %sub47, ptr %dely, align 8\l  %72 = load double, ptr %ztmp, align 8\l  %73 = load ptr, ptr %x, align 8\l  %74 = load i32, ptr %j, align 4\l  %idxprom48 = sext i32 %74 to i64\l  %arrayidx49 = getelementptr inbounds ptr, ptr %73, i64 %idxprom48\l  %75 = load ptr, ptr %arrayidx49, align 8\l  %arrayidx50 = getelementptr inbounds double, ptr %75, i64 2\l  %76 = load double, ptr %arrayidx50, align 8\l  %sub51 = fsub double %72, %76\l  store double %sub51, ptr %delz, align 8\l  %77 = load double, ptr %delx, align 8\l  %78 = load double, ptr %delx, align 8\l  %79 = load double, ptr %dely, align 8\l  %80 = load double, ptr %dely, align 8\l  %mul52 = fmul double %79, %80\l  %81 = call double @llvm.fmuladd.f64(double %77, double %78, double %mul52)\l  %82 = load double, ptr %delz, align 8\l  %83 = load double, ptr %delz, align 8\l  %84 = call double @llvm.fmuladd.f64(double %82, double %83, double %81)\l  store double %84, ptr %rsq, align 8\l  %85 = load ptr, ptr %type, align 8\l  %86 = load i32, ptr %j, align 4\l  %idxprom53 = sext i32 %86 to i64\l  %arrayidx54 = getelementptr inbounds i32, ptr %85, i64 %idxprom53\l  %87 = load i32, ptr %arrayidx54, align 4\l  store i32 %87, ptr %jtype, align 4\l  %88 = load double, ptr %rsq, align 8\l  %cutsq = getelementptr inbounds %\"class.LAMMPS_NS::Pair\", ptr %this1, i32 0,\l... i32 8\l  %89 = load ptr, ptr %cutsq, align 8\l  %90 = load i32, ptr %itype, align 4\l  %idxprom55 = sext i32 %90 to i64\l  %arrayidx56 = getelementptr inbounds ptr, ptr %89, i64 %idxprom55\l  %91 = load ptr, ptr %arrayidx56, align 8\l  %92 = load i32, ptr %jtype, align 4\l  %idxprom57 = sext i32 %92 to i64\l  %arrayidx58 = getelementptr inbounds double, ptr %91, i64 %idxprom57\l  %93 = load double, ptr %arrayidx58, align 8\l  %cmp59 = fcmp olt double %88, %93\l  br i1 %cmp59, label %if.then, label %if.end127\l|{<s0>T|<s1>F}}"];
	Node0x562dfdf48fd0:s0 -> Node0x562dfdf4c540[tooltip="for.body36 -> if.then\nProbability 50.00%" ];
	Node0x562dfdf48fd0:s1 -> Node0x562dfdf4c5b0[tooltip="for.body36 -> if.end127\nProbability 50.00%" ];
	Node0x562dfdf4c540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then:\l|  %94 = load double, ptr %rsq, align 8\l  %call60 = call double @sqrt(double noundef %94) #9\l  store double %call60, ptr %r, align 8\l  %95 = load double, ptr %r, align 8\l  %r0 = getelementptr inbounds %\"class.LAMMPS_NS::PairMorse\", ptr %this1, i32\l... 0, i32 5\l  %96 = load ptr, ptr %r0, align 8\l  %97 = load i32, ptr %itype, align 4\l  %idxprom61 = sext i32 %97 to i64\l  %arrayidx62 = getelementptr inbounds ptr, ptr %96, i64 %idxprom61\l  %98 = load ptr, ptr %arrayidx62, align 8\l  %99 = load i32, ptr %jtype, align 4\l  %idxprom63 = sext i32 %99 to i64\l  %arrayidx64 = getelementptr inbounds double, ptr %98, i64 %idxprom63\l  %100 = load double, ptr %arrayidx64, align 8\l  %sub65 = fsub double %95, %100\l  store double %sub65, ptr %dr, align 8\l  %alpha = getelementptr inbounds %\"class.LAMMPS_NS::PairMorse\", ptr %this1,\l... i32 0, i32 4\l  %101 = load ptr, ptr %alpha, align 8\l  %102 = load i32, ptr %itype, align 4\l  %idxprom66 = sext i32 %102 to i64\l  %arrayidx67 = getelementptr inbounds ptr, ptr %101, i64 %idxprom66\l  %103 = load ptr, ptr %arrayidx67, align 8\l  %104 = load i32, ptr %jtype, align 4\l  %idxprom68 = sext i32 %104 to i64\l  %arrayidx69 = getelementptr inbounds double, ptr %103, i64 %idxprom68\l  %105 = load double, ptr %arrayidx69, align 8\l  %fneg = fneg double %105\l  %106 = load double, ptr %dr, align 8\l  %mul = fmul double %fneg, %106\l  %call70 = call double @exp(double noundef %mul) #9\l  store double %call70, ptr %dexp, align 8\l  %107 = load double, ptr %factor_lj, align 8\l  %morse1 = getelementptr inbounds %\"class.LAMMPS_NS::PairMorse\", ptr %this1,\l... i32 0, i32 6\l  %108 = load ptr, ptr %morse1, align 8\l  %109 = load i32, ptr %itype, align 4\l  %idxprom71 = sext i32 %109 to i64\l  %arrayidx72 = getelementptr inbounds ptr, ptr %108, i64 %idxprom71\l  %110 = load ptr, ptr %arrayidx72, align 8\l  %111 = load i32, ptr %jtype, align 4\l  %idxprom73 = sext i32 %111 to i64\l  %arrayidx74 = getelementptr inbounds double, ptr %110, i64 %idxprom73\l  %112 = load double, ptr %arrayidx74, align 8\l  %mul75 = fmul double %107, %112\l  %113 = load double, ptr %dexp, align 8\l  %114 = load double, ptr %dexp, align 8\l  %115 = load double, ptr %dexp, align 8\l  %neg = fneg double %115\l  %116 = call double @llvm.fmuladd.f64(double %113, double %114, double %neg)\l  %mul77 = fmul double %mul75, %116\l  %117 = load double, ptr %r, align 8\l  %div = fdiv double %mul77, %117\l  store double %div, ptr %fpair, align 8\l  %118 = load double, ptr %delx, align 8\l  %119 = load double, ptr %fpair, align 8\l  %120 = load ptr, ptr %f, align 8\l  %121 = load i32, ptr %i, align 4\l  %idxprom79 = sext i32 %121 to i64\l  %arrayidx80 = getelementptr inbounds ptr, ptr %120, i64 %idxprom79\l  %122 = load ptr, ptr %arrayidx80, align 8\l  %arrayidx81 = getelementptr inbounds double, ptr %122, i64 0\l  %123 = load double, ptr %arrayidx81, align 8\l  %124 = call double @llvm.fmuladd.f64(double %118, double %119, double %123)\l  store double %124, ptr %arrayidx81, align 8\l  %125 = load double, ptr %dely, align 8\l  %126 = load double, ptr %fpair, align 8\l  %127 = load ptr, ptr %f, align 8\l  %128 = load i32, ptr %i, align 4\l  %idxprom83 = sext i32 %128 to i64\l  %arrayidx84 = getelementptr inbounds ptr, ptr %127, i64 %idxprom83\l  %129 = load ptr, ptr %arrayidx84, align 8\l  %arrayidx85 = getelementptr inbounds double, ptr %129, i64 1\l  %130 = load double, ptr %arrayidx85, align 8\l  %131 = call double @llvm.fmuladd.f64(double %125, double %126, double %130)\l  store double %131, ptr %arrayidx85, align 8\l  %132 = load double, ptr %delz, align 8\l  %133 = load double, ptr %fpair, align 8\l  %134 = load ptr, ptr %f, align 8\l  %135 = load i32, ptr %i, align 4\l  %idxprom87 = sext i32 %135 to i64\l  %arrayidx88 = getelementptr inbounds ptr, ptr %134, i64 %idxprom87\l  %136 = load ptr, ptr %arrayidx88, align 8\l  %arrayidx89 = getelementptr inbounds double, ptr %136, i64 2\l  %137 = load double, ptr %arrayidx89, align 8\l  %138 = call double @llvm.fmuladd.f64(double %132, double %133, double %137)\l  store double %138, ptr %arrayidx89, align 8\l  %139 = load i32, ptr %newton_pair, align 4\l  %tobool = icmp ne i32 %139, 0\l  br i1 %tobool, label %if.then91, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x562dfdf4c540:s0 -> Node0x562dfdf50560[tooltip="if.then -> if.then91\nProbability 62.50%" ];
	Node0x562dfdf4c540:s1 -> Node0x562dfdf50610[tooltip="if.then -> lor.lhs.false\nProbability 37.50%" ];
	Node0x562dfdf50610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{lor.lhs.false:\l|  %140 = load i32, ptr %j, align 4\l  %141 = load i32, ptr %nlocal, align 4\l  %cmp90 = icmp slt i32 %140, %141\l  br i1 %cmp90, label %if.then91, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x562dfdf50610:s0 -> Node0x562dfdf50560[tooltip="lor.lhs.false -> if.then91\nProbability 50.00%" ];
	Node0x562dfdf50610:s1 -> Node0x562dfdf50900[tooltip="lor.lhs.false -> if.end\nProbability 50.00%" ];
	Node0x562dfdf50560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then91:\l|  %142 = load double, ptr %delx, align 8\l  %143 = load double, ptr %fpair, align 8\l  %144 = load ptr, ptr %f, align 8\l  %145 = load i32, ptr %j, align 4\l  %idxprom93 = sext i32 %145 to i64\l  %arrayidx94 = getelementptr inbounds ptr, ptr %144, i64 %idxprom93\l  %146 = load ptr, ptr %arrayidx94, align 8\l  %arrayidx95 = getelementptr inbounds double, ptr %146, i64 0\l  %147 = load double, ptr %arrayidx95, align 8\l  %neg96 = fneg double %142\l  %148 = call double @llvm.fmuladd.f64(double %neg96, double %143, double %147)\l  store double %148, ptr %arrayidx95, align 8\l  %149 = load double, ptr %dely, align 8\l  %150 = load double, ptr %fpair, align 8\l  %151 = load ptr, ptr %f, align 8\l  %152 = load i32, ptr %j, align 4\l  %idxprom98 = sext i32 %152 to i64\l  %arrayidx99 = getelementptr inbounds ptr, ptr %151, i64 %idxprom98\l  %153 = load ptr, ptr %arrayidx99, align 8\l  %arrayidx100 = getelementptr inbounds double, ptr %153, i64 1\l  %154 = load double, ptr %arrayidx100, align 8\l  %neg101 = fneg double %149\l  %155 = call double @llvm.fmuladd.f64(double %neg101, double %150, double\l... %154)\l  store double %155, ptr %arrayidx100, align 8\l  %156 = load double, ptr %delz, align 8\l  %157 = load double, ptr %fpair, align 8\l  %158 = load ptr, ptr %f, align 8\l  %159 = load i32, ptr %j, align 4\l  %idxprom103 = sext i32 %159 to i64\l  %arrayidx104 = getelementptr inbounds ptr, ptr %158, i64 %idxprom103\l  %160 = load ptr, ptr %arrayidx104, align 8\l  %arrayidx105 = getelementptr inbounds double, ptr %160, i64 2\l  %161 = load double, ptr %arrayidx105, align 8\l  %neg106 = fneg double %156\l  %162 = call double @llvm.fmuladd.f64(double %neg106, double %157, double\l... %161)\l  store double %162, ptr %arrayidx105, align 8\l  br label %if.end\l}"];
	Node0x562dfdf50560 -> Node0x562dfdf50900[tooltip="if.then91 -> if.end\nProbability 100.00%" ];
	Node0x562dfdf50900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end:\l|  %163 = load i32, ptr %eflag.addr, align 4\l  %tobool107 = icmp ne i32 %163, 0\l  br i1 %tobool107, label %if.then108, label %if.end123\l|{<s0>T|<s1>F}}"];
	Node0x562dfdf50900:s0 -> Node0x562dfdf52240[tooltip="if.end -> if.then108\nProbability 62.50%" ];
	Node0x562dfdf50900:s1 -> Node0x562dfdf52290[tooltip="if.end -> if.end123\nProbability 37.50%" ];
	Node0x562dfdf52240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.then108:\l|  %d0 = getelementptr inbounds %\"class.LAMMPS_NS::PairMorse\", ptr %this1,\l... i32 0, i32 3\l  %164 = load ptr, ptr %d0, align 8\l  %165 = load i32, ptr %itype, align 4\l  %idxprom109 = sext i32 %165 to i64\l  %arrayidx110 = getelementptr inbounds ptr, ptr %164, i64 %idxprom109\l  %166 = load ptr, ptr %arrayidx110, align 8\l  %167 = load i32, ptr %jtype, align 4\l  %idxprom111 = sext i32 %167 to i64\l  %arrayidx112 = getelementptr inbounds double, ptr %166, i64 %idxprom111\l  %168 = load double, ptr %arrayidx112, align 8\l  %169 = load double, ptr %dexp, align 8\l  %170 = load double, ptr %dexp, align 8\l  %171 = load double, ptr %dexp, align 8\l  %mul114 = fmul double 2.000000e+00, %171\l  %neg115 = fneg double %mul114\l  %172 = call double @llvm.fmuladd.f64(double %169, double %170, double\l... %neg115)\l  %offset = getelementptr inbounds %\"class.LAMMPS_NS::PairMorse\", ptr %this1,\l... i32 0, i32 7\l  %173 = load ptr, ptr %offset, align 8\l  %174 = load i32, ptr %itype, align 4\l  %idxprom117 = sext i32 %174 to i64\l  %arrayidx118 = getelementptr inbounds ptr, ptr %173, i64 %idxprom117\l  %175 = load ptr, ptr %arrayidx118, align 8\l  %176 = load i32, ptr %jtype, align 4\l  %idxprom119 = sext i32 %176 to i64\l  %arrayidx120 = getelementptr inbounds double, ptr %175, i64 %idxprom119\l  %177 = load double, ptr %arrayidx120, align 8\l  %neg121 = fneg double %177\l  %178 = call double @llvm.fmuladd.f64(double %168, double %172, double\l... %neg121)\l  store double %178, ptr %evdwl, align 8\l  %179 = load double, ptr %factor_lj, align 8\l  %180 = load double, ptr %evdwl, align 8\l  %mul122 = fmul double %180, %179\l  store double %mul122, ptr %evdwl, align 8\l  br label %if.end123\l}"];
	Node0x562dfdf52240 -> Node0x562dfdf52290[tooltip="if.then108 -> if.end123\nProbability 100.00%" ];
	Node0x562dfdf52290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end123:\l|  %evflag = getelementptr inbounds %\"class.LAMMPS_NS::Pair\", ptr %this1, i32\l... 0, i32 42\l  %181 = load i32, ptr %evflag, align 4\l  %tobool124 = icmp ne i32 %181, 0\l  br i1 %tobool124, label %if.then125, label %if.end126\l|{<s0>T|<s1>F}}"];
	Node0x562dfdf52290:s0 -> Node0x562dfdf53ba0[tooltip="if.end123 -> if.then125\nProbability 62.50%" ];
	Node0x562dfdf52290:s1 -> Node0x562dfdf53c20[tooltip="if.end123 -> if.end126\nProbability 37.50%" ];
	Node0x562dfdf53ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.then125:\l|  %182 = load i32, ptr %i, align 4\l  %183 = load i32, ptr %j, align 4\l  %184 = load i32, ptr %nlocal, align 4\l  %185 = load i32, ptr %newton_pair, align 4\l  %186 = load double, ptr %evdwl, align 8\l  %187 = load double, ptr %fpair, align 8\l  %188 = load double, ptr %delx, align 8\l  %189 = load double, ptr %dely, align 8\l  %190 = load double, ptr %delz, align 8\l  call void @_ZN9LAMMPS_NS4Pair8ev_tallyEiiiidddddd(ptr noundef nonnull align\l... 8 dereferenceable(908) %this1, i32 noundef %182, i32 noundef %183, i32\l... noundef %184, i32 noundef %185, double noundef %186, double noundef\l... 0.000000e+00, double noundef %187, double noundef %188, double noundef %189,\l... double noundef %190)\l  br label %if.end126\l}"];
	Node0x562dfdf53ba0 -> Node0x562dfdf53c20[tooltip="if.then125 -> if.end126\nProbability 100.00%" ];
	Node0x562dfdf53c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end126:\l|  br label %if.end127\l}"];
	Node0x562dfdf53c20 -> Node0x562dfdf4c5b0[tooltip="if.end126 -> if.end127\nProbability 100.00%" ];
	Node0x562dfdf4c5b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end127:\l|  br label %for.inc\l}"];
	Node0x562dfdf4c5b0 -> Node0x562dfdf547b0[tooltip="if.end127 -> for.inc\nProbability 100.00%" ];
	Node0x562dfdf547b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %191 = load i32, ptr %jj, align 4\l  %inc = add nsw i32 %191, 1\l  store i32 %inc, ptr %jj, align 4\l  br label %for.cond34, !llvm.loop !6\l}"];
	Node0x562dfdf547b0 -> Node0x562dfdf3e850[tooltip="for.inc -> for.cond34\nProbability 100.00%" ];
	Node0x562dfdf49050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  br label %for.inc128\l}"];
	Node0x562dfdf49050 -> Node0x562dfdf4d670[tooltip="for.end -> for.inc128\nProbability 100.00%" ];
	Node0x562dfdf4d670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.inc128:\l|  %192 = load i32, ptr %ii, align 4\l  %inc129 = add nsw i32 %192, 1\l  store i32 %inc129, ptr %ii, align 4\l  br label %for.cond, !llvm.loop !8\l}"];
	Node0x562dfdf4d670 -> Node0x562dfdf45320[tooltip="for.inc128 -> for.cond\nProbability 100.00%" ];
	Node0x562dfdf45640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{for.end130:\l|  %vflag_fdotr = getelementptr inbounds %\"class.LAMMPS_NS::Pair\", ptr\l... %this1, i32 0, i32 118\l  %193 = load i32, ptr %vflag_fdotr, align 8\l  %tobool131 = icmp ne i32 %193, 0\l  br i1 %tobool131, label %if.then132, label %if.end133\l|{<s0>T|<s1>F}}"];
	Node0x562dfdf45640:s0 -> Node0x562dfdf56b00[tooltip="for.end130 -> if.then132\nProbability 62.50%" ];
	Node0x562dfdf45640:s1 -> Node0x562dfdf56b80[tooltip="for.end130 -> if.end133\nProbability 37.50%" ];
	Node0x562dfdf56b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670" fontname="Courier",label="{if.then132:\l|  call void @_ZN9LAMMPS_NS4Pair20virial_fdotr_computeEv(ptr noundef nonnull\l... align 8 dereferenceable(908) %this1)\l  br label %if.end133\l}"];
	Node0x562dfdf56b00 -> Node0x562dfdf56b80[tooltip="if.then132 -> if.end133\nProbability 100.00%" ];
	Node0x562dfdf56b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{if.end133:\l|  ret void\l}"];
}
