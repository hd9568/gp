digraph "CFG for '_ZN9MathExtra16no_squish_rotateEiPdS0_S0_d' function" {
	label="CFG for '_ZN9MathExtra16no_squish_rotateEiPdS0_S0_d' function";

	Node0x5583735cd740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %k.addr = alloca i32, align 4\l  %p.addr = alloca ptr, align 8\l  %q.addr = alloca ptr, align 8\l  %inertia.addr = alloca ptr, align 8\l  %dt.addr = alloca double, align 8\l  %phi = alloca double, align 8\l  %c_phi = alloca double, align 8\l  %s_phi = alloca double, align 8\l  %kp = alloca [4 x double], align 16\l  %kq = alloca [4 x double], align 16\l  store i32 %k, ptr %k.addr, align 4\l  store ptr %p, ptr %p.addr, align 8\l  store ptr %q, ptr %q.addr, align 8\l  store ptr %inertia, ptr %inertia.addr, align 8\l  store double %dt, ptr %dt.addr, align 8\l  %0 = load i32, ptr %k.addr, align 4\l  %cmp = icmp eq i32 %0, 1\l  br i1 %cmp, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x5583735cd740:s0 -> Node0x5583735d1c20[tooltip="entry -> if.then\nProbability 50.00%" ];
	Node0x5583735cd740:s1 -> Node0x5583735d1c90[tooltip="entry -> if.else\nProbability 50.00%" ];
	Node0x5583735d1c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then:\l|  %1 = load ptr, ptr %q.addr, align 8\l  %arrayidx = getelementptr inbounds double, ptr %1, i64 1\l  %2 = load double, ptr %arrayidx, align 8\l  %fneg = fneg double %2\l  %arrayidx1 = getelementptr inbounds [4 x double], ptr %kq, i64 0, i64 0\l  store double %fneg, ptr %arrayidx1, align 16\l  %3 = load ptr, ptr %p.addr, align 8\l  %arrayidx2 = getelementptr inbounds double, ptr %3, i64 1\l  %4 = load double, ptr %arrayidx2, align 8\l  %fneg3 = fneg double %4\l  %arrayidx4 = getelementptr inbounds [4 x double], ptr %kp, i64 0, i64 0\l  store double %fneg3, ptr %arrayidx4, align 16\l  %5 = load ptr, ptr %q.addr, align 8\l  %arrayidx5 = getelementptr inbounds double, ptr %5, i64 0\l  %6 = load double, ptr %arrayidx5, align 8\l  %arrayidx6 = getelementptr inbounds [4 x double], ptr %kq, i64 0, i64 1\l  store double %6, ptr %arrayidx6, align 8\l  %7 = load ptr, ptr %p.addr, align 8\l  %arrayidx7 = getelementptr inbounds double, ptr %7, i64 0\l  %8 = load double, ptr %arrayidx7, align 8\l  %arrayidx8 = getelementptr inbounds [4 x double], ptr %kp, i64 0, i64 1\l  store double %8, ptr %arrayidx8, align 8\l  %9 = load ptr, ptr %q.addr, align 8\l  %arrayidx9 = getelementptr inbounds double, ptr %9, i64 3\l  %10 = load double, ptr %arrayidx9, align 8\l  %arrayidx10 = getelementptr inbounds [4 x double], ptr %kq, i64 0, i64 2\l  store double %10, ptr %arrayidx10, align 16\l  %11 = load ptr, ptr %p.addr, align 8\l  %arrayidx11 = getelementptr inbounds double, ptr %11, i64 3\l  %12 = load double, ptr %arrayidx11, align 8\l  %arrayidx12 = getelementptr inbounds [4 x double], ptr %kp, i64 0, i64 2\l  store double %12, ptr %arrayidx12, align 16\l  %13 = load ptr, ptr %q.addr, align 8\l  %arrayidx13 = getelementptr inbounds double, ptr %13, i64 2\l  %14 = load double, ptr %arrayidx13, align 8\l  %fneg14 = fneg double %14\l  %arrayidx15 = getelementptr inbounds [4 x double], ptr %kq, i64 0, i64 3\l  store double %fneg14, ptr %arrayidx15, align 8\l  %15 = load ptr, ptr %p.addr, align 8\l  %arrayidx16 = getelementptr inbounds double, ptr %15, i64 2\l  %16 = load double, ptr %arrayidx16, align 8\l  %fneg17 = fneg double %16\l  %arrayidx18 = getelementptr inbounds [4 x double], ptr %kp, i64 0, i64 3\l  store double %fneg17, ptr %arrayidx18, align 8\l  br label %if.end65\l}"];
	Node0x5583735d1c20 -> Node0x5583735d3c70[tooltip="if.then -> if.end65\nProbability 100.00%" ];
	Node0x5583735d1c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.else:\l|  %17 = load i32, ptr %k.addr, align 4\l  %cmp19 = icmp eq i32 %17, 2\l  br i1 %cmp19, label %if.then20, label %if.else41\l|{<s0>T|<s1>F}}"];
	Node0x5583735d1c90:s0 -> Node0x5583735d3e90[tooltip="if.else -> if.then20\nProbability 50.00%" ];
	Node0x5583735d1c90:s1 -> Node0x5583735d3f10[tooltip="if.else -> if.else41\nProbability 50.00%" ];
	Node0x5583735d3e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.then20:\l|  %18 = load ptr, ptr %q.addr, align 8\l  %arrayidx21 = getelementptr inbounds double, ptr %18, i64 2\l  %19 = load double, ptr %arrayidx21, align 8\l  %fneg22 = fneg double %19\l  %arrayidx23 = getelementptr inbounds [4 x double], ptr %kq, i64 0, i64 0\l  store double %fneg22, ptr %arrayidx23, align 16\l  %20 = load ptr, ptr %p.addr, align 8\l  %arrayidx24 = getelementptr inbounds double, ptr %20, i64 2\l  %21 = load double, ptr %arrayidx24, align 8\l  %fneg25 = fneg double %21\l  %arrayidx26 = getelementptr inbounds [4 x double], ptr %kp, i64 0, i64 0\l  store double %fneg25, ptr %arrayidx26, align 16\l  %22 = load ptr, ptr %q.addr, align 8\l  %arrayidx27 = getelementptr inbounds double, ptr %22, i64 3\l  %23 = load double, ptr %arrayidx27, align 8\l  %fneg28 = fneg double %23\l  %arrayidx29 = getelementptr inbounds [4 x double], ptr %kq, i64 0, i64 1\l  store double %fneg28, ptr %arrayidx29, align 8\l  %24 = load ptr, ptr %p.addr, align 8\l  %arrayidx30 = getelementptr inbounds double, ptr %24, i64 3\l  %25 = load double, ptr %arrayidx30, align 8\l  %fneg31 = fneg double %25\l  %arrayidx32 = getelementptr inbounds [4 x double], ptr %kp, i64 0, i64 1\l  store double %fneg31, ptr %arrayidx32, align 8\l  %26 = load ptr, ptr %q.addr, align 8\l  %arrayidx33 = getelementptr inbounds double, ptr %26, i64 0\l  %27 = load double, ptr %arrayidx33, align 8\l  %arrayidx34 = getelementptr inbounds [4 x double], ptr %kq, i64 0, i64 2\l  store double %27, ptr %arrayidx34, align 16\l  %28 = load ptr, ptr %p.addr, align 8\l  %arrayidx35 = getelementptr inbounds double, ptr %28, i64 0\l  %29 = load double, ptr %arrayidx35, align 8\l  %arrayidx36 = getelementptr inbounds [4 x double], ptr %kp, i64 0, i64 2\l  store double %29, ptr %arrayidx36, align 16\l  %30 = load ptr, ptr %q.addr, align 8\l  %arrayidx37 = getelementptr inbounds double, ptr %30, i64 1\l  %31 = load double, ptr %arrayidx37, align 8\l  %arrayidx38 = getelementptr inbounds [4 x double], ptr %kq, i64 0, i64 3\l  store double %31, ptr %arrayidx38, align 8\l  %32 = load ptr, ptr %p.addr, align 8\l  %arrayidx39 = getelementptr inbounds double, ptr %32, i64 1\l  %33 = load double, ptr %arrayidx39, align 8\l  %arrayidx40 = getelementptr inbounds [4 x double], ptr %kp, i64 0, i64 3\l  store double %33, ptr %arrayidx40, align 8\l  br label %if.end64\l}"];
	Node0x5583735d3e90 -> Node0x5583735d63a0[tooltip="if.then20 -> if.end64\nProbability 100.00%" ];
	Node0x5583735d3f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.else41:\l|  %34 = load i32, ptr %k.addr, align 4\l  %cmp42 = icmp eq i32 %34, 3\l  br i1 %cmp42, label %if.then43, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5583735d3f10:s0 -> Node0x5583735d65c0[tooltip="if.else41 -> if.then43\nProbability 50.00%" ];
	Node0x5583735d3f10:s1 -> Node0x5583735d6640[tooltip="if.else41 -> if.end\nProbability 50.00%" ];
	Node0x5583735d65c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{if.then43:\l|  %35 = load ptr, ptr %q.addr, align 8\l  %arrayidx44 = getelementptr inbounds double, ptr %35, i64 3\l  %36 = load double, ptr %arrayidx44, align 8\l  %fneg45 = fneg double %36\l  %arrayidx46 = getelementptr inbounds [4 x double], ptr %kq, i64 0, i64 0\l  store double %fneg45, ptr %arrayidx46, align 16\l  %37 = load ptr, ptr %p.addr, align 8\l  %arrayidx47 = getelementptr inbounds double, ptr %37, i64 3\l  %38 = load double, ptr %arrayidx47, align 8\l  %fneg48 = fneg double %38\l  %arrayidx49 = getelementptr inbounds [4 x double], ptr %kp, i64 0, i64 0\l  store double %fneg48, ptr %arrayidx49, align 16\l  %39 = load ptr, ptr %q.addr, align 8\l  %arrayidx50 = getelementptr inbounds double, ptr %39, i64 2\l  %40 = load double, ptr %arrayidx50, align 8\l  %arrayidx51 = getelementptr inbounds [4 x double], ptr %kq, i64 0, i64 1\l  store double %40, ptr %arrayidx51, align 8\l  %41 = load ptr, ptr %p.addr, align 8\l  %arrayidx52 = getelementptr inbounds double, ptr %41, i64 2\l  %42 = load double, ptr %arrayidx52, align 8\l  %arrayidx53 = getelementptr inbounds [4 x double], ptr %kp, i64 0, i64 1\l  store double %42, ptr %arrayidx53, align 8\l  %43 = load ptr, ptr %q.addr, align 8\l  %arrayidx54 = getelementptr inbounds double, ptr %43, i64 1\l  %44 = load double, ptr %arrayidx54, align 8\l  %fneg55 = fneg double %44\l  %arrayidx56 = getelementptr inbounds [4 x double], ptr %kq, i64 0, i64 2\l  store double %fneg55, ptr %arrayidx56, align 16\l  %45 = load ptr, ptr %p.addr, align 8\l  %arrayidx57 = getelementptr inbounds double, ptr %45, i64 1\l  %46 = load double, ptr %arrayidx57, align 8\l  %fneg58 = fneg double %46\l  %arrayidx59 = getelementptr inbounds [4 x double], ptr %kp, i64 0, i64 2\l  store double %fneg58, ptr %arrayidx59, align 16\l  %47 = load ptr, ptr %q.addr, align 8\l  %arrayidx60 = getelementptr inbounds double, ptr %47, i64 0\l  %48 = load double, ptr %arrayidx60, align 8\l  %arrayidx61 = getelementptr inbounds [4 x double], ptr %kq, i64 0, i64 3\l  store double %48, ptr %arrayidx61, align 8\l  %49 = load ptr, ptr %p.addr, align 8\l  %arrayidx62 = getelementptr inbounds double, ptr %49, i64 0\l  %50 = load double, ptr %arrayidx62, align 8\l  %arrayidx63 = getelementptr inbounds [4 x double], ptr %kp, i64 0, i64 3\l  store double %50, ptr %arrayidx63, align 8\l  br label %if.end\l}"];
	Node0x5583735d65c0 -> Node0x5583735d6640[tooltip="if.then43 -> if.end\nProbability 100.00%" ];
	Node0x5583735d6640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.end:\l|  br label %if.end64\l}"];
	Node0x5583735d6640 -> Node0x5583735d63a0[tooltip="if.end -> if.end64\nProbability 100.00%" ];
	Node0x5583735d63a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end64:\l|  br label %if.end65\l}"];
	Node0x5583735d63a0 -> Node0x5583735d3c70[tooltip="if.end64 -> if.end65\nProbability 100.00%" ];
	Node0x5583735d3c70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end65:\l|  %51 = load ptr, ptr %p.addr, align 8\l  %arrayidx66 = getelementptr inbounds double, ptr %51, i64 0\l  %52 = load double, ptr %arrayidx66, align 8\l  %arrayidx67 = getelementptr inbounds [4 x double], ptr %kq, i64 0, i64 0\l  %53 = load double, ptr %arrayidx67, align 16\l  %54 = load ptr, ptr %p.addr, align 8\l  %arrayidx68 = getelementptr inbounds double, ptr %54, i64 1\l  %55 = load double, ptr %arrayidx68, align 8\l  %arrayidx69 = getelementptr inbounds [4 x double], ptr %kq, i64 0, i64 1\l  %56 = load double, ptr %arrayidx69, align 8\l  %mul70 = fmul double %55, %56\l  %57 = call double @llvm.fmuladd.f64(double %52, double %53, double %mul70)\l  %58 = load ptr, ptr %p.addr, align 8\l  %arrayidx71 = getelementptr inbounds double, ptr %58, i64 2\l  %59 = load double, ptr %arrayidx71, align 8\l  %arrayidx72 = getelementptr inbounds [4 x double], ptr %kq, i64 0, i64 2\l  %60 = load double, ptr %arrayidx72, align 16\l  %61 = call double @llvm.fmuladd.f64(double %59, double %60, double %57)\l  %62 = load ptr, ptr %p.addr, align 8\l  %arrayidx73 = getelementptr inbounds double, ptr %62, i64 3\l  %63 = load double, ptr %arrayidx73, align 8\l  %arrayidx74 = getelementptr inbounds [4 x double], ptr %kq, i64 0, i64 3\l  %64 = load double, ptr %arrayidx74, align 8\l  %65 = call double @llvm.fmuladd.f64(double %63, double %64, double %61)\l  store double %65, ptr %phi, align 8\l  %66 = load ptr, ptr %inertia.addr, align 8\l  %67 = load i32, ptr %k.addr, align 4\l  %sub = sub nsw i32 %67, 1\l  %idxprom = sext i32 %sub to i64\l  %arrayidx75 = getelementptr inbounds double, ptr %66, i64 %idxprom\l  %68 = load double, ptr %arrayidx75, align 8\l  %cmp76 = fcmp oeq double %68, 0.000000e+00\l  br i1 %cmp76, label %if.then77, label %if.else78\l|{<s0>T|<s1>F}}"];
	Node0x5583735d3c70:s0 -> Node0x5583735d49c0[tooltip="if.end65 -> if.then77\nProbability 62.50%" ];
	Node0x5583735d3c70:s1 -> Node0x5583735d4a10[tooltip="if.end65 -> if.else78\nProbability 37.50%" ];
	Node0x5583735d49c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.then77:\l|  store double 0.000000e+00, ptr %phi, align 8\l  br label %if.end82\l}"];
	Node0x5583735d49c0 -> Node0x5583735d4be0[tooltip="if.then77 -> if.end82\nProbability 100.00%" ];
	Node0x5583735d4a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.else78:\l|  %69 = load ptr, ptr %inertia.addr, align 8\l  %70 = load i32, ptr %k.addr, align 4\l  %sub79 = sub nsw i32 %70, 1\l  %idxprom80 = sext i32 %sub79 to i64\l  %arrayidx81 = getelementptr inbounds double, ptr %69, i64 %idxprom80\l  %71 = load double, ptr %arrayidx81, align 8\l  %mul = fmul double 4.000000e+00, %71\l  %72 = load double, ptr %phi, align 8\l  %div = fdiv double %72, %mul\l  store double %div, ptr %phi, align 8\l  br label %if.end82\l}"];
	Node0x5583735d4a10 -> Node0x5583735d4be0[tooltip="if.else78 -> if.end82\nProbability 100.00%" ];
	Node0x5583735d4be0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end82:\l|  %73 = load double, ptr %dt.addr, align 8\l  %74 = load double, ptr %phi, align 8\l  %mul83 = fmul double %73, %74\l  %call = call double @cos(double noundef %mul83) #6\l  store double %call, ptr %c_phi, align 8\l  %75 = load double, ptr %dt.addr, align 8\l  %76 = load double, ptr %phi, align 8\l  %mul84 = fmul double %75, %76\l  %call85 = call double @sin(double noundef %mul84) #6\l  store double %call85, ptr %s_phi, align 8\l  %77 = load double, ptr %c_phi, align 8\l  %78 = load ptr, ptr %p.addr, align 8\l  %arrayidx86 = getelementptr inbounds double, ptr %78, i64 0\l  %79 = load double, ptr %arrayidx86, align 8\l  %80 = load double, ptr %s_phi, align 8\l  %arrayidx88 = getelementptr inbounds [4 x double], ptr %kp, i64 0, i64 0\l  %81 = load double, ptr %arrayidx88, align 16\l  %mul89 = fmul double %80, %81\l  %82 = call double @llvm.fmuladd.f64(double %77, double %79, double %mul89)\l  %83 = load ptr, ptr %p.addr, align 8\l  %arrayidx90 = getelementptr inbounds double, ptr %83, i64 0\l  store double %82, ptr %arrayidx90, align 8\l  %84 = load double, ptr %c_phi, align 8\l  %85 = load ptr, ptr %p.addr, align 8\l  %arrayidx91 = getelementptr inbounds double, ptr %85, i64 1\l  %86 = load double, ptr %arrayidx91, align 8\l  %87 = load double, ptr %s_phi, align 8\l  %arrayidx93 = getelementptr inbounds [4 x double], ptr %kp, i64 0, i64 1\l  %88 = load double, ptr %arrayidx93, align 8\l  %mul94 = fmul double %87, %88\l  %89 = call double @llvm.fmuladd.f64(double %84, double %86, double %mul94)\l  %90 = load ptr, ptr %p.addr, align 8\l  %arrayidx95 = getelementptr inbounds double, ptr %90, i64 1\l  store double %89, ptr %arrayidx95, align 8\l  %91 = load double, ptr %c_phi, align 8\l  %92 = load ptr, ptr %p.addr, align 8\l  %arrayidx96 = getelementptr inbounds double, ptr %92, i64 2\l  %93 = load double, ptr %arrayidx96, align 8\l  %94 = load double, ptr %s_phi, align 8\l  %arrayidx98 = getelementptr inbounds [4 x double], ptr %kp, i64 0, i64 2\l  %95 = load double, ptr %arrayidx98, align 16\l  %mul99 = fmul double %94, %95\l  %96 = call double @llvm.fmuladd.f64(double %91, double %93, double %mul99)\l  %97 = load ptr, ptr %p.addr, align 8\l  %arrayidx100 = getelementptr inbounds double, ptr %97, i64 2\l  store double %96, ptr %arrayidx100, align 8\l  %98 = load double, ptr %c_phi, align 8\l  %99 = load ptr, ptr %p.addr, align 8\l  %arrayidx101 = getelementptr inbounds double, ptr %99, i64 3\l  %100 = load double, ptr %arrayidx101, align 8\l  %101 = load double, ptr %s_phi, align 8\l  %arrayidx103 = getelementptr inbounds [4 x double], ptr %kp, i64 0, i64 3\l  %102 = load double, ptr %arrayidx103, align 8\l  %mul104 = fmul double %101, %102\l  %103 = call double @llvm.fmuladd.f64(double %98, double %100, double %mul104)\l  %104 = load ptr, ptr %p.addr, align 8\l  %arrayidx105 = getelementptr inbounds double, ptr %104, i64 3\l  store double %103, ptr %arrayidx105, align 8\l  %105 = load double, ptr %c_phi, align 8\l  %106 = load ptr, ptr %q.addr, align 8\l  %arrayidx106 = getelementptr inbounds double, ptr %106, i64 0\l  %107 = load double, ptr %arrayidx106, align 8\l  %108 = load double, ptr %s_phi, align 8\l  %arrayidx108 = getelementptr inbounds [4 x double], ptr %kq, i64 0, i64 0\l  %109 = load double, ptr %arrayidx108, align 16\l  %mul109 = fmul double %108, %109\l  %110 = call double @llvm.fmuladd.f64(double %105, double %107, double\l... %mul109)\l  %111 = load ptr, ptr %q.addr, align 8\l  %arrayidx110 = getelementptr inbounds double, ptr %111, i64 0\l  store double %110, ptr %arrayidx110, align 8\l  %112 = load double, ptr %c_phi, align 8\l  %113 = load ptr, ptr %q.addr, align 8\l  %arrayidx111 = getelementptr inbounds double, ptr %113, i64 1\l  %114 = load double, ptr %arrayidx111, align 8\l  %115 = load double, ptr %s_phi, align 8\l  %arrayidx113 = getelementptr inbounds [4 x double], ptr %kq, i64 0, i64 1\l  %116 = load double, ptr %arrayidx113, align 8\l  %mul114 = fmul double %115, %116\l  %117 = call double @llvm.fmuladd.f64(double %112, double %114, double\l... %mul114)\l  %118 = load ptr, ptr %q.addr, align 8\l  %arrayidx115 = getelementptr inbounds double, ptr %118, i64 1\l  store double %117, ptr %arrayidx115, align 8\l  %119 = load double, ptr %c_phi, align 8\l  %120 = load ptr, ptr %q.addr, align 8\l  %arrayidx116 = getelementptr inbounds double, ptr %120, i64 2\l  %121 = load double, ptr %arrayidx116, align 8\l  %122 = load double, ptr %s_phi, align 8\l  %arrayidx118 = getelementptr inbounds [4 x double], ptr %kq, i64 0, i64 2\l  %123 = load double, ptr %arrayidx118, align 16\l  %mul119 = fmul double %122, %123\l  %124 = call double @llvm.fmuladd.f64(double %119, double %121, double\l... %mul119)\l  %125 = load ptr, ptr %q.addr, align 8\l  %arrayidx120 = getelementptr inbounds double, ptr %125, i64 2\l  store double %124, ptr %arrayidx120, align 8\l  %126 = load double, ptr %c_phi, align 8\l  %127 = load ptr, ptr %q.addr, align 8\l  %arrayidx121 = getelementptr inbounds double, ptr %127, i64 3\l  %128 = load double, ptr %arrayidx121, align 8\l  %129 = load double, ptr %s_phi, align 8\l  %arrayidx123 = getelementptr inbounds [4 x double], ptr %kq, i64 0, i64 3\l  %130 = load double, ptr %arrayidx123, align 8\l  %mul124 = fmul double %129, %130\l  %131 = call double @llvm.fmuladd.f64(double %126, double %128, double\l... %mul124)\l  %132 = load ptr, ptr %q.addr, align 8\l  %arrayidx125 = getelementptr inbounds double, ptr %132, i64 3\l  store double %131, ptr %arrayidx125, align 8\l  ret void\l}"];
}
