digraph "CFG for '_ZN9LAMMPS_NS5Group6torqueEiPdS1_' function" {
	label="CFG for '_ZN9LAMMPS_NS5Group6torqueEiPdS1_' function";

	Node0x55ba3047d930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %igroup.addr = alloca i32, align 4\l  %cm.addr = alloca ptr, align 8\l  %tq.addr = alloca ptr, align 8\l  %groupbit = alloca i32, align 4\l  %x = alloca ptr, align 8\l  %f = alloca ptr, align 8\l  %mask = alloca ptr, align 8\l  %image = alloca ptr, align 8\l  %nlocal = alloca i32, align 4\l  %dx = alloca double, align 8\l  %dy = alloca double, align 8\l  %dz = alloca double, align 8\l  %unwrap = alloca [3 x double], align 16\l  %tlocal = alloca [3 x double], align 16\l  %i = alloca i32, align 4\l  store ptr %this, ptr %this.addr, align 8\l  store i32 %igroup, ptr %igroup.addr, align 4\l  store ptr %cm, ptr %cm.addr, align 8\l  store ptr %tq, ptr %tq.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %bitmask = getelementptr inbounds %\"class.LAMMPS_NS::Group\", ptr %this1, i32\l... 0, i32 4\l  %0 = load ptr, ptr %bitmask, align 8\l  %1 = load i32, ptr %igroup.addr, align 4\l  %idxprom = sext i32 %1 to i64\l  %arrayidx = getelementptr inbounds i32, ptr %0, i64 %idxprom\l  %2 = load i32, ptr %arrayidx, align 4\l  store i32 %2, ptr %groupbit, align 4\l  %atom = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1, i32\l... 0, i32 6\l  %3 = load ptr, ptr %atom, align 8\l  %4 = load ptr, ptr %3, align 8\l  %x2 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %4, i32 0, i32 37\l  %5 = load ptr, ptr %x2, align 8\l  store ptr %5, ptr %x, align 8\l  %atom3 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %6 = load ptr, ptr %atom3, align 8\l  %7 = load ptr, ptr %6, align 8\l  %f4 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %7, i32 0, i32 39\l  %8 = load ptr, ptr %f4, align 8\l  store ptr %8, ptr %f, align 8\l  %atom5 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %9 = load ptr, ptr %atom5, align 8\l  %10 = load ptr, ptr %9, align 8\l  %mask6 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %10, i32 0,\l... i32 35\l  %11 = load ptr, ptr %mask6, align 8\l  store ptr %11, ptr %mask, align 8\l  %atom7 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %12 = load ptr, ptr %atom7, align 8\l  %13 = load ptr, ptr %12, align 8\l  %image8 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %13, i32 0,\l... i32 36\l  %14 = load ptr, ptr %image8, align 8\l  store ptr %14, ptr %image, align 8\l  %atom9 = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 6\l  %15 = load ptr, ptr %atom9, align 8\l  %16 = load ptr, ptr %15, align 8\l  %nlocal10 = getelementptr inbounds %\"class.LAMMPS_NS::Atom\", ptr %16, i32 0,\l... i32 4\l  %17 = load i32, ptr %nlocal10, align 8\l  store i32 %17, ptr %nlocal, align 4\l  %arrayidx11 = getelementptr inbounds [3 x double], ptr %tlocal, i64 0, i64 2\l  store double 0.000000e+00, ptr %arrayidx11, align 16\l  %arrayidx12 = getelementptr inbounds [3 x double], ptr %tlocal, i64 0, i64 1\l  store double 0.000000e+00, ptr %arrayidx12, align 8\l  %arrayidx13 = getelementptr inbounds [3 x double], ptr %tlocal, i64 0, i64 0\l  store double 0.000000e+00, ptr %arrayidx13, align 16\l  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x55ba3047d930 -> Node0x55ba30482150[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x55ba30482150 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %18 = load i32, ptr %i, align 4\l  %19 = load i32, ptr %nlocal, align 4\l  %cmp = icmp slt i32 %18, %19\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x55ba30482150:s0 -> Node0x55ba304823f0[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x55ba30482150:s1 -> Node0x55ba30482470[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x55ba304823f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %20 = load ptr, ptr %mask, align 8\l  %21 = load i32, ptr %i, align 4\l  %idxprom14 = sext i32 %21 to i64\l  %arrayidx15 = getelementptr inbounds i32, ptr %20, i64 %idxprom14\l  %22 = load i32, ptr %arrayidx15, align 4\l  %23 = load i32, ptr %groupbit, align 4\l  %and = and i32 %22, %23\l  %tobool = icmp ne i32 %and, 0\l  br i1 %tobool, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x55ba304823f0:s0 -> Node0x55ba30482a60[tooltip="for.body -> if.then\nProbability 62.50%" ];
	Node0x55ba304823f0:s1 -> Node0x55ba30482ad0[tooltip="for.body -> if.end\nProbability 37.50%" ];
	Node0x55ba30482a60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.then:\l|  %domain = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 10\l  %24 = load ptr, ptr %domain, align 8\l  %25 = load ptr, ptr %24, align 8\l  %26 = load ptr, ptr %x, align 8\l  %27 = load i32, ptr %i, align 4\l  %idxprom16 = sext i32 %27 to i64\l  %arrayidx17 = getelementptr inbounds ptr, ptr %26, i64 %idxprom16\l  %28 = load ptr, ptr %arrayidx17, align 8\l  %29 = load ptr, ptr %image, align 8\l  %30 = load i32, ptr %i, align 4\l  %idxprom18 = sext i32 %30 to i64\l  %arrayidx19 = getelementptr inbounds i32, ptr %29, i64 %idxprom18\l  %31 = load i32, ptr %arrayidx19, align 4\l  %arraydecay = getelementptr inbounds [3 x double], ptr %unwrap, i64 0, i64 0\l  call void @_ZN9LAMMPS_NS6Domain5unmapEPKdiPd(ptr noundef nonnull align 8\l... dereferenceable(1200) %25, ptr noundef %28, i32 noundef %31, ptr noundef\l... %arraydecay)\l  %arrayidx20 = getelementptr inbounds [3 x double], ptr %unwrap, i64 0, i64 0\l  %32 = load double, ptr %arrayidx20, align 16\l  %33 = load ptr, ptr %cm.addr, align 8\l  %arrayidx21 = getelementptr inbounds double, ptr %33, i64 0\l  %34 = load double, ptr %arrayidx21, align 8\l  %sub = fsub double %32, %34\l  store double %sub, ptr %dx, align 8\l  %arrayidx22 = getelementptr inbounds [3 x double], ptr %unwrap, i64 0, i64 1\l  %35 = load double, ptr %arrayidx22, align 8\l  %36 = load ptr, ptr %cm.addr, align 8\l  %arrayidx23 = getelementptr inbounds double, ptr %36, i64 1\l  %37 = load double, ptr %arrayidx23, align 8\l  %sub24 = fsub double %35, %37\l  store double %sub24, ptr %dy, align 8\l  %arrayidx25 = getelementptr inbounds [3 x double], ptr %unwrap, i64 0, i64 2\l  %38 = load double, ptr %arrayidx25, align 16\l  %39 = load ptr, ptr %cm.addr, align 8\l  %arrayidx26 = getelementptr inbounds double, ptr %39, i64 2\l  %40 = load double, ptr %arrayidx26, align 8\l  %sub27 = fsub double %38, %40\l  store double %sub27, ptr %dz, align 8\l  %41 = load double, ptr %dy, align 8\l  %42 = load ptr, ptr %f, align 8\l  %43 = load i32, ptr %i, align 4\l  %idxprom28 = sext i32 %43 to i64\l  %arrayidx29 = getelementptr inbounds ptr, ptr %42, i64 %idxprom28\l  %44 = load ptr, ptr %arrayidx29, align 8\l  %arrayidx30 = getelementptr inbounds double, ptr %44, i64 2\l  %45 = load double, ptr %arrayidx30, align 8\l  %46 = load double, ptr %dz, align 8\l  %47 = load ptr, ptr %f, align 8\l  %48 = load i32, ptr %i, align 4\l  %idxprom31 = sext i32 %48 to i64\l  %arrayidx32 = getelementptr inbounds ptr, ptr %47, i64 %idxprom31\l  %49 = load ptr, ptr %arrayidx32, align 8\l  %arrayidx33 = getelementptr inbounds double, ptr %49, i64 1\l  %50 = load double, ptr %arrayidx33, align 8\l  %mul34 = fmul double %46, %50\l  %neg = fneg double %mul34\l  %51 = call double @llvm.fmuladd.f64(double %41, double %45, double %neg)\l  %arrayidx35 = getelementptr inbounds [3 x double], ptr %tlocal, i64 0, i64 0\l  %52 = load double, ptr %arrayidx35, align 16\l  %add = fadd double %52, %51\l  store double %add, ptr %arrayidx35, align 16\l  %53 = load double, ptr %dz, align 8\l  %54 = load ptr, ptr %f, align 8\l  %55 = load i32, ptr %i, align 4\l  %idxprom36 = sext i32 %55 to i64\l  %arrayidx37 = getelementptr inbounds ptr, ptr %54, i64 %idxprom36\l  %56 = load ptr, ptr %arrayidx37, align 8\l  %arrayidx38 = getelementptr inbounds double, ptr %56, i64 0\l  %57 = load double, ptr %arrayidx38, align 8\l  %58 = load double, ptr %dx, align 8\l  %59 = load ptr, ptr %f, align 8\l  %60 = load i32, ptr %i, align 4\l  %idxprom39 = sext i32 %60 to i64\l  %arrayidx40 = getelementptr inbounds ptr, ptr %59, i64 %idxprom39\l  %61 = load ptr, ptr %arrayidx40, align 8\l  %arrayidx41 = getelementptr inbounds double, ptr %61, i64 2\l  %62 = load double, ptr %arrayidx41, align 8\l  %mul42 = fmul double %58, %62\l  %neg43 = fneg double %mul42\l  %63 = call double @llvm.fmuladd.f64(double %53, double %57, double %neg43)\l  %arrayidx44 = getelementptr inbounds [3 x double], ptr %tlocal, i64 0, i64 1\l  %64 = load double, ptr %arrayidx44, align 8\l  %add45 = fadd double %64, %63\l  store double %add45, ptr %arrayidx44, align 8\l  %65 = load double, ptr %dx, align 8\l  %66 = load ptr, ptr %f, align 8\l  %67 = load i32, ptr %i, align 4\l  %idxprom46 = sext i32 %67 to i64\l  %arrayidx47 = getelementptr inbounds ptr, ptr %66, i64 %idxprom46\l  %68 = load ptr, ptr %arrayidx47, align 8\l  %arrayidx48 = getelementptr inbounds double, ptr %68, i64 1\l  %69 = load double, ptr %arrayidx48, align 8\l  %70 = load double, ptr %dy, align 8\l  %71 = load ptr, ptr %f, align 8\l  %72 = load i32, ptr %i, align 4\l  %idxprom49 = sext i32 %72 to i64\l  %arrayidx50 = getelementptr inbounds ptr, ptr %71, i64 %idxprom49\l  %73 = load ptr, ptr %arrayidx50, align 8\l  %arrayidx51 = getelementptr inbounds double, ptr %73, i64 0\l  %74 = load double, ptr %arrayidx51, align 8\l  %mul52 = fmul double %70, %74\l  %neg53 = fneg double %mul52\l  %75 = call double @llvm.fmuladd.f64(double %65, double %69, double %neg53)\l  %arrayidx54 = getelementptr inbounds [3 x double], ptr %tlocal, i64 0, i64 2\l  %76 = load double, ptr %arrayidx54, align 16\l  %add55 = fadd double %76, %75\l  store double %add55, ptr %arrayidx54, align 16\l  br label %if.end\l}"];
	Node0x55ba30482a60 -> Node0x55ba30482ad0[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x55ba30482ad0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end:\l|  br label %for.inc\l}"];
	Node0x55ba30482ad0 -> Node0x55ba30487aa0[tooltip="if.end -> for.inc\nProbability 100.00%" ];
	Node0x55ba30487aa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %77 = load i32, ptr %i, align 4\l  %inc = add nsw i32 %77, 1\l  store i32 %inc, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x55ba30487aa0 -> Node0x55ba30482150[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x55ba30482470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  %arraydecay56 = getelementptr inbounds [3 x double], ptr %tlocal, i64 0,\l... i64 0\l  %78 = load ptr, ptr %tq.addr, align 8\l  %world = getelementptr inbounds %\"class.LAMMPS_NS::Pointers\", ptr %this1,\l... i32 0, i32 16\l  %79 = load ptr, ptr %world, align 8\l  %80 = load ptr, ptr %79, align 8\l  %call = call i32 @MPI_Allreduce(ptr noundef %arraydecay56, ptr noundef %78,\l... i32 noundef 3, ptr noundef @ompi_mpi_double, ptr noundef @ompi_mpi_op_sum,\l... ptr noundef %80)\l  ret void\l}"];
}
