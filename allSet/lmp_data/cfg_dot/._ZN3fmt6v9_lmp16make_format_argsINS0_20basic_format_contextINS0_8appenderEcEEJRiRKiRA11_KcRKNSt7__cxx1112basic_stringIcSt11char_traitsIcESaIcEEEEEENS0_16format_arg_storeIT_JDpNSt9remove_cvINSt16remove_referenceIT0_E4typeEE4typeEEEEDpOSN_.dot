digraph "CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRiRKiRA11_KcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSN_' function" {
	label="CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRiRKiRA11_KcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSN_' function";

	Node0x55f5734389c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %val.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i67 = alloca ptr, align 8\l  %retval.i62 = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i63 = alloca ptr, align 8\l  %val.addr.i64 = alloca ptr, align 8\l  %retval.i53 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i54 = alloca ptr, align 8\l  %arg.i55 = alloca ptr, align 8\l  %ref.tmp.i56 = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %ref.tmp1.i57 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i58 = alloca i8, align 1\l  %formattable_const.i59 = alloca i8, align 1\l  %formattable_pointer.i60 = alloca i8, align 1\l  %formattable.i61 = alloca i8, align 1\l  %agg.tmp.i = alloca %\"class.fmt::v9_lmp::basic_string_view\", align 8\l  %this.addr.i50 = alloca ptr, align 8\l  %val.addr.i51 = alloca ptr, align 8\l  %this.addr.i.i38 = alloca ptr, align 8\l  %val.addr.i.i39 = alloca ptr, align 8\l  %retval.i40 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i41 = alloca ptr, align 8\l  %arg.i42 = alloca ptr, align 8\l  %ref.tmp.i43 = alloca ptr, align 8\l  %ref.tmp1.i44 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i45 = alloca i8, align 1\l  %formattable_const.i46 = alloca i8, align 1\l  %formattable_pointer.i47 = alloca i8, align 1\l  %formattable.i48 = alloca i8, align 1\l  %this.addr.i3.i = alloca ptr, align 8\l  %val.addr.i4.i = alloca i32, align 4\l  %this.addr.i.i = alloca ptr, align 8\l  %val.addr.i.i = alloca i32, align 4\l  %retval.i29 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i30 = alloca ptr, align 8\l  %arg.i31 = alloca ptr, align 8\l  %ref.tmp.i32 = alloca i32, align 4\l  %ref.tmp1.i33 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i34 = alloca i8, align 1\l  %formattable_const.i35 = alloca i8, align 1\l  %formattable_pointer.i36 = alloca i8, align 1\l  %formattable.i37 = alloca i8, align 1\l  %this.addr.i26 = alloca ptr, align 8\l  %val.addr.i27 = alloca i32, align 4\l  %this.addr.i23 = alloca ptr, align 8\l  %val.addr.i24 = alloca i32, align 4\l  %retval.i19 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i20 = alloca ptr, align 8\l  %arg.i = alloca ptr, align 8\l  %ref.tmp.i21 = alloca i32, align 4\l  %ref.tmp1.i = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i = alloca i8, align 1\l  %formattable_const.i = alloca i8, align 1\l  %formattable_pointer.i = alloca i8, align 1\l  %formattable.i = alloca i8, align 1\l  %this.addr.i18 = alloca ptr, align 8\l  %.addr.i = alloca ptr, align 8\l  %.addr1.i = alloca i32, align 4\l  %.addr2.i = alloca i32, align 4\l  %.addr3.i = alloca ptr, align 8\l  %.addr4.i = alloca ptr, align 8\l  %.addr5.i = alloca ptr, align 8\l  %.addr6.i = alloca ptr, align 8\l  %this.addr.i16 = alloca ptr, align 8\l  %init.addr.i = alloca ptr, align 8\l  %init.addr2.i = alloca ptr, align 8\l  %init.addr4.i = alloca ptr, align 8\l  %init.addr6.i = alloca ptr, align 8\l  %retval.i13 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i14 = alloca ptr, align 8\l  %retval.i10 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i11 = alloca ptr, align 8\l  %retval.i8 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i9 = alloca ptr, align 8\l  %retval.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i = alloca ptr, align 8\l  %this.addr.i = alloca ptr, align 8\l  %args.addr.i = alloca ptr, align 8\l  %args.addr2.i = alloca ptr, align 8\l  %args.addr4.i = alloca ptr, align 8\l  %args.addr6.i = alloca ptr, align 8\l  %ref.tmp.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp9.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp13.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp17.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %args.addr = alloca ptr, align 8\l  %args.addr2 = alloca ptr, align 8\l  %args.addr4 = alloca ptr, align 8\l  %args.addr6 = alloca ptr, align 8\l  store ptr %args, ptr %args.addr, align 8\l  store ptr %args1, ptr %args.addr2, align 8\l  store ptr %args3, ptr %args.addr4, align 8\l  store ptr %args5, ptr %args.addr6, align 8\l  %0 = load ptr, ptr %args.addr, align 8\l  %1 = load ptr, ptr %args.addr2, align 8\l  %2 = load ptr, ptr %args.addr4, align 8\l  %3 = load ptr, ptr %args.addr6, align 8\l  store ptr %agg.result, ptr %this.addr.i, align 8\l  store ptr %0, ptr %args.addr.i, align 8\l  store ptr %1, ptr %args.addr2.i, align 8\l  store ptr %2, ptr %args.addr4.i, align 8\l  store ptr %3, ptr %args.addr6.i, align 8\l  %this7.i = load ptr, ptr %this.addr.i, align 8\l  %4 = load ptr, ptr %args.addr.i, align 8\l  store ptr %4, ptr %val.addr.i, align 8\l  %5 = load ptr, ptr %val.addr.i, align 8\l  store ptr %5, ptr %val.addr.i20, align 8\l  %6 = load ptr, ptr %val.addr.i20, align 8\l  %7 = load i32, ptr %6, align 4\l  store ptr %ref.tmp1.i, ptr %this.addr.i23, align 8\l  store i32 %7, ptr %val.addr.i24, align 4\l  %this1.i25 = load ptr, ptr %this.addr.i23, align 8\l  %8 = load i32, ptr %val.addr.i24, align 4\l  store i32 %8, ptr %ref.tmp.i21, align 4\l  store ptr %ref.tmp.i21, ptr %arg.i, align 8\l  store i8 1, ptr %formattable_char.i, align 1\l  store i8 1, ptr %formattable_const.i, align 1\l  store i8 1, ptr %formattable_pointer.i, align 1\l  store i8 1, ptr %formattable.i, align 1\l  %9 = load ptr, ptr %arg.i, align 8\l  %10 = load i32, ptr %9, align 4\l  store ptr %retval.i19, ptr %this.addr.i26, align 8\l  store i32 %10, ptr %val.addr.i27, align 4\l  %this1.i28 = load ptr, ptr %this.addr.i26, align 8\l  %11 = load i32, ptr %val.addr.i27, align 4\l  store i32 %11, ptr %this1.i28, align 16\l  %12 = load \{ i64, i64 \}, ptr %retval.i19, align 16\l  %13 = extractvalue \{ i64, i64 \} %12, 0\l  store i64 %13, ptr %retval.i, align 16\l  %14 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i, i32 0, i32 1\l  %15 = extractvalue \{ i64, i64 \} %12, 1\l  store i64 %15, ptr %14, align 8\l  %16 = load \{ i64, i64 \}, ptr %retval.i, align 16\l  %17 = extractvalue \{ i64, i64 \} %16, 0\l  store i64 %17, ptr %ref.tmp.i, align 16\l  %18 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp.i, i32 0, i32 1\l  %19 = extractvalue \{ i64, i64 \} %16, 1\l  store i64 %19, ptr %18, align 8\l  %20 = load ptr, ptr %args.addr2.i, align 8\l  store ptr %20, ptr %val.addr.i9, align 8\l  %21 = load ptr, ptr %val.addr.i9, align 8\l  store ptr %21, ptr %val.addr.i30, align 8\l  %22 = load ptr, ptr %val.addr.i30, align 8\l  %23 = load i32, ptr %22, align 4\l  store ptr %ref.tmp1.i33, ptr %this.addr.i.i, align 8\l  store i32 %23, ptr %val.addr.i.i, align 4\l  %this1.i.i = load ptr, ptr %this.addr.i.i, align 8\l  %24 = load i32, ptr %val.addr.i.i, align 4\l  store i32 %24, ptr %ref.tmp.i32, align 4\l  store ptr %ref.tmp.i32, ptr %arg.i31, align 8\l  store i8 1, ptr %formattable_char.i34, align 1\l  store i8 1, ptr %formattable_const.i35, align 1\l  store i8 1, ptr %formattable_pointer.i36, align 1\l  store i8 1, ptr %formattable.i37, align 1\l  %25 = load ptr, ptr %arg.i31, align 8\l  %26 = load i32, ptr %25, align 4\l  store ptr %retval.i29, ptr %this.addr.i3.i, align 8\l  store i32 %26, ptr %val.addr.i4.i, align 4\l  %this1.i5.i = load ptr, ptr %this.addr.i3.i, align 8\l  %27 = load i32, ptr %val.addr.i4.i, align 4\l  store i32 %27, ptr %this1.i5.i, align 16\l  %28 = load \{ i64, i64 \}, ptr %retval.i29, align 16\l  %29 = extractvalue \{ i64, i64 \} %28, 0\l  store i64 %29, ptr %retval.i8, align 16\l  %30 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i8, i32 0, i32 1\l  %31 = extractvalue \{ i64, i64 \} %28, 1\l  store i64 %31, ptr %30, align 8\l  %32 = load \{ i64, i64 \}, ptr %retval.i8, align 16\l  %33 = extractvalue \{ i64, i64 \} %32, 0\l  store i64 %33, ptr %ref.tmp9.i, align 16\l  %34 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp9.i, i32 0, i32 1\l  %35 = extractvalue \{ i64, i64 \} %32, 1\l  store i64 %35, ptr %34, align 8\l  %36 = load ptr, ptr %args.addr4.i, align 8\l  store ptr %36, ptr %val.addr.i11, align 8\l  %37 = load ptr, ptr %val.addr.i11, align 8\l  store ptr %37, ptr %val.addr.i41, align 8\l  %38 = load ptr, ptr %val.addr.i41, align 8\l  store ptr %ref.tmp1.i44, ptr %this.addr.i50, align 8\l  store ptr %38, ptr %val.addr.i51, align 8\l  %this1.i52 = load ptr, ptr %this.addr.i50, align 8\l  %39 = load ptr, ptr %val.addr.i51, align 8\l  store ptr %39, ptr %ref.tmp.i43, align 8\l  store ptr %ref.tmp.i43, ptr %arg.i42, align 8\l  store i8 1, ptr %formattable_char.i45, align 1\l  store i8 1, ptr %formattable_const.i46, align 1\l  store i8 1, ptr %formattable_pointer.i47, align 1\l  store i8 1, ptr %formattable.i48, align 1\l  %40 = load ptr, ptr %arg.i42, align 8\l  %41 = load ptr, ptr %40, align 8\l  store ptr %retval.i40, ptr %this.addr.i.i38, align 8\l  store ptr %41, ptr %val.addr.i.i39, align 8\l  %this1.i.i49 = load ptr, ptr %this.addr.i.i38, align 8\l  %42 = load ptr, ptr %val.addr.i.i39, align 8\l  store ptr %42, ptr %this1.i.i49, align 16\l  %43 = load \{ i64, i64 \}, ptr %retval.i40, align 16\l  %44 = extractvalue \{ i64, i64 \} %43, 0\l  store i64 %44, ptr %retval.i10, align 16\l  %45 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i10, i32 0, i32 1\l  %46 = extractvalue \{ i64, i64 \} %43, 1\l  store i64 %46, ptr %45, align 8\l  %47 = load \{ i64, i64 \}, ptr %retval.i10, align 16\l  %48 = extractvalue \{ i64, i64 \} %47, 0\l  store i64 %48, ptr %ref.tmp13.i, align 16\l  %49 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp13.i, i32 0, i32 1\l  %50 = extractvalue \{ i64, i64 \} %47, 1\l  store i64 %50, ptr %49, align 8\l  %51 = load ptr, ptr %args.addr6.i, align 8\l  store ptr %51, ptr %val.addr.i14, align 8\l  %52 = load ptr, ptr %val.addr.i14, align 8\l  store ptr %52, ptr %val.addr.i54, align 8\l  %53 = load ptr, ptr %val.addr.i54, align 8\l  store ptr %ref.tmp1.i57, ptr %this.addr.i63, align 8\l  store ptr %53, ptr %val.addr.i64, align 8\l  %this1.i65 = load ptr, ptr %this.addr.i63, align 8\l  %54 = load ptr, ptr %val.addr.i64, align 8\l  %call.i66 = call \{ ptr, i64 \}\l... @_ZN3fmt6v9_lmp6detail14to_string_viewIcSt11char_traitsIcESaIcEEENS0_17basic_s\l...tring_viewIT_EERKNSt7__cxx1112basic_stringIS7_T0_T1_EE(ptr noundef nonnull\l... align 8 dereferenceable(32) %54)\l  %55 = extractvalue \{ ptr, i64 \} %call.i66, 0\l  store ptr %55, ptr %retval.i62, align 8\l  %56 = getelementptr inbounds \{ ptr, i64 \}, ptr %retval.i62, i32 0, i32 1\l  %57 = extractvalue \{ ptr, i64 \} %call.i66, 1\l  store i64 %57, ptr %56, align 8\l  %58 = load \{ ptr, i64 \}, ptr %retval.i62, align 8\l  %59 = extractvalue \{ ptr, i64 \} %58, 0\l  store ptr %59, ptr %ref.tmp.i56, align 8\l  %60 = getelementptr inbounds \{ ptr, i64 \}, ptr %ref.tmp.i56, i32 0, i32 1\l  %61 = extractvalue \{ ptr, i64 \} %58, 1\l  store i64 %61, ptr %60, align 8\l  store ptr %ref.tmp.i56, ptr %arg.i55, align 8\l  store i8 1, ptr %formattable_char.i58, align 1\l  store i8 1, ptr %formattable_const.i59, align 1\l  store i8 1, ptr %formattable_pointer.i60, align 1\l  store i8 1, ptr %formattable.i61, align 1\l  %62 = load ptr, ptr %arg.i55, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp.i, ptr align 8 %62,\l... i64 16, i1 false)\l  %63 = load ptr, ptr %agg.tmp.i, align 8\l  %64 = getelementptr inbounds \{ ptr, i64 \}, ptr %agg.tmp.i, i32 0, i32 1\l  %65 = load i64, ptr %64, align 8\l  store ptr %63, ptr %val.i, align 8\l  %66 = getelementptr inbounds \{ ptr, i64 \}, ptr %val.i, i32 0, i32 1\l  store i64 %65, ptr %66, align 8\l  store ptr %retval.i53, ptr %this.addr.i67, align 8\l  %this1.i68 = load ptr, ptr %this.addr.i67, align 8\l  %call.i = call noundef ptr @_ZNK3fmt6v9_lmp17basic_string_viewIcE4dataEv(ptr\l... noundef nonnull align 8 dereferenceable(16) %val.i) #3\l  store ptr %call.i, ptr %this1.i68, align 16\l  %call2.i = call noundef i64\l... @_ZNK3fmt6v9_lmp17basic_string_viewIcE4sizeEv(ptr noundef nonnull align 8\l... dereferenceable(16) %val.i) #3\l  %size.i = getelementptr inbounds\l... %\"struct.fmt::v9_lmp::detail::string_value\", ptr %this1.i68, i32 0, i32 1\l  store i64 %call2.i, ptr %size.i, align 8\l  %67 = load \{ i64, i64 \}, ptr %retval.i53, align 16\l  %68 = extractvalue \{ i64, i64 \} %67, 0\l  store i64 %68, ptr %retval.i13, align 16\l  %69 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i13, i32 0, i32 1\l  %70 = extractvalue \{ i64, i64 \} %67, 1\l  store i64 %70, ptr %69, align 8\l  %71 = load \{ i64, i64 \}, ptr %retval.i13, align 16\l  %72 = extractvalue \{ i64, i64 \} %71, 0\l  store i64 %72, ptr %ref.tmp17.i, align 16\l  %73 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp17.i, i32 0, i32 1\l  %74 = extractvalue \{ i64, i64 \} %71, 1\l  store i64 %74, ptr %73, align 8\l  store ptr %this7.i, ptr %this.addr.i16, align 8\l  store ptr %ref.tmp.i, ptr %init.addr.i, align 8\l  store ptr %ref.tmp9.i, ptr %init.addr2.i, align 8\l  store ptr %ref.tmp13.i, ptr %init.addr4.i, align 8\l  store ptr %ref.tmp17.i, ptr %init.addr6.i, align 8\l  %this7.i17 = load ptr, ptr %this.addr.i16, align 8\l  %75 = load ptr, ptr %init.addr.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %this7.i17, ptr align 16 %75,\l... i64 16, i1 false)\l  %arrayinit.element.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %this7.i17, i64 1\l  %76 = load ptr, ptr %init.addr2.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element.i, ptr\l... align 16 %76, i64 16, i1 false)\l  %arrayinit.element8.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element.i, i64 1\l  %77 = load ptr, ptr %init.addr4.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element8.i, ptr\l... align 16 %77, i64 16, i1 false)\l  %arrayinit.element9.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element8.i, i64 1\l  %78 = load ptr, ptr %init.addr6.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element9.i, ptr\l... align 16 %78, i64 16, i1 false)\l  store ptr %this7.i, ptr %this.addr.i18, align 8\l  %this1.i = load ptr, ptr %this.addr.i18, align 8\l  %79 = load ptr, ptr %args.addr.i, align 8\l  %80 = load ptr, ptr %args.addr2.i, align 8\l  %81 = load ptr, ptr %args.addr4.i, align 8\l  %82 = load ptr, ptr %args.addr6.i, align 8\l  store ptr null, ptr %.addr.i, align 8\l  store i32 0, ptr %.addr1.i, align 4\l  store i32 0, ptr %.addr2.i, align 4\l  store ptr %79, ptr %.addr3.i, align 8\l  store ptr %80, ptr %.addr4.i, align 8\l  store ptr %81, ptr %.addr5.i, align 8\l  store ptr %82, ptr %.addr6.i, align 8\l  ret void\l}"];
}
