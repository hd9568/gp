digraph "CFG for '_ZN9LAMMPS_NS7Lattice11box2latticeERdS1_S1_' function" {
	label="CFG for '_ZN9LAMMPS_NS7Lattice11box2latticeERdS1_S1_' function";

	Node0x5642ff8d8cf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %x.addr = alloca ptr, align 8\l  %y.addr = alloca ptr, align 8\l  %z.addr = alloca ptr, align 8\l  %x1 = alloca double, align 8\l  %y1 = alloca double, align 8\l  %z1 = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store ptr %x, ptr %x.addr, align 8\l  store ptr %y, ptr %y.addr, align 8\l  store ptr %z, ptr %z.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %xlattice = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 2\l  %0 = load double, ptr %xlattice, align 8\l  %origin = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 11\l  %arrayidx = getelementptr inbounds [3 x double], ptr %origin, i64 0, i64 0\l  %1 = load double, ptr %arrayidx, align 8\l  %2 = load ptr, ptr %x.addr, align 8\l  %3 = load double, ptr %2, align 8\l  %neg = fneg double %0\l  %4 = call double @llvm.fmuladd.f64(double %neg, double %1, double %3)\l  store double %4, ptr %2, align 8\l  %ylattice = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 3\l  %5 = load double, ptr %ylattice, align 8\l  %origin2 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 11\l  %arrayidx3 = getelementptr inbounds [3 x double], ptr %origin2, i64 0, i64 1\l  %6 = load double, ptr %arrayidx3, align 8\l  %7 = load ptr, ptr %y.addr, align 8\l  %8 = load double, ptr %7, align 8\l  %neg4 = fneg double %5\l  %9 = call double @llvm.fmuladd.f64(double %neg4, double %6, double %8)\l  store double %9, ptr %7, align 8\l  %zlattice = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 4\l  %10 = load double, ptr %zlattice, align 8\l  %origin5 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 11\l  %arrayidx6 = getelementptr inbounds [3 x double], ptr %origin5, i64 0, i64 2\l  %11 = load double, ptr %arrayidx6, align 8\l  %12 = load ptr, ptr %z.addr, align 8\l  %13 = load double, ptr %12, align 8\l  %neg7 = fneg double %10\l  %14 = call double @llvm.fmuladd.f64(double %neg7, double %11, double %13)\l  store double %14, ptr %12, align 8\l  %rotatecol = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 18\l  %arrayidx8 = getelementptr inbounds [3 x [3 x double]], ptr %rotatecol, i64\l... 0, i64 0\l  %arrayidx9 = getelementptr inbounds [3 x double], ptr %arrayidx8, i64 0, i64\l... 0\l  %15 = load double, ptr %arrayidx9, align 8\l  %16 = load ptr, ptr %x.addr, align 8\l  %17 = load double, ptr %16, align 8\l  %rotatecol10 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr\l... %this1, i32 0, i32 18\l  %arrayidx11 = getelementptr inbounds [3 x [3 x double]], ptr %rotatecol10,\l... i64 0, i64 0\l  %arrayidx12 = getelementptr inbounds [3 x double], ptr %arrayidx11, i64 0,\l... i64 1\l  %18 = load double, ptr %arrayidx12, align 8\l  %19 = load ptr, ptr %y.addr, align 8\l  %20 = load double, ptr %19, align 8\l  %mul13 = fmul double %18, %20\l  %21 = call double @llvm.fmuladd.f64(double %15, double %17, double %mul13)\l  %rotatecol14 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr\l... %this1, i32 0, i32 18\l  %arrayidx15 = getelementptr inbounds [3 x [3 x double]], ptr %rotatecol14,\l... i64 0, i64 0\l  %arrayidx16 = getelementptr inbounds [3 x double], ptr %arrayidx15, i64 0,\l... i64 2\l  %22 = load double, ptr %arrayidx16, align 8\l  %23 = load ptr, ptr %z.addr, align 8\l  %24 = load double, ptr %23, align 8\l  %25 = call double @llvm.fmuladd.f64(double %22, double %24, double %21)\l  store double %25, ptr %x1, align 8\l  %rotatecol17 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr\l... %this1, i32 0, i32 18\l  %arrayidx18 = getelementptr inbounds [3 x [3 x double]], ptr %rotatecol17,\l... i64 0, i64 1\l  %arrayidx19 = getelementptr inbounds [3 x double], ptr %arrayidx18, i64 0,\l... i64 0\l  %26 = load double, ptr %arrayidx19, align 8\l  %27 = load ptr, ptr %x.addr, align 8\l  %28 = load double, ptr %27, align 8\l  %rotatecol20 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr\l... %this1, i32 0, i32 18\l  %arrayidx21 = getelementptr inbounds [3 x [3 x double]], ptr %rotatecol20,\l... i64 0, i64 1\l  %arrayidx22 = getelementptr inbounds [3 x double], ptr %arrayidx21, i64 0,\l... i64 1\l  %29 = load double, ptr %arrayidx22, align 8\l  %30 = load ptr, ptr %y.addr, align 8\l  %31 = load double, ptr %30, align 8\l  %mul23 = fmul double %29, %31\l  %32 = call double @llvm.fmuladd.f64(double %26, double %28, double %mul23)\l  %rotatecol24 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr\l... %this1, i32 0, i32 18\l  %arrayidx25 = getelementptr inbounds [3 x [3 x double]], ptr %rotatecol24,\l... i64 0, i64 1\l  %arrayidx26 = getelementptr inbounds [3 x double], ptr %arrayidx25, i64 0,\l... i64 2\l  %33 = load double, ptr %arrayidx26, align 8\l  %34 = load ptr, ptr %z.addr, align 8\l  %35 = load double, ptr %34, align 8\l  %36 = call double @llvm.fmuladd.f64(double %33, double %35, double %32)\l  store double %36, ptr %y1, align 8\l  %rotatecol27 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr\l... %this1, i32 0, i32 18\l  %arrayidx28 = getelementptr inbounds [3 x [3 x double]], ptr %rotatecol27,\l... i64 0, i64 2\l  %arrayidx29 = getelementptr inbounds [3 x double], ptr %arrayidx28, i64 0,\l... i64 0\l  %37 = load double, ptr %arrayidx29, align 8\l  %38 = load ptr, ptr %x.addr, align 8\l  %39 = load double, ptr %38, align 8\l  %rotatecol30 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr\l... %this1, i32 0, i32 18\l  %arrayidx31 = getelementptr inbounds [3 x [3 x double]], ptr %rotatecol30,\l... i64 0, i64 2\l  %arrayidx32 = getelementptr inbounds [3 x double], ptr %arrayidx31, i64 0,\l... i64 1\l  %40 = load double, ptr %arrayidx32, align 8\l  %41 = load ptr, ptr %y.addr, align 8\l  %42 = load double, ptr %41, align 8\l  %mul33 = fmul double %40, %42\l  %43 = call double @llvm.fmuladd.f64(double %37, double %39, double %mul33)\l  %rotatecol34 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr\l... %this1, i32 0, i32 18\l  %arrayidx35 = getelementptr inbounds [3 x [3 x double]], ptr %rotatecol34,\l... i64 0, i64 2\l  %arrayidx36 = getelementptr inbounds [3 x double], ptr %arrayidx35, i64 0,\l... i64 2\l  %44 = load double, ptr %arrayidx36, align 8\l  %45 = load ptr, ptr %z.addr, align 8\l  %46 = load double, ptr %45, align 8\l  %47 = call double @llvm.fmuladd.f64(double %44, double %46, double %43)\l  store double %47, ptr %z1, align 8\l  %scale = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1, i32\l... 0, i32 10\l  %48 = load double, ptr %scale, align 8\l  %49 = load double, ptr %x1, align 8\l  %div = fdiv double %49, %48\l  store double %div, ptr %x1, align 8\l  %scale37 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 10\l  %50 = load double, ptr %scale37, align 8\l  %51 = load double, ptr %y1, align 8\l  %div38 = fdiv double %51, %50\l  store double %div38, ptr %y1, align 8\l  %scale39 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 10\l  %52 = load double, ptr %scale39, align 8\l  %53 = load double, ptr %z1, align 8\l  %div40 = fdiv double %53, %52\l  store double %div40, ptr %z1, align 8\l  %priminv = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 16\l  %arrayidx41 = getelementptr inbounds [3 x [3 x double]], ptr %priminv, i64\l... 0, i64 0\l  %arrayidx42 = getelementptr inbounds [3 x double], ptr %arrayidx41, i64 0,\l... i64 0\l  %54 = load double, ptr %arrayidx42, align 8\l  %55 = load double, ptr %x1, align 8\l  %priminv43 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 16\l  %arrayidx44 = getelementptr inbounds [3 x [3 x double]], ptr %priminv43, i64\l... 0, i64 0\l  %arrayidx45 = getelementptr inbounds [3 x double], ptr %arrayidx44, i64 0,\l... i64 1\l  %56 = load double, ptr %arrayidx45, align 8\l  %57 = load double, ptr %y1, align 8\l  %mul46 = fmul double %56, %57\l  %58 = call double @llvm.fmuladd.f64(double %54, double %55, double %mul46)\l  %priminv47 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 16\l  %arrayidx48 = getelementptr inbounds [3 x [3 x double]], ptr %priminv47, i64\l... 0, i64 0\l  %arrayidx49 = getelementptr inbounds [3 x double], ptr %arrayidx48, i64 0,\l... i64 2\l  %59 = load double, ptr %arrayidx49, align 8\l  %60 = load double, ptr %z1, align 8\l  %61 = call double @llvm.fmuladd.f64(double %59, double %60, double %58)\l  %62 = load ptr, ptr %x.addr, align 8\l  store double %61, ptr %62, align 8\l  %priminv50 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 16\l  %arrayidx51 = getelementptr inbounds [3 x [3 x double]], ptr %priminv50, i64\l... 0, i64 1\l  %arrayidx52 = getelementptr inbounds [3 x double], ptr %arrayidx51, i64 0,\l... i64 0\l  %63 = load double, ptr %arrayidx52, align 8\l  %64 = load double, ptr %x1, align 8\l  %priminv53 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 16\l  %arrayidx54 = getelementptr inbounds [3 x [3 x double]], ptr %priminv53, i64\l... 0, i64 1\l  %arrayidx55 = getelementptr inbounds [3 x double], ptr %arrayidx54, i64 0,\l... i64 1\l  %65 = load double, ptr %arrayidx55, align 8\l  %66 = load double, ptr %y1, align 8\l  %mul56 = fmul double %65, %66\l  %67 = call double @llvm.fmuladd.f64(double %63, double %64, double %mul56)\l  %priminv57 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 16\l  %arrayidx58 = getelementptr inbounds [3 x [3 x double]], ptr %priminv57, i64\l... 0, i64 1\l  %arrayidx59 = getelementptr inbounds [3 x double], ptr %arrayidx58, i64 0,\l... i64 2\l  %68 = load double, ptr %arrayidx59, align 8\l  %69 = load double, ptr %z1, align 8\l  %70 = call double @llvm.fmuladd.f64(double %68, double %69, double %67)\l  %71 = load ptr, ptr %y.addr, align 8\l  store double %70, ptr %71, align 8\l  %priminv60 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 16\l  %arrayidx61 = getelementptr inbounds [3 x [3 x double]], ptr %priminv60, i64\l... 0, i64 2\l  %arrayidx62 = getelementptr inbounds [3 x double], ptr %arrayidx61, i64 0,\l... i64 0\l  %72 = load double, ptr %arrayidx62, align 8\l  %73 = load double, ptr %x1, align 8\l  %priminv63 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 16\l  %arrayidx64 = getelementptr inbounds [3 x [3 x double]], ptr %priminv63, i64\l... 0, i64 2\l  %arrayidx65 = getelementptr inbounds [3 x double], ptr %arrayidx64, i64 0,\l... i64 1\l  %74 = load double, ptr %arrayidx65, align 8\l  %75 = load double, ptr %y1, align 8\l  %mul66 = fmul double %74, %75\l  %76 = call double @llvm.fmuladd.f64(double %72, double %73, double %mul66)\l  %priminv67 = getelementptr inbounds %\"class.LAMMPS_NS::Lattice\", ptr %this1,\l... i32 0, i32 16\l  %arrayidx68 = getelementptr inbounds [3 x [3 x double]], ptr %priminv67, i64\l... 0, i64 2\l  %arrayidx69 = getelementptr inbounds [3 x double], ptr %arrayidx68, i64 0,\l... i64 2\l  %77 = load double, ptr %arrayidx69, align 8\l  %78 = load double, ptr %z1, align 8\l  %79 = call double @llvm.fmuladd.f64(double %77, double %78, double %76)\l  %80 = load ptr, ptr %z.addr, align 8\l  store double %79, ptr %80, align 8\l  ret void\l}"];
}
