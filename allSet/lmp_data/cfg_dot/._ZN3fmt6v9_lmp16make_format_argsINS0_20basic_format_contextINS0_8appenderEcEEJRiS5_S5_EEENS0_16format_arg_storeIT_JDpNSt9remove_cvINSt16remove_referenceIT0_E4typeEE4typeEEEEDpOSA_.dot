digraph "CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRiS5_S5_EEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSA_' function" {
	label="CFG for '_ZN3fmt6v9_lmp16make_format_argsINS0_20basic_format_contextINS0_8appenderEcEEJRiS5_S5_EEENS0_16format_arg_storeIT_JDpNSt9remove_cvINSt16remove_referenceIT0_E4typeEE4typeEEEEDpOSA_' function";

	Node0x56403e965020 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr.i53 = alloca ptr, align 8\l  %val.addr.i54 = alloca i32, align 4\l  %this.addr.i50 = alloca ptr, align 8\l  %val.addr.i51 = alloca i32, align 4\l  %this.addr.i47 = alloca ptr, align 8\l  %val.addr.i48 = alloca i32, align 4\l  %this.addr.i44 = alloca ptr, align 8\l  %val.addr.i45 = alloca i32, align 4\l  %this.addr.i41 = alloca ptr, align 8\l  %val.addr.i42 = alloca i32, align 4\l  %this.addr.i38 = alloca ptr, align 8\l  %val.addr.i39 = alloca i32, align 4\l  %retval.i28 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i29 = alloca ptr, align 8\l  %arg.i30 = alloca ptr, align 8\l  %ref.tmp.i31 = alloca i32, align 4\l  %ref.tmp1.i32 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i33 = alloca i8, align 1\l  %formattable_const.i34 = alloca i8, align 1\l  %formattable_pointer.i35 = alloca i8, align 1\l  %formattable.i36 = alloca i8, align 1\l  %retval.i18 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i19 = alloca ptr, align 8\l  %arg.i20 = alloca ptr, align 8\l  %ref.tmp.i21 = alloca i32, align 4\l  %ref.tmp1.i22 = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i23 = alloca i8, align 1\l  %formattable_const.i24 = alloca i8, align 1\l  %formattable_pointer.i25 = alloca i8, align 1\l  %formattable.i26 = alloca i8, align 1\l  %retval.i15 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i16 = alloca ptr, align 8\l  %arg.i = alloca ptr, align 8\l  %ref.tmp.i17 = alloca i32, align 4\l  %ref.tmp1.i = alloca %\"struct.fmt::v9_lmp::detail::arg_mapper\", align 1\l  %formattable_char.i = alloca i8, align 1\l  %formattable_const.i = alloca i8, align 1\l  %formattable_pointer.i = alloca i8, align 1\l  %formattable.i = alloca i8, align 1\l  %this.addr.i14 = alloca ptr, align 8\l  %.addr.i = alloca ptr, align 8\l  %.addr1.i = alloca i32, align 4\l  %.addr2.i = alloca i32, align 4\l  %.addr3.i = alloca ptr, align 8\l  %.addr4.i = alloca ptr, align 8\l  %.addr5.i = alloca ptr, align 8\l  %this.addr.i12 = alloca ptr, align 8\l  %init.addr.i = alloca ptr, align 8\l  %init.addr2.i = alloca ptr, align 8\l  %init.addr4.i = alloca ptr, align 8\l  %retval.i9 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i10 = alloca ptr, align 8\l  %retval.i6 = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i7 = alloca ptr, align 8\l  %retval.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %val.addr.i = alloca ptr, align 8\l  %this.addr.i = alloca ptr, align 8\l  %args.addr.i = alloca ptr, align 8\l  %args.addr2.i = alloca ptr, align 8\l  %args.addr4.i = alloca ptr, align 8\l  %ref.tmp.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp7.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %ref.tmp11.i = alloca %\"class.fmt::v9_lmp::detail::value\", align 16\l  %args.addr = alloca ptr, align 8\l  %args.addr2 = alloca ptr, align 8\l  %args.addr4 = alloca ptr, align 8\l  store ptr %args, ptr %args.addr, align 8\l  store ptr %args1, ptr %args.addr2, align 8\l  store ptr %args3, ptr %args.addr4, align 8\l  %0 = load ptr, ptr %args.addr, align 8\l  %1 = load ptr, ptr %args.addr2, align 8\l  %2 = load ptr, ptr %args.addr4, align 8\l  store ptr %agg.result, ptr %this.addr.i, align 8\l  store ptr %0, ptr %args.addr.i, align 8\l  store ptr %1, ptr %args.addr2.i, align 8\l  store ptr %2, ptr %args.addr4.i, align 8\l  %this5.i = load ptr, ptr %this.addr.i, align 8\l  %3 = load ptr, ptr %args.addr.i, align 8\l  store ptr %3, ptr %val.addr.i10, align 8\l  %4 = load ptr, ptr %val.addr.i10, align 8\l  store ptr %4, ptr %val.addr.i16, align 8\l  %5 = load ptr, ptr %val.addr.i16, align 8\l  %6 = load i32, ptr %5, align 4\l  store ptr %ref.tmp1.i, ptr %this.addr.i44, align 8\l  store i32 %6, ptr %val.addr.i45, align 4\l  %this1.i46 = load ptr, ptr %this.addr.i44, align 8\l  %7 = load i32, ptr %val.addr.i45, align 4\l  store i32 %7, ptr %ref.tmp.i17, align 4\l  store ptr %ref.tmp.i17, ptr %arg.i, align 8\l  store i8 1, ptr %formattable_char.i, align 1\l  store i8 1, ptr %formattable_const.i, align 1\l  store i8 1, ptr %formattable_pointer.i, align 1\l  store i8 1, ptr %formattable.i, align 1\l  %8 = load ptr, ptr %arg.i, align 8\l  %9 = load i32, ptr %8, align 4\l  store ptr %retval.i15, ptr %this.addr.i53, align 8\l  store i32 %9, ptr %val.addr.i54, align 4\l  %this1.i55 = load ptr, ptr %this.addr.i53, align 8\l  %10 = load i32, ptr %val.addr.i54, align 4\l  store i32 %10, ptr %this1.i55, align 16\l  %11 = load \{ i64, i64 \}, ptr %retval.i15, align 16\l  %12 = extractvalue \{ i64, i64 \} %11, 0\l  store i64 %12, ptr %retval.i9, align 16\l  %13 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i9, i32 0, i32 1\l  %14 = extractvalue \{ i64, i64 \} %11, 1\l  store i64 %14, ptr %13, align 8\l  %15 = load \{ i64, i64 \}, ptr %retval.i9, align 16\l  %16 = extractvalue \{ i64, i64 \} %15, 0\l  store i64 %16, ptr %ref.tmp.i, align 16\l  %17 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp.i, i32 0, i32 1\l  %18 = extractvalue \{ i64, i64 \} %15, 1\l  store i64 %18, ptr %17, align 8\l  %19 = load ptr, ptr %args.addr2.i, align 8\l  store ptr %19, ptr %val.addr.i7, align 8\l  %20 = load ptr, ptr %val.addr.i7, align 8\l  store ptr %20, ptr %val.addr.i19, align 8\l  %21 = load ptr, ptr %val.addr.i19, align 8\l  %22 = load i32, ptr %21, align 4\l  store ptr %ref.tmp1.i22, ptr %this.addr.i41, align 8\l  store i32 %22, ptr %val.addr.i42, align 4\l  %this1.i43 = load ptr, ptr %this.addr.i41, align 8\l  %23 = load i32, ptr %val.addr.i42, align 4\l  store i32 %23, ptr %ref.tmp.i21, align 4\l  store ptr %ref.tmp.i21, ptr %arg.i20, align 8\l  store i8 1, ptr %formattable_char.i23, align 1\l  store i8 1, ptr %formattable_const.i24, align 1\l  store i8 1, ptr %formattable_pointer.i25, align 1\l  store i8 1, ptr %formattable.i26, align 1\l  %24 = load ptr, ptr %arg.i20, align 8\l  %25 = load i32, ptr %24, align 4\l  store ptr %retval.i18, ptr %this.addr.i50, align 8\l  store i32 %25, ptr %val.addr.i51, align 4\l  %this1.i52 = load ptr, ptr %this.addr.i50, align 8\l  %26 = load i32, ptr %val.addr.i51, align 4\l  store i32 %26, ptr %this1.i52, align 16\l  %27 = load \{ i64, i64 \}, ptr %retval.i18, align 16\l  %28 = extractvalue \{ i64, i64 \} %27, 0\l  store i64 %28, ptr %retval.i6, align 16\l  %29 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i6, i32 0, i32 1\l  %30 = extractvalue \{ i64, i64 \} %27, 1\l  store i64 %30, ptr %29, align 8\l  %31 = load \{ i64, i64 \}, ptr %retval.i6, align 16\l  %32 = extractvalue \{ i64, i64 \} %31, 0\l  store i64 %32, ptr %ref.tmp7.i, align 16\l  %33 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp7.i, i32 0, i32 1\l  %34 = extractvalue \{ i64, i64 \} %31, 1\l  store i64 %34, ptr %33, align 8\l  %35 = load ptr, ptr %args.addr4.i, align 8\l  store ptr %35, ptr %val.addr.i, align 8\l  %36 = load ptr, ptr %val.addr.i, align 8\l  store ptr %36, ptr %val.addr.i29, align 8\l  %37 = load ptr, ptr %val.addr.i29, align 8\l  %38 = load i32, ptr %37, align 4\l  store ptr %ref.tmp1.i32, ptr %this.addr.i38, align 8\l  store i32 %38, ptr %val.addr.i39, align 4\l  %this1.i40 = load ptr, ptr %this.addr.i38, align 8\l  %39 = load i32, ptr %val.addr.i39, align 4\l  store i32 %39, ptr %ref.tmp.i31, align 4\l  store ptr %ref.tmp.i31, ptr %arg.i30, align 8\l  store i8 1, ptr %formattable_char.i33, align 1\l  store i8 1, ptr %formattable_const.i34, align 1\l  store i8 1, ptr %formattable_pointer.i35, align 1\l  store i8 1, ptr %formattable.i36, align 1\l  %40 = load ptr, ptr %arg.i30, align 8\l  %41 = load i32, ptr %40, align 4\l  store ptr %retval.i28, ptr %this.addr.i47, align 8\l  store i32 %41, ptr %val.addr.i48, align 4\l  %this1.i49 = load ptr, ptr %this.addr.i47, align 8\l  %42 = load i32, ptr %val.addr.i48, align 4\l  store i32 %42, ptr %this1.i49, align 16\l  %43 = load \{ i64, i64 \}, ptr %retval.i28, align 16\l  %44 = extractvalue \{ i64, i64 \} %43, 0\l  store i64 %44, ptr %retval.i, align 16\l  %45 = getelementptr inbounds \{ i64, i64 \}, ptr %retval.i, i32 0, i32 1\l  %46 = extractvalue \{ i64, i64 \} %43, 1\l  store i64 %46, ptr %45, align 8\l  %47 = load \{ i64, i64 \}, ptr %retval.i, align 16\l  %48 = extractvalue \{ i64, i64 \} %47, 0\l  store i64 %48, ptr %ref.tmp11.i, align 16\l  %49 = getelementptr inbounds \{ i64, i64 \}, ptr %ref.tmp11.i, i32 0, i32 1\l  %50 = extractvalue \{ i64, i64 \} %47, 1\l  store i64 %50, ptr %49, align 8\l  store ptr %this5.i, ptr %this.addr.i12, align 8\l  store ptr %ref.tmp.i, ptr %init.addr.i, align 8\l  store ptr %ref.tmp7.i, ptr %init.addr2.i, align 8\l  store ptr %ref.tmp11.i, ptr %init.addr4.i, align 8\l  %this5.i13 = load ptr, ptr %this.addr.i12, align 8\l  %51 = load ptr, ptr %init.addr.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %this5.i13, ptr align 16 %51,\l... i64 16, i1 false)\l  %arrayinit.element.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %this5.i13, i64 1\l  %52 = load ptr, ptr %init.addr2.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element.i, ptr\l... align 16 %52, i64 16, i1 false)\l  %arrayinit.element6.i = getelementptr inbounds\l... %\"class.fmt::v9_lmp::detail::value\", ptr %arrayinit.element.i, i64 1\l  %53 = load ptr, ptr %init.addr4.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %arrayinit.element6.i, ptr\l... align 16 %53, i64 16, i1 false)\l  store ptr %this5.i, ptr %this.addr.i14, align 8\l  %this1.i = load ptr, ptr %this.addr.i14, align 8\l  %54 = load ptr, ptr %args.addr.i, align 8\l  %55 = load ptr, ptr %args.addr2.i, align 8\l  %56 = load ptr, ptr %args.addr4.i, align 8\l  store ptr null, ptr %.addr.i, align 8\l  store i32 0, ptr %.addr1.i, align 4\l  store i32 0, ptr %.addr2.i, align 4\l  store ptr %54, ptr %.addr3.i, align 8\l  store ptr %55, ptr %.addr4.i, align 8\l  store ptr %56, ptr %.addr5.i, align 8\l  ret void\l}"];
}
