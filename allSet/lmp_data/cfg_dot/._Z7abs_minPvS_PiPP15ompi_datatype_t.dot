digraph "CFG for '_Z7abs_minPvS_PiPP15ompi_datatype_t' function" {
	label="CFG for '_Z7abs_minPvS_PiPP15ompi_datatype_t' function";

	Node0x5591401f19d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %in.addr = alloca ptr, align 8\l  %inout.addr = alloca ptr, align 8\l  %.addr = alloca ptr, align 8\l  %.addr1 = alloca ptr, align 8\l  %n = alloca double, align 8\l  %r = alloca double, align 8\l  %m = alloca double, align 8\l  store ptr %in, ptr %in.addr, align 8\l  store ptr %inout, ptr %inout.addr, align 8\l  store ptr %0, ptr %.addr, align 8\l  store ptr %1, ptr %.addr1, align 8\l  %2 = load ptr, ptr %in.addr, align 8\l  %3 = load double, ptr %2, align 8\l  %4 = call double @llvm.fabs.f64(double %3)\l  store double %4, ptr %n, align 8\l  %5 = load ptr, ptr %inout.addr, align 8\l  %6 = load double, ptr %5, align 8\l  store double %6, ptr %r, align 8\l  %7 = load double, ptr %n, align 8\l  %8 = load double, ptr %r, align 8\l  %cmp = fcmp olt double %7, %8\l  br i1 %cmp, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x5591401f19d0:s0 -> Node0x5591401f2e50[tooltip="entry -> if.then\nProbability 50.00%" ];
	Node0x5591401f19d0:s1 -> Node0x5591401f2ec0[tooltip="entry -> if.else\nProbability 50.00%" ];
	Node0x5591401f2e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then:\l|  %9 = load double, ptr %n, align 8\l  store double %9, ptr %m, align 8\l  br label %if.end\l}"];
	Node0x5591401f2e50 -> Node0x5591401f32a0[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x5591401f2ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.else:\l|  %10 = load double, ptr %r, align 8\l  store double %10, ptr %m, align 8\l  br label %if.end\l}"];
	Node0x5591401f2ec0 -> Node0x5591401f32a0[tooltip="if.else -> if.end\nProbability 100.00%" ];
	Node0x5591401f32a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end:\l|  %11 = load double, ptr %m, align 8\l  %12 = load ptr, ptr %inout.addr, align 8\l  store double %11, ptr %12, align 8\l  ret void\l}"];
}
