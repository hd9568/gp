digraph "CFG for '_ZN3fmt6v9_lmp6detail17write_significandIcmTnNSt9enable_ifIXsr3std11is_integralIT0_EE5valueEiE4typeELi0EEEPT_S8_S4_iiS7_' function" {
	label="CFG for '_ZN3fmt6v9_lmp6detail17write_significandIcmTnNSt9enable_ifIXsr3std11is_integralIT0_EE5valueEiE4typeELi0EEEPT_S8_S4_iiS7_' function";

	Node0x55fec329f720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{entry:\l|  %dst.addr.i = alloca ptr, align 8\l  %src.addr.i = alloca ptr, align 8\l  %retval = alloca ptr, align 8\l  %out.addr = alloca ptr, align 8\l  %significand.addr = alloca i64, align 8\l  %significand_size.addr = alloca i32, align 4\l  %integral_size.addr = alloca i32, align 4\l  %decimal_point.addr = alloca i8, align 1\l  %ref.tmp = alloca %\"struct.fmt::v9_lmp::detail::format_decimal_result\",\l... align 8\l  %end1 = alloca ptr, align 8\l  %floating_size = alloca i32, align 4\l  %i = alloca i32, align 4\l  %coerce = alloca %\"struct.fmt::v9_lmp::detail::format_decimal_result\", align\l... 8\l  store ptr %out, ptr %out.addr, align 8\l  store i64 %significand, ptr %significand.addr, align 8\l  store i32 %significand_size, ptr %significand_size.addr, align 4\l  store i32 %integral_size, ptr %integral_size.addr, align 4\l  store i8 %decimal_point, ptr %decimal_point.addr, align 1\l  %0 = load i8, ptr %decimal_point.addr, align 1\l  %tobool = icmp ne i8 %0, 0\l  br i1 %tobool, label %if.end, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x55fec329f720:s0 -> Node0x55fec32a07f0[tooltip="entry -> if.end\nProbability 62.50%" ];
	Node0x55fec329f720:s1 -> Node0x55fec32a0860[tooltip="entry -> if.then\nProbability 37.50%" ];
	Node0x55fec32a0860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{if.then:\l|  %1 = load ptr, ptr %out.addr, align 8\l  %2 = load i64, ptr %significand.addr, align 8\l  %3 = load i32, ptr %significand_size.addr, align 4\l  %call = call \{ ptr, ptr \}\l... @_ZN3fmt6v9_lmp6detail14format_decimalIcmEENS1_21format_decimal_resultIPT_EES5\l..._T0_i(ptr noundef %1, i64 noundef %2, i32 noundef %3)\l  %4 = getelementptr inbounds \{ ptr, ptr \}, ptr %ref.tmp, i32 0, i32 0\l  %5 = extractvalue \{ ptr, ptr \} %call, 0\l  store ptr %5, ptr %4, align 8\l  %6 = getelementptr inbounds \{ ptr, ptr \}, ptr %ref.tmp, i32 0, i32 1\l  %7 = extractvalue \{ ptr, ptr \} %call, 1\l  store ptr %7, ptr %6, align 8\l  %end = getelementptr inbounds\l... %\"struct.fmt::v9_lmp::detail::format_decimal_result\", ptr %ref.tmp, i32 0,\l... i32 1\l  %8 = load ptr, ptr %end, align 8\l  store ptr %8, ptr %retval, align 8\l  br label %return\l}"];
	Node0x55fec32a0860 -> Node0x55fec32a10c0[tooltip="if.then -> return\nProbability 100.00%" ];
	Node0x55fec32a07f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.end:\l|  %9 = load i32, ptr %significand_size.addr, align 4\l  %add = add nsw i32 %9, 1\l  %10 = load ptr, ptr %out.addr, align 8\l  %idx.ext = sext i32 %add to i64\l  %add.ptr = getelementptr inbounds i8, ptr %10, i64 %idx.ext\l  store ptr %add.ptr, ptr %out.addr, align 8\l  %11 = load ptr, ptr %out.addr, align 8\l  store ptr %11, ptr %end1, align 8\l  %12 = load i32, ptr %significand_size.addr, align 4\l  %13 = load i32, ptr %integral_size.addr, align 4\l  %sub = sub nsw i32 %12, %13\l  store i32 %sub, ptr %floating_size, align 4\l  %14 = load i32, ptr %floating_size, align 4\l  %div = sdiv i32 %14, 2\l  store i32 %div, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x55fec32a07f0 -> Node0x55fec32a1c00[tooltip="if.end -> for.cond\nProbability 100.00%" ];
	Node0x55fec32a1c00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %15 = load i32, ptr %i, align 4\l  %cmp = icmp sgt i32 %15, 0\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x55fec32a1c00:s0 -> Node0x55fec32a1df0[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x55fec32a1c00:s1 -> Node0x55fec32a1e40[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x55fec32a1df0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %16 = load ptr, ptr %out.addr, align 8\l  %add.ptr2 = getelementptr inbounds i8, ptr %16, i64 -2\l  store ptr %add.ptr2, ptr %out.addr, align 8\l  %17 = load ptr, ptr %out.addr, align 8\l  %18 = load i64, ptr %significand.addr, align 8\l  %rem = urem i64 %18, 100\l  %call3 = call noundef ptr @_ZN3fmt6v9_lmp6detail7digits2Em(i64 noundef %rem)\l  store ptr %17, ptr %dst.addr.i, align 8\l  store ptr %call3, ptr %src.addr.i, align 8\l  %19 = load ptr, ptr %dst.addr.i, align 8\l  %20 = load ptr, ptr %src.addr.i, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %19, ptr align 1 %20, i64 2, i1\l... false)\l  %21 = load i64, ptr %significand.addr, align 8\l  %div4 = udiv i64 %21, 100\l  store i64 %div4, ptr %significand.addr, align 8\l  br label %for.inc\l}"];
	Node0x55fec32a1df0 -> Node0x55fec32a29c0[tooltip="for.body -> for.inc\nProbability 100.00%" ];
	Node0x55fec32a29c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %22 = load i32, ptr %i, align 4\l  %dec = add nsw i32 %22, -1\l  store i32 %dec, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x55fec32a29c0 -> Node0x55fec32a1c00[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x55fec32a1e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  %23 = load i32, ptr %floating_size, align 4\l  %rem5 = srem i32 %23, 2\l  %cmp6 = icmp ne i32 %rem5, 0\l  br i1 %cmp6, label %if.then7, label %if.end11\l|{<s0>T|<s1>F}}"];
	Node0x55fec32a1e40:s0 -> Node0x55fec32a2f70[tooltip="for.end -> if.then7\nProbability 62.50%" ];
	Node0x55fec32a1e40:s1 -> Node0x55fec32a2fc0[tooltip="for.end -> if.end11\nProbability 37.50%" ];
	Node0x55fec32a2f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670" fontname="Courier",label="{if.then7:\l|  %24 = load i64, ptr %significand.addr, align 8\l  %rem8 = urem i64 %24, 10\l  %add9 = add i64 48, %rem8\l  %conv = trunc i64 %add9 to i8\l  %25 = load ptr, ptr %out.addr, align 8\l  %incdec.ptr = getelementptr inbounds i8, ptr %25, i32 -1\l  store ptr %incdec.ptr, ptr %out.addr, align 8\l  store i8 %conv, ptr %incdec.ptr, align 1\l  %26 = load i64, ptr %significand.addr, align 8\l  %div10 = udiv i64 %26, 10\l  store i64 %div10, ptr %significand.addr, align 8\l  br label %if.end11\l}"];
	Node0x55fec32a2f70 -> Node0x55fec32a2fc0[tooltip="if.then7 -> if.end11\nProbability 100.00%" ];
	Node0x55fec32a2fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.end11:\l|  %27 = load i8, ptr %decimal_point.addr, align 1\l  %28 = load ptr, ptr %out.addr, align 8\l  %incdec.ptr12 = getelementptr inbounds i8, ptr %28, i32 -1\l  store ptr %incdec.ptr12, ptr %out.addr, align 8\l  store i8 %27, ptr %incdec.ptr12, align 1\l  %29 = load ptr, ptr %out.addr, align 8\l  %30 = load i32, ptr %integral_size.addr, align 4\l  %idx.ext13 = sext i32 %30 to i64\l  %idx.neg = sub i64 0, %idx.ext13\l  %add.ptr14 = getelementptr inbounds i8, ptr %29, i64 %idx.neg\l  %31 = load i64, ptr %significand.addr, align 8\l  %32 = load i32, ptr %integral_size.addr, align 4\l  %call15 = call \{ ptr, ptr \}\l... @_ZN3fmt6v9_lmp6detail14format_decimalIcmEENS1_21format_decimal_resultIPT_EES5\l..._T0_i(ptr noundef %add.ptr14, i64 noundef %31, i32 noundef %32)\l  %33 = getelementptr inbounds \{ ptr, ptr \}, ptr %coerce, i32 0, i32 0\l  %34 = extractvalue \{ ptr, ptr \} %call15, 0\l  store ptr %34, ptr %33, align 8\l  %35 = getelementptr inbounds \{ ptr, ptr \}, ptr %coerce, i32 0, i32 1\l  %36 = extractvalue \{ ptr, ptr \} %call15, 1\l  store ptr %36, ptr %35, align 8\l  %37 = load ptr, ptr %end1, align 8\l  store ptr %37, ptr %retval, align 8\l  br label %return\l}"];
	Node0x55fec32a2fc0 -> Node0x55fec32a10c0[tooltip="if.end11 -> return\nProbability 100.00%" ];
	Node0x55fec32a10c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{return:\l|  %38 = load ptr, ptr %retval, align 8\l  ret ptr %38\l}"];
}
