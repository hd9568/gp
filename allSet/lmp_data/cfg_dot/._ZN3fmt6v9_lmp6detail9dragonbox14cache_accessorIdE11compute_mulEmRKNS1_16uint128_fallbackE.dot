digraph "CFG for '_ZN3fmt6v9_lmp6detail9dragonbox14cache_accessorIdE11compute_mulEmRKNS1_16uint128_fallbackE' function" {
	label="CFG for '_ZN3fmt6v9_lmp6detail9dragonbox14cache_accessorIdE11compute_mulEmRKNS1_16uint128_fallbackE' function";

	Node0x55fec301ff40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %retval = alloca\l... %\"struct.fmt::v9_lmp::detail::dragonbox::cache_accessor\<double\>::compute_mul_r\l...esult\", align 8\l  %u.addr = alloca i64, align 8\l  %cache.addr = alloca ptr, align 8\l  %r = alloca %\"class.fmt::v9_lmp::detail::uint128_fallback\", align 8\l  %agg.tmp = alloca %\"class.fmt::v9_lmp::detail::uint128_fallback\", align 8\l  store i64 %u, ptr %u.addr, align 8\l  store ptr %cache, ptr %cache.addr, align 8\l  %0 = load i64, ptr %u.addr, align 8\l  %1 = load ptr, ptr %cache.addr, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %agg.tmp, ptr align 8 %1, i64\l... 16, i1 false)\l  %2 = getelementptr inbounds \{ i64, i64 \}, ptr %agg.tmp, i32 0, i32 0\l  %3 = load i64, ptr %2, align 8\l  %4 = getelementptr inbounds \{ i64, i64 \}, ptr %agg.tmp, i32 0, i32 1\l  %5 = load i64, ptr %4, align 8\l  %call = call \{ i64, i64 \}\l... @_ZN3fmt6v9_lmp6detail9dragonbox16umul192_upper128EmNS1_16uint128_fallbackE(i6\l...4 noundef %0, i64 %3, i64 %5) #17\l  %6 = getelementptr inbounds \{ i64, i64 \}, ptr %r, i32 0, i32 0\l  %7 = extractvalue \{ i64, i64 \} %call, 0\l  store i64 %7, ptr %6, align 8\l  %8 = getelementptr inbounds \{ i64, i64 \}, ptr %r, i32 0, i32 1\l  %9 = extractvalue \{ i64, i64 \} %call, 1\l  store i64 %9, ptr %8, align 8\l  %result = getelementptr inbounds\l... %\"struct.fmt::v9_lmp::detail::dragonbox::cache_accessor\<double\>::compute_mul_r\l...esult\", ptr %retval, i32 0, i32 0\l  %call1 = call noundef i64\l... @_ZNK3fmt6v9_lmp6detail16uint128_fallback4highEv(ptr noundef nonnull align 8\l... dereferenceable(16) %r) #17\l  store i64 %call1, ptr %result, align 8\l  %is_integer = getelementptr inbounds\l... %\"struct.fmt::v9_lmp::detail::dragonbox::cache_accessor\<double\>::compute_mul_r\l...esult\", ptr %retval, i32 0, i32 1\l  %call2 = call noundef i64\l... @_ZNK3fmt6v9_lmp6detail16uint128_fallback3lowEv(ptr noundef nonnull align 8\l... dereferenceable(16) %r) #17\l  %cmp = icmp eq i64 %call2, 0\l  %frombool = zext i1 %cmp to i8\l  store i8 %frombool, ptr %is_integer, align 8\l  %10 = load \{ i64, i8 \}, ptr %retval, align 8\l  ret \{ i64, i8 \} %10\l}"];
}
