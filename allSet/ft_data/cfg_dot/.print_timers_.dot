digraph "CFG for 'print_timers_' function" {
	label="CFG for 'print_timers_' function";

	Node0x55cdf5d44d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{0:\l|  %1 = alloca i32, i64 1, align 4\l  %2 = alloca i32, i64 1, align 4\l  %3 = alloca i32, i64 1, align 4\l  %4 = alloca i32, i64 1, align 4\l  %5 = alloca i32, i64 1, align 4\l  %6 = alloca i32, i64 1, align 4\l  %7 = alloca i32, i64 1, align 4\l  %8 = alloca i32, i64 1, align 4\l  %9 = alloca i32, i64 1, align 4\l  %10 = alloca i32, i64 1, align 4\l  %11 = alloca i32, i64 1, align 4\l  %12 = alloca i32, i64 1, align 4\l  %13 = alloca i32, i64 1, align 4\l  %14 = alloca i32, i64 1, align 4\l  %15 = alloca i32, i64 1, align 4\l  %16 = alloca i32, i64 1, align 4\l  %17 = alloca i32, i64 1, align 4\l  %18 = alloca [18 x double], i64 1, align 8\l  %19 = alloca [18 x double], i64 1, align 8\l  %20 = alloca [18 x double], i64 1, align 8\l  %21 = alloca [18 x double], i64 1, align 8\l  br label %22\l}"];
	Node0x55cdf5d44d30 -> Node0x55cdf5d45780[tooltip="0 -> 22\nProbability 100.00%" ];
	Node0x55cdf5d45780 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{22:\l|  %23 = phi i32 [ %36, %26 ], [ 1, %0 ]\l  %24 = phi i64 [ %37, %26 ], [ 16, %0 ]\l  %25 = icmp sgt i64 %24, 0\l  br i1 %25, label %26, label %38\l|{<s0>T|<s1>F}}"];
	Node0x55cdf5d45780:s0 -> Node0x55cdf5d45840[tooltip="22 -> 26\nProbability 96.88%" ];
	Node0x55cdf5d45780:s1 -> Node0x55cdf5d45a40[tooltip="22 -> 38\nProbability 3.12%" ];
	Node0x55cdf5d45840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{26:\l|  store i32 %23, ptr %16, align 4\l  %27 = call contract double @timer_read_(ptr %16)\l  %28 = load i32, ptr %16, align 4\l  %29 = sext i32 %28 to i64\l  %30 = sub nsw i64 %29, 1\l  %31 = mul nsw i64 %30, 1\l  %32 = mul nsw i64 %31, 1\l  %33 = add nsw i64 %32, 0\l  %34 = getelementptr double, ptr %18, i64 %33\l  store double %27, ptr %34, align 8\l  %35 = load i32, ptr %16, align 4\l  %36 = add i32 %35, 1\l  %37 = sub i64 %24, 1\l  br label %22\l}"];
	Node0x55cdf5d45840 -> Node0x55cdf5d45780[tooltip="26 -> 22\nProbability 100.00%" ];
	Node0x55cdf5d45a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{38:\l|  store i32 %23, ptr %16, align 4\l  %39 = getelementptr double, ptr %18, i64 9\l  %40 = load double, ptr %39, align 8\l  %41 = getelementptr double, ptr %18, i64 12\l  %42 = load double, ptr %41, align 8\l  %43 = fadd contract double %40, %42\l  %44 = getelementptr double, ptr %18, i64 14\l  %45 = load double, ptr %44, align 8\l  %46 = fadd contract double %43, %45\l  %47 = getelementptr double, ptr %18, i64 17\l  store double %46, ptr %47, align 8\l  %48 = getelementptr double, ptr %18, i64 0\l  %49 = load double, ptr %48, align 8\l  %50 = load double, ptr %47, align 8\l  %51 = fsub contract double %49, %50\l  %52 = getelementptr double, ptr %18, i64 16\l  store double %51, ptr %52, align 8\l  store i32 18, ptr %15, align 4\l  store i32 17, ptr %14, align 4\l  store i32 3, ptr %13, align 4\l  store i32 0, ptr %12, align 4\l  store i32 0, ptr %11, align 4\l  call void @mpi_reduce_(ptr %18, ptr %21, ptr %15, ptr %14, ptr %13, ptr %12,\l... ptr %11, ptr %17)\l  store i32 18, ptr %10, align 4\l  store i32 17, ptr %9, align 4\l  store i32 2, ptr %8, align 4\l  store i32 0, ptr %7, align 4\l  store i32 0, ptr %6, align 4\l  call void @mpi_reduce_(ptr %18, ptr %20, ptr %10, ptr %9, ptr %8, ptr %7,\l... ptr %6, ptr %17)\l  store i32 18, ptr %5, align 4\l  store i32 17, ptr %4, align 4\l  store i32 1, ptr %3, align 4\l  store i32 0, ptr %2, align 4\l  store i32 0, ptr %1, align 4\l  call void @mpi_reduce_(ptr %18, ptr %19, ptr %5, ptr %4, ptr %3, ptr %2, ptr\l... %1, ptr %17)\l  %53 = load i32, ptr @coords_, align 4\l  %54 = icmp ne i32 %53, 0\l  br i1 %54, label %122, label %55\l|{<s0>T|<s1>F}}"];
	Node0x55cdf5d45a40:s0 -> Node0x55cdf5d4c5a0[tooltip="38 -> 122\nProbability 62.50%" ];
	Node0x55cdf5d45a40:s1 -> Node0x55cdf5d4c5f0[tooltip="38 -> 55\nProbability 37.50%" ];
	Node0x55cdf5d4c5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70" fontname="Courier",label="{55:\l|  %56 = call ptr @_FortranAioBeginExternalFormattedOutput(ptr\l... @_QQclX406d67fc84943bc1e0d81bf4bbead783, i64 56, ptr null, i32 6, ptr\l... @_QQclXb9b55b38f6af447f5dd645f3295119b9, i32 791)\l  %57 = load i32, ptr getelementptr (i8, ptr @procgrid_, i64 12), align 4\l  %58 = call i1 @_FortranAioOutputInteger32(ptr %56, i32 %57)\l  %59 = call i32 @_FortranAioEndIoStatement(ptr %56)\l  br label %60\l}"];
	Node0x55cdf5d4c5f0 -> Node0x55cdf5d4cb00[tooltip="55 -> 60\nProbability 100.00%" ];
	Node0x55cdf5d4cb00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{60:\l|  %61 = phi i32 [ %119, %117 ], [ 1, %55 ]\l  %62 = phi i64 [ %120, %117 ], [ 18, %55 ]\l  %63 = icmp sgt i64 %62, 0\l  br i1 %63, label %64, label %121\l|{<s0>T|<s1>F}}"];
	Node0x55cdf5d4cb00:s0 -> Node0x55cdf5d4ce20[tooltip="60 -> 64\nProbability 96.88%" ];
	Node0x55cdf5d4cb00:s1 -> Node0x55cdf5d4ce70[tooltip="60 -> 121\nProbability 3.12%" ];
	Node0x55cdf5d4ce20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{64:\l|  store i32 %61, ptr %16, align 4\l  %65 = load i32, ptr %16, align 4\l  %66 = sext i32 %65 to i64\l  %67 = sub nsw i64 %66, 1\l  %68 = mul nsw i64 %67, 1\l  %69 = mul nsw i64 %68, 1\l  %70 = add nsw i64 %69, 0\l  %71 = getelementptr double, ptr %21, i64 %70\l  %72 = load double, ptr %71, align 8\l  %73 = fcmp contract une double %72, 0.000000e+00\l  br i1 %73, label %74, label %117\l|{<s0>T|<s1>F}}"];
	Node0x55cdf5d4ce20:s0 -> Node0x55cdf5d4d4f0[tooltip="64 -> 74\nProbability 62.50%" ];
	Node0x55cdf5d4ce20:s1 -> Node0x55cdf5d4cbc0[tooltip="64 -> 117\nProbability 37.50%" ];
	Node0x55cdf5d4d4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{74:\l|  %75 = call ptr @_FortranAioBeginExternalFormattedOutput(ptr\l... @_QQclX5338b588e7ee91c53f1b6908aba8ad6d, i64 40, ptr null, i32 6, ptr\l... @_QQclXb9b55b38f6af447f5dd645f3295119b9, i32 794)\l  %76 = load i32, ptr %16, align 4\l  %77 = call i1 @_FortranAioOutputInteger32(ptr %75, i32 %76)\l  %78 = load i32, ptr %16, align 4\l  %79 = sext i32 %78 to i64\l  %80 = sub nsw i64 %79, 1\l  %81 = mul nsw i64 %80, 1\l  %82 = mul nsw i64 %81, 1\l  %83 = add nsw i64 %82, 0\l  %84 = getelementptr [25 x i8], ptr @_QFprint_timersEtstrings, i64 %83\l  %85 = call i1 @_FortranAioOutputAscii(ptr %75, ptr %84, i64 25)\l  %86 = load i32, ptr %16, align 4\l  %87 = sext i32 %86 to i64\l  %88 = sub nsw i64 %87, 1\l  %89 = mul nsw i64 %88, 1\l  %90 = mul nsw i64 %89, 1\l  %91 = add nsw i64 %90, 0\l  %92 = getelementptr double, ptr %20, i64 %91\l  %93 = load double, ptr %92, align 8\l  %94 = call i1 @_FortranAioOutputReal64(ptr %75, double %93)\l  %95 = load i32, ptr %16, align 4\l  %96 = sext i32 %95 to i64\l  %97 = sub nsw i64 %96, 1\l  %98 = mul nsw i64 %97, 1\l  %99 = mul nsw i64 %98, 1\l  %100 = add nsw i64 %99, 0\l  %101 = getelementptr double, ptr %19, i64 %100\l  %102 = load double, ptr %101, align 8\l  %103 = call i1 @_FortranAioOutputReal64(ptr %75, double %102)\l  %104 = load i32, ptr %16, align 4\l  %105 = sext i32 %104 to i64\l  %106 = sub nsw i64 %105, 1\l  %107 = mul nsw i64 %106, 1\l  %108 = mul nsw i64 %107, 1\l  %109 = add nsw i64 %108, 0\l  %110 = getelementptr double, ptr %21, i64 %109\l  %111 = load double, ptr %110, align 8\l  %112 = load i32, ptr getelementptr (i8, ptr @procgrid_, i64 12), align 4\l  %113 = sitofp i32 %112 to double\l  %114 = fdiv contract double %111, %113\l  %115 = call i1 @_FortranAioOutputReal64(ptr %75, double %114)\l  %116 = call i32 @_FortranAioEndIoStatement(ptr %75)\l  br label %117\l}"];
	Node0x55cdf5d4d4f0 -> Node0x55cdf5d4cbc0[tooltip="74 -> 117\nProbability 100.00%" ];
	Node0x55cdf5d4cbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{117:\l|  %118 = load i32, ptr %16, align 4\l  %119 = add i32 %118, 1\l  %120 = sub i64 %62, 1\l  br label %60\l}"];
	Node0x55cdf5d4cbc0 -> Node0x55cdf5d4cb00[tooltip="117 -> 60\nProbability 100.00%" ];
	Node0x55cdf5d4ce70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70" fontname="Courier",label="{121:\l|  store i32 %61, ptr %16, align 4\l  br label %122\l}"];
	Node0x55cdf5d4ce70 -> Node0x55cdf5d4c5a0[tooltip="121 -> 122\nProbability 100.00%" ];
	Node0x55cdf5d4c5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{122:\l|  ret void\l}"];
}
