digraph "CFG for 'calculate_macro_xs' function" {
	label="CFG for 'calculate_macro_xs' function";

	Node0x564d03bf0610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{entry:\l|  %p_energy.addr = alloca double, align 8\l  %mat.addr = alloca i32, align 4\l  %n_isotopes.addr = alloca i64, align 8\l  %n_gridpoints.addr = alloca i64, align 8\l  %num_nucs.addr = alloca ptr, align 8\l  %concs.addr = alloca ptr, align 8\l  %egrid.addr = alloca ptr, align 8\l  %index_data.addr = alloca ptr, align 8\l  %nuclide_grids.addr = alloca ptr, align 8\l  %mats.addr = alloca ptr, align 8\l  %macro_xs_vector.addr = alloca ptr, align 8\l  %grid_type.addr = alloca i32, align 4\l  %hash_bins.addr = alloca i32, align 4\l  %max_num_nucs.addr = alloca i32, align 4\l  %p_nuc = alloca i32, align 4\l  %idx = alloca i64, align 8\l  %conc = alloca double, align 8\l  %k = alloca i32, align 4\l  %du = alloca double, align 8\l  %j = alloca i32, align 4\l  %xs_vector = alloca [5 x double], align 16\l  %k20 = alloca i32, align 4\l  store double %p_energy, ptr %p_energy.addr, align 8\l  store i32 %mat, ptr %mat.addr, align 4\l  store i64 %n_isotopes, ptr %n_isotopes.addr, align 8\l  store i64 %n_gridpoints, ptr %n_gridpoints.addr, align 8\l  store ptr %num_nucs, ptr %num_nucs.addr, align 8\l  store ptr %concs, ptr %concs.addr, align 8\l  store ptr %egrid, ptr %egrid.addr, align 8\l  store ptr %index_data, ptr %index_data.addr, align 8\l  store ptr %nuclide_grids, ptr %nuclide_grids.addr, align 8\l  store ptr %mats, ptr %mats.addr, align 8\l  store ptr %macro_xs_vector, ptr %macro_xs_vector.addr, align 8\l  store i32 %grid_type, ptr %grid_type.addr, align 4\l  store i32 %hash_bins, ptr %hash_bins.addr, align 4\l  store i32 %max_num_nucs, ptr %max_num_nucs.addr, align 4\l  store i64 -1, ptr %idx, align 8\l  store i32 0, ptr %k, align 4\l  br label %for.cond\l}"];
	Node0x564d03bf0610 -> Node0x564d03be9530[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x564d03be9530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.cond:\l|  %0 = load i32, ptr %k, align 4\l  %cmp = icmp slt i32 %0, 5\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x564d03be9530:s0 -> Node0x564d03be2350[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x564d03be9530:s1 -> Node0x564d03bf32d0[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x564d03be2350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.body:\l|  %1 = load ptr, ptr %macro_xs_vector.addr, align 8\l  %2 = load i32, ptr %k, align 4\l  %idxprom = sext i32 %2 to i64\l  %arrayidx = getelementptr inbounds double, ptr %1, i64 %idxprom\l  store double 0.000000e+00, ptr %arrayidx, align 8\l  br label %for.inc\l}"];
	Node0x564d03be2350 -> Node0x564d03bf36e0[tooltip="for.body -> for.inc\nProbability 100.00%" ];
	Node0x564d03bf36e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.inc:\l|  %3 = load i32, ptr %k, align 4\l  %inc = add nsw i32 %3, 1\l  store i32 %inc, ptr %k, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x564d03bf36e0 -> Node0x564d03be9530[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x564d03bf32d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{for.end:\l|  %4 = load i32, ptr %grid_type.addr, align 4\l  %cmp1 = icmp eq i32 %4, 0\l  br i1 %cmp1, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x564d03bf32d0:s0 -> Node0x564d03bf3bf0[tooltip="for.end -> if.then\nProbability 37.50%" ];
	Node0x564d03bf32d0:s1 -> Node0x564d03bf3c60[tooltip="for.end -> if.else\nProbability 62.50%" ];
	Node0x564d03bf3bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70" fontname="Courier",label="{if.then:\l|  %5 = load i64, ptr %n_isotopes.addr, align 8\l  %6 = load i64, ptr %n_gridpoints.addr, align 8\l  %mul = mul nsw i64 %5, %6\l  %7 = load double, ptr %p_energy.addr, align 8\l  %8 = load ptr, ptr %egrid.addr, align 8\l  %call = call i64 @grid_search(i64 noundef %mul, double noundef %7, ptr\l... noundef %8)\l  store i64 %call, ptr %idx, align 8\l  br label %if.end6\l}"];
	Node0x564d03bf3bf0 -> Node0x564d03bf4830[tooltip="if.then -> if.end6\nProbability 100.00%" ];
	Node0x564d03bf3c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670" fontname="Courier",label="{if.else:\l|  %9 = load i32, ptr %grid_type.addr, align 4\l  %cmp2 = icmp eq i32 %9, 2\l  br i1 %cmp2, label %if.then3, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x564d03bf3c60:s0 -> Node0x564d03bf4a20[tooltip="if.else -> if.then3\nProbability 50.00%" ];
	Node0x564d03bf3c60:s1 -> Node0x564d03bf4a70[tooltip="if.else -> if.end\nProbability 50.00%" ];
	Node0x564d03bf4a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70" fontname="Courier",label="{if.then3:\l|  %10 = load i32, ptr %hash_bins.addr, align 4\l  %conv = sitofp i32 %10 to double\l  %div = fdiv double 1.000000e+00, %conv\l  store double %div, ptr %du, align 8\l  %11 = load double, ptr %p_energy.addr, align 8\l  %12 = load double, ptr %du, align 8\l  %div4 = fdiv double %11, %12\l  %conv5 = fptosi double %div4 to i64\l  store i64 %conv5, ptr %idx, align 8\l  br label %if.end\l}"];
	Node0x564d03bf4a20 -> Node0x564d03bf4a70[tooltip="if.then3 -> if.end\nProbability 100.00%" ];
	Node0x564d03bf4a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670" fontname="Courier",label="{if.end:\l|  br label %if.end6\l}"];
	Node0x564d03bf4a70 -> Node0x564d03bf4830[tooltip="if.end -> if.end6\nProbability 100.00%" ];
	Node0x564d03bf4830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{if.end6:\l|  store i32 0, ptr %j, align 4\l  br label %for.cond7\l}"];
	Node0x564d03bf4830 -> Node0x564d03bf5290[tooltip="if.end6 -> for.cond7\nProbability 100.00%" ];
	Node0x564d03bf5290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.cond7:\l|  %13 = load i32, ptr %j, align 4\l  %14 = load ptr, ptr %num_nucs.addr, align 8\l  %15 = load i32, ptr %mat.addr, align 4\l  %idxprom8 = sext i32 %15 to i64\l  %arrayidx9 = getelementptr inbounds i32, ptr %14, i64 %idxprom8\l  %16 = load i32, ptr %arrayidx9, align 4\l  %cmp10 = icmp slt i32 %13, %16\l  br i1 %cmp10, label %for.body12, label %for.end35\l|{<s0>T|<s1>F}}"];
	Node0x564d03bf5290:s0 -> Node0x564d03bf5770[tooltip="for.cond7 -> for.body12\nProbability 96.88%" ];
	Node0x564d03bf5290:s1 -> Node0x564d03bf57f0[tooltip="for.cond7 -> for.end35\nProbability 3.12%" ];
	Node0x564d03bf5770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.body12:\l|  %17 = load ptr, ptr %mats.addr, align 8\l  %18 = load i32, ptr %mat.addr, align 4\l  %19 = load i32, ptr %max_num_nucs.addr, align 4\l  %mul13 = mul nsw i32 %18, %19\l  %20 = load i32, ptr %j, align 4\l  %add = add nsw i32 %mul13, %20\l  %idxprom14 = sext i32 %add to i64\l  %arrayidx15 = getelementptr inbounds i32, ptr %17, i64 %idxprom14\l  %21 = load i32, ptr %arrayidx15, align 4\l  store i32 %21, ptr %p_nuc, align 4\l  %22 = load ptr, ptr %concs.addr, align 8\l  %23 = load i32, ptr %mat.addr, align 4\l  %24 = load i32, ptr %max_num_nucs.addr, align 4\l  %mul16 = mul nsw i32 %23, %24\l  %25 = load i32, ptr %j, align 4\l  %add17 = add nsw i32 %mul16, %25\l  %idxprom18 = sext i32 %add17 to i64\l  %arrayidx19 = getelementptr inbounds double, ptr %22, i64 %idxprom18\l  %26 = load double, ptr %arrayidx19, align 8\l  store double %26, ptr %conc, align 8\l  %27 = load double, ptr %p_energy.addr, align 8\l  %28 = load i32, ptr %p_nuc, align 4\l  %29 = load i64, ptr %n_isotopes.addr, align 8\l  %30 = load i64, ptr %n_gridpoints.addr, align 8\l  %31 = load ptr, ptr %egrid.addr, align 8\l  %32 = load ptr, ptr %index_data.addr, align 8\l  %33 = load ptr, ptr %nuclide_grids.addr, align 8\l  %34 = load i64, ptr %idx, align 8\l  %arraydecay = getelementptr inbounds [5 x double], ptr %xs_vector, i64 0,\l... i64 0\l  %35 = load i32, ptr %grid_type.addr, align 4\l  %36 = load i32, ptr %hash_bins.addr, align 4\l  call void @calculate_micro_xs(double noundef %27, i32 noundef %28, i64\l... noundef %29, i64 noundef %30, ptr noundef %31, ptr noundef %32, ptr noundef\l... %33, i64 noundef %34, ptr noundef %arraydecay, i32 noundef %35, i32 noundef\l... %36)\l  store i32 0, ptr %k20, align 4\l  br label %for.cond21\l}"];
	Node0x564d03bf5770 -> Node0x564d03bf7090[tooltip="for.body12 -> for.cond21\nProbability 100.00%" ];
	Node0x564d03bf7090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond21:\l|  %37 = load i32, ptr %k20, align 4\l  %cmp22 = icmp slt i32 %37, 5\l  br i1 %cmp22, label %for.body24, label %for.end32\l|{<s0>T|<s1>F}}"];
	Node0x564d03bf7090:s0 -> Node0x564d03bf71d0[tooltip="for.cond21 -> for.body24\nProbability 96.88%" ];
	Node0x564d03bf7090:s1 -> Node0x564d03bf7220[tooltip="for.cond21 -> for.end32\nProbability 3.12%" ];
	Node0x564d03bf71d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body24:\l|  %38 = load i32, ptr %k20, align 4\l  %idxprom25 = sext i32 %38 to i64\l  %arrayidx26 = getelementptr inbounds [5 x double], ptr %xs_vector, i64 0,\l... i64 %idxprom25\l  %39 = load double, ptr %arrayidx26, align 8\l  %40 = load double, ptr %conc, align 8\l  %41 = load ptr, ptr %macro_xs_vector.addr, align 8\l  %42 = load i32, ptr %k20, align 4\l  %idxprom28 = sext i32 %42 to i64\l  %arrayidx29 = getelementptr inbounds double, ptr %41, i64 %idxprom28\l  %43 = load double, ptr %arrayidx29, align 8\l  %44 = call double @llvm.fmuladd.f64(double %39, double %40, double %43)\l  store double %44, ptr %arrayidx29, align 8\l  br label %for.inc30\l}"];
	Node0x564d03bf71d0 -> Node0x564d03bf7b60[tooltip="for.body24 -> for.inc30\nProbability 100.00%" ];
	Node0x564d03bf7b60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc30:\l|  %45 = load i32, ptr %k20, align 4\l  %inc31 = add nsw i32 %45, 1\l  store i32 %inc31, ptr %k20, align 4\l  br label %for.cond21, !llvm.loop !8\l}"];
	Node0x564d03bf7b60 -> Node0x564d03bf7090[tooltip="for.inc30 -> for.cond21\nProbability 100.00%" ];
	Node0x564d03bf7220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end32:\l|  br label %for.inc33\l}"];
	Node0x564d03bf7220 -> Node0x564d03bf7e70[tooltip="for.end32 -> for.inc33\nProbability 100.00%" ];
	Node0x564d03bf7e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.inc33:\l|  %46 = load i32, ptr %j, align 4\l  %inc34 = add nsw i32 %46, 1\l  store i32 %inc34, ptr %j, align 4\l  br label %for.cond7, !llvm.loop !9\l}"];
	Node0x564d03bf7e70 -> Node0x564d03bf5290[tooltip="for.inc33 -> for.cond7\nProbability 100.00%" ];
	Node0x564d03bf57f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{for.end35:\l|  ret void\l}"];
}
