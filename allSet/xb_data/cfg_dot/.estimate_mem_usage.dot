digraph "CFG for 'estimate_mem_usage' function" {
	label="CFG for 'estimate_mem_usage' function";

	Node0x55bfd5c171a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %single_nuclide_grid = alloca i64, align 8\l  %all_nuclide_grids = alloca i64, align 8\l  %size_UEG = alloca i64, align 8\l  %size_hash_grid = alloca i64, align 8\l  %memtotal = alloca i64, align 8\l  %n_gridpoints = getelementptr inbounds %struct.Inputs, ptr %in, i32 0, i32 2\l  %0 = load i64, ptr %n_gridpoints, align 8\l  %mul = mul i64 %0, 48\l  store i64 %mul, ptr %single_nuclide_grid, align 8\l  %n_isotopes = getelementptr inbounds %struct.Inputs, ptr %in, i32 0, i32 1\l  %1 = load i64, ptr %n_isotopes, align 8\l  %2 = load i64, ptr %single_nuclide_grid, align 8\l  %mul1 = mul i64 %1, %2\l  store i64 %mul1, ptr %all_nuclide_grids, align 8\l  %n_isotopes2 = getelementptr inbounds %struct.Inputs, ptr %in, i32 0, i32 1\l  %3 = load i64, ptr %n_isotopes2, align 8\l  %n_gridpoints3 = getelementptr inbounds %struct.Inputs, ptr %in, i32 0, i32 2\l  %4 = load i64, ptr %n_gridpoints3, align 8\l  %mul4 = mul nsw i64 %3, %4\l  %mul5 = mul i64 %mul4, 8\l  %n_isotopes6 = getelementptr inbounds %struct.Inputs, ptr %in, i32 0, i32 1\l  %5 = load i64, ptr %n_isotopes6, align 8\l  %n_gridpoints7 = getelementptr inbounds %struct.Inputs, ptr %in, i32 0, i32 2\l  %6 = load i64, ptr %n_gridpoints7, align 8\l  %mul8 = mul nsw i64 %5, %6\l  %n_isotopes9 = getelementptr inbounds %struct.Inputs, ptr %in, i32 0, i32 1\l  %7 = load i64, ptr %n_isotopes9, align 8\l  %mul10 = mul nsw i64 %mul8, %7\l  %mul11 = mul i64 %mul10, 4\l  %add = add i64 %mul5, %mul11\l  store i64 %add, ptr %size_UEG, align 8\l  %hash_bins = getelementptr inbounds %struct.Inputs, ptr %in, i32 0, i32 6\l  %8 = load i32, ptr %hash_bins, align 4\l  %conv = sext i32 %8 to i64\l  %n_isotopes12 = getelementptr inbounds %struct.Inputs, ptr %in, i32 0, i32 1\l  %9 = load i64, ptr %n_isotopes12, align 8\l  %mul13 = mul nsw i64 %conv, %9\l  %mul14 = mul i64 %mul13, 4\l  store i64 %mul14, ptr %size_hash_grid, align 8\l  %grid_type = getelementptr inbounds %struct.Inputs, ptr %in, i32 0, i32 5\l  %10 = load i32, ptr %grid_type, align 8\l  %cmp = icmp eq i32 %10, 0\l  br i1 %cmp, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x55bfd5c171a0:s0 -> Node0x55bfd5c19c00[tooltip="entry -> if.then\nProbability 37.50%" ];
	Node0x55bfd5c171a0:s1 -> Node0x55bfd5c19c70[tooltip="entry -> if.else\nProbability 62.50%" ];
	Node0x55bfd5c19c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.then:\l|  %11 = load i64, ptr %all_nuclide_grids, align 8\l  %12 = load i64, ptr %size_UEG, align 8\l  %add16 = add i64 %11, %12\l  store i64 %add16, ptr %memtotal, align 8\l  br label %if.end23\l}"];
	Node0x55bfd5c19c00 -> Node0x55bfd5c1a070[tooltip="if.then -> if.end23\nProbability 100.00%" ];
	Node0x55bfd5c19c70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.else:\l|  %grid_type17 = getelementptr inbounds %struct.Inputs, ptr %in, i32 0, i32 5\l  %13 = load i32, ptr %grid_type17, align 8\l  %cmp18 = icmp eq i32 %13, 1\l  br i1 %cmp18, label %if.then20, label %if.else21\l|{<s0>T|<s1>F}}"];
	Node0x55bfd5c19c70:s0 -> Node0x55bfd5c1a320[tooltip="if.else -> if.then20\nProbability 50.00%" ];
	Node0x55bfd5c19c70:s1 -> Node0x55bfd5c1a3a0[tooltip="if.else -> if.else21\nProbability 50.00%" ];
	Node0x55bfd5c1a320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.then20:\l|  %14 = load i64, ptr %all_nuclide_grids, align 8\l  store i64 %14, ptr %memtotal, align 8\l  br label %if.end\l}"];
	Node0x55bfd5c1a320 -> Node0x55bfd5c1a6b0[tooltip="if.then20 -> if.end\nProbability 100.00%" ];
	Node0x55bfd5c1a3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.else21:\l|  %15 = load i64, ptr %all_nuclide_grids, align 8\l  %16 = load i64, ptr %size_hash_grid, align 8\l  %add22 = add i64 %15, %16\l  store i64 %add22, ptr %memtotal, align 8\l  br label %if.end\l}"];
	Node0x55bfd5c1a3a0 -> Node0x55bfd5c1a6b0[tooltip="if.else21 -> if.end\nProbability 100.00%" ];
	Node0x55bfd5c1a6b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.end:\l|  br label %if.end23\l}"];
	Node0x55bfd5c1a6b0 -> Node0x55bfd5c1a070[tooltip="if.end -> if.end23\nProbability 100.00%" ];
	Node0x55bfd5c1a070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end23:\l|  %17 = load i64, ptr %memtotal, align 8\l  %conv24 = uitofp i64 %17 to double\l  %div = fdiv double %conv24, 0x4130000000000000\l  %18 = call double @llvm.ceil.f64(double %div)\l  %conv25 = fptoui double %18 to i64\l  store i64 %conv25, ptr %memtotal, align 8\l  %19 = load i64, ptr %memtotal, align 8\l  ret i64 %19\l}"];
}
