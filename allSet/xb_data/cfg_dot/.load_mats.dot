digraph "CFG for 'load_mats' function" {
	label="CFG for 'load_mats' function";

	Node0x5622378fd3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %num_nucs.addr = alloca ptr, align 8\l  %n_isotopes.addr = alloca i64, align 8\l  %max_num_nucs.addr = alloca ptr, align 8\l  %num_mats = alloca i32, align 4\l  %m = alloca i32, align 4\l  %mats = alloca ptr, align 8\l  %mats0_Sml = alloca [34 x i32], align 16\l  %mats0_Lrg = alloca [321 x i32], align 16\l  %i = alloca i32, align 4\l  %mats1 = alloca [5 x i32], align 16\l  %mats2 = alloca [4 x i32], align 16\l  %mats3 = alloca [4 x i32], align 16\l  %mats4 = alloca [27 x i32], align 16\l  %mats5 = alloca [21 x i32], align 16\l  %mats6 = alloca [21 x i32], align 16\l  %mats7 = alloca [21 x i32], align 16\l  %mats8 = alloca [21 x i32], align 16\l  %mats9 = alloca [21 x i32], align 16\l  %mats10 = alloca [9 x i32], align 16\l  %mats11 = alloca [9 x i32], align 16\l  store ptr %num_nucs, ptr %num_nucs.addr, align 8\l  store i64 %n_isotopes, ptr %n_isotopes.addr, align 8\l  store ptr %max_num_nucs, ptr %max_num_nucs.addr, align 8\l  %0 = load ptr, ptr %max_num_nucs.addr, align 8\l  store i32 0, ptr %0, align 4\l  store i32 12, ptr %num_mats, align 4\l  store i32 0, ptr %m, align 4\l  br label %for.cond\l}"];
	Node0x5622378fd3a0 -> Node0x5622378fef00[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x5622378fef00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %1 = load i32, ptr %m, align 4\l  %2 = load i32, ptr %num_mats, align 4\l  %cmp = icmp slt i32 %1, %2\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5622378fef00:s0 -> Node0x5622378ff490[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x5622378fef00:s1 -> Node0x5622378ff4e0[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x5622378ff490 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %3 = load ptr, ptr %num_nucs.addr, align 8\l  %4 = load i32, ptr %m, align 4\l  %idxprom = sext i32 %4 to i64\l  %arrayidx = getelementptr inbounds i32, ptr %3, i64 %idxprom\l  %5 = load i32, ptr %arrayidx, align 4\l  %6 = load ptr, ptr %max_num_nucs.addr, align 8\l  %7 = load i32, ptr %6, align 4\l  %cmp1 = icmp sgt i32 %5, %7\l  br i1 %cmp1, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5622378ff490:s0 -> Node0x5622378ffac0[tooltip="for.body -> if.then\nProbability 50.00%" ];
	Node0x5622378ff490:s1 -> Node0x5622378ffb30[tooltip="for.body -> if.end\nProbability 50.00%" ];
	Node0x5622378ffac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then:\l|  %8 = load ptr, ptr %num_nucs.addr, align 8\l  %9 = load i32, ptr %m, align 4\l  %idxprom2 = sext i32 %9 to i64\l  %arrayidx3 = getelementptr inbounds i32, ptr %8, i64 %idxprom2\l  %10 = load i32, ptr %arrayidx3, align 4\l  %11 = load ptr, ptr %max_num_nucs.addr, align 8\l  store i32 %10, ptr %11, align 4\l  br label %if.end\l}"];
	Node0x5622378ffac0 -> Node0x5622378ffb30[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x5622378ffb30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end:\l|  br label %for.inc\l}"];
	Node0x5622378ffb30 -> Node0x5622379000d0[tooltip="if.end -> for.inc\nProbability 100.00%" ];
	Node0x5622379000d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %12 = load i32, ptr %m, align 4\l  %inc = add nsw i32 %12, 1\l  store i32 %inc, ptr %m, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x5622379000d0 -> Node0x5622378fef00[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x5622378ff4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  %13 = load i32, ptr %num_mats, align 4\l  %14 = load ptr, ptr %max_num_nucs.addr, align 8\l  %15 = load i32, ptr %14, align 4\l  %mul = mul nsw i32 %13, %15\l  %conv = sext i32 %mul to i64\l  %mul4 = mul i64 %conv, 4\l  %call = call noalias ptr @malloc(i64 noundef %mul4) #4\l  store ptr %call, ptr %mats, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %mats0_Sml, ptr align 16\l... @__const.load_mats.mats0_Sml, i64 136, i1 false)\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %mats0_Lrg, ptr align 16\l... @__const.load_mats.mats0_Lrg, i64 1284, i1 false)\l  store i32 0, ptr %i, align 4\l  br label %for.cond5\l}"];
	Node0x5622378ff4e0 -> Node0x562237901990[tooltip="for.end -> for.cond5\nProbability 100.00%" ];
	Node0x562237901990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond5:\l|  %16 = load i32, ptr %i, align 4\l  %cmp6 = icmp slt i32 %16, 287\l  br i1 %cmp6, label %for.body8, label %for.end14\l|{<s0>T|<s1>F}}"];
	Node0x562237901990:s0 -> Node0x562237901b60[tooltip="for.cond5 -> for.body8\nProbability 96.88%" ];
	Node0x562237901990:s1 -> Node0x562237901be0[tooltip="for.cond5 -> for.end14\nProbability 3.12%" ];
	Node0x562237901b60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body8:\l|  %17 = load i32, ptr %i, align 4\l  %add = add nsw i32 68, %17\l  %18 = load i32, ptr %i, align 4\l  %add9 = add nsw i32 34, %18\l  %idxprom10 = sext i32 %add9 to i64\l  %arrayidx11 = getelementptr inbounds [321 x i32], ptr %mats0_Lrg, i64 0, i64\l... %idxprom10\l  store i32 %add, ptr %arrayidx11, align 4\l  br label %for.inc12\l}"];
	Node0x562237901b60 -> Node0x5622379027d0[tooltip="for.body8 -> for.inc12\nProbability 100.00%" ];
	Node0x5622379027d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc12:\l|  %19 = load i32, ptr %i, align 4\l  %inc13 = add nsw i32 %19, 1\l  store i32 %inc13, ptr %i, align 4\l  br label %for.cond5, !llvm.loop !8\l}"];
	Node0x5622379027d0 -> Node0x562237901990[tooltip="for.inc12 -> for.cond5\nProbability 100.00%" ];
	Node0x562237901be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end14:\l|  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %mats1, ptr align 16\l... @__const.load_mats.mats1, i64 20, i1 false)\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %mats2, ptr align 16\l... @__const.load_mats.mats2, i64 16, i1 false)\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %mats3, ptr align 16\l... @__const.load_mats.mats3, i64 16, i1 false)\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %mats4, ptr align 16\l... @__const.load_mats.mats4, i64 108, i1 false)\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %mats5, ptr align 16\l... @__const.load_mats.mats5, i64 84, i1 false)\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %mats6, ptr align 16\l... @__const.load_mats.mats6, i64 84, i1 false)\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %mats7, ptr align 16\l... @__const.load_mats.mats7, i64 84, i1 false)\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %mats8, ptr align 16\l... @__const.load_mats.mats8, i64 84, i1 false)\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %mats9, ptr align 16\l... @__const.load_mats.mats9, i64 84, i1 false)\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %mats10, ptr align 16\l... @__const.load_mats.mats10, i64 36, i1 false)\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %mats11, ptr align 16\l... @__const.load_mats.mats11, i64 36, i1 false)\l  %20 = load i64, ptr %n_isotopes.addr, align 8\l  %cmp15 = icmp eq i64 %20, 68\l  br i1 %cmp15, label %if.then17, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x562237901be0:s0 -> Node0x562237903d90[tooltip="for.end14 -> if.then17\nProbability 50.00%" ];
	Node0x562237901be0:s1 -> Node0x562237903de0[tooltip="for.end14 -> if.else\nProbability 50.00%" ];
	Node0x562237903d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{if.then17:\l|  %21 = load ptr, ptr %mats, align 8\l  %arraydecay = getelementptr inbounds [34 x i32], ptr %mats0_Sml, i64 0, i64 0\l  %22 = load ptr, ptr %num_nucs.addr, align 8\l  %arrayidx18 = getelementptr inbounds i32, ptr %22, i64 0\l  %23 = load i32, ptr %arrayidx18, align 4\l  %conv19 = sext i32 %23 to i64\l  %mul20 = mul i64 %conv19, 4\l  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %21, ptr align 16 %arraydecay,\l... i64 %mul20, i1 false)\l  br label %if.end25\l}"];
	Node0x562237903d90 -> Node0x5622378fda10[tooltip="if.then17 -> if.end25\nProbability 100.00%" ];
	Node0x562237903de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{if.else:\l|  %24 = load ptr, ptr %mats, align 8\l  %arraydecay21 = getelementptr inbounds [321 x i32], ptr %mats0_Lrg, i64 0,\l... i64 0\l  %25 = load ptr, ptr %num_nucs.addr, align 8\l  %arrayidx22 = getelementptr inbounds i32, ptr %25, i64 0\l  %26 = load i32, ptr %arrayidx22, align 4\l  %conv23 = sext i32 %26 to i64\l  %mul24 = mul i64 %conv23, 4\l  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %24, ptr align 16\l... %arraydecay21, i64 %mul24, i1 false)\l  br label %if.end25\l}"];
	Node0x562237903de0 -> Node0x5622378fda10[tooltip="if.else -> if.end25\nProbability 100.00%" ];
	Node0x5622378fda10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.end25:\l|  %27 = load ptr, ptr %mats, align 8\l  %28 = load ptr, ptr %max_num_nucs.addr, align 8\l  %29 = load i32, ptr %28, align 4\l  %mul26 = mul nsw i32 %29, 1\l  %idx.ext = sext i32 %mul26 to i64\l  %add.ptr = getelementptr inbounds i32, ptr %27, i64 %idx.ext\l  %arraydecay27 = getelementptr inbounds [5 x i32], ptr %mats1, i64 0, i64 0\l  %30 = load ptr, ptr %num_nucs.addr, align 8\l  %arrayidx28 = getelementptr inbounds i32, ptr %30, i64 1\l  %31 = load i32, ptr %arrayidx28, align 4\l  %conv29 = sext i32 %31 to i64\l  %mul30 = mul i64 %conv29, 4\l  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %add.ptr, ptr align 16\l... %arraydecay27, i64 %mul30, i1 false)\l  %32 = load ptr, ptr %mats, align 8\l  %33 = load ptr, ptr %max_num_nucs.addr, align 8\l  %34 = load i32, ptr %33, align 4\l  %mul31 = mul nsw i32 %34, 2\l  %idx.ext32 = sext i32 %mul31 to i64\l  %add.ptr33 = getelementptr inbounds i32, ptr %32, i64 %idx.ext32\l  %arraydecay34 = getelementptr inbounds [4 x i32], ptr %mats2, i64 0, i64 0\l  %35 = load ptr, ptr %num_nucs.addr, align 8\l  %arrayidx35 = getelementptr inbounds i32, ptr %35, i64 2\l  %36 = load i32, ptr %arrayidx35, align 4\l  %conv36 = sext i32 %36 to i64\l  %mul37 = mul i64 %conv36, 4\l  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %add.ptr33, ptr align 16\l... %arraydecay34, i64 %mul37, i1 false)\l  %37 = load ptr, ptr %mats, align 8\l  %38 = load ptr, ptr %max_num_nucs.addr, align 8\l  %39 = load i32, ptr %38, align 4\l  %mul38 = mul nsw i32 %39, 3\l  %idx.ext39 = sext i32 %mul38 to i64\l  %add.ptr40 = getelementptr inbounds i32, ptr %37, i64 %idx.ext39\l  %arraydecay41 = getelementptr inbounds [4 x i32], ptr %mats3, i64 0, i64 0\l  %40 = load ptr, ptr %num_nucs.addr, align 8\l  %arrayidx42 = getelementptr inbounds i32, ptr %40, i64 3\l  %41 = load i32, ptr %arrayidx42, align 4\l  %conv43 = sext i32 %41 to i64\l  %mul44 = mul i64 %conv43, 4\l  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %add.ptr40, ptr align 16\l... %arraydecay41, i64 %mul44, i1 false)\l  %42 = load ptr, ptr %mats, align 8\l  %43 = load ptr, ptr %max_num_nucs.addr, align 8\l  %44 = load i32, ptr %43, align 4\l  %mul45 = mul nsw i32 %44, 4\l  %idx.ext46 = sext i32 %mul45 to i64\l  %add.ptr47 = getelementptr inbounds i32, ptr %42, i64 %idx.ext46\l  %arraydecay48 = getelementptr inbounds [27 x i32], ptr %mats4, i64 0, i64 0\l  %45 = load ptr, ptr %num_nucs.addr, align 8\l  %arrayidx49 = getelementptr inbounds i32, ptr %45, i64 4\l  %46 = load i32, ptr %arrayidx49, align 4\l  %conv50 = sext i32 %46 to i64\l  %mul51 = mul i64 %conv50, 4\l  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %add.ptr47, ptr align 16\l... %arraydecay48, i64 %mul51, i1 false)\l  %47 = load ptr, ptr %mats, align 8\l  %48 = load ptr, ptr %max_num_nucs.addr, align 8\l  %49 = load i32, ptr %48, align 4\l  %mul52 = mul nsw i32 %49, 5\l  %idx.ext53 = sext i32 %mul52 to i64\l  %add.ptr54 = getelementptr inbounds i32, ptr %47, i64 %idx.ext53\l  %arraydecay55 = getelementptr inbounds [21 x i32], ptr %mats5, i64 0, i64 0\l  %50 = load ptr, ptr %num_nucs.addr, align 8\l  %arrayidx56 = getelementptr inbounds i32, ptr %50, i64 5\l  %51 = load i32, ptr %arrayidx56, align 4\l  %conv57 = sext i32 %51 to i64\l  %mul58 = mul i64 %conv57, 4\l  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %add.ptr54, ptr align 16\l... %arraydecay55, i64 %mul58, i1 false)\l  %52 = load ptr, ptr %mats, align 8\l  %53 = load ptr, ptr %max_num_nucs.addr, align 8\l  %54 = load i32, ptr %53, align 4\l  %mul59 = mul nsw i32 %54, 6\l  %idx.ext60 = sext i32 %mul59 to i64\l  %add.ptr61 = getelementptr inbounds i32, ptr %52, i64 %idx.ext60\l  %arraydecay62 = getelementptr inbounds [21 x i32], ptr %mats6, i64 0, i64 0\l  %55 = load ptr, ptr %num_nucs.addr, align 8\l  %arrayidx63 = getelementptr inbounds i32, ptr %55, i64 6\l  %56 = load i32, ptr %arrayidx63, align 4\l  %conv64 = sext i32 %56 to i64\l  %mul65 = mul i64 %conv64, 4\l  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %add.ptr61, ptr align 16\l... %arraydecay62, i64 %mul65, i1 false)\l  %57 = load ptr, ptr %mats, align 8\l  %58 = load ptr, ptr %max_num_nucs.addr, align 8\l  %59 = load i32, ptr %58, align 4\l  %mul66 = mul nsw i32 %59, 7\l  %idx.ext67 = sext i32 %mul66 to i64\l  %add.ptr68 = getelementptr inbounds i32, ptr %57, i64 %idx.ext67\l  %arraydecay69 = getelementptr inbounds [21 x i32], ptr %mats7, i64 0, i64 0\l  %60 = load ptr, ptr %num_nucs.addr, align 8\l  %arrayidx70 = getelementptr inbounds i32, ptr %60, i64 7\l  %61 = load i32, ptr %arrayidx70, align 4\l  %conv71 = sext i32 %61 to i64\l  %mul72 = mul i64 %conv71, 4\l  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %add.ptr68, ptr align 16\l... %arraydecay69, i64 %mul72, i1 false)\l  %62 = load ptr, ptr %mats, align 8\l  %63 = load ptr, ptr %max_num_nucs.addr, align 8\l  %64 = load i32, ptr %63, align 4\l  %mul73 = mul nsw i32 %64, 8\l  %idx.ext74 = sext i32 %mul73 to i64\l  %add.ptr75 = getelementptr inbounds i32, ptr %62, i64 %idx.ext74\l  %arraydecay76 = getelementptr inbounds [21 x i32], ptr %mats8, i64 0, i64 0\l  %65 = load ptr, ptr %num_nucs.addr, align 8\l  %arrayidx77 = getelementptr inbounds i32, ptr %65, i64 8\l  %66 = load i32, ptr %arrayidx77, align 4\l  %conv78 = sext i32 %66 to i64\l  %mul79 = mul i64 %conv78, 4\l  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %add.ptr75, ptr align 16\l... %arraydecay76, i64 %mul79, i1 false)\l  %67 = load ptr, ptr %mats, align 8\l  %68 = load ptr, ptr %max_num_nucs.addr, align 8\l  %69 = load i32, ptr %68, align 4\l  %mul80 = mul nsw i32 %69, 9\l  %idx.ext81 = sext i32 %mul80 to i64\l  %add.ptr82 = getelementptr inbounds i32, ptr %67, i64 %idx.ext81\l  %arraydecay83 = getelementptr inbounds [21 x i32], ptr %mats9, i64 0, i64 0\l  %70 = load ptr, ptr %num_nucs.addr, align 8\l  %arrayidx84 = getelementptr inbounds i32, ptr %70, i64 9\l  %71 = load i32, ptr %arrayidx84, align 4\l  %conv85 = sext i32 %71 to i64\l  %mul86 = mul i64 %conv85, 4\l  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %add.ptr82, ptr align 16\l... %arraydecay83, i64 %mul86, i1 false)\l  %72 = load ptr, ptr %mats, align 8\l  %73 = load ptr, ptr %max_num_nucs.addr, align 8\l  %74 = load i32, ptr %73, align 4\l  %mul87 = mul nsw i32 %74, 10\l  %idx.ext88 = sext i32 %mul87 to i64\l  %add.ptr89 = getelementptr inbounds i32, ptr %72, i64 %idx.ext88\l  %arraydecay90 = getelementptr inbounds [9 x i32], ptr %mats10, i64 0, i64 0\l  %75 = load ptr, ptr %num_nucs.addr, align 8\l  %arrayidx91 = getelementptr inbounds i32, ptr %75, i64 10\l  %76 = load i32, ptr %arrayidx91, align 4\l  %conv92 = sext i32 %76 to i64\l  %mul93 = mul i64 %conv92, 4\l  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %add.ptr89, ptr align 16\l... %arraydecay90, i64 %mul93, i1 false)\l  %77 = load ptr, ptr %mats, align 8\l  %78 = load ptr, ptr %max_num_nucs.addr, align 8\l  %79 = load i32, ptr %78, align 4\l  %mul94 = mul nsw i32 %79, 11\l  %idx.ext95 = sext i32 %mul94 to i64\l  %add.ptr96 = getelementptr inbounds i32, ptr %77, i64 %idx.ext95\l  %arraydecay97 = getelementptr inbounds [9 x i32], ptr %mats11, i64 0, i64 0\l  %80 = load ptr, ptr %num_nucs.addr, align 8\l  %arrayidx98 = getelementptr inbounds i32, ptr %80, i64 11\l  %81 = load i32, ptr %arrayidx98, align 4\l  %conv99 = sext i32 %81 to i64\l  %mul100 = mul i64 %conv99, 4\l  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %add.ptr96, ptr align 16\l... %arraydecay97, i64 %mul100, i1 false)\l  %82 = load ptr, ptr %mats, align 8\l  ret ptr %82\l}"];
}
