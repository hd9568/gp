digraph "CFG for 'binary_write' function" {
	label="CFG for 'binary_write' function";

	Node0x55c2a7fe5650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %fname = alloca ptr, align 8\l  %fp = alloca ptr, align 8\l  store ptr @.str.74, ptr %fname, align 8\l  %0 = load ptr, ptr %fname, align 8\l  %call = call i32 (ptr, ...) @printf(ptr noundef @.str.75, ptr noundef %0)\l  %1 = load ptr, ptr %fname, align 8\l  %call1 = call noalias ptr @fopen(ptr noundef %1, ptr noundef @.str.76)\l  store ptr %call1, ptr %fp, align 8\l  %2 = load ptr, ptr %fp, align 8\l  %call2 = call i64 @fwrite(ptr noundef %SD, i64 noundef 112, i64 noundef 1,\l... ptr noundef %2)\l  %num_nucs = getelementptr inbounds %struct.SimulationData, ptr %SD, i32 0,\l... i32 0\l  %3 = load ptr, ptr %num_nucs, align 8\l  %length_num_nucs = getelementptr inbounds %struct.SimulationData, ptr %SD,\l... i32 0, i32 6\l  %4 = load i32, ptr %length_num_nucs, align 8\l  %conv = sext i32 %4 to i64\l  %5 = load ptr, ptr %fp, align 8\l  %call3 = call i64 @fwrite(ptr noundef %3, i64 noundef 4, i64 noundef %conv,\l... ptr noundef %5)\l  %concs = getelementptr inbounds %struct.SimulationData, ptr %SD, i32 0, i32 1\l  %6 = load ptr, ptr %concs, align 8\l  %length_concs = getelementptr inbounds %struct.SimulationData, ptr %SD, i32\l... 0, i32 7\l  %7 = load i32, ptr %length_concs, align 4\l  %conv4 = sext i32 %7 to i64\l  %8 = load ptr, ptr %fp, align 8\l  %call5 = call i64 @fwrite(ptr noundef %6, i64 noundef 8, i64 noundef %conv4,\l... ptr noundef %8)\l  %mats = getelementptr inbounds %struct.SimulationData, ptr %SD, i32 0, i32 2\l  %9 = load ptr, ptr %mats, align 8\l  %length_mats = getelementptr inbounds %struct.SimulationData, ptr %SD, i32\l... 0, i32 8\l  %10 = load i32, ptr %length_mats, align 8\l  %conv6 = sext i32 %10 to i64\l  %11 = load ptr, ptr %fp, align 8\l  %call7 = call i64 @fwrite(ptr noundef %9, i64 noundef 4, i64 noundef %conv6,\l... ptr noundef %11)\l  %nuclide_grid = getelementptr inbounds %struct.SimulationData, ptr %SD, i32\l... 0, i32 5\l  %12 = load ptr, ptr %nuclide_grid, align 8\l  %length_nuclide_grid = getelementptr inbounds %struct.SimulationData, ptr\l... %SD, i32 0, i32 11\l  %13 = load i32, ptr %length_nuclide_grid, align 8\l  %conv8 = sext i32 %13 to i64\l  %14 = load ptr, ptr %fp, align 8\l  %call9 = call i64 @fwrite(ptr noundef %12, i64 noundef 48, i64 noundef\l... %conv8, ptr noundef %14)\l  %index_grid = getelementptr inbounds %struct.SimulationData, ptr %SD, i32 0,\l... i32 4\l  %15 = load ptr, ptr %index_grid, align 8\l  %length_index_grid = getelementptr inbounds %struct.SimulationData, ptr %SD,\l... i32 0, i32 10\l  %16 = load i64, ptr %length_index_grid, align 8\l  %17 = load ptr, ptr %fp, align 8\l  %call10 = call i64 @fwrite(ptr noundef %15, i64 noundef 4, i64 noundef %16,\l... ptr noundef %17)\l  %unionized_energy_array = getelementptr inbounds %struct.SimulationData, ptr\l... %SD, i32 0, i32 3\l  %18 = load ptr, ptr %unionized_energy_array, align 8\l  %length_unionized_energy_array = getelementptr inbounds\l... %struct.SimulationData, ptr %SD, i32 0, i32 9\l  %19 = load i32, ptr %length_unionized_energy_array, align 4\l  %conv11 = sext i32 %19 to i64\l  %20 = load ptr, ptr %fp, align 8\l  %call12 = call i64 @fwrite(ptr noundef %18, i64 noundef 8, i64 noundef\l... %conv11, ptr noundef %20)\l  %21 = load ptr, ptr %fp, align 8\l  %call13 = call i32 @fclose(ptr noundef %21)\l  ret void\l}"];
}
