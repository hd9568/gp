digraph "CFG for 'run_event_based_simulation' function" {
	label="CFG for 'run_event_based_simulation' function";

	Node0x564d03bdd460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{entry:\l|  %mype.addr = alloca i32, align 4\l  %verification = alloca i64, align 8\l  %i = alloca i32, align 4\l  %num_nucs = alloca ptr, align 8\l  %concs = alloca ptr, align 8\l  %unionized_energy_array = alloca ptr, align 8\l  %index_grid = alloca ptr, align 8\l  %nuclide_grid = alloca ptr, align 8\l  %seed = alloca i64, align 8\l  %p_energy = alloca double, align 8\l  %mat = alloca i32, align 4\l  %macro_xs_vector = alloca [5 x double], align 16\l  %max = alloca double, align 8\l  %max_idx = alloca i32, align 4\l  %j = alloca i32, align 4\l  store i32 %mype, ptr %mype.addr, align 4\l  %0 = load i32, ptr %mype.addr, align 4\l  %cmp = icmp eq i32 %0, 0\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x564d03bdd460:s0 -> Node0x564d03bdeec0[tooltip="entry -> if.then\nProbability 37.50%" ];
	Node0x564d03bdd460:s1 -> Node0x564d03bdef30[tooltip="entry -> if.end\nProbability 62.50%" ];
	Node0x564d03bdeec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70" fontname="Courier",label="{if.then:\l|  %call = call i32 (ptr, ...) @printf(ptr noundef @.str)\l  br label %if.end\l}"];
	Node0x564d03bdeec0 -> Node0x564d03bdef30[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x564d03bdef30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{if.end:\l|  store i64 0, ptr %verification, align 8\l  store i32 0, ptr %i, align 4\l  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x564d03bdef30 -> Node0x564d03bdf490[tooltip="if.end -> for.cond\nProbability 100.00%" ];
	Node0x564d03bdf490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.cond:\l|  %1 = load i32, ptr %i, align 4\l  %lookups = getelementptr inbounds %struct.Inputs, ptr %in, i32 0, i32 3\l  %2 = load i32, ptr %lookups, align 8\l  %cmp1 = icmp slt i32 %1, %2\l  br i1 %cmp1, label %for.body, label %for.end24\l|{<s0>T|<s1>F}}"];
	Node0x564d03bdf490:s0 -> Node0x564d03be0170[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x564d03bdf490:s1 -> Node0x564d03be01f0[tooltip="for.cond -> for.end24\nProbability 3.12%" ];
	Node0x564d03be0170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.body:\l|  %num_nucs2 = getelementptr inbounds %struct.SimulationData, ptr %SD, i32\l... 0, i32 0\l  %3 = load ptr, ptr %num_nucs2, align 8\l  store ptr %3, ptr %num_nucs, align 8\l  %concs3 = getelementptr inbounds %struct.SimulationData, ptr %SD, i32 0, i32\l... 1\l  %4 = load ptr, ptr %concs3, align 8\l  store ptr %4, ptr %concs, align 8\l  %unionized_energy_array4 = getelementptr inbounds %struct.SimulationData,\l... ptr %SD, i32 0, i32 3\l  %5 = load ptr, ptr %unionized_energy_array4, align 8\l  store ptr %5, ptr %unionized_energy_array, align 8\l  %index_grid5 = getelementptr inbounds %struct.SimulationData, ptr %SD, i32\l... 0, i32 4\l  %6 = load ptr, ptr %index_grid5, align 8\l  store ptr %6, ptr %index_grid, align 8\l  %nuclide_grid6 = getelementptr inbounds %struct.SimulationData, ptr %SD, i32\l... 0, i32 5\l  %7 = load ptr, ptr %nuclide_grid6, align 8\l  store ptr %7, ptr %nuclide_grid, align 8\l  store i64 1070, ptr %seed, align 8\l  %8 = load i64, ptr %seed, align 8\l  %9 = load i32, ptr %i, align 4\l  %mul = mul nsw i32 2, %9\l  %conv = sext i32 %mul to i64\l  %call7 = call i64 @fast_forward_LCG(i64 noundef %8, i64 noundef %conv)\l  store i64 %call7, ptr %seed, align 8\l  %call8 = call double @LCG_random_double(ptr noundef %seed)\l  store double %call8, ptr %p_energy, align 8\l  %call9 = call i32 @pick_mat(ptr noundef %seed)\l  store i32 %call9, ptr %mat, align 4\l  call void @llvm.memset.p0.i64(ptr align 16 %macro_xs_vector, i8 0, i64 40,\l... i1 false)\l  %10 = load double, ptr %p_energy, align 8\l  %11 = load i32, ptr %mat, align 4\l  %n_isotopes = getelementptr inbounds %struct.Inputs, ptr %in, i32 0, i32 1\l  %12 = load i64, ptr %n_isotopes, align 8\l  %n_gridpoints = getelementptr inbounds %struct.Inputs, ptr %in, i32 0, i32 2\l  %13 = load i64, ptr %n_gridpoints, align 8\l  %14 = load ptr, ptr %num_nucs, align 8\l  %15 = load ptr, ptr %concs, align 8\l  %16 = load ptr, ptr %unionized_energy_array, align 8\l  %17 = load ptr, ptr %index_grid, align 8\l  %18 = load ptr, ptr %nuclide_grid, align 8\l  %mats = getelementptr inbounds %struct.SimulationData, ptr %SD, i32 0, i32 2\l  %19 = load ptr, ptr %mats, align 8\l  %arraydecay = getelementptr inbounds [5 x double], ptr %macro_xs_vector, i64\l... 0, i64 0\l  %grid_type = getelementptr inbounds %struct.Inputs, ptr %in, i32 0, i32 5\l  %20 = load i32, ptr %grid_type, align 8\l  %hash_bins = getelementptr inbounds %struct.Inputs, ptr %in, i32 0, i32 6\l  %21 = load i32, ptr %hash_bins, align 4\l  %max_num_nucs = getelementptr inbounds %struct.SimulationData, ptr %SD, i32\l... 0, i32 12\l  %22 = load i32, ptr %max_num_nucs, align 4\l  call void @calculate_macro_xs(double noundef %10, i32 noundef %11, i64\l... noundef %12, i64 noundef %13, ptr noundef %14, ptr noundef %15, ptr noundef\l... %16, ptr noundef %17, ptr noundef %18, ptr noundef %19, ptr noundef\l... %arraydecay, i32 noundef %20, i32 noundef %21, i32 noundef %22)\l  store double -1.000000e+00, ptr %max, align 8\l  store i32 0, ptr %max_idx, align 4\l  store i32 0, ptr %j, align 4\l  br label %for.cond10\l}"];
	Node0x564d03be0170 -> Node0x564d03be43d0[tooltip="for.body -> for.cond10\nProbability 100.00%" ];
	Node0x564d03be43d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond10:\l|  %23 = load i32, ptr %j, align 4\l  %cmp11 = icmp slt i32 %23, 5\l  br i1 %cmp11, label %for.body13, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x564d03be43d0:s0 -> Node0x564d03be4570[tooltip="for.cond10 -> for.body13\nProbability 96.88%" ];
	Node0x564d03be43d0:s1 -> Node0x564d03be45c0[tooltip="for.cond10 -> for.end\nProbability 3.12%" ];
	Node0x564d03be4570 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body13:\l|  %24 = load i32, ptr %j, align 4\l  %idxprom = sext i32 %24 to i64\l  %arrayidx = getelementptr inbounds [5 x double], ptr %macro_xs_vector, i64\l... 0, i64 %idxprom\l  %25 = load double, ptr %arrayidx, align 8\l  %26 = load double, ptr %max, align 8\l  %cmp14 = fcmp ogt double %25, %26\l  br i1 %cmp14, label %if.then16, label %if.end19\l|{<s0>T|<s1>F}}"];
	Node0x564d03be4570:s0 -> Node0x564d03be5050[tooltip="for.body13 -> if.then16\nProbability 50.00%" ];
	Node0x564d03be4570:s1 -> Node0x564d03be50d0[tooltip="for.body13 -> if.end19\nProbability 50.00%" ];
	Node0x564d03be5050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then16:\l|  %27 = load i32, ptr %j, align 4\l  %idxprom17 = sext i32 %27 to i64\l  %arrayidx18 = getelementptr inbounds [5 x double], ptr %macro_xs_vector, i64\l... 0, i64 %idxprom17\l  %28 = load double, ptr %arrayidx18, align 8\l  store double %28, ptr %max, align 8\l  %29 = load i32, ptr %j, align 4\l  store i32 %29, ptr %max_idx, align 4\l  br label %if.end19\l}"];
	Node0x564d03be5050 -> Node0x564d03be50d0[tooltip="if.then16 -> if.end19\nProbability 100.00%" ];
	Node0x564d03be50d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end19:\l|  br label %for.inc\l}"];
	Node0x564d03be50d0 -> Node0x564d03be5720[tooltip="if.end19 -> for.inc\nProbability 100.00%" ];
	Node0x564d03be5720 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %30 = load i32, ptr %j, align 4\l  %inc = add nsw i32 %30, 1\l  store i32 %inc, ptr %j, align 4\l  br label %for.cond10, !llvm.loop !6\l}"];
	Node0x564d03be5720 -> Node0x564d03be43d0[tooltip="for.inc -> for.cond10\nProbability 100.00%" ];
	Node0x564d03be45c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  %31 = load i32, ptr %max_idx, align 4\l  %add = add nsw i32 %31, 1\l  %conv20 = sext i32 %add to i64\l  %32 = load i64, ptr %verification, align 8\l  %add21 = add i64 %32, %conv20\l  store i64 %add21, ptr %verification, align 8\l  br label %for.inc22\l}"];
	Node0x564d03be45c0 -> Node0x564d03be68a0[tooltip="for.end -> for.inc22\nProbability 100.00%" ];
	Node0x564d03be68a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.inc22:\l|  %33 = load i32, ptr %i, align 4\l  %inc23 = add nsw i32 %33, 1\l  store i32 %inc23, ptr %i, align 4\l  br label %for.cond, !llvm.loop !8\l}"];
	Node0x564d03be68a0 -> Node0x564d03bdf490[tooltip="for.inc22 -> for.cond\nProbability 100.00%" ];
	Node0x564d03be01f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{for.end24:\l|  %34 = load i64, ptr %verification, align 8\l  ret i64 %34\l}"];
}
