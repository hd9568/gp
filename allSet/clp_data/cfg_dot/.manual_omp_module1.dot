digraph "CFG for 'manual_omp_module1' function" {
	label="CFG for 'manual_omp_module1' function";

	Node0x5567ef5ae3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %startPidx.addr = alloca i32, align 4\l  %endPidx.addr = alloca i32, align 4\l  %pidx = alloca i64, align 8\l  %part = alloca ptr, align 8\l  store i32 %startPidx, ptr %startPidx.addr, align 4\l  store i32 %endPidx, ptr %endPidx.addr, align 4\l  %call = call double @calc_deposit()\l  store double %call, ptr @manual_omp_module1.deposit, align 8\l  %0 = load i32, ptr %startPidx.addr, align 4\l  %conv = sext i32 %0 to i64\l  store i64 %conv, ptr %pidx, align 8\l  br label %for.cond\l}"];
	Node0x5567ef5ae3a0 -> Node0x5567ef5aeb20[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x5567ef5aeb20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %1 = load i64, ptr %pidx, align 8\l  %2 = load i32, ptr %endPidx.addr, align 4\l  %conv1 = sext i32 %2 to i64\l  %cmp = icmp sle i64 %1, %conv1\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5567ef5aeb20:s0 -> Node0x5567ef5aee20[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x5567ef5aeb20:s1 -> Node0x5567ef5ae270[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x5567ef5aee20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %3 = load ptr, ptr @partArray, align 8\l  %4 = load i64, ptr %pidx, align 8\l  %arrayidx = getelementptr inbounds ptr, ptr %3, i64 %4\l  %5 = load ptr, ptr %arrayidx, align 8\l  %6 = load double, ptr @manual_omp_module1.deposit, align 8\l  call void @update_part(ptr noundef %5, double noundef %6)\l  br label %for.inc\l}"];
	Node0x5567ef5aee20 -> Node0x5567ef5af4e0[tooltip="for.body -> for.inc\nProbability 100.00%" ];
	Node0x5567ef5af4e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %7 = load i64, ptr %pidx, align 8\l  %inc = add nsw i64 %7, 1\l  store i64 %inc, ptr %pidx, align 8\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x5567ef5af4e0 -> Node0x5567ef5aeb20[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x5567ef5ae270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  ret void\l}"];
}
