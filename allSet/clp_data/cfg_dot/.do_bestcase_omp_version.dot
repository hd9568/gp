digraph "CFG for 'do_bestcase_omp_version' function" {
	label="CFG for 'do_bestcase_omp_version' function";

	Node0x5567ef5cd010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{entry:\l|  %num_iterations.addr = alloca i64, align 8\l  %iter = alloca i64, align 8\l  %subcycle = alloca i64, align 8\l  %deposit = alloca double, align 8\l  %iteration = alloca i64, align 8\l  %startPidx = alloca i32, align 4\l  %endPidx = alloca i32, align 4\l  %dparts_per_thread = alloca double, align 8\l  %thread_id = alloca i32, align 4\l  %numThreads = alloca i32, align 4\l  store i64 %num_iterations, ptr %num_iterations.addr, align 8\l  %0 = load double, ptr @CLOMP_max_residue, align 8\l  %add = fadd double 1.000000e+00, %0\l  %1 = load i64, ptr @CLOMP_numParts, align 8\l  %conv = sitofp i64 %1 to double\l  %div = fdiv double %add, %conv\l  store double %div, ptr %deposit, align 8\l  %call = call i32 @omp_get_thread_num()\l  store i32 %call, ptr %thread_id, align 4\l  %call1 = call i32 @omp_get_num_threads()\l  store i32 %call1, ptr %numThreads, align 4\l  %2 = load i64, ptr @CLOMP_numParts, align 8\l  %conv2 = sitofp i64 %2 to double\l  %3 = load i32, ptr %numThreads, align 4\l  %conv3 = sitofp i32 %3 to double\l  %div4 = fdiv double %conv2, %conv3\l  store double %div4, ptr %dparts_per_thread, align 8\l  %4 = load double, ptr %dparts_per_thread, align 8\l  %cmp = fcmp olt double %4, 1.000000e+00\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5567ef5cd010:s0 -> Node0x5567ef5ce4e0[tooltip="entry -> if.then\nProbability 50.00%" ];
	Node0x5567ef5cd010:s1 -> Node0x5567ef5ce550[tooltip="entry -> if.end\nProbability 50.00%" ];
	Node0x5567ef5ce4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70" fontname="Courier",label="{if.then:\l|  store double 1.000000e+00, ptr %dparts_per_thread, align 8\l  br label %if.end\l}"];
	Node0x5567ef5ce4e0 -> Node0x5567ef5ce550[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x5567ef5ce550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{if.end:\l|  %5 = load i32, ptr %thread_id, align 4\l  %conv6 = sitofp i32 %5 to double\l  %6 = load double, ptr %dparts_per_thread, align 8\l  %mul = fmul double %conv6, %6\l  %7 = call double @llvm.nearbyint.f64(double %mul)\l  %conv7 = fptosi double %7 to i32\l  store i32 %conv7, ptr %startPidx, align 4\l  %8 = load i32, ptr %thread_id, align 4\l  %conv8 = sitofp i32 %8 to double\l  %add9 = fadd double %conv8, 1.000000e+00\l  %9 = load double, ptr %dparts_per_thread, align 8\l  %mul10 = fmul double %add9, %9\l  %10 = call double @llvm.nearbyint.f64(double %mul10)\l  %conv11 = fptosi double %10 to i32\l  %sub = sub nsw i32 %conv11, 1\l  store i32 %sub, ptr %endPidx, align 4\l  %11 = load i32, ptr %endPidx, align 4\l  %conv12 = sext i32 %11 to i64\l  %12 = load i64, ptr @CLOMP_numParts, align 8\l  %cmp13 = icmp sge i64 %conv12, %12\l  br i1 %cmp13, label %if.then15, label %if.end18\l|{<s0>T|<s1>F}}"];
	Node0x5567ef5ce550:s0 -> Node0x5567ef5cf560[tooltip="if.end -> if.then15\nProbability 50.00%" ];
	Node0x5567ef5ce550:s1 -> Node0x5567ef5cf5b0[tooltip="if.end -> if.end18\nProbability 50.00%" ];
	Node0x5567ef5cf560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70" fontname="Courier",label="{if.then15:\l|  %13 = load i64, ptr @CLOMP_numParts, align 8\l  %sub16 = sub nsw i64 %13, 1\l  %conv17 = trunc i64 %sub16 to i32\l  store i32 %conv17, ptr %endPidx, align 4\l  br label %if.end18\l}"];
	Node0x5567ef5cf560 -> Node0x5567ef5cf5b0[tooltip="if.then15 -> if.end18\nProbability 100.00%" ];
	Node0x5567ef5cf5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{if.end18:\l|  %14 = load i32, ptr %startPidx, align 4\l  %conv19 = sext i32 %14 to i64\l  %15 = load i64, ptr @CLOMP_numParts, align 8\l  %cmp20 = icmp sge i64 %conv19, %15\l  br i1 %cmp20, label %if.then22, label %if.end24\l|{<s0>T|<s1>F}}"];
	Node0x5567ef5cf5b0:s0 -> Node0x5567ef5cfbc0[tooltip="if.end18 -> if.then22\nProbability 50.00%" ];
	Node0x5567ef5cf5b0:s1 -> Node0x5567ef5cfc10[tooltip="if.end18 -> if.end24\nProbability 50.00%" ];
	Node0x5567ef5cfbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70" fontname="Courier",label="{if.then22:\l|  %16 = load i32, ptr %thread_id, align 4\l  %call23 = call i32 (ptr, ...) @printf(ptr noundef @.str.59, i32 noundef %16)\l  br label %if.end24\l}"];
	Node0x5567ef5cfbc0 -> Node0x5567ef5cfc10[tooltip="if.then22 -> if.end24\nProbability 100.00%" ];
	Node0x5567ef5cfc10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{if.end24:\l|  store i64 0, ptr %iteration, align 8\l  br label %for.cond\l}"];
	Node0x5567ef5cfc10 -> Node0x5567ef5d0000[tooltip="if.end24 -> for.cond\nProbability 100.00%" ];
	Node0x5567ef5d0000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.cond:\l|  %17 = load i64, ptr %iteration, align 8\l  %18 = load i64, ptr %num_iterations.addr, align 8\l  %cmp25 = icmp slt i64 %17, %18\l  br i1 %cmp25, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5567ef5d0000:s0 -> Node0x5567ef5d0300[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x5567ef5d0000:s1 -> Node0x5567ef5d0350[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x5567ef5d0300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.body:\l|  %19 = load i32, ptr %startPidx, align 4\l  %20 = load i32, ptr %endPidx, align 4\l  %21 = load double, ptr %deposit, align 8\l  call void @bestcase_omp_cycle(i32 noundef %19, i32 noundef %20, double\l... noundef %21)\l  br label %for.inc\l}"];
	Node0x5567ef5d0300 -> Node0x5567ef5d06b0[tooltip="for.body -> for.inc\nProbability 100.00%" ];
	Node0x5567ef5d06b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.inc:\l|  %22 = load i64, ptr %iteration, align 8\l  %inc = add nsw i64 %22, 1\l  store i64 %inc, ptr %iteration, align 8\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x5567ef5d06b0 -> Node0x5567ef5d0000[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x5567ef5d0350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{for.end:\l|  store i64 0, ptr %iter, align 8\l  br label %for.cond27\l}"];
	Node0x5567ef5d0350 -> Node0x5567ef5d0b80[tooltip="for.end -> for.cond27\nProbability 100.00%" ];
	Node0x5567ef5d0b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.cond27:\l|  %23 = load i64, ptr %iter, align 8\l  %24 = load i64, ptr %num_iterations.addr, align 8\l  %cmp28 = icmp slt i64 %23, %24\l  br i1 %cmp28, label %for.body30, label %for.end42\l|{<s0>T|<s1>F}}"];
	Node0x5567ef5d0b80:s0 -> Node0x5567ef5d1440[tooltip="for.cond27 -> for.body30\nProbability 96.88%" ];
	Node0x5567ef5d0b80:s1 -> Node0x5567ef5d1490[tooltip="for.cond27 -> for.end42\nProbability 3.12%" ];
	Node0x5567ef5d1440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.body30:\l|  store i64 0, ptr %subcycle, align 8\l  br label %for.cond31\l}"];
	Node0x5567ef5d1440 -> Node0x5567ef5d1630[tooltip="for.body30 -> for.cond31\nProbability 100.00%" ];
	Node0x5567ef5d1630 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond31:\l|  %25 = load i64, ptr %subcycle, align 8\l  %cmp32 = icmp slt i64 %25, 10\l  br i1 %cmp32, label %for.body34, label %for.end39\l|{<s0>T|<s1>F}}"];
	Node0x5567ef5d1630:s0 -> Node0x5567ef5d1850[tooltip="for.cond31 -> for.body34\nProbability 96.88%" ];
	Node0x5567ef5d1630:s1 -> Node0x5567ef5d18d0[tooltip="for.cond31 -> for.end39\nProbability 3.12%" ];
	Node0x5567ef5d1850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body34:\l|  %26 = load ptr, ptr @partArray, align 8\l  %arrayidx = getelementptr inbounds ptr, ptr %26, i64 0\l  %27 = load ptr, ptr %arrayidx, align 8\l  %update_count = getelementptr inbounds %struct._Part, ptr %27, i32 0, i32 2\l  store i64 1, ptr %update_count, align 8\l  %call35 = call double @calc_deposit()\l  %28 = load ptr, ptr @partArray, align 8\l  %arrayidx36 = getelementptr inbounds ptr, ptr %28, i64 0\l  %29 = load ptr, ptr %arrayidx36, align 8\l  %firstZone = getelementptr inbounds %struct._Part, ptr %29, i32 0, i32 3\l  %30 = load ptr, ptr %firstZone, align 8\l  %value = getelementptr inbounds %struct._Zone, ptr %30, i32 0, i32 2\l  store double %call35, ptr %value, align 8\l  br label %for.inc37\l}"];
	Node0x5567ef5d1850 -> Node0x5567ef5d2310[tooltip="for.body34 -> for.inc37\nProbability 100.00%" ];
	Node0x5567ef5d2310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc37:\l|  %31 = load i64, ptr %subcycle, align 8\l  %inc38 = add nsw i64 %31, 1\l  store i64 %inc38, ptr %subcycle, align 8\l  br label %for.cond31, !llvm.loop !8\l}"];
	Node0x5567ef5d2310 -> Node0x5567ef5d1630[tooltip="for.inc37 -> for.cond31\nProbability 100.00%" ];
	Node0x5567ef5d18d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end39:\l|  br label %for.inc40\l}"];
	Node0x5567ef5d18d0 -> Node0x5567ef5d2790[tooltip="for.end39 -> for.inc40\nProbability 100.00%" ];
	Node0x5567ef5d2790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.inc40:\l|  %32 = load i64, ptr %iter, align 8\l  %inc41 = add nsw i64 %32, 1\l  store i64 %inc41, ptr %iter, align 8\l  br label %for.cond27, !llvm.loop !9\l}"];
	Node0x5567ef5d2790 -> Node0x5567ef5d0b80[tooltip="for.inc40 -> for.cond27\nProbability 100.00%" ];
	Node0x5567ef5d1490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{for.end42:\l|  ret void\l}"];
}
