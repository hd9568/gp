digraph "CFG for 'update_part' function" {
	label="CFG for 'update_part' function";

	Node0x5567ef55b130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70" fontname="Courier",label="{entry:\l|  %part.addr = alloca ptr, align 8\l  %incoming_deposit.addr = alloca double, align 8\l  %zone = alloca ptr, align 8\l  %deposit_ratio = alloca double, align 8\l  %remaining_deposit = alloca double, align 8\l  %deposit = alloca double, align 8\l  %scale_count = alloca i64, align 8\l  store ptr %part, ptr %part.addr, align 8\l  store double %incoming_deposit, ptr %incoming_deposit.addr, align 8\l  %0 = load ptr, ptr %part.addr, align 8\l  %update_count = getelementptr inbounds %struct._Part, ptr %0, i32 0, i32 2\l  %1 = load i64, ptr %update_count, align 8\l  %inc = add nsw i64 %1, 1\l  store i64 %inc, ptr %update_count, align 8\l  %2 = load ptr, ptr %part.addr, align 8\l  %deposit_ratio1 = getelementptr inbounds %struct._Part, ptr %2, i32 0, i32 5\l  %3 = load double, ptr %deposit_ratio1, align 8\l  store double %3, ptr %deposit_ratio, align 8\l  %4 = load double, ptr %incoming_deposit.addr, align 8\l  store double %4, ptr %remaining_deposit, align 8\l  %5 = load i64, ptr @CLOMP_flopScale, align 8\l  %cmp = icmp eq i64 %5, 1\l  br i1 %cmp, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x5567ef55b130:s0 -> Node0x5567ef55c0e0[tooltip="entry -> if.then\nProbability 50.00%" ];
	Node0x5567ef55b130:s1 -> Node0x5567ef55c150[tooltip="entry -> if.else\nProbability 50.00%" ];
	Node0x5567ef55c0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{if.then:\l|  %6 = load ptr, ptr %part.addr, align 8\l  %firstZone = getelementptr inbounds %struct._Part, ptr %6, i32 0, i32 3\l  %7 = load ptr, ptr %firstZone, align 8\l  store ptr %7, ptr %zone, align 8\l  br label %for.cond\l}"];
	Node0x5567ef55c0e0 -> Node0x5567ef55c4d0[tooltip="if.then -> for.cond\nProbability 100.00%" ];
	Node0x5567ef55c4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.cond:\l|  %8 = load ptr, ptr %zone, align 8\l  %cmp2 = icmp ne ptr %8, null\l  br i1 %cmp2, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5567ef55c4d0:s0 -> Node0x5567ef55c6c0[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x5567ef55c4d0:s1 -> Node0x5567ef55c740[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x5567ef55c6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.body:\l|  %9 = load double, ptr %remaining_deposit, align 8\l  %10 = load double, ptr %deposit_ratio, align 8\l  %mul = fmul double %9, %10\l  store double %mul, ptr %deposit, align 8\l  %11 = load double, ptr %deposit, align 8\l  %12 = load ptr, ptr %zone, align 8\l  %value = getelementptr inbounds %struct._Zone, ptr %12, i32 0, i32 2\l  %13 = load double, ptr %value, align 8\l  %add = fadd double %13, %11\l  store double %add, ptr %value, align 8\l  %14 = load double, ptr %deposit, align 8\l  %15 = load double, ptr %remaining_deposit, align 8\l  %sub = fsub double %15, %14\l  store double %sub, ptr %remaining_deposit, align 8\l  br label %for.inc\l}"];
	Node0x5567ef55c6c0 -> Node0x5567ef55bc10[tooltip="for.body -> for.inc\nProbability 100.00%" ];
	Node0x5567ef55bc10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.inc:\l|  %16 = load ptr, ptr %zone, align 8\l  %nextZone = getelementptr inbounds %struct._Zone, ptr %16, i32 0, i32 3\l  %17 = load ptr, ptr %nextZone, align 8\l  store ptr %17, ptr %zone, align 8\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x5567ef55bc10 -> Node0x5567ef55c4d0[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x5567ef55c740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{for.end:\l|  br label %if.end\l}"];
	Node0x5567ef55c740 -> Node0x5567ef55e1c0[tooltip="for.end -> if.end\nProbability 100.00%" ];
	Node0x5567ef55c150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{if.else:\l|  %18 = load ptr, ptr %part.addr, align 8\l  %firstZone3 = getelementptr inbounds %struct._Part, ptr %18, i32 0, i32 3\l  %19 = load ptr, ptr %firstZone3, align 8\l  store ptr %19, ptr %zone, align 8\l  br label %for.cond4\l}"];
	Node0x5567ef55c150 -> Node0x5567ef55e4e0[tooltip="if.else -> for.cond4\nProbability 100.00%" ];
	Node0x5567ef55e4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.cond4:\l|  %20 = load ptr, ptr %zone, align 8\l  %cmp5 = icmp ne ptr %20, null\l  br i1 %cmp5, label %for.body6, label %for.end19\l|{<s0>T|<s1>F}}"];
	Node0x5567ef55e4e0:s0 -> Node0x5567ef55e700[tooltip="for.cond4 -> for.body6\nProbability 96.88%" ];
	Node0x5567ef55e4e0:s1 -> Node0x5567ef55e780[tooltip="for.cond4 -> for.end19\nProbability 3.12%" ];
	Node0x5567ef55e700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.body6:\l|  store i64 0, ptr %scale_count, align 8\l  br label %for.cond7\l}"];
	Node0x5567ef55e700 -> Node0x5567ef55e950[tooltip="for.body6 -> for.cond7\nProbability 100.00%" ];
	Node0x5567ef55e950 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond7:\l|  %21 = load i64, ptr %scale_count, align 8\l  %22 = load i64, ptr @CLOMP_flopScale, align 8\l  %cmp8 = icmp slt i64 %21, %22\l  br i1 %cmp8, label %for.body9, label %for.end16\l|{<s0>T|<s1>F}}"];
	Node0x5567ef55e950:s0 -> Node0x5567ef55ec20[tooltip="for.cond7 -> for.body9\nProbability 96.88%" ];
	Node0x5567ef55e950:s1 -> Node0x5567ef55ec70[tooltip="for.cond7 -> for.end16\nProbability 3.12%" ];
	Node0x5567ef55ec20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body9:\l|  %23 = load double, ptr %remaining_deposit, align 8\l  %24 = load double, ptr %deposit_ratio, align 8\l  %mul10 = fmul double %23, %24\l  store double %mul10, ptr %deposit, align 8\l  %25 = load double, ptr %deposit, align 8\l  %26 = load ptr, ptr %zone, align 8\l  %value11 = getelementptr inbounds %struct._Zone, ptr %26, i32 0, i32 2\l  %27 = load double, ptr %value11, align 8\l  %add12 = fadd double %27, %25\l  store double %add12, ptr %value11, align 8\l  %28 = load double, ptr %deposit, align 8\l  %29 = load double, ptr %remaining_deposit, align 8\l  %sub13 = fsub double %29, %28\l  store double %sub13, ptr %remaining_deposit, align 8\l  br label %for.inc14\l}"];
	Node0x5567ef55ec20 -> Node0x5567ef55f6b0[tooltip="for.body9 -> for.inc14\nProbability 100.00%" ];
	Node0x5567ef55f6b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc14:\l|  %30 = load i64, ptr %scale_count, align 8\l  %inc15 = add nsw i64 %30, 1\l  store i64 %inc15, ptr %scale_count, align 8\l  br label %for.cond7, !llvm.loop !8\l}"];
	Node0x5567ef55f6b0 -> Node0x5567ef55e950[tooltip="for.inc14 -> for.cond7\nProbability 100.00%" ];
	Node0x5567ef55ec70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end16:\l|  br label %for.inc17\l}"];
	Node0x5567ef55ec70 -> Node0x5567ef55fb00[tooltip="for.end16 -> for.inc17\nProbability 100.00%" ];
	Node0x5567ef55fb00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.inc17:\l|  %31 = load ptr, ptr %zone, align 8\l  %nextZone18 = getelementptr inbounds %struct._Zone, ptr %31, i32 0, i32 3\l  %32 = load ptr, ptr %nextZone18, align 8\l  store ptr %32, ptr %zone, align 8\l  br label %for.cond4, !llvm.loop !9\l}"];
	Node0x5567ef55fb00 -> Node0x5567ef55e4e0[tooltip="for.inc17 -> for.cond4\nProbability 100.00%" ];
	Node0x5567ef55e780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{for.end19:\l|  br label %if.end\l}"];
	Node0x5567ef55e780 -> Node0x5567ef55e1c0[tooltip="for.end19 -> if.end\nProbability 100.00%" ];
	Node0x5567ef55e1c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70" fontname="Courier",label="{if.end:\l|  %33 = load double, ptr %remaining_deposit, align 8\l  %34 = load ptr, ptr %part.addr, align 8\l  %residue = getelementptr inbounds %struct._Part, ptr %34, i32 0, i32 6\l  store double %33, ptr %residue, align 8\l  ret void\l}"];
}
