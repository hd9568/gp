digraph "CFG for 'calc_deposit' function" {
	label="CFG for 'calc_deposit' function";

	Node0x5567ef578830 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %residue = alloca double, align 8\l  %deposit = alloca double, align 8\l  %pidx = alloca i64, align 8\l  %0 = load ptr, ptr @partArray, align 8\l  %arrayidx = getelementptr inbounds ptr, ptr %0, i64 0\l  %1 = load ptr, ptr %arrayidx, align 8\l  %update_count = getelementptr inbounds %struct._Part, ptr %1, i32 0, i32 2\l  %2 = load i64, ptr %update_count, align 8\l  %cmp = icmp ne i64 %2, 1\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5567ef578830:s0 -> Node0x5567ef578f30[tooltip="entry -> if.then\nProbability 0.00%" ];
	Node0x5567ef578830:s1 -> Node0x5567ef578fa0[tooltip="entry -> if.end\nProbability 100.00%" ];
	Node0x5567ef578f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70" fontname="Courier",label="{if.then:\l|  %3 = load ptr, ptr @stderr, align 8\l  %4 = load ptr, ptr @partArray, align 8\l  %arrayidx1 = getelementptr inbounds ptr, ptr %4, i64 0\l  %5 = load ptr, ptr %arrayidx1, align 8\l  %update_count2 = getelementptr inbounds %struct._Part, ptr %5, i32 0, i32 2\l  %6 = load i64, ptr %update_count2, align 8\l  %conv = trunc i64 %6 to i32\l  %call = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %3, ptr noundef\l... @.str.58, i32 noundef %conv)\l  %7 = load ptr, ptr @stderr, align 8\l  %call3 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %7, ptr noundef\l... @.str.54)\l  %8 = load ptr, ptr @stderr, align 8\l  %call4 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %8, ptr noundef\l... @.str.55)\l  call void @exit(i32 noundef 1) #8\l  unreachable\l}"];
	Node0x5567ef578fa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end:\l|  %9 = load ptr, ptr @partArray, align 8\l  %arrayidx5 = getelementptr inbounds ptr, ptr %9, i64 0\l  %10 = load ptr, ptr %arrayidx5, align 8\l  %update_count6 = getelementptr inbounds %struct._Part, ptr %10, i32 0, i32 2\l  store i64 0, ptr %update_count6, align 8\l  %11 = load ptr, ptr @partArray, align 8\l  %arrayidx7 = getelementptr inbounds ptr, ptr %11, i64 0\l  %12 = load ptr, ptr %arrayidx7, align 8\l  %residue8 = getelementptr inbounds %struct._Part, ptr %12, i32 0, i32 6\l  %13 = load double, ptr %residue8, align 8\l  %14 = load double, ptr @CLOMP_residue_ratio_part0, align 8\l  %mul = fmul double %13, %14\l  store double %mul, ptr %residue, align 8\l  %15 = load double, ptr %residue, align 8\l  %add = fadd double 1.000000e+00, %15\l  %16 = load double, ptr @CLOMP_partRatio, align 8\l  %mul9 = fmul double %add, %16\l  store double %mul9, ptr %deposit, align 8\l  %17 = load double, ptr %deposit, align 8\l  ret double %17\l}"];
}
