digraph "CFG for 'addPart' function" {
	label="CFG for 'addPart' function";

	Node0x5567ef5d2f10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %part.addr = alloca ptr, align 8\l  %partId.addr = alloca i64, align 8\l  %zoneSlope = alloca double, align 8\l  %randBase = alloca i32, align 4\l  %randOffset = alloca i32, align 4\l  store ptr %part, ptr %part.addr, align 8\l  store i64 %partId, ptr %partId.addr, align 8\l  %0 = load i64, ptr %partId.addr, align 8\l  %cmp = icmp slt i64 %0, 0\l  br i1 %cmp, label %if.then, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x5567ef5d2f10:s0 -> Node0x5567ef5d3520[tooltip="entry -> if.then\nProbability 0.00%" ];
	Node0x5567ef5d2f10:s1 -> Node0x5567ef5d3590[tooltip="entry -> lor.lhs.false\nProbability 100.00%" ];
	Node0x5567ef5d3590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{lor.lhs.false:\l|  %1 = load i64, ptr %partId.addr, align 8\l  %2 = load i64, ptr @CLOMP_numParts, align 8\l  %cmp1 = icmp sge i64 %1, %2\l  br i1 %cmp1, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5567ef5d3590:s0 -> Node0x5567ef5d3520[tooltip="lor.lhs.false -> if.then\nProbability 0.00%" ];
	Node0x5567ef5d3590:s1 -> Node0x5567ef5d3870[tooltip="lor.lhs.false -> if.end\nProbability 100.00%" ];
	Node0x5567ef5d3520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670" fontname="Courier",label="{if.then:\l|  %3 = load ptr, ptr @stderr, align 8\l  %4 = load i64, ptr %partId.addr, align 8\l  %conv = trunc i64 %4 to i32\l  %call = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %3, ptr noundef\l... @.str.60, i32 noundef %conv)\l  call void @exit(i32 noundef 1) #8\l  unreachable\l}"];
	Node0x5567ef5d3870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end:\l|  %5 = load ptr, ptr @partArray, align 8\l  %6 = load i64, ptr %partId.addr, align 8\l  %arrayidx = getelementptr inbounds ptr, ptr %5, i64 %6\l  %7 = load ptr, ptr %arrayidx, align 8\l  %cmp2 = icmp ne ptr %7, null\l  br i1 %cmp2, label %if.then4, label %if.end7\l|{<s0>T|<s1>F}}"];
	Node0x5567ef5d3870:s0 -> Node0x5567ef5d4190[tooltip="if.end -> if.then4\nProbability 0.00%" ];
	Node0x5567ef5d3870:s1 -> Node0x5567ef5d4210[tooltip="if.end -> if.end7\nProbability 100.00%" ];
	Node0x5567ef5d4190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70" fontname="Courier",label="{if.then4:\l|  %8 = load ptr, ptr @stderr, align 8\l  %9 = load i64, ptr %partId.addr, align 8\l  %conv5 = trunc i64 %9 to i32\l  %call6 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %8, ptr noundef\l... @.str.61, i32 noundef %conv5)\l  call void @exit(i32 noundef 1) #8\l  unreachable\l}"];
	Node0x5567ef5d4210 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end7:\l|  %10 = load ptr, ptr %part.addr, align 8\l  %11 = load ptr, ptr @partArray, align 8\l  %12 = load i64, ptr %partId.addr, align 8\l  %arrayidx8 = getelementptr inbounds ptr, ptr %11, i64 %12\l  store ptr %10, ptr %arrayidx8, align 8\l  %13 = load i64, ptr %partId.addr, align 8\l  %14 = load ptr, ptr %part.addr, align 8\l  %partId9 = getelementptr inbounds %struct._Part, ptr %14, i32 0, i32 0\l  store i64 %13, ptr %partId9, align 8\l  %15 = load i64, ptr @CLOMP_numParts, align 8\l  %cmp10 = icmp sgt i64 %15, 1\l  br i1 %cmp10, label %if.then12, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x5567ef5d4210:s0 -> Node0x5567ef5d4d30[tooltip="if.end7 -> if.then12\nProbability 50.00%" ];
	Node0x5567ef5d4210:s1 -> Node0x5567ef5d38e0[tooltip="if.end7 -> if.else\nProbability 50.00%" ];
	Node0x5567ef5d4d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then12:\l|  %16 = load i64, ptr @CLOMP_endZonesPerPart, align 8\l  %17 = load i64, ptr @CLOMP_startZonesPerPart, align 8\l  %sub = sub nsw i64 %16, %17\l  %conv13 = sitofp i64 %sub to double\l  %18 = load i64, ptr @CLOMP_numParts, align 8\l  %sub14 = sub nsw i64 %18, 1\l  %conv15 = sitofp i64 %sub14 to double\l  %div = fdiv double %conv13, %conv15\l  store double %div, ptr %zoneSlope, align 8\l  br label %if.end16\l}"];
	Node0x5567ef5d4d30 -> Node0x5567ef5d5600[tooltip="if.then12 -> if.end16\nProbability 100.00%" ];
	Node0x5567ef5d38e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.else:\l|  store double 0.000000e+00, ptr %zoneSlope, align 8\l  br label %if.end16\l}"];
	Node0x5567ef5d38e0 -> Node0x5567ef5d5600[tooltip="if.else -> if.end16\nProbability 100.00%" ];
	Node0x5567ef5d5600 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end16:\l|  %19 = load i64, ptr @CLOMP_randZonesPerPart, align 8\l  %cmp17 = icmp eq i64 %19, 1\l  br i1 %cmp17, label %if.then19, label %if.else33\l|{<s0>T|<s1>F}}"];
	Node0x5567ef5d5600:s0 -> Node0x5567ef5d5930[tooltip="if.end16 -> if.then19\nProbability 50.00%" ];
	Node0x5567ef5d5600:s1 -> Node0x5567ef5d5980[tooltip="if.end16 -> if.else33\nProbability 50.00%" ];
	Node0x5567ef5d5930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then19:\l|  %20 = load i64, ptr @CLOMP_startZonesPerPart, align 8\l  %21 = load i64, ptr @CLOMP_endZonesPerPart, align 8\l  %cmp20 = icmp sle i64 %20, %21\l  br i1 %cmp20, label %if.then22, label %if.else26\l|{<s0>T|<s1>F}}"];
	Node0x5567ef5d5930:s0 -> Node0x5567ef5d5c90[tooltip="if.then19 -> if.then22\nProbability 50.00%" ];
	Node0x5567ef5d5930:s1 -> Node0x5567ef5d5ce0[tooltip="if.then19 -> if.else26\nProbability 50.00%" ];
	Node0x5567ef5d5c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.then22:\l|  %22 = load i64, ptr @CLOMP_startZonesPerPart, align 8\l  %conv23 = trunc i64 %22 to i32\l  store i32 %conv23, ptr %randBase, align 4\l  %23 = load i64, ptr @CLOMP_endZonesPerPart, align 8\l  %24 = load i64, ptr @CLOMP_startZonesPerPart, align 8\l  %sub24 = sub nsw i64 %23, %24\l  %conv25 = trunc i64 %sub24 to i32\l  store i32 %conv25, ptr %randOffset, align 4\l  br label %if.end30\l}"];
	Node0x5567ef5d5c90 -> Node0x5567ef5d62d0[tooltip="if.then22 -> if.end30\nProbability 100.00%" ];
	Node0x5567ef5d5ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.else26:\l|  %25 = load i64, ptr @CLOMP_endZonesPerPart, align 8\l  %conv27 = trunc i64 %25 to i32\l  store i32 %conv27, ptr %randBase, align 4\l  %26 = load i64, ptr @CLOMP_startZonesPerPart, align 8\l  %27 = load i64, ptr @CLOMP_endZonesPerPart, align 8\l  %sub28 = sub nsw i64 %26, %27\l  %conv29 = trunc i64 %sub28 to i32\l  store i32 %conv29, ptr %randOffset, align 4\l  br label %if.end30\l}"];
	Node0x5567ef5d5ce0 -> Node0x5567ef5d62d0[tooltip="if.else26 -> if.end30\nProbability 100.00%" ];
	Node0x5567ef5d62d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end30:\l|  %28 = load i32, ptr %randBase, align 4\l  %29 = load i32, ptr %randOffset, align 4\l  %call31 = call i32 @rand_small_int(i32 noundef %29)\l  %add = add nsw i32 %28, %call31\l  %conv32 = sext i32 %add to i64\l  %30 = load ptr, ptr %part.addr, align 8\l  %zoneCount = getelementptr inbounds %struct._Part, ptr %30, i32 0, i32 1\l  store i64 %conv32, ptr %zoneCount, align 8\l  br label %if.end39\l}"];
	Node0x5567ef5d62d0 -> Node0x5567ef5d4e50[tooltip="if.end30 -> if.end39\nProbability 100.00%" ];
	Node0x5567ef5d5980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.else33:\l|  %31 = load i64, ptr @CLOMP_startZonesPerPart, align 8\l  %32 = load i64, ptr %partId.addr, align 8\l  %conv34 = sitofp i64 %32 to double\l  %33 = load double, ptr %zoneSlope, align 8\l  %mul = fmul double %conv34, %33\l  %conv35 = fptosi double %mul to i32\l  %conv36 = sext i32 %conv35 to i64\l  %add37 = add nsw i64 %31, %conv36\l  %34 = load ptr, ptr %part.addr, align 8\l  %zoneCount38 = getelementptr inbounds %struct._Part, ptr %34, i32 0, i32 1\l  store i64 %add37, ptr %zoneCount38, align 8\l  br label %if.end39\l}"];
	Node0x5567ef5d5980 -> Node0x5567ef5d4e50[tooltip="if.else33 -> if.end39\nProbability 100.00%" ];
	Node0x5567ef5d4e50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end39:\l|  %35 = load ptr, ptr %part.addr, align 8\l  %zoneCount40 = getelementptr inbounds %struct._Part, ptr %35, i32 0, i32 1\l  %36 = load i64, ptr %zoneCount40, align 8\l  %cmp41 = icmp slt i64 %36, 1\l  br i1 %cmp41, label %if.then43, label %if.end45\l|{<s0>T|<s1>F}}"];
	Node0x5567ef5d4e50:s0 -> Node0x5567ef5d7b60[tooltip="if.end39 -> if.then43\nProbability 37.50%" ];
	Node0x5567ef5d4e50:s1 -> Node0x5567ef5d7be0[tooltip="if.end39 -> if.end45\nProbability 62.50%" ];
	Node0x5567ef5d7b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.then43:\l|  %37 = load ptr, ptr %part.addr, align 8\l  %zoneCount44 = getelementptr inbounds %struct._Part, ptr %37, i32 0, i32 1\l  store i64 1, ptr %zoneCount44, align 8\l  br label %if.end45\l}"];
	Node0x5567ef5d7b60 -> Node0x5567ef5d7be0[tooltip="if.then43 -> if.end45\nProbability 100.00%" ];
	Node0x5567ef5d7be0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end45:\l|  %38 = load i64, ptr @CLOMP_numParts, align 8\l  %conv46 = sitofp i64 %38 to double\l  %39 = load i64, ptr %partId.addr, align 8\l  %conv48 = sitofp i64 %39 to double\l  %40 = call double @llvm.fmuladd.f64(double 1.500000e+00, double %conv46,\l... double %conv48)\l  %41 = load ptr, ptr %part.addr, align 8\l  %zoneCount49 = getelementptr inbounds %struct._Part, ptr %41, i32 0, i32 1\l  %42 = load i64, ptr %zoneCount49, align 8\l  %43 = load i64, ptr @CLOMP_numParts, align 8\l  %mul50 = mul nsw i64 %42, %43\l  %conv51 = sitofp i64 %mul50 to double\l  %div52 = fdiv double %40, %conv51\l  %44 = load ptr, ptr %part.addr, align 8\l  %deposit_ratio = getelementptr inbounds %struct._Part, ptr %44, i32 0, i32 5\l  store double %div52, ptr %deposit_ratio, align 8\l  %45 = load ptr, ptr %part.addr, align 8\l  %deposit_ratio53 = getelementptr inbounds %struct._Part, ptr %45, i32 0, i32\l... 5\l  %46 = load double, ptr %deposit_ratio53, align 8\l  %cmp54 = fcmp olt double %46, 1.000000e-05\l  br i1 %cmp54, label %if.then56, label %if.end58\l|{<s0>T|<s1>F}}"];
	Node0x5567ef5d7be0:s0 -> Node0x5567ef5d8bc0[tooltip="if.end45 -> if.then56\nProbability 50.00%" ];
	Node0x5567ef5d7be0:s1 -> Node0x5567ef5d8c10[tooltip="if.end45 -> if.end58\nProbability 50.00%" ];
	Node0x5567ef5d8bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then56:\l|  %47 = load ptr, ptr %part.addr, align 8\l  %deposit_ratio57 = getelementptr inbounds %struct._Part, ptr %47, i32 0, i32\l... 5\l  store double 1.000000e-05, ptr %deposit_ratio57, align 8\l  br label %if.end58\l}"];
	Node0x5567ef5d8bc0 -> Node0x5567ef5d8c10[tooltip="if.then56 -> if.end58\nProbability 100.00%" ];
	Node0x5567ef5d8c10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end58:\l|  %48 = load ptr, ptr %part.addr, align 8\l  %deposit_ratio59 = getelementptr inbounds %struct._Part, ptr %48, i32 0, i32\l... 5\l  %49 = load double, ptr %deposit_ratio59, align 8\l  %cmp60 = fcmp ogt double %49, 9.000000e-01\l  br i1 %cmp60, label %if.then62, label %if.end64\l|{<s0>T|<s1>F}}"];
	Node0x5567ef5d8c10:s0 -> Node0x5567ef5d9ae0[tooltip="if.end58 -> if.then62\nProbability 50.00%" ];
	Node0x5567ef5d8c10:s1 -> Node0x5567ef5d9b30[tooltip="if.end58 -> if.end64\nProbability 50.00%" ];
	Node0x5567ef5d9ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then62:\l|  %50 = load ptr, ptr %part.addr, align 8\l  %deposit_ratio63 = getelementptr inbounds %struct._Part, ptr %50, i32 0, i32\l... 5\l  store double 9.000000e-01, ptr %deposit_ratio63, align 8\l  br label %if.end64\l}"];
	Node0x5567ef5d9ae0 -> Node0x5567ef5d9b30[tooltip="if.then62 -> if.end64\nProbability 100.00%" ];
	Node0x5567ef5d9b30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end64:\l|  %51 = load ptr, ptr %part.addr, align 8\l  %residue = getelementptr inbounds %struct._Part, ptr %51, i32 0, i32 6\l  store double 0.000000e+00, ptr %residue, align 8\l  %52 = load ptr, ptr %part.addr, align 8\l  %firstZone = getelementptr inbounds %struct._Part, ptr %52, i32 0, i32 3\l  store ptr null, ptr %firstZone, align 8\l  %53 = load ptr, ptr %part.addr, align 8\l  %lastZone = getelementptr inbounds %struct._Part, ptr %53, i32 0, i32 4\l  store ptr null, ptr %lastZone, align 8\l  %54 = load ptr, ptr %part.addr, align 8\l  %expected_first_value = getelementptr inbounds %struct._Part, ptr %54, i32\l... 0, i32 7\l  store double -1.000000e+00, ptr %expected_first_value, align 8\l  %55 = load ptr, ptr %part.addr, align 8\l  %expected_residue = getelementptr inbounds %struct._Part, ptr %55, i32 0,\l... i32 8\l  store double -1.000000e+00, ptr %expected_residue, align 8\l  ret void\l}"];
}
