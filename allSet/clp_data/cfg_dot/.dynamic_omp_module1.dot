digraph "CFG for 'dynamic_omp_module1' function" {
	label="CFG for 'dynamic_omp_module1' function";

	Node0x5567ef5a23a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %deposit = alloca double, align 8\l  %pidx = alloca i64, align 8\l  %call = call double @calc_deposit()\l  store double %call, ptr %deposit, align 8\l  store i64 0, ptr %pidx, align 8\l  br label %for.cond\l}"];
	Node0x5567ef5a23a0 -> Node0x5567ef5a2840[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x5567ef5a2840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %0 = load i64, ptr %pidx, align 8\l  %1 = load i64, ptr @CLOMP_numParts, align 8\l  %cmp = icmp slt i64 %0, %1\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5567ef5a2840:s0 -> Node0x5567ef5a2ab0[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x5567ef5a2840:s1 -> Node0x5567ef5a2b30[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x5567ef5a2ab0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %2 = load ptr, ptr @partArray, align 8\l  %3 = load i64, ptr %pidx, align 8\l  %arrayidx = getelementptr inbounds ptr, ptr %2, i64 %3\l  %4 = load ptr, ptr %arrayidx, align 8\l  %5 = load double, ptr %deposit, align 8\l  call void @update_part(ptr noundef %4, double noundef %5)\l  br label %for.inc\l}"];
	Node0x5567ef5a2ab0 -> Node0x5567ef5a3070[tooltip="for.body -> for.inc\nProbability 100.00%" ];
	Node0x5567ef5a3070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %6 = load i64, ptr %pidx, align 8\l  %inc = add nsw i64 %6, 1\l  store i64 %inc, ptr %pidx, align 8\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x5567ef5a3070 -> Node0x5567ef5a2840[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x5567ef5a2b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  ret void\l}"];
}
