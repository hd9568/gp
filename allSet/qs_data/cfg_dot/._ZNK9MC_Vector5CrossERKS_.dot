digraph "CFG for '_ZNK9MC_Vector5CrossERKS_' function" {
	label="CFG for '_ZNK9MC_Vector5CrossERKS_' function";

	Node0x55dfe4b73ff0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %v.addr = alloca ptr, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store ptr %v, ptr %v.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %y = getelementptr inbounds %class.MC_Vector, ptr %this1, i32 0, i32 1\l  %0 = load double, ptr %y, align 8\l  %1 = load ptr, ptr %v.addr, align 8\l  %z = getelementptr inbounds %class.MC_Vector, ptr %1, i32 0, i32 2\l  %2 = load double, ptr %z, align 8\l  %z2 = getelementptr inbounds %class.MC_Vector, ptr %this1, i32 0, i32 2\l  %3 = load double, ptr %z2, align 8\l  %4 = load ptr, ptr %v.addr, align 8\l  %y3 = getelementptr inbounds %class.MC_Vector, ptr %4, i32 0, i32 1\l  %5 = load double, ptr %y3, align 8\l  %mul4 = fmul double %3, %5\l  %neg = fneg double %mul4\l  %6 = call double @llvm.fmuladd.f64(double %0, double %2, double %neg)\l  %z5 = getelementptr inbounds %class.MC_Vector, ptr %this1, i32 0, i32 2\l  %7 = load double, ptr %z5, align 8\l  %8 = load ptr, ptr %v.addr, align 8\l  %x = getelementptr inbounds %class.MC_Vector, ptr %8, i32 0, i32 0\l  %9 = load double, ptr %x, align 8\l  %x6 = getelementptr inbounds %class.MC_Vector, ptr %this1, i32 0, i32 0\l  %10 = load double, ptr %x6, align 8\l  %11 = load ptr, ptr %v.addr, align 8\l  %z7 = getelementptr inbounds %class.MC_Vector, ptr %11, i32 0, i32 2\l  %12 = load double, ptr %z7, align 8\l  %mul8 = fmul double %10, %12\l  %neg9 = fneg double %mul8\l  %13 = call double @llvm.fmuladd.f64(double %7, double %9, double %neg9)\l  %x10 = getelementptr inbounds %class.MC_Vector, ptr %this1, i32 0, i32 0\l  %14 = load double, ptr %x10, align 8\l  %15 = load ptr, ptr %v.addr, align 8\l  %y11 = getelementptr inbounds %class.MC_Vector, ptr %15, i32 0, i32 1\l  %16 = load double, ptr %y11, align 8\l  %y12 = getelementptr inbounds %class.MC_Vector, ptr %this1, i32 0, i32 1\l  %17 = load double, ptr %y12, align 8\l  %18 = load ptr, ptr %v.addr, align 8\l  %x13 = getelementptr inbounds %class.MC_Vector, ptr %18, i32 0, i32 0\l  %19 = load double, ptr %x13, align 8\l  %mul14 = fmul double %17, %19\l  %neg15 = fneg double %mul14\l  %20 = call double @llvm.fmuladd.f64(double %14, double %16, double %neg15)\l  call void @_ZN9MC_VectorC2Eddd(ptr noundef nonnull align 8\l... dereferenceable(24) %agg.result, double noundef %6, double noundef %13,\l... double noundef %20)\l  ret void\l}"];
}
