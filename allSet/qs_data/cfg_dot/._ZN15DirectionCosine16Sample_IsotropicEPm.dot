digraph "CFG for '_ZN15DirectionCosine16Sample_IsotropicEPm' function" {
	label="CFG for '_ZN15DirectionCosine16Sample_IsotropicEPm' function";

	Node0x561a4fea2450 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %seed.addr = alloca ptr, align 8\l  %sine_gamma = alloca double, align 8\l  %phi = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store ptr %seed, ptr %seed.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %0 = load ptr, ptr %seed.addr, align 8\l  %call = call noundef double @_Z9rngSamplePm(ptr noundef %0)\l  %1 = call double @llvm.fmuladd.f64(double -2.000000e+00, double %call,\l... double 1.000000e+00)\l  %gamma = getelementptr inbounds %class.DirectionCosine, ptr %this1, i32 0,\l... i32 2\l  store double %1, ptr %gamma, align 8\l  %gamma2 = getelementptr inbounds %class.DirectionCosine, ptr %this1, i32 0,\l... i32 2\l  %2 = load double, ptr %gamma2, align 8\l  %gamma3 = getelementptr inbounds %class.DirectionCosine, ptr %this1, i32 0,\l... i32 2\l  %3 = load double, ptr %gamma3, align 8\l  %neg = fneg double %2\l  %4 = call double @llvm.fmuladd.f64(double %neg, double %3, double\l... 1.000000e+00)\l  %call4 = call double @sqrt(double noundef %4) #4\l  store double %call4, ptr %sine_gamma, align 8\l  %5 = load ptr, ptr %seed.addr, align 8\l  %call5 = call noundef double @_Z9rngSamplePm(ptr noundef %5)\l  %6 = call double @llvm.fmuladd.f64(double 2.000000e+00, double %call5,\l... double -1.000000e+00)\l  %mul = fmul double 0x400921FB54442D18, %6\l  store double %mul, ptr %phi, align 8\l  %7 = load double, ptr %sine_gamma, align 8\l  %8 = load double, ptr %phi, align 8\l  %call6 = call double @cos(double noundef %8) #4\l  %mul7 = fmul double %7, %call6\l  %alpha = getelementptr inbounds %class.DirectionCosine, ptr %this1, i32 0,\l... i32 0\l  store double %mul7, ptr %alpha, align 8\l  %9 = load double, ptr %sine_gamma, align 8\l  %10 = load double, ptr %phi, align 8\l  %call8 = call double @sin(double noundef %10) #4\l  %mul9 = fmul double %9, %call8\l  %beta = getelementptr inbounds %class.DirectionCosine, ptr %this1, i32 0,\l... i32 1\l  store double %mul9, ptr %beta, align 8\l  ret void\l}"];
}
