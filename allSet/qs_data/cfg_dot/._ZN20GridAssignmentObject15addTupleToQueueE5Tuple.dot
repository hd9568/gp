digraph "CFG for '_ZN20GridAssignmentObject15addTupleToQueueE5Tuple' function" {
	label="CFG for '_ZN20GridAssignmentObject15addTupleToQueueE5Tuple' function";

	Node0x5646193d4510 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %iTuple = alloca %class.Tuple, align 4\l  %coerce = alloca \{ i64, i32 \}, align 4\l  %this.addr = alloca ptr, align 8\l  %index = alloca i32, align 4\l  %agg.tmp = alloca %class.Tuple, align 4\l  %agg.tmp.coerce = alloca \{ i64, i32 \}, align 4\l  %0 = getelementptr inbounds \{ i64, i32 \}, ptr %coerce, i32 0, i32 0\l  store i64 %iTuple.coerce0, ptr %0, align 4\l  %1 = getelementptr inbounds \{ i64, i32 \}, ptr %coerce, i32 0, i32 1\l  store i32 %iTuple.coerce1, ptr %1, align 4\l  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %iTuple, ptr align 4 %coerce,\l... i64 12, i1 false)\l  store ptr %this, ptr %this.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %agg.tmp, ptr align 4 %iTuple,\l... i64 12, i1 false)\l  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %agg.tmp.coerce, ptr align 4\l... %agg.tmp, i64 12, i1 false)\l  %2 = getelementptr inbounds \{ i64, i32 \}, ptr %agg.tmp.coerce, i32 0, i32 0\l  %3 = load i64, ptr %2, align 4\l  %4 = getelementptr inbounds \{ i64, i32 \}, ptr %agg.tmp.coerce, i32 0, i32 1\l  %5 = load i32, ptr %4, align 4\l  %call = call noundef i32\l... @_ZNK20GridAssignmentObject12tupleToIndexE5Tuple(ptr noundef nonnull align 8\l... dereferenceable(256) %this1, i64 %3, i32 %5)\l  store i32 %call, ptr %index, align 4\l  %_grid = getelementptr inbounds %class.GridAssignmentObject, ptr %this1, i32\l... 0, i32 8\l  %6 = load i32, ptr %index, align 4\l  %conv = sext i32 %6 to i64\l  %call2 = call noundef nonnull align 8 dereferenceable(32) ptr\l... @_ZNSt6vectorIN20GridAssignmentObject8GridCellESaIS1_EEixEm(ptr noundef\l... nonnull align 8 dereferenceable(24) %_grid, i64 noundef %conv) #11\l  %_burned = getelementptr inbounds %\"struct.GridAssignmentObject::GridCell\",\l... ptr %call2, i32 0, i32 0\l  %7 = load i8, ptr %_burned, align 8\l  %tobool = trunc i8 %7 to i1\l  br i1 %tobool, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5646193d4510:s0 -> Node0x5646193d5800[tooltip="entry -> if.then\nProbability 50.00%" ];
	Node0x5646193d4510:s1 -> Node0x5646193d5bb0[tooltip="entry -> if.end\nProbability 50.00%" ];
	Node0x5646193d5800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then:\l|  br label %return\l}"];
	Node0x5646193d5800 -> Node0x5646193d5cd0[tooltip="if.then -> return\nProbability 100.00%" ];
	Node0x5646193d5bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end:\l|  %_floodQueue = getelementptr inbounds %class.GridAssignmentObject, ptr\l... %this1, i32 0, i32 9\l  call void @_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi(ptr noundef nonnull align\l... 8 dereferenceable(80) %_floodQueue, ptr noundef nonnull align 4\l... dereferenceable(4) %index)\l  %_wetList = getelementptr inbounds %class.GridAssignmentObject, ptr %this1,\l... i32 0, i32 10\l  call void @_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi(ptr noundef nonnull align\l... 8 dereferenceable(80) %_wetList, ptr noundef nonnull align 4\l... dereferenceable(4) %index)\l  %_grid3 = getelementptr inbounds %class.GridAssignmentObject, ptr %this1,\l... i32 0, i32 8\l  %8 = load i32, ptr %index, align 4\l  %conv4 = sext i32 %8 to i64\l  %call5 = call noundef nonnull align 8 dereferenceable(32) ptr\l... @_ZNSt6vectorIN20GridAssignmentObject8GridCellESaIS1_EEixEm(ptr noundef\l... nonnull align 8 dereferenceable(24) %_grid3, i64 noundef %conv4) #11\l  %_burned6 = getelementptr inbounds %\"struct.GridAssignmentObject::GridCell\",\l... ptr %call5, i32 0, i32 0\l  store i8 1, ptr %_burned6, align 8\l  br label %return\l}"];
	Node0x5646193d5bb0 -> Node0x5646193d5cd0[tooltip="if.end -> return\nProbability 100.00%" ];
	Node0x5646193d5cd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{return:\l|  ret void\l}"];
}
