digraph "CFG for '_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE7_M_copyINS5_11_Alloc_nodeEEEPSt13_Rb_tree_nodeImEPKS9_PSt18_Rb_tree_node_baseRT_' function" {
	label="CFG for '_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE7_M_copyINS5_11_Alloc_nodeEEEPSt13_Rb_tree_nodeImEPKS9_PSt18_Rb_tree_node_baseRT_' function";

	Node0x560dca16a590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %__x.addr = alloca ptr, align 8\l  %__p.addr = alloca ptr, align 8\l  %__node_gen.addr = alloca ptr, align 8\l  %__top = alloca ptr, align 8\l  %exn.slot = alloca ptr, align 8\l  %ehselector.slot = alloca i32, align 4\l  %__y = alloca ptr, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store ptr %__x, ptr %__x.addr, align 8\l  store ptr %__p, ptr %__p.addr, align 8\l  store ptr %__node_gen, ptr %__node_gen.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %0 = load ptr, ptr %__x.addr, align 8\l  %1 = load ptr, ptr %__node_gen.addr, align 8\l  %call = call noundef ptr\l... @_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE13_M_clone_nodeINS5_11_Alloc_\l...nodeEEEPSt13_Rb_tree_nodeImEPKS9_RT_(ptr noundef nonnull align 8\l... dereferenceable(48) %this1, ptr noundef %0, ptr noundef nonnull align 8\l... dereferenceable(8) %1)\l  store ptr %call, ptr %__top, align 8\l  %2 = load ptr, ptr %__p.addr, align 8\l  %3 = load ptr, ptr %__top, align 8\l  %_M_parent = getelementptr inbounds %\"struct.std::_Rb_tree_node_base\", ptr\l... %3, i32 0, i32 1\l  store ptr %2, ptr %_M_parent, align 8\l  %4 = load ptr, ptr %__x.addr, align 8\l  %_M_right = getelementptr inbounds %\"struct.std::_Rb_tree_node_base\", ptr\l... %4, i32 0, i32 3\l  %5 = load ptr, ptr %_M_right, align 8\l  %tobool = icmp ne ptr %5, null\l  br i1 %tobool, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x560dca16a590:s0 -> Node0x560dca16b700[tooltip="entry -> if.then\nProbability 62.50%" ];
	Node0x560dca16a590:s1 -> Node0x560dca16b7d0[tooltip="entry -> if.end\nProbability 37.50%" ];
	Node0x560dca16b700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670" fontname="Courier",label="{if.then:\l|  %6 = load ptr, ptr %__x.addr, align 8\l  %call2 = call noundef ptr\l... @_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE8_S_rightEPKSt18_Rb_tree_node\l..._base(ptr noundef %6) #12\l  %7 = load ptr, ptr %__top, align 8\l  %8 = load ptr, ptr %__node_gen.addr, align 8\l  %call3 = invoke noundef ptr\l... @_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE7_M_copyINS5_11_Alloc_nodeEEE\l...PSt13_Rb_tree_nodeImEPKS9_PSt18_Rb_tree_node_baseRT_(ptr noundef nonnull align\l... 8 dereferenceable(48) %this1, ptr noundef %call2, ptr noundef %7, ptr noundef\l... nonnull align 8 dereferenceable(8) %8)\l          to label %invoke.cont unwind label %lpad\l}"];
	Node0x560dca16b700 -> Node0x560dca16bd70[tooltip="if.then -> invoke.cont\nProbability 100.00%" ];
	Node0x560dca16b700 -> Node0x560dca16bdc0[tooltip="if.then -> lpad\nProbability 0.00%" ];
	Node0x560dca16bd70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670" fontname="Courier",label="{invoke.cont:\l|  %9 = load ptr, ptr %__top, align 8\l  %_M_right4 = getelementptr inbounds %\"struct.std::_Rb_tree_node_base\", ptr\l... %9, i32 0, i32 3\l  store ptr %call3, ptr %_M_right4, align 8\l  br label %if.end\l}"];
	Node0x560dca16bd70 -> Node0x560dca16b7d0[tooltip="invoke.cont -> if.end\nProbability 100.00%" ];
	Node0x560dca16bdc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670" fontname="Courier",label="{lpad:\l|  %10 = landingpad \{ ptr, i32 \}\l          catch ptr null\l  %11 = extractvalue \{ ptr, i32 \} %10, 0\l  store ptr %11, ptr %exn.slot, align 8\l  %12 = extractvalue \{ ptr, i32 \} %10, 1\l  store i32 %12, ptr %ehselector.slot, align 4\l  br label %catch\l}"];
	Node0x560dca16bdc0 -> Node0x560dca16c650[tooltip="lpad -> catch\nProbability 100.00%" ];
	Node0x560dca16c650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670" fontname="Courier",label="{catch:\l|  %exn = load ptr, ptr %exn.slot, align 8\l  %13 = call ptr @__cxa_begin_catch(ptr %exn) #12\l  %14 = load ptr, ptr %__top, align 8\l  invoke void\l... @_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE8_M_eraseEPSt13_Rb_tree_nodeI\l...mE(ptr noundef nonnull align 8 dereferenceable(48) %this1, ptr noundef %14)\l          to label %invoke.cont19 unwind label %lpad18\l}"];
	Node0x560dca16c650 -> Node0x560dca16c990[tooltip="catch -> invoke.cont19\nProbability 50.00%" ];
	Node0x560dca16c650 -> Node0x560dca16ca40[tooltip="catch -> lpad18\nProbability 50.00%" ];
	Node0x560dca16c990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70" fontname="Courier",label="{invoke.cont19:\l|  invoke void @__cxa_rethrow() #13\l          to label %unreachable unwind label %lpad18\l}"];
	Node0x560dca16c990 -> Node0x560dca16cce0[tooltip="invoke.cont19 -> unreachable\nProbability 0.00%" ];
	Node0x560dca16c990 -> Node0x560dca16ca40[tooltip="invoke.cont19 -> lpad18\nProbability 100.00%" ];
	Node0x560dca16b7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.end:\l|  %15 = load ptr, ptr %__top, align 8\l  store ptr %15, ptr %__p.addr, align 8\l  %16 = load ptr, ptr %__x.addr, align 8\l  %call5 = call noundef ptr\l... @_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE7_S_leftEPKSt18_Rb_tree_node_\l...base(ptr noundef %16) #12\l  store ptr %call5, ptr %__x.addr, align 8\l  br label %while.cond\l}"];
	Node0x560dca16b7d0 -> Node0x560dca16d210[tooltip="if.end -> while.cond\nProbability 100.00%" ];
	Node0x560dca16d210 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{while.cond:\l|  %17 = load ptr, ptr %__x.addr, align 8\l  %cmp = icmp ne ptr %17, null\l  br i1 %cmp, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x560dca16d210:s0 -> Node0x560dca16d430[tooltip="while.cond -> while.body\nProbability 96.88%" ];
	Node0x560dca16d210:s1 -> Node0x560dca16d4b0[tooltip="while.cond -> while.end\nProbability 3.12%" ];
	Node0x560dca16d430 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{while.body:\l|  %18 = load ptr, ptr %__x.addr, align 8\l  %19 = load ptr, ptr %__node_gen.addr, align 8\l  %call7 = invoke noundef ptr\l... @_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE13_M_clone_nodeINS5_11_Alloc_\l...nodeEEEPSt13_Rb_tree_nodeImEPKS9_RT_(ptr noundef nonnull align 8\l... dereferenceable(48) %this1, ptr noundef %18, ptr noundef nonnull align 8\l... dereferenceable(8) %19)\l          to label %invoke.cont6 unwind label %lpad\l}"];
	Node0x560dca16d430 -> Node0x560dca16d7f0[tooltip="while.body -> invoke.cont6\nProbability 100.00%" ];
	Node0x560dca16d430 -> Node0x560dca16bdc0[tooltip="while.body -> lpad\nProbability 0.00%" ];
	Node0x560dca16d7f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{invoke.cont6:\l|  store ptr %call7, ptr %__y, align 8\l  %20 = load ptr, ptr %__y, align 8\l  %21 = load ptr, ptr %__p.addr, align 8\l  %_M_left = getelementptr inbounds %\"struct.std::_Rb_tree_node_base\", ptr\l... %21, i32 0, i32 2\l  store ptr %20, ptr %_M_left, align 8\l  %22 = load ptr, ptr %__p.addr, align 8\l  %23 = load ptr, ptr %__y, align 8\l  %_M_parent8 = getelementptr inbounds %\"struct.std::_Rb_tree_node_base\", ptr\l... %23, i32 0, i32 1\l  store ptr %22, ptr %_M_parent8, align 8\l  %24 = load ptr, ptr %__x.addr, align 8\l  %_M_right9 = getelementptr inbounds %\"struct.std::_Rb_tree_node_base\", ptr\l... %24, i32 0, i32 3\l  %25 = load ptr, ptr %_M_right9, align 8\l  %tobool10 = icmp ne ptr %25, null\l  br i1 %tobool10, label %if.then11, label %if.end16\l|{<s0>T|<s1>F}}"];
	Node0x560dca16d7f0:s0 -> Node0x560dca16e1b0[tooltip="invoke.cont6 -> if.then11\nProbability 62.50%" ];
	Node0x560dca16d7f0:s1 -> Node0x560dca16e230[tooltip="invoke.cont6 -> if.end16\nProbability 37.50%" ];
	Node0x560dca16e1b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.then11:\l|  %26 = load ptr, ptr %__x.addr, align 8\l  %call12 = call noundef ptr\l... @_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE8_S_rightEPKSt18_Rb_tree_node\l..._base(ptr noundef %26) #12\l  %27 = load ptr, ptr %__y, align 8\l  %28 = load ptr, ptr %__node_gen.addr, align 8\l  %call14 = invoke noundef ptr\l... @_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE7_M_copyINS5_11_Alloc_nodeEEE\l...PSt13_Rb_tree_nodeImEPKS9_PSt18_Rb_tree_node_baseRT_(ptr noundef nonnull align\l... 8 dereferenceable(48) %this1, ptr noundef %call12, ptr noundef %27, ptr\l... noundef nonnull align 8 dereferenceable(8) %28)\l          to label %invoke.cont13 unwind label %lpad\l}"];
	Node0x560dca16e1b0 -> Node0x560dca16e790[tooltip="if.then11 -> invoke.cont13\nProbability 100.00%" ];
	Node0x560dca16e1b0 -> Node0x560dca16bdc0[tooltip="if.then11 -> lpad\nProbability 0.00%" ];
	Node0x560dca16e790 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{invoke.cont13:\l|  %29 = load ptr, ptr %__y, align 8\l  %_M_right15 = getelementptr inbounds %\"struct.std::_Rb_tree_node_base\", ptr\l... %29, i32 0, i32 3\l  store ptr %call14, ptr %_M_right15, align 8\l  br label %if.end16\l}"];
	Node0x560dca16e790 -> Node0x560dca16e230[tooltip="invoke.cont13 -> if.end16\nProbability 100.00%" ];
	Node0x560dca16e230 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end16:\l|  %30 = load ptr, ptr %__y, align 8\l  store ptr %30, ptr %__p.addr, align 8\l  %31 = load ptr, ptr %__x.addr, align 8\l  %call17 = call noundef ptr\l... @_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE7_S_leftEPKSt18_Rb_tree_node_\l...base(ptr noundef %31) #12\l  store ptr %call17, ptr %__x.addr, align 8\l  br label %while.cond, !llvm.loop !6\l}"];
	Node0x560dca16e230 -> Node0x560dca16d210[tooltip="if.end16 -> while.cond\nProbability 100.00%" ];
	Node0x560dca16d4b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{while.end:\l|  br label %try.cont\l}"];
	Node0x560dca16d4b0 -> Node0x560dca16f0c0[tooltip="while.end -> try.cont\nProbability 100.00%" ];
	Node0x560dca16ca40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670" fontname="Courier",label="{lpad18:\l|  %32 = landingpad \{ ptr, i32 \}\l          cleanup\l  %33 = extractvalue \{ ptr, i32 \} %32, 0\l  store ptr %33, ptr %exn.slot, align 8\l  %34 = extractvalue \{ ptr, i32 \} %32, 1\l  store i32 %34, ptr %ehselector.slot, align 4\l  invoke void @__cxa_end_catch()\l          to label %invoke.cont20 unwind label %terminate.lpad\l}"];
	Node0x560dca16ca40 -> Node0x560dca16c4f0[tooltip="lpad18 -> invoke.cont20\nProbability 100.00%" ];
	Node0x560dca16ca40 -> Node0x560dca16f760[tooltip="lpad18 -> terminate.lpad\nProbability 0.00%" ];
	Node0x560dca16c4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670" fontname="Courier",label="{invoke.cont20:\l|  br label %eh.resume\l}"];
	Node0x560dca16c4f0 -> Node0x560dca16f8f0[tooltip="invoke.cont20 -> eh.resume\nProbability 100.00%" ];
	Node0x560dca16f0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{try.cont:\l|  %35 = load ptr, ptr %__top, align 8\l  ret ptr %35\l}"];
	Node0x560dca16f8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670" fontname="Courier",label="{eh.resume:\l|  %exn21 = load ptr, ptr %exn.slot, align 8\l  %sel = load i32, ptr %ehselector.slot, align 4\l  %lpad.val = insertvalue \{ ptr, i32 \} poison, ptr %exn21, 0\l  %lpad.val22 = insertvalue \{ ptr, i32 \} %lpad.val, i32 %sel, 1\l  resume \{ ptr, i32 \} %lpad.val22\l}"];
	Node0x560dca16f760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70" fontname="Courier",label="{terminate.lpad:\l|  %36 = landingpad \{ ptr, i32 \}\l          catch ptr null\l  %37 = extractvalue \{ ptr, i32 \} %36, 0\l  call void @__clang_call_terminate(ptr %37) #14\l  unreachable\l}"];
	Node0x560dca16cce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670" fontname="Courier",label="{unreachable:\l|  unreachable\l}"];
}
