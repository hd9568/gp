digraph "CFG for '_ZN12_GLOBAL__N_121PopulationControlGutsEdmP22ParticleVaultContainerR7Balance' function" {
	label="CFG for '_ZN12_GLOBAL__N_121PopulationControlGutsEdmP22ParticleVaultContainerR7Balance' function";

	Node0x5650e43814a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870" fontname="Courier",label="{entry:\l|  %splitRRFactor.addr = alloca double, align 8\l  %currentNumParticles.addr = alloca i64, align 8\l  %my_particle_vault.addr = alloca ptr, align 8\l  %taskBalance.addr = alloca ptr, align 8\l  %vault_size = alloca i64, align 8\l  %fill_vault_index = alloca i64, align 8\l  %particleIndex = alloca i32, align 4\l  %vault_index = alloca i64, align 8\l  %taskProcessingVault = alloca ptr, align 8\l  %taskParticleIndex = alloca i64, align 8\l  %currentParticle = alloca ptr, align 8\l  %randomNumber = alloca double, align 8\l  %splitFactor = alloca i32, align 4\l  %splitParticle = alloca %class.MC_Base_Particle, align 8\l  %splitFactorIndex = alloca i32, align 4\l  store double %splitRRFactor, ptr %splitRRFactor.addr, align 8\l  store i64 %currentNumParticles, ptr %currentNumParticles.addr, align 8\l  store ptr %my_particle_vault, ptr %my_particle_vault.addr, align 8\l  store ptr %taskBalance, ptr %taskBalance.addr, align 8\l  %0 = load ptr, ptr %my_particle_vault.addr, align 8\l  %call = call noundef i64 @_ZN22ParticleVaultContainer12getVaultSizeEv(ptr\l... noundef nonnull align 8 dereferenceable(104) %0)\l  store i64 %call, ptr %vault_size, align 8\l  %1 = load i64, ptr %currentNumParticles.addr, align 8\l  %2 = load i64, ptr %vault_size, align 8\l  %div = udiv i64 %1, %2\l  store i64 %div, ptr %fill_vault_index, align 8\l  %3 = load i64, ptr %currentNumParticles.addr, align 8\l  %sub = sub i64 %3, 1\l  %conv = trunc i64 %sub to i32\l  store i32 %conv, ptr %particleIndex, align 4\l  br label %for.cond\l}"];
	Node0x5650e43814a0 -> Node0x5650e4382ad0[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x5650e4382ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{for.cond:\l|  %4 = load i32, ptr %particleIndex, align 4\l  %cmp = icmp sge i32 %4, 0\l  br i1 %cmp, label %for.body, label %for.end36\l|{<s0>T|<s1>F}}"];
	Node0x5650e4382ad0:s0 -> Node0x5650e4382e40[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x5650e4382ad0:s1 -> Node0x5650e4382e90[tooltip="for.cond -> for.end36\nProbability 3.12%" ];
	Node0x5650e4382e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{for.body:\l|  %5 = load i32, ptr %particleIndex, align 4\l  %conv1 = sext i32 %5 to i64\l  %6 = load i64, ptr %vault_size, align 8\l  %div2 = udiv i64 %conv1, %6\l  store i64 %div2, ptr %vault_index, align 8\l  %7 = load ptr, ptr %my_particle_vault.addr, align 8\l  %8 = load i64, ptr %vault_index, align 8\l  %call3 = call noundef ptr\l... @_ZN22ParticleVaultContainer22getTaskProcessingVaultEm(ptr noundef nonnull\l... align 8 dereferenceable(104) %7, i64 noundef %8)\l  store ptr %call3, ptr %taskProcessingVault, align 8\l  %9 = load i32, ptr %particleIndex, align 4\l  %conv4 = sext i32 %9 to i64\l  %10 = load i64, ptr %vault_size, align 8\l  %rem = urem i64 %conv4, %10\l  store i64 %rem, ptr %taskParticleIndex, align 8\l  %11 = load ptr, ptr %taskProcessingVault, align 8\l  %12 = load i64, ptr %taskParticleIndex, align 8\l  %call5 = call noundef nonnull align 8 dereferenceable(136) ptr\l... @_ZN13ParticleVaultixEm(ptr noundef nonnull align 8 dereferenceable(24) %11,\l... i64 noundef %12)\l  store ptr %call5, ptr %currentParticle, align 8\l  %13 = load ptr, ptr %currentParticle, align 8\l  %random_number_seed = getelementptr inbounds %class.MC_Base_Particle, ptr\l... %13, i32 0, i32 8\l  %call6 = call noundef double @_Z9rngSamplePm(ptr noundef %random_number_seed)\l  store double %call6, ptr %randomNumber, align 8\l  %14 = load double, ptr %splitRRFactor.addr, align 8\l  %cmp7 = fcmp olt double %14, 1.000000e+00\l  br i1 %cmp7, label %if.then, label %if.else12\l|{<s0>T|<s1>F}}"];
	Node0x5650e4382e40:s0 -> Node0x5650e43841e0[tooltip="for.body -> if.then\nProbability 50.00%" ];
	Node0x5650e4382e40:s1 -> Node0x5650e4384250[tooltip="for.body -> if.else12\nProbability 50.00%" ];
	Node0x5650e43841e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{if.then:\l|  %15 = load double, ptr %randomNumber, align 8\l  %16 = load double, ptr %splitRRFactor.addr, align 8\l  %cmp8 = fcmp ogt double %15, %16\l  br i1 %cmp8, label %if.then9, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x5650e43841e0:s0 -> Node0x5650e4384500[tooltip="if.then -> if.then9\nProbability 50.00%" ];
	Node0x5650e43841e0:s1 -> Node0x5650e4384550[tooltip="if.then -> if.else\nProbability 50.00%" ];
	Node0x5650e4384500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.then9:\l|  %17 = load ptr, ptr %taskProcessingVault, align 8\l  %18 = load i64, ptr %taskParticleIndex, align 8\l  %conv10 = trunc i64 %18 to i32\l  call void @_ZN13ParticleVault17eraseSwapParticleEi(ptr noundef nonnull align\l... 8 dereferenceable(24) %17, i32 noundef %conv10)\l  %19 = load ptr, ptr %taskBalance.addr, align 8\l  %_rr = getelementptr inbounds %class.Balance, ptr %19, i32 0, i32 10\l  %20 = load i64, ptr %_rr, align 8\l  %inc = add i64 %20, 1\l  store i64 %inc, ptr %_rr, align 8\l  br label %if.end\l}"];
	Node0x5650e4384500 -> Node0x5650e4384d20[tooltip="if.then9 -> if.end\nProbability 100.00%" ];
	Node0x5650e4384550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.else:\l|  %21 = load double, ptr %splitRRFactor.addr, align 8\l  %22 = load ptr, ptr %currentParticle, align 8\l  %weight = getelementptr inbounds %class.MC_Base_Particle, ptr %22, i32 0,\l... i32 3\l  %23 = load double, ptr %weight, align 8\l  %div11 = fdiv double %23, %21\l  store double %div11, ptr %weight, align 8\l  br label %if.end\l}"];
	Node0x5650e4384550 -> Node0x5650e4384d20[tooltip="if.else -> if.end\nProbability 100.00%" ];
	Node0x5650e4384d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{if.end:\l|  br label %if.end33\l}"];
	Node0x5650e4384d20 -> Node0x5650e43852b0[tooltip="if.end -> if.end33\nProbability 100.00%" ];
	Node0x5650e4384250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{if.else12:\l|  %24 = load double, ptr %splitRRFactor.addr, align 8\l  %cmp13 = fcmp ogt double %24, 1.000000e+00\l  br i1 %cmp13, label %if.then14, label %if.end32\l|{<s0>T|<s1>F}}"];
	Node0x5650e4384250:s0 -> Node0x5650e4385af0[tooltip="if.else12 -> if.then14\nProbability 50.00%" ];
	Node0x5650e4384250:s1 -> Node0x5650e4385b40[tooltip="if.else12 -> if.end32\nProbability 50.00%" ];
	Node0x5650e4385af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.then14:\l|  %25 = load double, ptr %splitRRFactor.addr, align 8\l  %26 = call double @llvm.floor.f64(double %25)\l  %conv15 = fptosi double %26 to i32\l  store i32 %conv15, ptr %splitFactor, align 4\l  %27 = load double, ptr %randomNumber, align 8\l  %28 = load double, ptr %splitRRFactor.addr, align 8\l  %29 = load i32, ptr %splitFactor, align 4\l  %conv16 = sitofp i32 %29 to double\l  %sub17 = fsub double %28, %conv16\l  %cmp18 = fcmp ogt double %27, %sub17\l  br i1 %cmp18, label %if.then19, label %if.end20\l|{<s0>T|<s1>F}}"];
	Node0x5650e4385af0:s0 -> Node0x5650e437d240[tooltip="if.then14 -> if.then19\nProbability 50.00%" ];
	Node0x5650e4385af0:s1 -> Node0x5650e437d2f0[tooltip="if.then14 -> if.end20\nProbability 50.00%" ];
	Node0x5650e437d240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{if.then19:\l|  %30 = load i32, ptr %splitFactor, align 4\l  %dec = add nsw i32 %30, -1\l  store i32 %dec, ptr %splitFactor, align 4\l  br label %if.end20\l}"];
	Node0x5650e437d240 -> Node0x5650e437d2f0[tooltip="if.then19 -> if.end20\nProbability 100.00%" ];
	Node0x5650e437d2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.end20:\l|  %31 = load double, ptr %splitRRFactor.addr, align 8\l  %32 = load ptr, ptr %currentParticle, align 8\l  %weight21 = getelementptr inbounds %class.MC_Base_Particle, ptr %32, i32 0,\l... i32 3\l  %33 = load double, ptr %weight21, align 8\l  %div22 = fdiv double %33, %31\l  store double %div22, ptr %weight21, align 8\l  %34 = load ptr, ptr %currentParticle, align 8\l  call void @_ZN16MC_Base_ParticleC2ERKS_(ptr noundef nonnull align 8\l... dereferenceable(136) %splitParticle, ptr noundef nonnull align 8\l... dereferenceable(136) %34)\l  store i32 0, ptr %splitFactorIndex, align 4\l  br label %for.cond23\l}"];
	Node0x5650e437d2f0 -> Node0x5650e437de00[tooltip="if.end20 -> for.cond23\nProbability 100.00%" ];
	Node0x5650e437de00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond23:\l|  %35 = load i32, ptr %splitFactorIndex, align 4\l  %36 = load i32, ptr %splitFactor, align 4\l  %cmp24 = icmp slt i32 %35, %36\l  br i1 %cmp24, label %for.body25, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5650e437de00:s0 -> Node0x5650e437e080[tooltip="for.cond23 -> for.body25\nProbability 96.88%" ];
	Node0x5650e437de00:s1 -> Node0x5650e43881e0[tooltip="for.cond23 -> for.end\nProbability 3.12%" ];
	Node0x5650e437e080 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body25:\l|  %37 = load ptr, ptr %taskBalance.addr, align 8\l  %_split = getelementptr inbounds %class.Balance, ptr %37, i32 0, i32 11\l  %38 = load i64, ptr %_split, align 8\l  %inc26 = add i64 %38, 1\l  store i64 %inc26, ptr %_split, align 8\l  %39 = load ptr, ptr %currentParticle, align 8\l  %random_number_seed27 = getelementptr inbounds %class.MC_Base_Particle, ptr\l... %39, i32 0, i32 8\l  %call28 = call noundef i64 @_Z27rngSpawn_Random_Number_SeedPm(ptr noundef\l... %random_number_seed27)\l  %random_number_seed29 = getelementptr inbounds %class.MC_Base_Particle, ptr\l... %splitParticle, i32 0, i32 8\l  store i64 %call28, ptr %random_number_seed29, align 8\l  %random_number_seed30 = getelementptr inbounds %class.MC_Base_Particle, ptr\l... %splitParticle, i32 0, i32 8\l  %40 = load i64, ptr %random_number_seed30, align 8\l  %identifier = getelementptr inbounds %class.MC_Base_Particle, ptr\l... %splitParticle, i32 0, i32 9\l  store i64 %40, ptr %identifier, align 8\l  %41 = load ptr, ptr %my_particle_vault.addr, align 8\l  call void\l... @_ZN22ParticleVaultContainer21addProcessingParticleER16MC_Base_ParticleRm(ptr\l... noundef nonnull align 8 dereferenceable(104) %41, ptr noundef nonnull align 8\l... dereferenceable(136) %splitParticle, ptr noundef nonnull align 8\l... dereferenceable(8) %fill_vault_index)\l  br label %for.inc\l}"];
	Node0x5650e437e080 -> Node0x5650e4389180[tooltip="for.body25 -> for.inc\nProbability 100.00%" ];
	Node0x5650e4389180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %42 = load i32, ptr %splitFactorIndex, align 4\l  %inc31 = add nsw i32 %42, 1\l  store i32 %inc31, ptr %splitFactorIndex, align 4\l  br label %for.cond23, !llvm.loop !6\l}"];
	Node0x5650e4389180 -> Node0x5650e437de00[tooltip="for.inc -> for.cond23\nProbability 100.00%" ];
	Node0x5650e43881e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  br label %if.end32\l}"];
	Node0x5650e43881e0 -> Node0x5650e4385b40[tooltip="for.end -> if.end32\nProbability 100.00%" ];
	Node0x5650e4385b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{if.end32:\l|  br label %if.end33\l}"];
	Node0x5650e4385b40 -> Node0x5650e43852b0[tooltip="if.end32 -> if.end33\nProbability 100.00%" ];
	Node0x5650e43852b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{if.end33:\l|  br label %for.inc34\l}"];
	Node0x5650e43852b0 -> Node0x5650e438a060[tooltip="if.end33 -> for.inc34\nProbability 100.00%" ];
	Node0x5650e438a060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{for.inc34:\l|  %43 = load i32, ptr %particleIndex, align 4\l  %dec35 = add nsw i32 %43, -1\l  store i32 %dec35, ptr %particleIndex, align 4\l  br label %for.cond, !llvm.loop !8\l}"];
	Node0x5650e438a060 -> Node0x5650e4382ad0[tooltip="for.inc34 -> for.cond\nProbability 100.00%" ];
	Node0x5650e4382e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870" fontname="Courier",label="{for.end36:\l|  ret void\l}"];
}
