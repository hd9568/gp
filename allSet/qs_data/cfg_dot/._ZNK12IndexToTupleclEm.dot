digraph "CFG for '_ZNK12IndexToTupleclEm' function" {
	label="CFG for '_ZNK12IndexToTupleclEm' function";

	Node0x560dc9ff49f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %retval = alloca %class.Tuple, align 4\l  %this.addr = alloca ptr, align 8\l  %index.addr = alloca i64, align 8\l  %x = alloca i32, align 4\l  %y = alloca i32, align 4\l  %z = alloca i32, align 4\l  %retval.coerce = alloca \{ i64, i32 \}, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store i64 %index, ptr %index.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %0 = load i64, ptr %index.addr, align 8\l  %nx_ = getelementptr inbounds %class.IndexToTuple, ptr %this1, i32 0, i32 0\l  %1 = load i32, ptr %nx_, align 4\l  %conv = sext i32 %1 to i64\l  %rem = urem i64 %0, %conv\l  %conv2 = trunc i64 %rem to i32\l  store i32 %conv2, ptr %x, align 4\l  %nx_3 = getelementptr inbounds %class.IndexToTuple, ptr %this1, i32 0, i32 0\l  %2 = load i32, ptr %nx_3, align 4\l  %conv4 = sext i32 %2 to i64\l  %3 = load i64, ptr %index.addr, align 8\l  %div = udiv i64 %3, %conv4\l  store i64 %div, ptr %index.addr, align 8\l  %4 = load i64, ptr %index.addr, align 8\l  %ny_ = getelementptr inbounds %class.IndexToTuple, ptr %this1, i32 0, i32 1\l  %5 = load i32, ptr %ny_, align 4\l  %conv5 = sext i32 %5 to i64\l  %rem6 = urem i64 %4, %conv5\l  %conv7 = trunc i64 %rem6 to i32\l  store i32 %conv7, ptr %y, align 4\l  %6 = load i64, ptr %index.addr, align 8\l  %ny_8 = getelementptr inbounds %class.IndexToTuple, ptr %this1, i32 0, i32 1\l  %7 = load i32, ptr %ny_8, align 4\l  %conv9 = sext i32 %7 to i64\l  %div10 = udiv i64 %6, %conv9\l  %conv11 = trunc i64 %div10 to i32\l  store i32 %conv11, ptr %z, align 4\l  %8 = load i32, ptr %x, align 4\l  %9 = load i32, ptr %y, align 4\l  %10 = load i32, ptr %z, align 4\l  call void @_ZN5TupleC2Eiii(ptr noundef nonnull align 4 dereferenceable(12)\l... %retval, i32 noundef %8, i32 noundef %9, i32 noundef %10)\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %retval.coerce, ptr align 4\l... %retval, i64 12, i1 false)\l  %11 = load \{ i64, i32 \}, ptr %retval.coerce, align 8\l  ret \{ i64, i32 \} %11\l}"];
}
