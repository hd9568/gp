digraph "CFG for '_ZN12_GLOBAL__N_136MCT_Nearest_Facet_3D_G_Move_ParticleER9MC_DomainRK11MC_LocationR9MC_Vectord' function" {
	label="CFG for '_ZN12_GLOBAL__N_136MCT_Nearest_Facet_3D_G_Move_ParticleER9MC_DomainRK11MC_LocationR9MC_Vectord' function";

	Node0x5579e71efec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %domain.addr = alloca ptr, align 8\l  %location.addr = alloca ptr, align 8\l  %coordinate.addr = alloca ptr, align 8\l  %move_factor.addr = alloca double, align 8\l  %move_to = alloca %class.MC_Vector, align 8\l  store ptr %domain, ptr %domain.addr, align 8\l  store ptr %location, ptr %location.addr, align 8\l  store ptr %coordinate, ptr %coordinate.addr, align 8\l  store double %move_factor, ptr %move_factor.addr, align 8\l  %0 = load ptr, ptr %domain.addr, align 8\l  %1 = load ptr, ptr %location.addr, align 8\l  %cell = getelementptr inbounds %class.MC_Location, ptr %1, i32 0, i32 1\l  %2 = load i32, ptr %cell, align 4\l  call void @_Z22MCT_Cell_Position_3D_GRK9MC_Domaini(ptr dead_on_unwind\l... writable sret(%class.MC_Vector) align 8 %move_to, ptr noundef nonnull align 8\l... dereferenceable(288) %0, i32 noundef %2)\l  %3 = load double, ptr %move_factor.addr, align 8\l  %x = getelementptr inbounds %class.MC_Vector, ptr %move_to, i32 0, i32 0\l  %4 = load double, ptr %x, align 8\l  %5 = load ptr, ptr %coordinate.addr, align 8\l  %x1 = getelementptr inbounds %class.MC_Vector, ptr %5, i32 0, i32 0\l  %6 = load double, ptr %x1, align 8\l  %sub = fsub double %4, %6\l  %7 = load ptr, ptr %coordinate.addr, align 8\l  %x2 = getelementptr inbounds %class.MC_Vector, ptr %7, i32 0, i32 0\l  %8 = load double, ptr %x2, align 8\l  %9 = call double @llvm.fmuladd.f64(double %3, double %sub, double %8)\l  store double %9, ptr %x2, align 8\l  %10 = load double, ptr %move_factor.addr, align 8\l  %y = getelementptr inbounds %class.MC_Vector, ptr %move_to, i32 0, i32 1\l  %11 = load double, ptr %y, align 8\l  %12 = load ptr, ptr %coordinate.addr, align 8\l  %y3 = getelementptr inbounds %class.MC_Vector, ptr %12, i32 0, i32 1\l  %13 = load double, ptr %y3, align 8\l  %sub4 = fsub double %11, %13\l  %14 = load ptr, ptr %coordinate.addr, align 8\l  %y5 = getelementptr inbounds %class.MC_Vector, ptr %14, i32 0, i32 1\l  %15 = load double, ptr %y5, align 8\l  %16 = call double @llvm.fmuladd.f64(double %10, double %sub4, double %15)\l  store double %16, ptr %y5, align 8\l  %17 = load double, ptr %move_factor.addr, align 8\l  %z = getelementptr inbounds %class.MC_Vector, ptr %move_to, i32 0, i32 2\l  %18 = load double, ptr %z, align 8\l  %19 = load ptr, ptr %coordinate.addr, align 8\l  %z6 = getelementptr inbounds %class.MC_Vector, ptr %19, i32 0, i32 2\l  %20 = load double, ptr %z6, align 8\l  %sub7 = fsub double %18, %20\l  %21 = load ptr, ptr %coordinate.addr, align 8\l  %z8 = getelementptr inbounds %class.MC_Vector, ptr %21, i32 0, i32 2\l  %22 = load double, ptr %z8, align 8\l  %23 = call double @llvm.fmuladd.f64(double %17, double %sub7, double %22)\l  store double %23, ptr %z8, align 8\l  ret void\l}"];
}
