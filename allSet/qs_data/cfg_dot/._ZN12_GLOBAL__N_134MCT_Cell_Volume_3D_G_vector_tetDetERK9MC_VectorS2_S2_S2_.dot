digraph "CFG for '_ZN12_GLOBAL__N_134MCT_Cell_Volume_3D_G_vector_tetDetERK9MC_VectorS2_S2_S2_' function" {
	label="CFG for '_ZN12_GLOBAL__N_134MCT_Cell_Volume_3D_G_vector_tetDetERK9MC_VectorS2_S2_S2_' function";

	Node0x5579e71a6080 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %v0_.addr = alloca ptr, align 8\l  %v1_.addr = alloca ptr, align 8\l  %v2_.addr = alloca ptr, align 8\l  %v3.addr = alloca ptr, align 8\l  %v0 = alloca %class.MC_Vector, align 8\l  %v1 = alloca %class.MC_Vector, align 8\l  %v2 = alloca %class.MC_Vector, align 8\l  store ptr %v0_, ptr %v0_.addr, align 8\l  store ptr %v1_, ptr %v1_.addr, align 8\l  store ptr %v2_, ptr %v2_.addr, align 8\l  store ptr %v3, ptr %v3.addr, align 8\l  %0 = load ptr, ptr %v0_.addr, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %v0, ptr align 8 %0, i64 24, i1\l... false)\l  %1 = load ptr, ptr %v1_.addr, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %v1, ptr align 8 %1, i64 24, i1\l... false)\l  %2 = load ptr, ptr %v2_.addr, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %v2, ptr align 8 %2, i64 24, i1\l... false)\l  %3 = load ptr, ptr %v3.addr, align 8\l  %x = getelementptr inbounds %class.MC_Vector, ptr %3, i32 0, i32 0\l  %4 = load double, ptr %x, align 8\l  %x1 = getelementptr inbounds %class.MC_Vector, ptr %v0, i32 0, i32 0\l  %5 = load double, ptr %x1, align 8\l  %sub = fsub double %5, %4\l  store double %sub, ptr %x1, align 8\l  %6 = load ptr, ptr %v3.addr, align 8\l  %y = getelementptr inbounds %class.MC_Vector, ptr %6, i32 0, i32 1\l  %7 = load double, ptr %y, align 8\l  %y2 = getelementptr inbounds %class.MC_Vector, ptr %v0, i32 0, i32 1\l  %8 = load double, ptr %y2, align 8\l  %sub3 = fsub double %8, %7\l  store double %sub3, ptr %y2, align 8\l  %9 = load ptr, ptr %v3.addr, align 8\l  %z = getelementptr inbounds %class.MC_Vector, ptr %9, i32 0, i32 2\l  %10 = load double, ptr %z, align 8\l  %z4 = getelementptr inbounds %class.MC_Vector, ptr %v0, i32 0, i32 2\l  %11 = load double, ptr %z4, align 8\l  %sub5 = fsub double %11, %10\l  store double %sub5, ptr %z4, align 8\l  %12 = load ptr, ptr %v3.addr, align 8\l  %x6 = getelementptr inbounds %class.MC_Vector, ptr %12, i32 0, i32 0\l  %13 = load double, ptr %x6, align 8\l  %x7 = getelementptr inbounds %class.MC_Vector, ptr %v1, i32 0, i32 0\l  %14 = load double, ptr %x7, align 8\l  %sub8 = fsub double %14, %13\l  store double %sub8, ptr %x7, align 8\l  %15 = load ptr, ptr %v3.addr, align 8\l  %y9 = getelementptr inbounds %class.MC_Vector, ptr %15, i32 0, i32 1\l  %16 = load double, ptr %y9, align 8\l  %y10 = getelementptr inbounds %class.MC_Vector, ptr %v1, i32 0, i32 1\l  %17 = load double, ptr %y10, align 8\l  %sub11 = fsub double %17, %16\l  store double %sub11, ptr %y10, align 8\l  %18 = load ptr, ptr %v3.addr, align 8\l  %z12 = getelementptr inbounds %class.MC_Vector, ptr %18, i32 0, i32 2\l  %19 = load double, ptr %z12, align 8\l  %z13 = getelementptr inbounds %class.MC_Vector, ptr %v1, i32 0, i32 2\l  %20 = load double, ptr %z13, align 8\l  %sub14 = fsub double %20, %19\l  store double %sub14, ptr %z13, align 8\l  %21 = load ptr, ptr %v3.addr, align 8\l  %x15 = getelementptr inbounds %class.MC_Vector, ptr %21, i32 0, i32 0\l  %22 = load double, ptr %x15, align 8\l  %x16 = getelementptr inbounds %class.MC_Vector, ptr %v2, i32 0, i32 0\l  %23 = load double, ptr %x16, align 8\l  %sub17 = fsub double %23, %22\l  store double %sub17, ptr %x16, align 8\l  %24 = load ptr, ptr %v3.addr, align 8\l  %y18 = getelementptr inbounds %class.MC_Vector, ptr %24, i32 0, i32 1\l  %25 = load double, ptr %y18, align 8\l  %y19 = getelementptr inbounds %class.MC_Vector, ptr %v2, i32 0, i32 1\l  %26 = load double, ptr %y19, align 8\l  %sub20 = fsub double %26, %25\l  store double %sub20, ptr %y19, align 8\l  %27 = load ptr, ptr %v3.addr, align 8\l  %z21 = getelementptr inbounds %class.MC_Vector, ptr %27, i32 0, i32 2\l  %28 = load double, ptr %z21, align 8\l  %z22 = getelementptr inbounds %class.MC_Vector, ptr %v2, i32 0, i32 2\l  %29 = load double, ptr %z22, align 8\l  %sub23 = fsub double %29, %28\l  store double %sub23, ptr %z22, align 8\l  %z24 = getelementptr inbounds %class.MC_Vector, ptr %v0, i32 0, i32 2\l  %30 = load double, ptr %z24, align 8\l  %x25 = getelementptr inbounds %class.MC_Vector, ptr %v1, i32 0, i32 0\l  %31 = load double, ptr %x25, align 8\l  %y26 = getelementptr inbounds %class.MC_Vector, ptr %v2, i32 0, i32 1\l  %32 = load double, ptr %y26, align 8\l  %y27 = getelementptr inbounds %class.MC_Vector, ptr %v1, i32 0, i32 1\l  %33 = load double, ptr %y27, align 8\l  %x28 = getelementptr inbounds %class.MC_Vector, ptr %v2, i32 0, i32 0\l  %34 = load double, ptr %x28, align 8\l  %mul29 = fmul double %33, %34\l  %neg = fneg double %mul29\l  %35 = call double @llvm.fmuladd.f64(double %31, double %32, double %neg)\l  %y30 = getelementptr inbounds %class.MC_Vector, ptr %v0, i32 0, i32 1\l  %36 = load double, ptr %y30, align 8\l  %z31 = getelementptr inbounds %class.MC_Vector, ptr %v1, i32 0, i32 2\l  %37 = load double, ptr %z31, align 8\l  %x32 = getelementptr inbounds %class.MC_Vector, ptr %v2, i32 0, i32 0\l  %38 = load double, ptr %x32, align 8\l  %x34 = getelementptr inbounds %class.MC_Vector, ptr %v1, i32 0, i32 0\l  %39 = load double, ptr %x34, align 8\l  %z35 = getelementptr inbounds %class.MC_Vector, ptr %v2, i32 0, i32 2\l  %40 = load double, ptr %z35, align 8\l  %mul36 = fmul double %39, %40\l  %neg37 = fneg double %mul36\l  %41 = call double @llvm.fmuladd.f64(double %37, double %38, double %neg37)\l  %mul38 = fmul double %36, %41\l  %42 = call double @llvm.fmuladd.f64(double %30, double %35, double %mul38)\l  %x39 = getelementptr inbounds %class.MC_Vector, ptr %v0, i32 0, i32 0\l  %43 = load double, ptr %x39, align 8\l  %y40 = getelementptr inbounds %class.MC_Vector, ptr %v1, i32 0, i32 1\l  %44 = load double, ptr %y40, align 8\l  %z41 = getelementptr inbounds %class.MC_Vector, ptr %v2, i32 0, i32 2\l  %45 = load double, ptr %z41, align 8\l  %z42 = getelementptr inbounds %class.MC_Vector, ptr %v1, i32 0, i32 2\l  %46 = load double, ptr %z42, align 8\l  %y43 = getelementptr inbounds %class.MC_Vector, ptr %v2, i32 0, i32 1\l  %47 = load double, ptr %y43, align 8\l  %mul44 = fmul double %46, %47\l  %neg45 = fneg double %mul44\l  %48 = call double @llvm.fmuladd.f64(double %44, double %45, double %neg45)\l  %49 = call double @llvm.fmuladd.f64(double %43, double %48, double %42)\l  ret double %49\l}"];
}
