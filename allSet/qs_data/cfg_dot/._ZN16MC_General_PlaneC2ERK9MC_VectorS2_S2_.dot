digraph "CFG for '_ZN16MC_General_PlaneC2ERK9MC_VectorS2_S2_' function" {
	label="CFG for '_ZN16MC_General_PlaneC2ERK9MC_VectorS2_S2_' function";

	Node0x55dfe4b525b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %r0.addr = alloca ptr, align 8\l  %r1.addr = alloca ptr, align 8\l  %r2.addr = alloca ptr, align 8\l  %magnitude = alloca double, align 8\l  %inv_denominator = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store ptr %r0, ptr %r0.addr, align 8\l  store ptr %r1, ptr %r1.addr, align 8\l  store ptr %r2, ptr %r2.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  %0 = load ptr, ptr %r1.addr, align 8\l  %y = getelementptr inbounds %class.MC_Vector, ptr %0, i32 0, i32 1\l  %1 = load double, ptr %y, align 8\l  %2 = load ptr, ptr %r0.addr, align 8\l  %y2 = getelementptr inbounds %class.MC_Vector, ptr %2, i32 0, i32 1\l  %3 = load double, ptr %y2, align 8\l  %sub = fsub double %1, %3\l  %4 = load ptr, ptr %r2.addr, align 8\l  %z = getelementptr inbounds %class.MC_Vector, ptr %4, i32 0, i32 2\l  %5 = load double, ptr %z, align 8\l  %6 = load ptr, ptr %r0.addr, align 8\l  %z3 = getelementptr inbounds %class.MC_Vector, ptr %6, i32 0, i32 2\l  %7 = load double, ptr %z3, align 8\l  %sub4 = fsub double %5, %7\l  %8 = load ptr, ptr %r1.addr, align 8\l  %z5 = getelementptr inbounds %class.MC_Vector, ptr %8, i32 0, i32 2\l  %9 = load double, ptr %z5, align 8\l  %10 = load ptr, ptr %r0.addr, align 8\l  %z6 = getelementptr inbounds %class.MC_Vector, ptr %10, i32 0, i32 2\l  %11 = load double, ptr %z6, align 8\l  %sub7 = fsub double %9, %11\l  %12 = load ptr, ptr %r2.addr, align 8\l  %y8 = getelementptr inbounds %class.MC_Vector, ptr %12, i32 0, i32 1\l  %13 = load double, ptr %y8, align 8\l  %14 = load ptr, ptr %r0.addr, align 8\l  %y9 = getelementptr inbounds %class.MC_Vector, ptr %14, i32 0, i32 1\l  %15 = load double, ptr %y9, align 8\l  %sub10 = fsub double %13, %15\l  %mul11 = fmul double %sub7, %sub10\l  %neg = fneg double %mul11\l  %16 = call double @llvm.fmuladd.f64(double %sub, double %sub4, double %neg)\l  %A = getelementptr inbounds %class.MC_General_Plane, ptr %this1, i32 0, i32 0\l  store double %16, ptr %A, align 8\l  %17 = load ptr, ptr %r1.addr, align 8\l  %z12 = getelementptr inbounds %class.MC_Vector, ptr %17, i32 0, i32 2\l  %18 = load double, ptr %z12, align 8\l  %19 = load ptr, ptr %r0.addr, align 8\l  %z13 = getelementptr inbounds %class.MC_Vector, ptr %19, i32 0, i32 2\l  %20 = load double, ptr %z13, align 8\l  %sub14 = fsub double %18, %20\l  %21 = load ptr, ptr %r2.addr, align 8\l  %x = getelementptr inbounds %class.MC_Vector, ptr %21, i32 0, i32 0\l  %22 = load double, ptr %x, align 8\l  %23 = load ptr, ptr %r0.addr, align 8\l  %x15 = getelementptr inbounds %class.MC_Vector, ptr %23, i32 0, i32 0\l  %24 = load double, ptr %x15, align 8\l  %sub16 = fsub double %22, %24\l  %25 = load ptr, ptr %r1.addr, align 8\l  %x17 = getelementptr inbounds %class.MC_Vector, ptr %25, i32 0, i32 0\l  %26 = load double, ptr %x17, align 8\l  %27 = load ptr, ptr %r0.addr, align 8\l  %x18 = getelementptr inbounds %class.MC_Vector, ptr %27, i32 0, i32 0\l  %28 = load double, ptr %x18, align 8\l  %sub19 = fsub double %26, %28\l  %29 = load ptr, ptr %r2.addr, align 8\l  %z20 = getelementptr inbounds %class.MC_Vector, ptr %29, i32 0, i32 2\l  %30 = load double, ptr %z20, align 8\l  %31 = load ptr, ptr %r0.addr, align 8\l  %z21 = getelementptr inbounds %class.MC_Vector, ptr %31, i32 0, i32 2\l  %32 = load double, ptr %z21, align 8\l  %sub22 = fsub double %30, %32\l  %mul23 = fmul double %sub19, %sub22\l  %neg24 = fneg double %mul23\l  %33 = call double @llvm.fmuladd.f64(double %sub14, double %sub16, double\l... %neg24)\l  %B = getelementptr inbounds %class.MC_General_Plane, ptr %this1, i32 0, i32 1\l  store double %33, ptr %B, align 8\l  %34 = load ptr, ptr %r1.addr, align 8\l  %x25 = getelementptr inbounds %class.MC_Vector, ptr %34, i32 0, i32 0\l  %35 = load double, ptr %x25, align 8\l  %36 = load ptr, ptr %r0.addr, align 8\l  %x26 = getelementptr inbounds %class.MC_Vector, ptr %36, i32 0, i32 0\l  %37 = load double, ptr %x26, align 8\l  %sub27 = fsub double %35, %37\l  %38 = load ptr, ptr %r2.addr, align 8\l  %y28 = getelementptr inbounds %class.MC_Vector, ptr %38, i32 0, i32 1\l  %39 = load double, ptr %y28, align 8\l  %40 = load ptr, ptr %r0.addr, align 8\l  %y29 = getelementptr inbounds %class.MC_Vector, ptr %40, i32 0, i32 1\l  %41 = load double, ptr %y29, align 8\l  %sub30 = fsub double %39, %41\l  %42 = load ptr, ptr %r1.addr, align 8\l  %y31 = getelementptr inbounds %class.MC_Vector, ptr %42, i32 0, i32 1\l  %43 = load double, ptr %y31, align 8\l  %44 = load ptr, ptr %r0.addr, align 8\l  %y32 = getelementptr inbounds %class.MC_Vector, ptr %44, i32 0, i32 1\l  %45 = load double, ptr %y32, align 8\l  %sub33 = fsub double %43, %45\l  %46 = load ptr, ptr %r2.addr, align 8\l  %x34 = getelementptr inbounds %class.MC_Vector, ptr %46, i32 0, i32 0\l  %47 = load double, ptr %x34, align 8\l  %48 = load ptr, ptr %r0.addr, align 8\l  %x35 = getelementptr inbounds %class.MC_Vector, ptr %48, i32 0, i32 0\l  %49 = load double, ptr %x35, align 8\l  %sub36 = fsub double %47, %49\l  %mul37 = fmul double %sub33, %sub36\l  %neg38 = fneg double %mul37\l  %50 = call double @llvm.fmuladd.f64(double %sub27, double %sub30, double\l... %neg38)\l  %C = getelementptr inbounds %class.MC_General_Plane, ptr %this1, i32 0, i32 2\l  store double %50, ptr %C, align 8\l  %A39 = getelementptr inbounds %class.MC_General_Plane, ptr %this1, i32 0,\l... i32 0\l  %51 = load double, ptr %A39, align 8\l  %52 = load ptr, ptr %r0.addr, align 8\l  %x40 = getelementptr inbounds %class.MC_Vector, ptr %52, i32 0, i32 0\l  %53 = load double, ptr %x40, align 8\l  %B41 = getelementptr inbounds %class.MC_General_Plane, ptr %this1, i32 0,\l... i32 1\l  %54 = load double, ptr %B41, align 8\l  %55 = load ptr, ptr %r0.addr, align 8\l  %y42 = getelementptr inbounds %class.MC_Vector, ptr %55, i32 0, i32 1\l  %56 = load double, ptr %y42, align 8\l  %mul43 = fmul double %54, %56\l  %57 = call double @llvm.fmuladd.f64(double %51, double %53, double %mul43)\l  %C44 = getelementptr inbounds %class.MC_General_Plane, ptr %this1, i32 0,\l... i32 2\l  %58 = load double, ptr %C44, align 8\l  %59 = load ptr, ptr %r0.addr, align 8\l  %z45 = getelementptr inbounds %class.MC_Vector, ptr %59, i32 0, i32 2\l  %60 = load double, ptr %z45, align 8\l  %61 = call double @llvm.fmuladd.f64(double %58, double %60, double %57)\l  %mul = fmul double -1.000000e+00, %61\l  %D = getelementptr inbounds %class.MC_General_Plane, ptr %this1, i32 0, i32 3\l  store double %mul, ptr %D, align 8\l  %A46 = getelementptr inbounds %class.MC_General_Plane, ptr %this1, i32 0,\l... i32 0\l  %62 = load double, ptr %A46, align 8\l  %A47 = getelementptr inbounds %class.MC_General_Plane, ptr %this1, i32 0,\l... i32 0\l  %63 = load double, ptr %A47, align 8\l  %B49 = getelementptr inbounds %class.MC_General_Plane, ptr %this1, i32 0,\l... i32 1\l  %64 = load double, ptr %B49, align 8\l  %B50 = getelementptr inbounds %class.MC_General_Plane, ptr %this1, i32 0,\l... i32 1\l  %65 = load double, ptr %B50, align 8\l  %mul51 = fmul double %64, %65\l  %66 = call double @llvm.fmuladd.f64(double %62, double %63, double %mul51)\l  %C52 = getelementptr inbounds %class.MC_General_Plane, ptr %this1, i32 0,\l... i32 2\l  %67 = load double, ptr %C52, align 8\l  %C53 = getelementptr inbounds %class.MC_General_Plane, ptr %this1, i32 0,\l... i32 2\l  %68 = load double, ptr %C53, align 8\l  %69 = call double @llvm.fmuladd.f64(double %67, double %68, double %66)\l  %call = call double @sqrt(double noundef %69) #3\l  store double %call, ptr %magnitude, align 8\l  %70 = load double, ptr %magnitude, align 8\l  %cmp = fcmp oeq double %70, 0.000000e+00\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x55dfe4b525b0:s0 -> Node0x55dfe4b5a250[tooltip="entry -> if.then\nProbability 62.50%" ];
	Node0x55dfe4b525b0:s1 -> Node0x55dfe4b5a2c0[tooltip="entry -> if.end\nProbability 37.50%" ];
	Node0x55dfe4b5a250 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.then:\l|  %A55 = getelementptr inbounds %class.MC_General_Plane, ptr %this1, i32 0,\l... i32 0\l  store double 1.000000e+00, ptr %A55, align 8\l  store double 1.000000e+00, ptr %magnitude, align 8\l  br label %if.end\l}"];
	Node0x55dfe4b5a250 -> Node0x55dfe4b5a2c0[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x55dfe4b5a2c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end:\l|  %71 = load double, ptr %magnitude, align 8\l  %div = fdiv double 1.000000e+00, %71\l  store double %div, ptr %inv_denominator, align 8\l  %72 = load double, ptr %inv_denominator, align 8\l  %A56 = getelementptr inbounds %class.MC_General_Plane, ptr %this1, i32 0,\l... i32 0\l  %73 = load double, ptr %A56, align 8\l  %mul57 = fmul double %73, %72\l  store double %mul57, ptr %A56, align 8\l  %74 = load double, ptr %inv_denominator, align 8\l  %B58 = getelementptr inbounds %class.MC_General_Plane, ptr %this1, i32 0,\l... i32 1\l  %75 = load double, ptr %B58, align 8\l  %mul59 = fmul double %75, %74\l  store double %mul59, ptr %B58, align 8\l  %76 = load double, ptr %inv_denominator, align 8\l  %C60 = getelementptr inbounds %class.MC_General_Plane, ptr %this1, i32 0,\l... i32 2\l  %77 = load double, ptr %C60, align 8\l  %mul61 = fmul double %77, %76\l  store double %mul61, ptr %C60, align 8\l  %78 = load double, ptr %inv_denominator, align 8\l  %D62 = getelementptr inbounds %class.MC_General_Plane, ptr %this1, i32 0,\l... i32 3\l  %79 = load double, ptr %D62, align 8\l  %mul63 = fmul double %79, %78\l  store double %mul63, ptr %D62, align 8\l  ret void\l}"];
}
