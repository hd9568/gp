digraph "CFG for '_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE14_M_lower_boundEPSt13_Rb_tree_nodeImEPSt18_Rb_tree_node_baseRKm' function" {
	label="CFG for '_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE14_M_lower_boundEPSt13_Rb_tree_nodeImEPSt18_Rb_tree_node_baseRKm' function";

	Node0x560dca04c100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %retval = alloca %\"struct.std::_Rb_tree_iterator.48\", align 8\l  %this.addr = alloca ptr, align 8\l  %__x.addr = alloca ptr, align 8\l  %__y.addr = alloca ptr, align 8\l  %__k.addr = alloca ptr, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store ptr %__x, ptr %__x.addr, align 8\l  store ptr %__y, ptr %__y.addr, align 8\l  store ptr %__k, ptr %__k.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  br label %while.cond\l}"];
	Node0x560dca04c100 -> Node0x560dca04c5a0[tooltip="entry -> while.cond\nProbability 100.00%" ];
	Node0x560dca04c5a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{while.cond:\l|  %0 = load ptr, ptr %__x.addr, align 8\l  %cmp = icmp ne ptr %0, null\l  br i1 %cmp, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x560dca04c5a0:s0 -> Node0x560dca04c960[tooltip="while.cond -> while.body\nProbability 96.88%" ];
	Node0x560dca04c5a0:s1 -> Node0x560dca04c9e0[tooltip="while.cond -> while.end\nProbability 3.12%" ];
	Node0x560dca04c960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{while.body:\l|  %_M_impl = getelementptr inbounds %\"class.std::_Rb_tree.20\", ptr %this1,\l... i32 0, i32 0\l  %_M_key_compare = getelementptr inbounds\l... %\"struct.std::_Rb_tree_key_compare\", ptr %_M_impl, i32 0, i32 0\l  %1 = load ptr, ptr %__x.addr, align 8\l  %call = call noundef nonnull align 8 dereferenceable(8) ptr\l... @_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE6_S_keyEPKSt13_Rb_tree_nodeIm\l...E(ptr noundef %1)\l  %2 = load ptr, ptr %__k.addr, align 8\l  %call2 = call noundef zeroext i1 @_ZNKSt4lessImEclERKmS2_(ptr noundef\l... nonnull align 1 dereferenceable(1) %_M_key_compare, ptr noundef nonnull align\l... 8 dereferenceable(8) %call, ptr noundef nonnull align 8 dereferenceable(8) %2)\l  br i1 %call2, label %if.else, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x560dca04c960:s0 -> Node0x560dca04cfe0[tooltip="while.body -> if.else\nProbability 50.00%" ];
	Node0x560dca04c960:s1 -> Node0x560dca04d030[tooltip="while.body -> if.then\nProbability 50.00%" ];
	Node0x560dca04d030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then:\l|  %3 = load ptr, ptr %__x.addr, align 8\l  store ptr %3, ptr %__y.addr, align 8\l  %4 = load ptr, ptr %__x.addr, align 8\l  %call3 = call noundef ptr\l... @_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE7_S_leftEPSt18_Rb_tree_node_b\l...ase(ptr noundef %4) #12\l  store ptr %call3, ptr %__x.addr, align 8\l  br label %if.end\l}"];
	Node0x560dca04d030 -> Node0x560dca04d4c0[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x560dca04cfe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.else:\l|  %5 = load ptr, ptr %__x.addr, align 8\l  %call4 = call noundef ptr\l... @_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE8_S_rightEPSt18_Rb_tree_node_\l...base(ptr noundef %5) #12\l  store ptr %call4, ptr %__x.addr, align 8\l  br label %if.end\l}"];
	Node0x560dca04cfe0 -> Node0x560dca04d4c0[tooltip="if.else -> if.end\nProbability 100.00%" ];
	Node0x560dca04d4c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end:\l|  br label %while.cond, !llvm.loop !6\l}"];
	Node0x560dca04d4c0 -> Node0x560dca04c5a0[tooltip="if.end -> while.cond\nProbability 100.00%" ];
	Node0x560dca04c9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{while.end:\l|  %6 = load ptr, ptr %__y.addr, align 8\l  call void @_ZNSt17_Rb_tree_iteratorImEC2EPSt18_Rb_tree_node_base(ptr noundef\l... nonnull align 8 dereferenceable(8) %retval, ptr noundef %6) #12\l  %coerce.dive = getelementptr inbounds %\"struct.std::_Rb_tree_iterator.48\",\l... ptr %retval, i32 0, i32 0\l  %7 = load ptr, ptr %coerce.dive, align 8\l  ret ptr %7\l}"];
}
