digraph "CFG for '_Z5crossRK6VectorS1_' function" {
	label="CFG for '_Z5crossRK6VectorS1_' function";

	Node0x55f4daeaf010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %v1.addr = alloca ptr, align 8\l  %v2.addr = alloca ptr, align 8\l  store ptr %v1, ptr %v1.addr, align 8\l  store ptr %v2, ptr %v2.addr, align 8\l  %0 = load ptr, ptr %v1.addr, align 8\l  %y = getelementptr inbounds %class.Vector, ptr %0, i32 0, i32 1\l  %1 = load double, ptr %y, align 8\l  %2 = load ptr, ptr %v2.addr, align 8\l  %z = getelementptr inbounds %class.Vector, ptr %2, i32 0, i32 2\l  %3 = load double, ptr %z, align 8\l  %4 = load ptr, ptr %v2.addr, align 8\l  %y1 = getelementptr inbounds %class.Vector, ptr %4, i32 0, i32 1\l  %5 = load double, ptr %y1, align 8\l  %6 = load ptr, ptr %v1.addr, align 8\l  %z2 = getelementptr inbounds %class.Vector, ptr %6, i32 0, i32 2\l  %7 = load double, ptr %z2, align 8\l  %mul3 = fmul double %5, %7\l  %neg = fneg double %mul3\l  %8 = call double @llvm.fmuladd.f64(double %1, double %3, double %neg)\l  %9 = load ptr, ptr %v2.addr, align 8\l  %x = getelementptr inbounds %class.Vector, ptr %9, i32 0, i32 0\l  %10 = load double, ptr %x, align 8\l  %11 = load ptr, ptr %v1.addr, align 8\l  %z4 = getelementptr inbounds %class.Vector, ptr %11, i32 0, i32 2\l  %12 = load double, ptr %z4, align 8\l  %13 = load ptr, ptr %v1.addr, align 8\l  %x5 = getelementptr inbounds %class.Vector, ptr %13, i32 0, i32 0\l  %14 = load double, ptr %x5, align 8\l  %15 = load ptr, ptr %v2.addr, align 8\l  %z6 = getelementptr inbounds %class.Vector, ptr %15, i32 0, i32 2\l  %16 = load double, ptr %z6, align 8\l  %mul7 = fmul double %14, %16\l  %neg8 = fneg double %mul7\l  %17 = call double @llvm.fmuladd.f64(double %10, double %12, double %neg8)\l  %18 = load ptr, ptr %v1.addr, align 8\l  %x9 = getelementptr inbounds %class.Vector, ptr %18, i32 0, i32 0\l  %19 = load double, ptr %x9, align 8\l  %20 = load ptr, ptr %v2.addr, align 8\l  %y10 = getelementptr inbounds %class.Vector, ptr %20, i32 0, i32 1\l  %21 = load double, ptr %y10, align 8\l  %22 = load ptr, ptr %v2.addr, align 8\l  %x11 = getelementptr inbounds %class.Vector, ptr %22, i32 0, i32 0\l  %23 = load double, ptr %x11, align 8\l  %24 = load ptr, ptr %v1.addr, align 8\l  %y12 = getelementptr inbounds %class.Vector, ptr %24, i32 0, i32 1\l  %25 = load double, ptr %y12, align 8\l  %mul13 = fmul double %23, %25\l  %neg14 = fneg double %mul13\l  %26 = call double @llvm.fmuladd.f64(double %19, double %21, double %neg14)\l  call void @_ZN6VectorC2Eddd(ptr noundef nonnull align 8 dereferenceable(24)\l... %agg.result, double noundef %8, double noundef %17, double noundef %26)\l  ret void\l}"];
}
