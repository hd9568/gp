digraph "CFG for '_ZN14ResizeArrayRawIdE9resizeRawEi' function" {
	label="CFG for '_ZN14ResizeArrayRawIdE9resizeRawEi' function";

	Node0x5621f77307a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %size.addr = alloca i32, align 4\l  %tmpv = alloca ptr, align 8\l  %tmpa = alloca ptr, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store i32 %size, ptr %size.addr, align 4\l  %this1 = load ptr, ptr %this.addr, align 8\l  %0 = load i32, ptr %size.addr, align 4\l  %allocSize = getelementptr inbounds %class.ResizeArrayRaw.2, ptr %this1, i32\l... 0, i32 3\l  %1 = load i32, ptr %allocSize, align 4\l  %cmp = icmp sle i32 %0, %1\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5621f77307a0:s0 -> Node0x5621f7730e10[tooltip="entry -> if.then\nProbability 50.00%" ];
	Node0x5621f77307a0:s1 -> Node0x5621f7730e80[tooltip="entry -> if.end\nProbability 50.00%" ];
	Node0x5621f7730e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then:\l|  br label %return\l}"];
	Node0x5621f7730e10 -> Node0x5621f7730fa0[tooltip="if.then -> return\nProbability 100.00%" ];
	Node0x5621f7730e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end:\l|  %2 = load i32, ptr %size.addr, align 4\l  %allocSize2 = getelementptr inbounds %class.ResizeArrayRaw.2, ptr %this1,\l... i32 0, i32 3\l  %3 = load i32, ptr %allocSize2, align 4\l  %conv = sitofp i32 %3 to float\l  %growthFactor = getelementptr inbounds %class.ResizeArrayRaw.2, ptr %this1,\l... i32 0, i32 5\l  %4 = load float, ptr %growthFactor, align 4\l  %mul = fmul float %conv, %4\l  %conv3 = fptosi float %mul to i32\l  %cmp4 = icmp slt i32 %2, %conv3\l  br i1 %cmp4, label %if.then5, label %if.end11\l|{<s0>T|<s1>F}}"];
	Node0x5621f7730e80:s0 -> Node0x5621f7731720[tooltip="if.end -> if.then5\nProbability 50.00%" ];
	Node0x5621f7730e80:s1 -> Node0x5621f77317a0[tooltip="if.end -> if.end11\nProbability 50.00%" ];
	Node0x5621f7731720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.then5:\l|  %allocSize6 = getelementptr inbounds %class.ResizeArrayRaw.2, ptr %this1,\l... i32 0, i32 3\l  %5 = load i32, ptr %allocSize6, align 4\l  %conv7 = sitofp i32 %5 to float\l  %growthFactor8 = getelementptr inbounds %class.ResizeArrayRaw.2, ptr %this1,\l... i32 0, i32 5\l  %6 = load float, ptr %growthFactor8, align 4\l  %mul9 = fmul float %conv7, %6\l  %conv10 = fptosi float %mul9 to i32\l  store i32 %conv10, ptr %size.addr, align 4\l  br label %if.end11\l}"];
	Node0x5621f7731720 -> Node0x5621f77317a0[tooltip="if.then5 -> if.end11\nProbability 100.00%" ];
	Node0x5621f77317a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end11:\l|  %7 = load i32, ptr %size.addr, align 4\l  %allocSize12 = getelementptr inbounds %class.ResizeArrayRaw.2, ptr %this1,\l... i32 0, i32 3\l  %8 = load i32, ptr %allocSize12, align 4\l  %sub = sub nsw i32 %7, %8\l  %minSize = getelementptr inbounds %class.ResizeArrayRaw.2, ptr %this1, i32\l... 0, i32 6\l  %9 = load i32, ptr %minSize, align 8\l  %cmp13 = icmp slt i32 %sub, %9\l  br i1 %cmp13, label %if.then14, label %if.end17\l|{<s0>T|<s1>F}}"];
	Node0x5621f77317a0:s0 -> Node0x5621f77324c0[tooltip="if.end11 -> if.then14\nProbability 50.00%" ];
	Node0x5621f77317a0:s1 -> Node0x5621f7732540[tooltip="if.end11 -> if.end17\nProbability 50.00%" ];
	Node0x5621f77324c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.then14:\l|  %allocSize15 = getelementptr inbounds %class.ResizeArrayRaw.2, ptr %this1,\l... i32 0, i32 3\l  %10 = load i32, ptr %allocSize15, align 4\l  %minSize16 = getelementptr inbounds %class.ResizeArrayRaw.2, ptr %this1, i32\l... 0, i32 6\l  %11 = load i32, ptr %minSize16, align 8\l  %add = add nsw i32 %10, %11\l  store i32 %add, ptr %size.addr, align 4\l  br label %if.end17\l}"];
	Node0x5621f77324c0 -> Node0x5621f7732540[tooltip="if.then14 -> if.end17\nProbability 100.00%" ];
	Node0x5621f7732540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end17:\l|  %12 = load i32, ptr %size.addr, align 4\l  %conv18 = sext i32 %12 to i64\l  %mul19 = mul i64 %conv18, 8\l  %add20 = add i64 %mul19, 31\l  %call = call noalias noundef nonnull ptr @_Znam(i64 noundef %add20) #8\l  store ptr %call, ptr %tmpv, align 8\l  %13 = load ptr, ptr %tmpv, align 8\l  %add.ptr = getelementptr inbounds i8, ptr %13, i64 31\l  %14 = load ptr, ptr %tmpv, align 8\l  %add.ptr21 = getelementptr inbounds i8, ptr %14, i64 31\l  %15 = ptrtoint ptr %add.ptr21 to i64\l  %and = and i64 %15, 31\l  %idx.neg = sub i64 0, %and\l  %add.ptr22 = getelementptr inbounds i8, ptr %add.ptr, i64 %idx.neg\l  store ptr %add.ptr22, ptr %tmpa, align 8\l  %16 = load ptr, ptr %tmpa, align 8\l  %array = getelementptr inbounds %class.ResizeArrayRaw.2, ptr %this1, i32 0,\l... i32 0\l  %17 = load ptr, ptr %array, align 8\l  %arraySize = getelementptr inbounds %class.ResizeArrayRaw.2, ptr %this1, i32\l... 0, i32 2\l  %18 = load i32, ptr %arraySize, align 8\l  %conv23 = sext i32 %18 to i64\l  %mul24 = mul i64 8, %conv23\l  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %16, ptr align 1 %17, i64\l... %mul24, i1 false)\l  %allocSize25 = getelementptr inbounds %class.ResizeArrayRaw.2, ptr %this1,\l... i32 0, i32 3\l  %19 = load i32, ptr %allocSize25, align 4\l  %tobool = icmp ne i32 %19, 0\l  br i1 %tobool, label %if.then26, label %if.end27\l|{<s0>T|<s1>F}}"];
	Node0x5621f7732540:s0 -> Node0x5621f7731e00[tooltip="if.end17 -> if.then26\nProbability 62.50%" ];
	Node0x5621f7732540:s1 -> Node0x5621f7731e50[tooltip="if.end17 -> if.end27\nProbability 37.50%" ];
	Node0x5621f7731e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.then26:\l|  %varray = getelementptr inbounds %class.ResizeArrayRaw.2, ptr %this1, i32\l... 0, i32 1\l  %20 = load ptr, ptr %varray, align 8\l  %isnull = icmp eq ptr %20, null\l  br i1 %isnull, label %delete.end, label %delete.notnull\l|{<s0>T|<s1>F}}"];
	Node0x5621f7731e00:s0 -> Node0x5621f7734420[tooltip="if.then26 -> delete.end\nProbability 37.50%" ];
	Node0x5621f7731e00:s1 -> Node0x5621f77344a0[tooltip="if.then26 -> delete.notnull\nProbability 62.50%" ];
	Node0x5621f77344a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{delete.notnull:\l|  call void @_ZdaPv(ptr noundef %20) #9\l  br label %delete.end\l}"];
	Node0x5621f77344a0 -> Node0x5621f7734420[tooltip="delete.notnull -> delete.end\nProbability 100.00%" ];
	Node0x5621f7734420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{delete.end:\l|  br label %if.end27\l}"];
	Node0x5621f7734420 -> Node0x5621f7731e50[tooltip="delete.end -> if.end27\nProbability 100.00%" ];
	Node0x5621f7731e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end27:\l|  %21 = load ptr, ptr %tmpv, align 8\l  %varray28 = getelementptr inbounds %class.ResizeArrayRaw.2, ptr %this1, i32\l... 0, i32 1\l  store ptr %21, ptr %varray28, align 8\l  %22 = load ptr, ptr %tmpa, align 8\l  %array29 = getelementptr inbounds %class.ResizeArrayRaw.2, ptr %this1, i32\l... 0, i32 0\l  store ptr %22, ptr %array29, align 8\l  %23 = load i32, ptr %size.addr, align 4\l  %allocSize30 = getelementptr inbounds %class.ResizeArrayRaw.2, ptr %this1,\l... i32 0, i32 3\l  store i32 %23, ptr %allocSize30, align 4\l  br label %return\l}"];
	Node0x5621f7731e50 -> Node0x5621f7730fa0[tooltip="if.end27 -> return\nProbability 100.00%" ];
	Node0x5621f7730fa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{return:\l|  ret void\l}"];
}
