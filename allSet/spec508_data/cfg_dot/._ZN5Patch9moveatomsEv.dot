digraph "CFG for '_ZN5Patch9moveatomsEv' function" {
	label="CFG for '_ZN5Patch9moveatomsEv' function";

	Node0x55fb27d62b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %mag = alloca double, align 8\l  %im = alloca i32, align 4\l  %i = alloca i32, align 4\l  %a = alloca ptr, align 8\l  %aExt = alloca ptr, align 8\l  %p = alloca ptr, align 8\l  %imid = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  %this1 = load ptr, ptr %this.addr, align 8\l  store double 3.000000e-01, ptr %mag, align 8\l  %i_move = getelementptr inbounds %class.Patch, ptr %this1, i32 0, i32 7\l  %0 = load i32, ptr %i_move, align 8\l  %inc = add nsw i32 %0, 1\l  store i32 %inc, ptr %i_move, align 8\l  store i32 %inc, ptr %im, align 4\l  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x55fb27d62b70 -> Node0x55fb27d649d0[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x55fb27d649d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %1 = load i32, ptr %i, align 4\l  %numAtoms = getelementptr inbounds %class.Patch, ptr %this1, i32 0, i32 0\l  %2 = load i32, ptr %numAtoms, align 8\l  %cmp = icmp slt i32 %1, %2\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x55fb27d649d0:s0 -> Node0x55fb27d64d60[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x55fb27d649d0:s1 -> Node0x55fb27d64de0[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x55fb27d64d60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %atoms = getelementptr inbounds %class.Patch, ptr %this1, i32 0, i32 2\l  %3 = load ptr, ptr %atoms, align 8\l  %4 = load i32, ptr %i, align 4\l  %idxprom = sext i32 %4 to i64\l  %arrayidx = getelementptr inbounds %struct.CompAtom, ptr %3, i64 %idxprom\l  store ptr %arrayidx, ptr %a, align 8\l  %atomsExt = getelementptr inbounds %class.Patch, ptr %this1, i32 0, i32 3\l  %5 = load ptr, ptr %atomsExt, align 8\l  %6 = load i32, ptr %i, align 4\l  %idxprom2 = sext i32 %6 to i64\l  %arrayidx3 = getelementptr inbounds %struct.CompAtomExt, ptr %5, i64\l... %idxprom2\l  store ptr %arrayidx3, ptr %aExt, align 8\l  %p_orig = getelementptr inbounds %class.Patch, ptr %this1, i32 0, i32 6\l  %7 = load ptr, ptr %p_orig, align 8\l  %8 = load i32, ptr %i, align 4\l  %idxprom4 = sext i32 %8 to i64\l  %arrayidx5 = getelementptr inbounds %class.Vector, ptr %7, i64 %idxprom4\l  store ptr %arrayidx5, ptr %p, align 8\l  %9 = load i32, ptr %im, align 4\l  %10 = load ptr, ptr %aExt, align 8\l  %bf.load = load i32, ptr %10, align 4\l  %bf.shl = shl i32 %bf.load, 2\l  %bf.ashr = ashr i32 %bf.shl, 2\l  %add = add nsw i32 %bf.ashr, 1\l  %mul = mul nsw i32 %9, %add\l  %or = or i32 %mul, 65535\l  %conv = sitofp i32 %or to double\l  store double %conv, ptr %imid, align 8\l  %11 = load ptr, ptr %p, align 8\l  %x = getelementptr inbounds %class.Vector, ptr %11, i32 0, i32 0\l  %12 = load double, ptr %x, align 8\l  %13 = load double, ptr %imid, align 8\l  %mul6 = fmul double 1.000000e+00, %13\l  %call = call double @cos(double noundef %mul6) #9\l  %14 = call double @llvm.fmuladd.f64(double 3.000000e-01, double %call,\l... double %12)\l  %15 = load ptr, ptr %a, align 8\l  %position = getelementptr inbounds %struct.CompAtom, ptr %15, i32 0, i32 0\l  %x8 = getelementptr inbounds %class.Vector, ptr %position, i32 0, i32 0\l  store double %14, ptr %x8, align 8\l  %16 = load ptr, ptr %p, align 8\l  %y = getelementptr inbounds %class.Vector, ptr %16, i32 0, i32 1\l  %17 = load double, ptr %y, align 8\l  %18 = load double, ptr %imid, align 8\l  %mul9 = fmul double 2.000000e+00, %18\l  %call10 = call double @cos(double noundef %mul9) #9\l  %19 = call double @llvm.fmuladd.f64(double 3.000000e-01, double %call10,\l... double %17)\l  %20 = load ptr, ptr %a, align 8\l  %position12 = getelementptr inbounds %struct.CompAtom, ptr %20, i32 0, i32 0\l  %y13 = getelementptr inbounds %class.Vector, ptr %position12, i32 0, i32 1\l  store double %19, ptr %y13, align 8\l  %21 = load ptr, ptr %p, align 8\l  %z = getelementptr inbounds %class.Vector, ptr %21, i32 0, i32 2\l  %22 = load double, ptr %z, align 8\l  %23 = load double, ptr %imid, align 8\l  %mul14 = fmul double 3.000000e+00, %23\l  %call15 = call double @cos(double noundef %mul14) #9\l  %24 = call double @llvm.fmuladd.f64(double 3.000000e-01, double %call15,\l... double %22)\l  %25 = load ptr, ptr %a, align 8\l  %position17 = getelementptr inbounds %struct.CompAtom, ptr %25, i32 0, i32 0\l  %z18 = getelementptr inbounds %class.Vector, ptr %position17, i32 0, i32 2\l  store double %24, ptr %z18, align 8\l  br label %for.inc\l}"];
	Node0x55fb27d64d60 -> Node0x55fb27d68360[tooltip="for.body -> for.inc\nProbability 100.00%" ];
	Node0x55fb27d68360 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %26 = load i32, ptr %i, align 4\l  %inc19 = add nsw i32 %26, 1\l  store i32 %inc19, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x55fb27d68360 -> Node0x55fb27d649d0[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x55fb27d64de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  ret void\l}"];
}
