digraph "CFG for 'hypre_ParVectorCreate' function" {
	label="CFG for 'hypre_ParVectorCreate' function";

	Node0x556ffb64d140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %retval = alloca ptr, align 8\l  %comm.addr = alloca ptr, align 8\l  %global_size.addr = alloca i32, align 4\l  %partitioning.addr = alloca ptr, align 8\l  %vector = alloca ptr, align 8\l  %num_procs = alloca i32, align 4\l  %my_id = alloca i32, align 4\l  store ptr %comm, ptr %comm.addr, align 8\l  store i32 %global_size, ptr %global_size.addr, align 4\l  store ptr %partitioning, ptr %partitioning.addr, align 8\l  %0 = load i32, ptr %global_size.addr, align 4\l  %cmp = icmp slt i32 %0, 0\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x556ffb64d140:s0 -> Node0x556ffb64e5d0[tooltip="entry -> if.then\nProbability 37.50%" ];
	Node0x556ffb64d140:s1 -> Node0x556ffb64e7e0[tooltip="entry -> if.end\nProbability 62.50%" ];
	Node0x556ffb64e5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{if.then:\l|  call void @hypre_error_handler(ptr noundef @.str, i32 noundef 50, i32\l... noundef 20, ptr noundef null)\l  store ptr null, ptr %retval, align 8\l  br label %return\l}"];
	Node0x556ffb64e5d0 -> Node0x556ffb64f650[tooltip="if.then -> return\nProbability 100.00%" ];
	Node0x556ffb64e7e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.end:\l|  %call = call ptr @hypre_CAlloc(i64 noundef 1, i64 noundef 64)\l  store ptr %call, ptr %vector, align 8\l  %1 = load ptr, ptr %comm.addr, align 8\l  %call1 = call i32 @hypre_MPI_Comm_rank(ptr noundef %1, ptr noundef %my_id)\l  %2 = load ptr, ptr %partitioning.addr, align 8\l  %tobool = icmp ne ptr %2, null\l  br i1 %tobool, label %if.end5, label %if.then2\l|{<s0>T|<s1>F}}"];
	Node0x556ffb64e7e0:s0 -> Node0x556ffb64fe00[tooltip="if.end -> if.end5\nProbability 62.50%" ];
	Node0x556ffb64e7e0:s1 -> Node0x556ffb64fed0[tooltip="if.end -> if.then2\nProbability 37.50%" ];
	Node0x556ffb64fed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.then2:\l|  %3 = load ptr, ptr %comm.addr, align 8\l  %call3 = call i32 @hypre_MPI_Comm_size(ptr noundef %3, ptr noundef\l... %num_procs)\l  %4 = load i32, ptr %global_size.addr, align 4\l  %5 = load i32, ptr %num_procs, align 4\l  %6 = load i32, ptr %my_id, align 4\l  %call4 = call i32 @hypre_GenerateLocalPartitioning(i32 noundef %4, i32\l... noundef %5, i32 noundef %6, ptr noundef %partitioning.addr)\l  br label %if.end5\l}"];
	Node0x556ffb64fed0 -> Node0x556ffb64fe00[tooltip="if.then2 -> if.end5\nProbability 100.00%" ];
	Node0x556ffb64fe00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.end5:\l|  %7 = load ptr, ptr %vector, align 8\l  %assumed_partition = getelementptr inbounds %struct.hypre_ParVector_struct,\l... ptr %7, i32 0, i32 9\l  store ptr null, ptr %assumed_partition, align 8\l  %8 = load ptr, ptr %comm.addr, align 8\l  %9 = load ptr, ptr %vector, align 8\l  %comm6 = getelementptr inbounds %struct.hypre_ParVector_struct, ptr %9, i32\l... 0, i32 0\l  store ptr %8, ptr %comm6, align 8\l  %10 = load i32, ptr %global_size.addr, align 4\l  %11 = load ptr, ptr %vector, align 8\l  %global_size7 = getelementptr inbounds %struct.hypre_ParVector_struct, ptr\l... %11, i32 0, i32 1\l  store i32 %10, ptr %global_size7, align 8\l  %12 = load ptr, ptr %partitioning.addr, align 8\l  %arrayidx = getelementptr inbounds i32, ptr %12, i64 0\l  %13 = load i32, ptr %arrayidx, align 4\l  %14 = load ptr, ptr %vector, align 8\l  %first_index = getelementptr inbounds %struct.hypre_ParVector_struct, ptr\l... %14, i32 0, i32 2\l  store i32 %13, ptr %first_index, align 4\l  %15 = load ptr, ptr %partitioning.addr, align 8\l  %arrayidx8 = getelementptr inbounds i32, ptr %15, i64 1\l  %16 = load i32, ptr %arrayidx8, align 4\l  %sub = sub nsw i32 %16, 1\l  %17 = load ptr, ptr %vector, align 8\l  %last_index = getelementptr inbounds %struct.hypre_ParVector_struct, ptr\l... %17, i32 0, i32 3\l  store i32 %sub, ptr %last_index, align 8\l  %18 = load ptr, ptr %partitioning.addr, align 8\l  %19 = load ptr, ptr %vector, align 8\l  %partitioning9 = getelementptr inbounds %struct.hypre_ParVector_struct, ptr\l... %19, i32 0, i32 4\l  store ptr %18, ptr %partitioning9, align 8\l  %20 = load ptr, ptr %partitioning.addr, align 8\l  %arrayidx10 = getelementptr inbounds i32, ptr %20, i64 1\l  %21 = load i32, ptr %arrayidx10, align 4\l  %22 = load ptr, ptr %partitioning.addr, align 8\l  %arrayidx11 = getelementptr inbounds i32, ptr %22, i64 0\l  %23 = load i32, ptr %arrayidx11, align 4\l  %sub12 = sub nsw i32 %21, %23\l  %call13 = call ptr @hypre_SeqVectorCreate(i32 noundef %sub12)\l  %24 = load ptr, ptr %vector, align 8\l  %local_vector = getelementptr inbounds %struct.hypre_ParVector_struct, ptr\l... %24, i32 0, i32 6\l  store ptr %call13, ptr %local_vector, align 8\l  %25 = load ptr, ptr %vector, align 8\l  %owns_data = getelementptr inbounds %struct.hypre_ParVector_struct, ptr %25,\l... i32 0, i32 7\l  store i32 1, ptr %owns_data, align 8\l  %26 = load ptr, ptr %vector, align 8\l  %owns_partitioning = getelementptr inbounds %struct.hypre_ParVector_struct,\l... ptr %26, i32 0, i32 8\l  store i32 1, ptr %owns_partitioning, align 4\l  %27 = load ptr, ptr %vector, align 8\l  %actual_local_size = getelementptr inbounds %struct.hypre_ParVector_struct,\l... ptr %27, i32 0, i32 5\l  store i32 0, ptr %actual_local_size, align 8\l  %28 = load ptr, ptr %vector, align 8\l  store ptr %28, ptr %retval, align 8\l  br label %return\l}"];
	Node0x556ffb64fe00 -> Node0x556ffb64f650[tooltip="if.end5 -> return\nProbability 100.00%" ];
	Node0x556ffb64f650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{return:\l|  %29 = load ptr, ptr %retval, align 8\l  ret ptr %29\l}"];
}
