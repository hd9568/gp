digraph "CFG for 'hypre_BoomerAMGRelaxIF' function" {
	label="CFG for 'hypre_BoomerAMGRelaxIF' function";

	Node0x560bd8f11490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{entry:\l|  %A.addr = alloca ptr, align 8\l  %f.addr = alloca ptr, align 8\l  %cf_marker.addr = alloca ptr, align 8\l  %relax_type.addr = alloca i32, align 4\l  %relax_order.addr = alloca i32, align 4\l  %cycle_type.addr = alloca i32, align 4\l  %relax_weight.addr = alloca double, align 8\l  %omega.addr = alloca double, align 8\l  %l1_norms.addr = alloca ptr, align 8\l  %u.addr = alloca ptr, align 8\l  %Vtemp.addr = alloca ptr, align 8\l  %Ztemp.addr = alloca ptr, align 8\l  %i = alloca i32, align 4\l  %Solve_err_flag = alloca i32, align 4\l  %relax_points = alloca [2 x i32], align 4\l  store ptr %A, ptr %A.addr, align 8\l  store ptr %f, ptr %f.addr, align 8\l  store ptr %cf_marker, ptr %cf_marker.addr, align 8\l  store i32 %relax_type, ptr %relax_type.addr, align 4\l  store i32 %relax_order, ptr %relax_order.addr, align 4\l  store i32 %cycle_type, ptr %cycle_type.addr, align 4\l  store double %relax_weight, ptr %relax_weight.addr, align 8\l  store double %omega, ptr %omega.addr, align 8\l  store ptr %l1_norms, ptr %l1_norms.addr, align 8\l  store ptr %u, ptr %u.addr, align 8\l  store ptr %Vtemp, ptr %Vtemp.addr, align 8\l  store ptr %Ztemp, ptr %Ztemp.addr, align 8\l  store i32 0, ptr %Solve_err_flag, align 4\l  %0 = load i32, ptr %relax_order.addr, align 4\l  %cmp = icmp eq i32 %0, 1\l  br i1 %cmp, label %land.lhs.true, label %if.else9\l|{<s0>T|<s1>F}}"];
	Node0x560bd8f11490:s0 -> Node0x560bd8f157b0[tooltip="entry -> land.lhs.true\nProbability 50.00%" ];
	Node0x560bd8f11490:s1 -> Node0x560bd8f15800[tooltip="entry -> if.else9\nProbability 50.00%" ];
	Node0x560bd8f157b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{land.lhs.true:\l|  %1 = load i32, ptr %cycle_type.addr, align 4\l  %cmp1 = icmp slt i32 %1, 3\l  br i1 %cmp1, label %if.then, label %if.else9\l|{<s0>T|<s1>F}}"];
	Node0x560bd8f157b0:s0 -> Node0x560bd8f15fb0[tooltip="land.lhs.true -> if.then\nProbability 50.00%" ];
	Node0x560bd8f157b0:s1 -> Node0x560bd8f15800[tooltip="land.lhs.true -> if.else9\nProbability 50.00%" ];
	Node0x560bd8f15fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.then:\l|  %2 = load i32, ptr %cycle_type.addr, align 4\l  %cmp2 = icmp slt i32 %2, 2\l  br i1 %cmp2, label %if.then3, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x560bd8f15fb0:s0 -> Node0x560bd8f16230[tooltip="if.then -> if.then3\nProbability 50.00%" ];
	Node0x560bd8f15fb0:s1 -> Node0x560bd8f162b0[tooltip="if.then -> if.else\nProbability 50.00%" ];
	Node0x560bd8f16230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{if.then3:\l|  %arrayidx = getelementptr inbounds [2 x i32], ptr %relax_points, i64 0,\l... i64 0\l  store i32 1, ptr %arrayidx, align 4\l  %arrayidx4 = getelementptr inbounds [2 x i32], ptr %relax_points, i64 0, i64\l... 1\l  store i32 -1, ptr %arrayidx4, align 4\l  br label %if.end\l}"];
	Node0x560bd8f16230 -> Node0x560bd8f167e0[tooltip="if.then3 -> if.end\nProbability 100.00%" ];
	Node0x560bd8f162b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{if.else:\l|  %arrayidx5 = getelementptr inbounds [2 x i32], ptr %relax_points, i64 0,\l... i64 0\l  store i32 -1, ptr %arrayidx5, align 4\l  %arrayidx6 = getelementptr inbounds [2 x i32], ptr %relax_points, i64 0, i64\l... 1\l  store i32 1, ptr %arrayidx6, align 4\l  br label %if.end\l}"];
	Node0x560bd8f162b0 -> Node0x560bd8f167e0[tooltip="if.else -> if.end\nProbability 100.00%" ];
	Node0x560bd8f167e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.end:\l|  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x560bd8f167e0 -> Node0x560bd8f16cf0[tooltip="if.end -> for.cond\nProbability 100.00%" ];
	Node0x560bd8f16cf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %3 = load i32, ptr %i, align 4\l  %cmp7 = icmp slt i32 %3, 2\l  br i1 %cmp7, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x560bd8f16cf0:s0 -> Node0x560bd8f16f10[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x560bd8f16cf0:s1 -> Node0x560bd8f16f90[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x560bd8f16f10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %4 = load ptr, ptr %A.addr, align 8\l  %5 = load ptr, ptr %f.addr, align 8\l  %6 = load ptr, ptr %cf_marker.addr, align 8\l  %7 = load i32, ptr %relax_type.addr, align 4\l  %8 = load i32, ptr %i, align 4\l  %idxprom = sext i32 %8 to i64\l  %arrayidx8 = getelementptr inbounds [2 x i32], ptr %relax_points, i64 0, i64\l... %idxprom\l  %9 = load i32, ptr %arrayidx8, align 4\l  %10 = load double, ptr %relax_weight.addr, align 8\l  %11 = load double, ptr %omega.addr, align 8\l  %12 = load ptr, ptr %l1_norms.addr, align 8\l  %13 = load ptr, ptr %u.addr, align 8\l  %14 = load ptr, ptr %Vtemp.addr, align 8\l  %15 = load ptr, ptr %Ztemp.addr, align 8\l  %call = call i32 @hypre_BoomerAMGRelax(ptr noundef %4, ptr noundef %5, ptr\l... noundef %6, i32 noundef %7, i32 noundef %9, double noundef %10, double\l... noundef %11, ptr noundef %12, ptr noundef %13, ptr noundef %14, ptr noundef\l... %15)\l  store i32 %call, ptr %Solve_err_flag, align 4\l  br label %for.inc\l}"];
	Node0x560bd8f16f10 -> Node0x560bd8f185e0[tooltip="for.body -> for.inc\nProbability 100.00%" ];
	Node0x560bd8f185e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %16 = load i32, ptr %i, align 4\l  %inc = add nsw i32 %16, 1\l  store i32 %inc, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x560bd8f185e0 -> Node0x560bd8f16cf0[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x560bd8f16f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  br label %if.end11\l}"];
	Node0x560bd8f16f90 -> Node0x560bd8f199c0[tooltip="for.end -> if.end11\nProbability 100.00%" ];
	Node0x560bd8f15800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70" fontname="Courier",label="{if.else9:\l|  %17 = load ptr, ptr %A.addr, align 8\l  %18 = load ptr, ptr %f.addr, align 8\l  %19 = load ptr, ptr %cf_marker.addr, align 8\l  %20 = load i32, ptr %relax_type.addr, align 4\l  %21 = load double, ptr %relax_weight.addr, align 8\l  %22 = load double, ptr %omega.addr, align 8\l  %23 = load ptr, ptr %l1_norms.addr, align 8\l  %24 = load ptr, ptr %u.addr, align 8\l  %25 = load ptr, ptr %Vtemp.addr, align 8\l  %26 = load ptr, ptr %Ztemp.addr, align 8\l  %call10 = call i32 @hypre_BoomerAMGRelax(ptr noundef %17, ptr noundef %18,\l... ptr noundef %19, i32 noundef %20, i32 noundef 0, double noundef %21, double\l... noundef %22, ptr noundef %23, ptr noundef %24, ptr noundef %25, ptr noundef\l... %26)\l  store i32 %call10, ptr %Solve_err_flag, align 4\l  br label %if.end11\l}"];
	Node0x560bd8f15800 -> Node0x560bd8f199c0[tooltip="if.else9 -> if.end11\nProbability 100.00%" ];
	Node0x560bd8f199c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{if.end11:\l|  %27 = load i32, ptr %Solve_err_flag, align 4\l  ret i32 %27\l}"];
}
