digraph "CFG for 'hypre_DoubleQuickSplit' function" {
	label="CFG for 'hypre_DoubleQuickSplit' function";

	Node0x5583ffb37310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170" fontname="Courier",label="{entry:\l|  %retval = alloca i32, align 4\l  %values.addr = alloca ptr, align 8\l  %indices.addr = alloca ptr, align 8\l  %list_length.addr = alloca i32, align 4\l  %NumberKept.addr = alloca i32, align 4\l  %ierr = alloca i32, align 4\l  %interchange_value = alloca double, align 8\l  %abskey = alloca double, align 8\l  %interchange_index = alloca i32, align 4\l  %first = alloca i32, align 4\l  %last = alloca i32, align 4\l  %mid = alloca i32, align 4\l  %j = alloca i32, align 4\l  %done = alloca i32, align 4\l  store ptr %values, ptr %values.addr, align 8\l  store ptr %indices, ptr %indices.addr, align 8\l  store i32 %list_length, ptr %list_length.addr, align 4\l  store i32 %NumberKept, ptr %NumberKept.addr, align 4\l  store i32 0, ptr %ierr, align 4\l  store i32 0, ptr %first, align 4\l  %0 = load i32, ptr %list_length.addr, align 4\l  %sub = sub nsw i32 %0, 1\l  store i32 %sub, ptr %last, align 4\l  %1 = load i32, ptr %NumberKept.addr, align 4\l  %2 = load i32, ptr %first, align 4\l  %add = add nsw i32 %2, 1\l  %cmp = icmp slt i32 %1, %add\l  br i1 %cmp, label %if.then, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x5583ffb37310:s0 -> Node0x5583ffb3a7c0[tooltip="entry -> if.then\nProbability 50.00%" ];
	Node0x5583ffb37310:s1 -> Node0x5583ffb3a830[tooltip="entry -> lor.lhs.false\nProbability 50.00%" ];
	Node0x5583ffb3a830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870" fontname="Courier",label="{lor.lhs.false:\l|  %3 = load i32, ptr %NumberKept.addr, align 4\l  %4 = load i32, ptr %last, align 4\l  %add1 = add nsw i32 %4, 1\l  %cmp2 = icmp sgt i32 %3, %add1\l  br i1 %cmp2, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5583ffb3a830:s0 -> Node0x5583ffb3a7c0[tooltip="lor.lhs.false -> if.then\nProbability 50.00%" ];
	Node0x5583ffb3a830:s1 -> Node0x5583ffb3aeb0[tooltip="lor.lhs.false -> if.end\nProbability 50.00%" ];
	Node0x5583ffb3a7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570" fontname="Courier",label="{if.then:\l|  %5 = load i32, ptr %ierr, align 4\l  store i32 %5, ptr %retval, align 4\l  br label %return\l}"];
	Node0x5583ffb3a7c0 -> Node0x5583ffb3b0f0[tooltip="if.then -> return\nProbability 100.00%" ];
	Node0x5583ffb3aeb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70" fontname="Courier",label="{if.end:\l|  store i32 0, ptr %done, align 4\l  br label %for.cond\l}"];
	Node0x5583ffb3aeb0 -> Node0x5583ffb3b270[tooltip="if.end -> for.cond\nProbability 100.00%" ];
	Node0x5583ffb3b270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.cond:\l|  %6 = load i32, ptr %done, align 4\l  %tobool = icmp ne i32 %6, 0\l  %lnot = xor i1 %tobool, true\l  br i1 %lnot, label %for.body, label %for.end55\l|{<s0>T|<s1>F}}"];
	Node0x5583ffb3b270:s0 -> Node0x5583ffb3b510[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x5583ffb3b270:s1 -> Node0x5583ffb3b590[tooltip="for.cond -> for.end55\nProbability 3.12%" ];
	Node0x5583ffb3b510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.body:\l|  %7 = load i32, ptr %first, align 4\l  store i32 %7, ptr %mid, align 4\l  %8 = load ptr, ptr %values.addr, align 8\l  %9 = load i32, ptr %mid, align 4\l  %idxprom = sext i32 %9 to i64\l  %arrayidx = getelementptr inbounds double, ptr %8, i64 %idxprom\l  %10 = load double, ptr %arrayidx, align 8\l  %11 = call double @llvm.fabs.f64(double %10)\l  store double %11, ptr %abskey, align 8\l  %12 = load i32, ptr %first, align 4\l  %add3 = add nsw i32 %12, 1\l  store i32 %add3, ptr %j, align 4\l  br label %for.cond4\l}"];
	Node0x5583ffb3b510 -> Node0x5583ffb3bf00[tooltip="for.body -> for.cond4\nProbability 100.00%" ];
	Node0x5583ffb3bf00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond4:\l|  %13 = load i32, ptr %j, align 4\l  %14 = load i32, ptr %last, align 4\l  %cmp5 = icmp sle i32 %13, %14\l  br i1 %cmp5, label %for.body6, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5583ffb3bf00:s0 -> Node0x5583ffb3c200[tooltip="for.cond4 -> for.body6\nProbability 96.88%" ];
	Node0x5583ffb3bf00:s1 -> Node0x5583ffb3c280[tooltip="for.cond4 -> for.end\nProbability 3.12%" ];
	Node0x5583ffb3c200 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body6:\l|  %15 = load ptr, ptr %values.addr, align 8\l  %16 = load i32, ptr %j, align 4\l  %idxprom7 = sext i32 %16 to i64\l  %arrayidx8 = getelementptr inbounds double, ptr %15, i64 %idxprom7\l  %17 = load double, ptr %arrayidx8, align 8\l  %18 = call double @llvm.fabs.f64(double %17)\l  %19 = load double, ptr %abskey, align 8\l  %cmp9 = fcmp ogt double %18, %19\l  br i1 %cmp9, label %if.then10, label %if.end27\l|{<s0>T|<s1>F}}"];
	Node0x5583ffb3c200:s0 -> Node0x5583ffb3c910[tooltip="for.body6 -> if.then10\nProbability 50.00%" ];
	Node0x5583ffb3c200:s1 -> Node0x5583ffb3c990[tooltip="for.body6 -> if.end27\nProbability 50.00%" ];
	Node0x5583ffb3c910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then10:\l|  %20 = load i32, ptr %mid, align 4\l  %inc = add nsw i32 %20, 1\l  store i32 %inc, ptr %mid, align 4\l  %21 = load ptr, ptr %values.addr, align 8\l  %22 = load i32, ptr %mid, align 4\l  %idxprom11 = sext i32 %22 to i64\l  %arrayidx12 = getelementptr inbounds double, ptr %21, i64 %idxprom11\l  %23 = load double, ptr %arrayidx12, align 8\l  store double %23, ptr %interchange_value, align 8\l  %24 = load ptr, ptr %indices.addr, align 8\l  %25 = load i32, ptr %mid, align 4\l  %idxprom13 = sext i32 %25 to i64\l  %arrayidx14 = getelementptr inbounds i32, ptr %24, i64 %idxprom13\l  %26 = load i32, ptr %arrayidx14, align 4\l  store i32 %26, ptr %interchange_index, align 4\l  %27 = load ptr, ptr %values.addr, align 8\l  %28 = load i32, ptr %j, align 4\l  %idxprom15 = sext i32 %28 to i64\l  %arrayidx16 = getelementptr inbounds double, ptr %27, i64 %idxprom15\l  %29 = load double, ptr %arrayidx16, align 8\l  %30 = load ptr, ptr %values.addr, align 8\l  %31 = load i32, ptr %mid, align 4\l  %idxprom17 = sext i32 %31 to i64\l  %arrayidx18 = getelementptr inbounds double, ptr %30, i64 %idxprom17\l  store double %29, ptr %arrayidx18, align 8\l  %32 = load ptr, ptr %indices.addr, align 8\l  %33 = load i32, ptr %j, align 4\l  %idxprom19 = sext i32 %33 to i64\l  %arrayidx20 = getelementptr inbounds i32, ptr %32, i64 %idxprom19\l  %34 = load i32, ptr %arrayidx20, align 4\l  %35 = load ptr, ptr %indices.addr, align 8\l  %36 = load i32, ptr %mid, align 4\l  %idxprom21 = sext i32 %36 to i64\l  %arrayidx22 = getelementptr inbounds i32, ptr %35, i64 %idxprom21\l  store i32 %34, ptr %arrayidx22, align 4\l  %37 = load double, ptr %interchange_value, align 8\l  %38 = load ptr, ptr %values.addr, align 8\l  %39 = load i32, ptr %j, align 4\l  %idxprom23 = sext i32 %39 to i64\l  %arrayidx24 = getelementptr inbounds double, ptr %38, i64 %idxprom23\l  store double %37, ptr %arrayidx24, align 8\l  %40 = load i32, ptr %interchange_index, align 4\l  %41 = load ptr, ptr %indices.addr, align 8\l  %42 = load i32, ptr %j, align 4\l  %idxprom25 = sext i32 %42 to i64\l  %arrayidx26 = getelementptr inbounds i32, ptr %41, i64 %idxprom25\l  store i32 %40, ptr %arrayidx26, align 4\l  br label %if.end27\l}"];
	Node0x5583ffb3c910 -> Node0x5583ffb3c990[tooltip="if.then10 -> if.end27\nProbability 100.00%" ];
	Node0x5583ffb3c990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end27:\l|  br label %for.inc\l}"];
	Node0x5583ffb3c990 -> Node0x5583ffb3f5d0[tooltip="if.end27 -> for.inc\nProbability 100.00%" ];
	Node0x5583ffb3f5d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %43 = load i32, ptr %j, align 4\l  %inc28 = add nsw i32 %43, 1\l  store i32 %inc28, ptr %j, align 4\l  br label %for.cond4, !llvm.loop !6\l}"];
	Node0x5583ffb3f5d0 -> Node0x5583ffb3bf00[tooltip="for.inc -> for.cond4\nProbability 100.00%" ];
	Node0x5583ffb3c280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  %44 = load ptr, ptr %values.addr, align 8\l  %45 = load i32, ptr %mid, align 4\l  %idxprom29 = sext i32 %45 to i64\l  %arrayidx30 = getelementptr inbounds double, ptr %44, i64 %idxprom29\l  %46 = load double, ptr %arrayidx30, align 8\l  store double %46, ptr %interchange_value, align 8\l  %47 = load ptr, ptr %indices.addr, align 8\l  %48 = load i32, ptr %mid, align 4\l  %idxprom31 = sext i32 %48 to i64\l  %arrayidx32 = getelementptr inbounds i32, ptr %47, i64 %idxprom31\l  %49 = load i32, ptr %arrayidx32, align 4\l  store i32 %49, ptr %interchange_index, align 4\l  %50 = load ptr, ptr %values.addr, align 8\l  %51 = load i32, ptr %first, align 4\l  %idxprom33 = sext i32 %51 to i64\l  %arrayidx34 = getelementptr inbounds double, ptr %50, i64 %idxprom33\l  %52 = load double, ptr %arrayidx34, align 8\l  %53 = load ptr, ptr %values.addr, align 8\l  %54 = load i32, ptr %mid, align 4\l  %idxprom35 = sext i32 %54 to i64\l  %arrayidx36 = getelementptr inbounds double, ptr %53, i64 %idxprom35\l  store double %52, ptr %arrayidx36, align 8\l  %55 = load ptr, ptr %indices.addr, align 8\l  %56 = load i32, ptr %first, align 4\l  %idxprom37 = sext i32 %56 to i64\l  %arrayidx38 = getelementptr inbounds i32, ptr %55, i64 %idxprom37\l  %57 = load i32, ptr %arrayidx38, align 4\l  %58 = load ptr, ptr %indices.addr, align 8\l  %59 = load i32, ptr %mid, align 4\l  %idxprom39 = sext i32 %59 to i64\l  %arrayidx40 = getelementptr inbounds i32, ptr %58, i64 %idxprom39\l  store i32 %57, ptr %arrayidx40, align 4\l  %60 = load double, ptr %interchange_value, align 8\l  %61 = load ptr, ptr %values.addr, align 8\l  %62 = load i32, ptr %first, align 4\l  %idxprom41 = sext i32 %62 to i64\l  %arrayidx42 = getelementptr inbounds double, ptr %61, i64 %idxprom41\l  store double %60, ptr %arrayidx42, align 8\l  %63 = load i32, ptr %interchange_index, align 4\l  %64 = load ptr, ptr %indices.addr, align 8\l  %65 = load i32, ptr %first, align 4\l  %idxprom43 = sext i32 %65 to i64\l  %arrayidx44 = getelementptr inbounds i32, ptr %64, i64 %idxprom43\l  store i32 %63, ptr %arrayidx44, align 4\l  %66 = load i32, ptr %mid, align 4\l  %add45 = add nsw i32 %66, 1\l  %67 = load i32, ptr %NumberKept.addr, align 4\l  %cmp46 = icmp eq i32 %add45, %67\l  br i1 %cmp46, label %if.then47, label %if.end48\l|{<s0>T|<s1>F}}"];
	Node0x5583ffb3c280:s0 -> Node0x5583ffb42930[tooltip="for.end -> if.then47\nProbability 3.12%" ];
	Node0x5583ffb3c280:s1 -> Node0x5583ffb42980[tooltip="for.end -> if.end48\nProbability 96.88%" ];
	Node0x5583ffb42930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{if.then47:\l|  store i32 1, ptr %done, align 4\l  br label %for.end55\l}"];
	Node0x5583ffb42930 -> Node0x5583ffb3b590[tooltip="if.then47 -> for.end55\nProbability 100.00%" ];
	Node0x5583ffb42980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.end48:\l|  %68 = load i32, ptr %mid, align 4\l  %add49 = add nsw i32 %68, 1\l  %69 = load i32, ptr %NumberKept.addr, align 4\l  %cmp50 = icmp sgt i32 %add49, %69\l  br i1 %cmp50, label %if.then51, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x5583ffb42980:s0 -> Node0x5583ffb42e50[tooltip="if.end48 -> if.then51\nProbability 50.00%" ];
	Node0x5583ffb42980:s1 -> Node0x5583ffb42ea0[tooltip="if.end48 -> if.else\nProbability 50.00%" ];
	Node0x5583ffb42e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{if.then51:\l|  %70 = load i32, ptr %mid, align 4\l  %sub52 = sub nsw i32 %70, 1\l  store i32 %sub52, ptr %last, align 4\l  br label %if.end54\l}"];
	Node0x5583ffb42e50 -> Node0x5583ffb43190[tooltip="if.then51 -> if.end54\nProbability 100.00%" ];
	Node0x5583ffb42ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{if.else:\l|  %71 = load i32, ptr %mid, align 4\l  %add53 = add nsw i32 %71, 1\l  store i32 %add53, ptr %first, align 4\l  br label %if.end54\l}"];
	Node0x5583ffb42ea0 -> Node0x5583ffb43190[tooltip="if.else -> if.end54\nProbability 100.00%" ];
	Node0x5583ffb43190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.end54:\l|  br label %for.cond, !llvm.loop !8\l}"];
	Node0x5583ffb43190 -> Node0x5583ffb3b270[tooltip="if.end54 -> for.cond\nProbability 100.00%" ];
	Node0x5583ffb3b590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70" fontname="Courier",label="{for.end55:\l|  %72 = load i32, ptr %ierr, align 4\l  store i32 %72, ptr %retval, align 4\l  br label %return\l}"];
	Node0x5583ffb3b590 -> Node0x5583ffb3b0f0[tooltip="for.end55 -> return\nProbability 100.00%" ];
	Node0x5583ffb3b0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170" fontname="Courier",label="{return:\l|  %73 = load i32, ptr %retval, align 4\l  ret i32 %73\l}"];
}
