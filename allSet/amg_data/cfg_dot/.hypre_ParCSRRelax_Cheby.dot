digraph "CFG for 'hypre_ParCSRRelax_Cheby' function" {
	label="CFG for 'hypre_ParCSRRelax_Cheby' function";

	Node0x561a2f05ca20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70" fontname="Courier",label="{entry:\l|  %A.addr = alloca ptr, align 8\l  %f.addr = alloca ptr, align 8\l  %max_eig.addr = alloca double, align 8\l  %min_eig.addr = alloca double, align 8\l  %fraction.addr = alloca double, align 8\l  %order.addr = alloca i32, align 4\l  %scale.addr = alloca i32, align 4\l  %variant.addr = alloca i32, align 4\l  %u.addr = alloca ptr, align 8\l  %v.addr = alloca ptr, align 8\l  %r.addr = alloca ptr, align 8\l  %A_diag = alloca ptr, align 8\l  %A_diag_data = alloca ptr, align 8\l  %A_diag_i = alloca ptr, align 8\l  %u_data = alloca ptr, align 8\l  %f_data = alloca ptr, align 8\l  %v_data = alloca ptr, align 8\l  %r_data = alloca ptr, align 8\l  %theta = alloca double, align 8\l  %delta = alloca double, align 8\l  %den = alloca double, align 8\l  %upper_bound = alloca double, align 8\l  %lower_bound = alloca double, align 8\l  %i8 = alloca i32, align 4\l  %j = alloca i32, align 4\l  %num_rows = alloca i32, align 4\l  %coefs = alloca [5 x double], align 16\l  %mult = alloca double, align 8\l  %orig_u = alloca ptr, align 8\l  %tmp_d = alloca double, align 8\l  %cheby_order = alloca i32, align 4\l  %ds_data = alloca ptr, align 8\l  %tmp_data = alloca ptr, align 8\l  %diag10 = alloca double, align 8\l  %ds = alloca ptr, align 8\l  %tmp_vec = alloca ptr, align 8\l  store ptr %A, ptr %A.addr, align 8\l  store ptr %f, ptr %f.addr, align 8\l  store double %max_eig, ptr %max_eig.addr, align 8\l  store double %min_eig, ptr %min_eig.addr, align 8\l  store double %fraction, ptr %fraction.addr, align 8\l  store i32 %order, ptr %order.addr, align 4\l  store i32 %scale, ptr %scale.addr, align 4\l  store i32 %variant, ptr %variant.addr, align 4\l  store ptr %u, ptr %u.addr, align 8\l  store ptr %v, ptr %v.addr, align 8\l  store ptr %r, ptr %r.addr, align 8\l  %0 = load ptr, ptr %A.addr, align 8\l  %diag = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %0,\l... i32 0, i32 7\l  %1 = load ptr, ptr %diag, align 8\l  store ptr %1, ptr %A_diag, align 8\l  %2 = load ptr, ptr %A_diag, align 8\l  %data = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %2, i32 0, i32 6\l  %3 = load ptr, ptr %data, align 8\l  store ptr %3, ptr %A_diag_data, align 8\l  %4 = load ptr, ptr %A_diag, align 8\l  %i = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %4, i32 0, i32 0\l  %5 = load ptr, ptr %i, align 8\l  store ptr %5, ptr %A_diag_i, align 8\l  %6 = load ptr, ptr %u.addr, align 8\l  %local_vector = getelementptr inbounds %struct.hypre_ParVector_struct, ptr\l... %6, i32 0, i32 6\l  %7 = load ptr, ptr %local_vector, align 8\l  %data1 = getelementptr inbounds %struct.hypre_Vector, ptr %7, i32 0, i32 0\l  %8 = load ptr, ptr %data1, align 8\l  store ptr %8, ptr %u_data, align 8\l  %9 = load ptr, ptr %f.addr, align 8\l  %local_vector2 = getelementptr inbounds %struct.hypre_ParVector_struct, ptr\l... %9, i32 0, i32 6\l  %10 = load ptr, ptr %local_vector2, align 8\l  %data3 = getelementptr inbounds %struct.hypre_Vector, ptr %10, i32 0, i32 0\l  %11 = load ptr, ptr %data3, align 8\l  store ptr %11, ptr %f_data, align 8\l  %12 = load ptr, ptr %v.addr, align 8\l  %local_vector4 = getelementptr inbounds %struct.hypre_ParVector_struct, ptr\l... %12, i32 0, i32 6\l  %13 = load ptr, ptr %local_vector4, align 8\l  %data5 = getelementptr inbounds %struct.hypre_Vector, ptr %13, i32 0, i32 0\l  %14 = load ptr, ptr %data5, align 8\l  store ptr %14, ptr %v_data, align 8\l  %15 = load ptr, ptr %r.addr, align 8\l  %local_vector6 = getelementptr inbounds %struct.hypre_ParVector_struct, ptr\l... %15, i32 0, i32 6\l  %16 = load ptr, ptr %local_vector6, align 8\l  %data7 = getelementptr inbounds %struct.hypre_Vector, ptr %16, i32 0, i32 0\l  %17 = load ptr, ptr %data7, align 8\l  store ptr %17, ptr %r_data, align 8\l  %18 = load ptr, ptr %A_diag, align 8\l  %num_rows9 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %18, i32 0,\l... i32 2\l  %19 = load i32, ptr %num_rows9, align 8\l  store i32 %19, ptr %num_rows, align 4\l  %20 = load i32, ptr %order.addr, align 4\l  %cmp = icmp sgt i32 %20, 4\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x561a2f05ca20:s0 -> Node0x561a2f062540[tooltip="entry -> if.then\nProbability 50.00%" ];
	Node0x561a2f05ca20:s1 -> Node0x561a2f0625b0[tooltip="entry -> if.end\nProbability 50.00%" ];
	Node0x561a2f062540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670" fontname="Courier",label="{if.then:\l|  store i32 4, ptr %order.addr, align 4\l  br label %if.end\l}"];
	Node0x561a2f062540 -> Node0x561a2f0625b0[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x561a2f0625b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70" fontname="Courier",label="{if.end:\l|  %21 = load i32, ptr %order.addr, align 4\l  %cmp11 = icmp slt i32 %21, 1\l  br i1 %cmp11, label %if.then12, label %if.end13\l|{<s0>T|<s1>F}}"];
	Node0x561a2f0625b0:s0 -> Node0x561a2f062880[tooltip="if.end -> if.then12\nProbability 37.50%" ];
	Node0x561a2f0625b0:s1 -> Node0x561a2f062900[tooltip="if.end -> if.end13\nProbability 62.50%" ];
	Node0x561a2f062880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70" fontname="Courier",label="{if.then12:\l|  store i32 1, ptr %order.addr, align 4\l  br label %if.end13\l}"];
	Node0x561a2f062880 -> Node0x561a2f062900[tooltip="if.then12 -> if.end13\nProbability 100.00%" ];
	Node0x561a2f062900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70" fontname="Courier",label="{if.end13:\l|  %22 = load i32, ptr %order.addr, align 4\l  %sub = sub nsw i32 %22, 1\l  store i32 %sub, ptr %cheby_order, align 4\l  %23 = load double, ptr %max_eig.addr, align 8\l  %mul = fmul double %23, 1.100000e+00\l  store double %mul, ptr %upper_bound, align 8\l  %24 = load double, ptr %upper_bound, align 8\l  %25 = load double, ptr %min_eig.addr, align 8\l  %sub14 = fsub double %24, %25\l  %26 = load double, ptr %fraction.addr, align 8\l  %27 = load double, ptr %min_eig.addr, align 8\l  %28 = call double @llvm.fmuladd.f64(double %sub14, double %26, double %27)\l  store double %28, ptr %lower_bound, align 8\l  %29 = load double, ptr %upper_bound, align 8\l  %30 = load double, ptr %lower_bound, align 8\l  %add = fadd double %29, %30\l  %div = fdiv double %add, 2.000000e+00\l  store double %div, ptr %theta, align 8\l  %31 = load double, ptr %upper_bound, align 8\l  %32 = load double, ptr %lower_bound, align 8\l  %sub16 = fsub double %31, %32\l  %div17 = fdiv double %sub16, 2.000000e+00\l  store double %div17, ptr %delta, align 8\l  %33 = load i32, ptr %variant.addr, align 4\l  %cmp18 = icmp eq i32 %33, 1\l  br i1 %cmp18, label %if.then19, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x561a2f062900:s0 -> Node0x561a2f063a50[tooltip="if.end13 -> if.then19\nProbability 50.00%" ];
	Node0x561a2f062900:s1 -> Node0x561a2f063aa0[tooltip="if.end13 -> if.else\nProbability 50.00%" ];
	Node0x561a2f063a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670" fontname="Courier",label="{if.then19:\l|  %34 = load i32, ptr %cheby_order, align 4\l  switch i32 %34, label %sw.epilog [\l    i32 0, label %sw.bb\l    i32 1, label %sw.bb21\l    i32 2, label %sw.bb29\l    i32 3, label %sw.bb52\l  ]\l|{<s0>def|<s1>0|<s2>1|<s3>2|<s4>3}}"];
	Node0x561a2f063a50:s0 -> Node0x561a2f063c40[tooltip="if.then19 -> sw.epilog\nProbability 20.00%" ];
	Node0x561a2f063a50:s1 -> Node0x561a2f063c90[tooltip="if.then19 -> sw.bb\nProbability 20.00%" ];
	Node0x561a2f063a50:s2 -> Node0x561a2f063d00[tooltip="if.then19 -> sw.bb21\nProbability 20.00%" ];
	Node0x561a2f063a50:s3 -> Node0x561a2f063d70[tooltip="if.then19 -> sw.bb29\nProbability 20.00%" ];
	Node0x561a2f063a50:s4 -> Node0x561a2f063e10[tooltip="if.then19 -> sw.bb52\nProbability 20.00%" ];
	Node0x561a2f063c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570" fontname="Courier",label="{sw.bb:\l|  %35 = load double, ptr %theta, align 8\l  %div20 = fdiv double 1.000000e+00, %35\l  %arrayidx = getelementptr inbounds [5 x double], ptr %coefs, i64 0, i64 0\l  store double %div20, ptr %arrayidx, align 16\l  br label %sw.epilog\l}"];
	Node0x561a2f063c90 -> Node0x561a2f063c40[tooltip="sw.bb -> sw.epilog\nProbability 100.00%" ];
	Node0x561a2f063d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570" fontname="Courier",label="{sw.bb21:\l|  %36 = load double, ptr %theta, align 8\l  %37 = load double, ptr %theta, align 8\l  %38 = load double, ptr %delta, align 8\l  %39 = load double, ptr %theta, align 8\l  %mul23 = fmul double %38, %39\l  %40 = call double @llvm.fmuladd.f64(double %36, double %37, double %mul23)\l  store double %40, ptr %den, align 8\l  %41 = load double, ptr %delta, align 8\l  %42 = load double, ptr %theta, align 8\l  %43 = call double @llvm.fmuladd.f64(double 2.000000e+00, double %42, double\l... %41)\l  %44 = load double, ptr %den, align 8\l  %div25 = fdiv double %43, %44\l  %arrayidx26 = getelementptr inbounds [5 x double], ptr %coefs, i64 0, i64 0\l  store double %div25, ptr %arrayidx26, align 16\l  %45 = load double, ptr %den, align 8\l  %div27 = fdiv double -1.000000e+00, %45\l  %arrayidx28 = getelementptr inbounds [5 x double], ptr %coefs, i64 0, i64 1\l  store double %div27, ptr %arrayidx28, align 8\l  br label %sw.epilog\l}"];
	Node0x561a2f063d00 -> Node0x561a2f063c40[tooltip="sw.bb21 -> sw.epilog\nProbability 100.00%" ];
	Node0x561a2f063d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570" fontname="Courier",label="{sw.bb29:\l|  %46 = load double, ptr %delta, align 8\l  %mul30 = fmul double 2.000000e+00, %46\l  %47 = load double, ptr %theta, align 8\l  %mul31 = fmul double %mul30, %47\l  %48 = load double, ptr %theta, align 8\l  %49 = load double, ptr %delta, align 8\l  %50 = load double, ptr %delta, align 8\l  %mul33 = fmul double %49, %50\l  %51 = load double, ptr %theta, align 8\l  %mul34 = fmul double %mul33, %51\l  %neg = fneg double %mul34\l  %52 = call double @llvm.fmuladd.f64(double %mul31, double %48, double %neg)\l  %53 = load double, ptr %delta, align 8\l  %call = call double @pow(double noundef %53, double noundef 3.000000e+00) #4\l  %sub35 = fsub double %52, %call\l  %54 = load double, ptr %theta, align 8\l  %call36 = call double @pow(double noundef %54, double noundef 3.000000e+00)\l... #4\l  %55 = call double @llvm.fmuladd.f64(double 2.000000e+00, double %call36,\l... double %sub35)\l  store double %55, ptr %den, align 8\l  %56 = load double, ptr %delta, align 8\l  %mul38 = fmul double 4.000000e+00, %56\l  %57 = load double, ptr %theta, align 8\l  %58 = load double, ptr %delta, align 8\l  %call40 = call double @pow(double noundef %58, double noundef 2.000000e+00)\l... #4\l  %neg41 = fneg double %call40\l  %59 = call double @llvm.fmuladd.f64(double %mul38, double %57, double %neg41)\l  %60 = load double, ptr %theta, align 8\l  %call42 = call double @pow(double noundef %60, double noundef 2.000000e+00)\l... #4\l  %61 = call double @llvm.fmuladd.f64(double 6.000000e+00, double %call42,\l... double %59)\l  %62 = load double, ptr %den, align 8\l  %div44 = fdiv double %61, %62\l  %arrayidx45 = getelementptr inbounds [5 x double], ptr %coefs, i64 0, i64 0\l  store double %div44, ptr %arrayidx45, align 16\l  %63 = load double, ptr %delta, align 8\l  %64 = load double, ptr %theta, align 8\l  %mul47 = fmul double 6.000000e+00, %64\l  %65 = call double @llvm.fmuladd.f64(double 2.000000e+00, double %63, double\l... %mul47)\l  %fneg = fneg double %65\l  %66 = load double, ptr %den, align 8\l  %div48 = fdiv double %fneg, %66\l  %arrayidx49 = getelementptr inbounds [5 x double], ptr %coefs, i64 0, i64 1\l  store double %div48, ptr %arrayidx49, align 8\l  %67 = load double, ptr %den, align 8\l  %div50 = fdiv double 2.000000e+00, %67\l  %arrayidx51 = getelementptr inbounds [5 x double], ptr %coefs, i64 0, i64 2\l  store double %div50, ptr %arrayidx51, align 16\l  br label %sw.epilog\l}"];
	Node0x561a2f063d70 -> Node0x561a2f063c40[tooltip="sw.bb29 -> sw.epilog\nProbability 100.00%" ];
	Node0x561a2f063e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570" fontname="Courier",label="{sw.bb52:\l|  %68 = load double, ptr %delta, align 8\l  %mul53 = fmul double 4.000000e+00, %68\l  %69 = load double, ptr %theta, align 8\l  %call54 = call double @pow(double noundef %69, double noundef 3.000000e+00)\l... #4\l  %70 = load double, ptr %delta, align 8\l  %call56 = call double @pow(double noundef %70, double noundef 2.000000e+00)\l... #4\l  %mul57 = fmul double 3.000000e+00, %call56\l  %71 = load double, ptr %theta, align 8\l  %call58 = call double @pow(double noundef %71, double noundef 2.000000e+00)\l... #4\l  %mul59 = fmul double %mul57, %call58\l  %neg60 = fneg double %mul59\l  %72 = call double @llvm.fmuladd.f64(double %mul53, double %call54, double\l... %neg60)\l  %73 = load double, ptr %delta, align 8\l  %call61 = call double @pow(double noundef %73, double noundef 3.000000e+00)\l... #4\l  %mul62 = fmul double 3.000000e+00, %call61\l  %74 = load double, ptr %theta, align 8\l  %neg64 = fneg double %mul62\l  %75 = call double @llvm.fmuladd.f64(double %neg64, double %74, double %72)\l  %76 = load double, ptr %theta, align 8\l  %call65 = call double @pow(double noundef %76, double noundef 4.000000e+00)\l... #4\l  %77 = call double @llvm.fmuladd.f64(double 4.000000e+00, double %call65,\l... double %75)\l  %fneg67 = fneg double %77\l  store double %fneg67, ptr %den, align 8\l  %78 = load double, ptr %delta, align 8\l  %call68 = call double @pow(double noundef %78, double noundef 2.000000e+00)\l... #4\l  %mul69 = fmul double 6.000000e+00, %call68\l  %79 = load double, ptr %theta, align 8\l  %80 = load double, ptr %delta, align 8\l  %mul71 = fmul double 1.200000e+01, %80\l  %81 = load double, ptr %theta, align 8\l  %call72 = call double @pow(double noundef %81, double noundef 2.000000e+00)\l... #4\l  %mul73 = fmul double %mul71, %call72\l  %neg74 = fneg double %mul73\l  %82 = call double @llvm.fmuladd.f64(double %mul69, double %79, double %neg74)\l  %83 = load double, ptr %delta, align 8\l  %call75 = call double @pow(double noundef %83, double noundef 3.000000e+00)\l... #4\l  %84 = call double @llvm.fmuladd.f64(double 3.000000e+00, double %call75,\l... double %82)\l  %85 = load double, ptr %theta, align 8\l  %call77 = call double @pow(double noundef %85, double noundef 3.000000e+00)\l... #4\l  %86 = call double @llvm.fmuladd.f64(double -1.600000e+01, double %call77,\l... double %84)\l  %87 = load double, ptr %den, align 8\l  %div79 = fdiv double %86, %87\l  %arrayidx80 = getelementptr inbounds [5 x double], ptr %coefs, i64 0, i64 0\l  store double %div79, ptr %arrayidx80, align 16\l  %88 = load double, ptr %delta, align 8\l  %mul81 = fmul double 1.200000e+01, %88\l  %89 = load double, ptr %theta, align 8\l  %90 = load double, ptr %delta, align 8\l  %call83 = call double @pow(double noundef %90, double noundef 2.000000e+00)\l... #4\l  %mul84 = fmul double 3.000000e+00, %call83\l  %neg85 = fneg double %mul84\l  %91 = call double @llvm.fmuladd.f64(double %mul81, double %89, double %neg85)\l  %92 = load double, ptr %theta, align 8\l  %call86 = call double @pow(double noundef %92, double noundef 2.000000e+00)\l... #4\l  %93 = call double @llvm.fmuladd.f64(double 2.400000e+01, double %call86,\l... double %91)\l  %94 = load double, ptr %den, align 8\l  %div88 = fdiv double %93, %94\l  %arrayidx89 = getelementptr inbounds [5 x double], ptr %coefs, i64 0, i64 1\l  store double %div88, ptr %arrayidx89, align 8\l  %95 = load double, ptr %delta, align 8\l  %96 = load double, ptr %theta, align 8\l  %mul91 = fmul double 1.600000e+01, %96\l  %97 = call double @llvm.fmuladd.f64(double 4.000000e+00, double %95, double\l... %mul91)\l  %fneg92 = fneg double %97\l  %98 = load double, ptr %den, align 8\l  %div93 = fdiv double %fneg92, %98\l  %arrayidx94 = getelementptr inbounds [5 x double], ptr %coefs, i64 0, i64 2\l  store double %div93, ptr %arrayidx94, align 16\l  %99 = load double, ptr %den, align 8\l  %div95 = fdiv double 4.000000e+00, %99\l  %arrayidx96 = getelementptr inbounds [5 x double], ptr %coefs, i64 0, i64 3\l  store double %div95, ptr %arrayidx96, align 8\l  br label %sw.epilog\l}"];
	Node0x561a2f063e10 -> Node0x561a2f063c40[tooltip="sw.bb52 -> sw.epilog\nProbability 100.00%" ];
	Node0x561a2f063c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670" fontname="Courier",label="{sw.epilog:\l|  br label %if.end160\l}"];
	Node0x561a2f063c40 -> Node0x561a2f06c390[tooltip="sw.epilog -> if.end160\nProbability 100.00%" ];
	Node0x561a2f063aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670" fontname="Courier",label="{if.else:\l|  %100 = load i32, ptr %cheby_order, align 4\l  switch i32 %100, label %sw.epilog159 [\l    i32 0, label %sw.bb97\l    i32 1, label %sw.bb100\l    i32 2, label %sw.bb110\l    i32 3, label %sw.bb130\l  ]\l|{<s0>def|<s1>0|<s2>1|<s3>2|<s4>3}}"];
	Node0x561a2f063aa0:s0 -> Node0x561a2f06c500[tooltip="if.else -> sw.epilog159\nProbability 20.00%" ];
	Node0x561a2f063aa0:s1 -> Node0x561a2f06c580[tooltip="if.else -> sw.bb97\nProbability 20.00%" ];
	Node0x561a2f063aa0:s2 -> Node0x561a2f06c5d0[tooltip="if.else -> sw.bb100\nProbability 20.00%" ];
	Node0x561a2f063aa0:s3 -> Node0x561a2f06c650[tooltip="if.else -> sw.bb110\nProbability 20.00%" ];
	Node0x561a2f063aa0:s4 -> Node0x561a2f06c6d0[tooltip="if.else -> sw.bb130\nProbability 20.00%" ];
	Node0x561a2f06c580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570" fontname="Courier",label="{sw.bb97:\l|  %101 = load double, ptr %theta, align 8\l  %div98 = fdiv double 1.000000e+00, %101\l  %arrayidx99 = getelementptr inbounds [5 x double], ptr %coefs, i64 0, i64 0\l  store double %div98, ptr %arrayidx99, align 16\l  br label %sw.epilog159\l}"];
	Node0x561a2f06c580 -> Node0x561a2f06c500[tooltip="sw.bb97 -> sw.epilog159\nProbability 100.00%" ];
	Node0x561a2f06c5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570" fontname="Courier",label="{sw.bb100:\l|  %102 = load double, ptr %delta, align 8\l  %103 = load double, ptr %delta, align 8\l  %104 = load double, ptr %theta, align 8\l  %mul102 = fmul double 2.000000e+00, %104\l  %105 = load double, ptr %theta, align 8\l  %mul103 = fmul double %mul102, %105\l  %neg104 = fneg double %mul103\l  %106 = call double @llvm.fmuladd.f64(double %102, double %103, double\l... %neg104)\l  store double %106, ptr %den, align 8\l  %107 = load double, ptr %theta, align 8\l  %mul105 = fmul double -4.000000e+00, %107\l  %108 = load double, ptr %den, align 8\l  %div106 = fdiv double %mul105, %108\l  %arrayidx107 = getelementptr inbounds [5 x double], ptr %coefs, i64 0, i64 0\l  store double %div106, ptr %arrayidx107, align 16\l  %109 = load double, ptr %den, align 8\l  %div108 = fdiv double 2.000000e+00, %109\l  %arrayidx109 = getelementptr inbounds [5 x double], ptr %coefs, i64 0, i64 1\l  store double %div108, ptr %arrayidx109, align 8\l  br label %sw.epilog159\l}"];
	Node0x561a2f06c5d0 -> Node0x561a2f06c500[tooltip="sw.bb100 -> sw.epilog159\nProbability 100.00%" ];
	Node0x561a2f06c650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570" fontname="Courier",label="{sw.bb110:\l|  %110 = load double, ptr %delta, align 8\l  %111 = load double, ptr %delta, align 8\l  %mul111 = fmul double %110, %111\l  %mul112 = fmul double 3.000000e+00, %mul111\l  %112 = load double, ptr %theta, align 8\l  %113 = load double, ptr %theta, align 8\l  %114 = load double, ptr %theta, align 8\l  %mul114 = fmul double %113, %114\l  %115 = load double, ptr %theta, align 8\l  %mul115 = fmul double %mul114, %115\l  %mul116 = fmul double 4.000000e+00, %mul115\l  %neg117 = fneg double %mul116\l  %116 = call double @llvm.fmuladd.f64(double %mul112, double %112, double\l... %neg117)\l  store double %116, ptr %den, align 8\l  %117 = load double, ptr %delta, align 8\l  %mul118 = fmul double 3.000000e+00, %117\l  %118 = load double, ptr %delta, align 8\l  %119 = load double, ptr %theta, align 8\l  %mul120 = fmul double 1.200000e+01, %119\l  %120 = load double, ptr %theta, align 8\l  %mul121 = fmul double %mul120, %120\l  %neg122 = fneg double %mul121\l  %121 = call double @llvm.fmuladd.f64(double %mul118, double %118, double\l... %neg122)\l  %122 = load double, ptr %den, align 8\l  %div123 = fdiv double %121, %122\l  %arrayidx124 = getelementptr inbounds [5 x double], ptr %coefs, i64 0, i64 0\l  store double %div123, ptr %arrayidx124, align 16\l  %123 = load double, ptr %theta, align 8\l  %mul125 = fmul double 1.200000e+01, %123\l  %124 = load double, ptr %den, align 8\l  %div126 = fdiv double %mul125, %124\l  %arrayidx127 = getelementptr inbounds [5 x double], ptr %coefs, i64 0, i64 1\l  store double %div126, ptr %arrayidx127, align 8\l  %125 = load double, ptr %den, align 8\l  %div128 = fdiv double -4.000000e+00, %125\l  %arrayidx129 = getelementptr inbounds [5 x double], ptr %coefs, i64 0, i64 2\l  store double %div128, ptr %arrayidx129, align 16\l  br label %sw.epilog159\l}"];
	Node0x561a2f06c650 -> Node0x561a2f06c500[tooltip="sw.bb110 -> sw.epilog159\nProbability 100.00%" ];
	Node0x561a2f06c6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570" fontname="Courier",label="{sw.bb130:\l|  %126 = load double, ptr %delta, align 8\l  %call131 = call double @pow(double noundef %126, double noundef\l... 4.000000e+00) #4\l  %127 = load double, ptr %delta, align 8\l  %mul132 = fmul double 8.000000e+00, %127\l  %128 = load double, ptr %delta, align 8\l  %mul133 = fmul double %mul132, %128\l  %129 = load double, ptr %theta, align 8\l  %mul134 = fmul double %mul133, %129\l  %130 = load double, ptr %theta, align 8\l  %neg136 = fneg double %mul134\l  %131 = call double @llvm.fmuladd.f64(double %neg136, double %130, double\l... %call131)\l  %132 = load double, ptr %theta, align 8\l  %call137 = call double @pow(double noundef %132, double noundef\l... 4.000000e+00) #4\l  %133 = call double @llvm.fmuladd.f64(double 8.000000e+00, double %call137,\l... double %131)\l  store double %133, ptr %den, align 8\l  %134 = load double, ptr %theta, align 8\l  %call139 = call double @pow(double noundef %134, double noundef\l... 3.000000e+00) #4\l  %135 = load double, ptr %delta, align 8\l  %mul141 = fmul double 1.600000e+01, %135\l  %136 = load double, ptr %delta, align 8\l  %mul142 = fmul double %mul141, %136\l  %137 = load double, ptr %theta, align 8\l  %mul143 = fmul double %mul142, %137\l  %neg144 = fneg double %mul143\l  %138 = call double @llvm.fmuladd.f64(double 3.200000e+01, double %call139,\l... double %neg144)\l  %139 = load double, ptr %den, align 8\l  %div145 = fdiv double %138, %139\l  %arrayidx146 = getelementptr inbounds [5 x double], ptr %coefs, i64 0, i64 0\l  store double %div145, ptr %arrayidx146, align 16\l  %140 = load double, ptr %delta, align 8\l  %mul147 = fmul double 8.000000e+00, %140\l  %141 = load double, ptr %delta, align 8\l  %142 = load double, ptr %theta, align 8\l  %mul149 = fmul double 4.800000e+01, %142\l  %143 = load double, ptr %theta, align 8\l  %mul150 = fmul double %mul149, %143\l  %neg151 = fneg double %mul150\l  %144 = call double @llvm.fmuladd.f64(double %mul147, double %141, double\l... %neg151)\l  %145 = load double, ptr %den, align 8\l  %div152 = fdiv double %144, %145\l  %arrayidx153 = getelementptr inbounds [5 x double], ptr %coefs, i64 0, i64 1\l  store double %div152, ptr %arrayidx153, align 8\l  %146 = load double, ptr %theta, align 8\l  %mul154 = fmul double 3.200000e+01, %146\l  %147 = load double, ptr %den, align 8\l  %div155 = fdiv double %mul154, %147\l  %arrayidx156 = getelementptr inbounds [5 x double], ptr %coefs, i64 0, i64 2\l  store double %div155, ptr %arrayidx156, align 16\l  %148 = load double, ptr %den, align 8\l  %div157 = fdiv double -8.000000e+00, %148\l  %arrayidx158 = getelementptr inbounds [5 x double], ptr %coefs, i64 0, i64 3\l  store double %div157, ptr %arrayidx158, align 8\l  br label %sw.epilog159\l}"];
	Node0x561a2f06c6d0 -> Node0x561a2f06c500[tooltip="sw.bb130 -> sw.epilog159\nProbability 100.00%" ];
	Node0x561a2f06c500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670" fontname="Courier",label="{sw.epilog159:\l|  br label %if.end160\l}"];
	Node0x561a2f06c500 -> Node0x561a2f06c390[tooltip="sw.epilog159 -> if.end160\nProbability 100.00%" ];
	Node0x561a2f06c390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70" fontname="Courier",label="{if.end160:\l|  %149 = load i32, ptr %num_rows, align 4\l  %conv = sext i32 %149 to i64\l  %call161 = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 8)\l  store ptr %call161, ptr %orig_u, align 8\l  %150 = load i32, ptr %scale.addr, align 4\l  %tobool = icmp ne i32 %150, 0\l  br i1 %tobool, label %if.else215, label %if.then162\l|{<s0>T|<s1>F}}"];
	Node0x561a2f06c390:s0 -> Node0x561a2f072890[tooltip="if.end160 -> if.else215\nProbability 62.50%" ];
	Node0x561a2f06c390:s1 -> Node0x561a2f072910[tooltip="if.end160 -> if.then162\nProbability 37.50%" ];
	Node0x561a2f072910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70" fontname="Courier",label="{if.then162:\l|  %151 = load ptr, ptr %f.addr, align 8\l  %152 = load ptr, ptr %r.addr, align 8\l  %call163 = call i32 @hypre_ParVectorCopy(ptr noundef %151, ptr noundef %152)\l  %153 = load ptr, ptr %A.addr, align 8\l  %154 = load ptr, ptr %u.addr, align 8\l  %155 = load ptr, ptr %r.addr, align 8\l  %call164 = call i32 @hypre_ParCSRMatrixMatvec(double noundef -1.000000e+00,\l... ptr noundef %153, ptr noundef %154, double noundef 1.000000e+00, ptr noundef\l... %155)\l  store i32 0, ptr %i8, align 4\l  br label %for.cond\l}"];
	Node0x561a2f072910 -> Node0x561a2f0730a0[tooltip="if.then162 -> for.cond\nProbability 100.00%" ];
	Node0x561a2f0730a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670" fontname="Courier",label="{for.cond:\l|  %156 = load i32, ptr %i8, align 4\l  %157 = load i32, ptr %num_rows, align 4\l  %cmp165 = icmp slt i32 %156, %157\l  br i1 %cmp165, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x561a2f0730a0:s0 -> Node0x561a2f0732f0[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x561a2f0730a0:s1 -> Node0x561a2f073340[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x561a2f0732f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{for.body:\l|  %158 = load ptr, ptr %u_data, align 8\l  %159 = load i32, ptr %i8, align 4\l  %idxprom = sext i32 %159 to i64\l  %arrayidx167 = getelementptr inbounds double, ptr %158, i64 %idxprom\l  %160 = load double, ptr %arrayidx167, align 8\l  %161 = load ptr, ptr %orig_u, align 8\l  %162 = load i32, ptr %i8, align 4\l  %idxprom168 = sext i32 %162 to i64\l  %arrayidx169 = getelementptr inbounds double, ptr %161, i64 %idxprom168\l  store double %160, ptr %arrayidx169, align 8\l  %163 = load ptr, ptr %r_data, align 8\l  %164 = load i32, ptr %i8, align 4\l  %idxprom170 = sext i32 %164 to i64\l  %arrayidx171 = getelementptr inbounds double, ptr %163, i64 %idxprom170\l  %165 = load double, ptr %arrayidx171, align 8\l  %166 = load i32, ptr %cheby_order, align 4\l  %idxprom172 = sext i32 %166 to i64\l  %arrayidx173 = getelementptr inbounds [5 x double], ptr %coefs, i64 0, i64\l... %idxprom172\l  %167 = load double, ptr %arrayidx173, align 8\l  %mul174 = fmul double %165, %167\l  %168 = load ptr, ptr %u_data, align 8\l  %169 = load i32, ptr %i8, align 4\l  %idxprom175 = sext i32 %169 to i64\l  %arrayidx176 = getelementptr inbounds double, ptr %168, i64 %idxprom175\l  store double %mul174, ptr %arrayidx176, align 8\l  br label %for.inc\l}"];
	Node0x561a2f0732f0 -> Node0x561a2f0491a0[tooltip="for.body -> for.inc\nProbability 100.00%" ];
	Node0x561a2f0491a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{for.inc:\l|  %170 = load i32, ptr %i8, align 4\l  %inc = add nsw i32 %170, 1\l  store i32 %inc, ptr %i8, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x561a2f0491a0 -> Node0x561a2f0730a0[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x561a2f073340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70" fontname="Courier",label="{for.end:\l|  %171 = load i32, ptr %cheby_order, align 4\l  %sub177 = sub nsw i32 %171, 1\l  store i32 %sub177, ptr %i8, align 4\l  br label %for.cond178\l}"];
	Node0x561a2f073340 -> Node0x561a2f0497e0[tooltip="for.end -> for.cond178\nProbability 100.00%" ];
	Node0x561a2f0497e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670" fontname="Courier",label="{for.cond178:\l|  %172 = load i32, ptr %i8, align 4\l  %cmp179 = icmp sge i32 %172, 0\l  br i1 %cmp179, label %for.body181, label %for.end200\l|{<s0>T|<s1>F}}"];
	Node0x561a2f0497e0:s0 -> Node0x561a2f049a00[tooltip="for.cond178 -> for.body181\nProbability 96.88%" ];
	Node0x561a2f0497e0:s1 -> Node0x561a2f049a80[tooltip="for.cond178 -> for.end200\nProbability 3.12%" ];
	Node0x561a2f049a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{for.body181:\l|  %173 = load ptr, ptr %A.addr, align 8\l  %174 = load ptr, ptr %u.addr, align 8\l  %175 = load ptr, ptr %v.addr, align 8\l  %call182 = call i32 @hypre_ParCSRMatrixMatvec(double noundef 1.000000e+00,\l... ptr noundef %173, ptr noundef %174, double noundef 0.000000e+00, ptr noundef\l... %175)\l  %176 = load i32, ptr %i8, align 4\l  %idxprom183 = sext i32 %176 to i64\l  %arrayidx184 = getelementptr inbounds [5 x double], ptr %coefs, i64 0, i64\l... %idxprom183\l  %177 = load double, ptr %arrayidx184, align 8\l  store double %177, ptr %mult, align 8\l  store i32 0, ptr %j, align 4\l  br label %for.cond185\l}"];
	Node0x561a2f049a00 -> Node0x561a2f04a2b0[tooltip="for.body181 -> for.cond185\nProbability 100.00%" ];
	Node0x561a2f04a2b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{for.cond185:\l|  %178 = load i32, ptr %j, align 4\l  %179 = load i32, ptr %num_rows, align 4\l  %cmp186 = icmp slt i32 %178, %179\l  br i1 %cmp186, label %for.body188, label %for.end198\l|{<s0>T|<s1>F}}"];
	Node0x561a2f04a2b0:s0 -> Node0x561a2f04a530[tooltip="for.cond185 -> for.body188\nProbability 96.88%" ];
	Node0x561a2f04a2b0:s1 -> Node0x561a2f04a5b0[tooltip="for.cond185 -> for.end198\nProbability 3.12%" ];
	Node0x561a2f04a530 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{for.body188:\l|  %180 = load double, ptr %mult, align 8\l  %181 = load ptr, ptr %r_data, align 8\l  %182 = load i32, ptr %j, align 4\l  %idxprom189 = sext i32 %182 to i64\l  %arrayidx190 = getelementptr inbounds double, ptr %181, i64 %idxprom189\l  %183 = load double, ptr %arrayidx190, align 8\l  %184 = load ptr, ptr %v_data, align 8\l  %185 = load i32, ptr %j, align 4\l  %idxprom192 = sext i32 %185 to i64\l  %arrayidx193 = getelementptr inbounds double, ptr %184, i64 %idxprom192\l  %186 = load double, ptr %arrayidx193, align 8\l  %187 = call double @llvm.fmuladd.f64(double %180, double %183, double %186)\l  %188 = load ptr, ptr %u_data, align 8\l  %189 = load i32, ptr %j, align 4\l  %idxprom194 = sext i32 %189 to i64\l  %arrayidx195 = getelementptr inbounds double, ptr %188, i64 %idxprom194\l  store double %187, ptr %arrayidx195, align 8\l  br label %for.inc196\l}"];
	Node0x561a2f04a530 -> Node0x561a2f04b1c0[tooltip="for.body188 -> for.inc196\nProbability 100.00%" ];
	Node0x561a2f04b1c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{for.inc196:\l|  %190 = load i32, ptr %j, align 4\l  %inc197 = add nsw i32 %190, 1\l  store i32 %inc197, ptr %j, align 4\l  br label %for.cond185, !llvm.loop !8\l}"];
	Node0x561a2f04b1c0 -> Node0x561a2f04a2b0[tooltip="for.inc196 -> for.cond185\nProbability 100.00%" ];
	Node0x561a2f04a5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{for.end198:\l|  br label %for.inc199\l}"];
	Node0x561a2f04a5b0 -> Node0x561a2f04b620[tooltip="for.end198 -> for.inc199\nProbability 100.00%" ];
	Node0x561a2f04b620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{for.inc199:\l|  %191 = load i32, ptr %i8, align 4\l  %dec = add nsw i32 %191, -1\l  store i32 %dec, ptr %i8, align 4\l  br label %for.cond178, !llvm.loop !9\l}"];
	Node0x561a2f04b620 -> Node0x561a2f0497e0[tooltip="for.inc199 -> for.cond178\nProbability 100.00%" ];
	Node0x561a2f049a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70" fontname="Courier",label="{for.end200:\l|  store i32 0, ptr %i8, align 4\l  br label %for.cond201\l}"];
	Node0x561a2f049a80 -> Node0x561a2f04bb20[tooltip="for.end200 -> for.cond201\nProbability 100.00%" ];
	Node0x561a2f04bb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670" fontname="Courier",label="{for.cond201:\l|  %192 = load i32, ptr %i8, align 4\l  %193 = load i32, ptr %num_rows, align 4\l  %cmp202 = icmp slt i32 %192, %193\l  br i1 %cmp202, label %for.body204, label %for.end214\l|{<s0>T|<s1>F}}"];
	Node0x561a2f04bb20:s0 -> Node0x561a2f04bdc0[tooltip="for.cond201 -> for.body204\nProbability 96.88%" ];
	Node0x561a2f04bb20:s1 -> Node0x561a2f04be40[tooltip="for.cond201 -> for.end214\nProbability 3.12%" ];
	Node0x561a2f04bdc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{for.body204:\l|  %194 = load ptr, ptr %orig_u, align 8\l  %195 = load i32, ptr %i8, align 4\l  %idxprom205 = sext i32 %195 to i64\l  %arrayidx206 = getelementptr inbounds double, ptr %194, i64 %idxprom205\l  %196 = load double, ptr %arrayidx206, align 8\l  %197 = load ptr, ptr %u_data, align 8\l  %198 = load i32, ptr %i8, align 4\l  %idxprom207 = sext i32 %198 to i64\l  %arrayidx208 = getelementptr inbounds double, ptr %197, i64 %idxprom207\l  %199 = load double, ptr %arrayidx208, align 8\l  %add209 = fadd double %196, %199\l  %200 = load ptr, ptr %u_data, align 8\l  %201 = load i32, ptr %i8, align 4\l  %idxprom210 = sext i32 %201 to i64\l  %arrayidx211 = getelementptr inbounds double, ptr %200, i64 %idxprom210\l  store double %add209, ptr %arrayidx211, align 8\l  br label %for.inc212\l}"];
	Node0x561a2f04bdc0 -> Node0x561a2f06b480[tooltip="for.body204 -> for.inc212\nProbability 100.00%" ];
	Node0x561a2f06b480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{for.inc212:\l|  %202 = load i32, ptr %i8, align 4\l  %inc213 = add nsw i32 %202, 1\l  store i32 %inc213, ptr %i8, align 4\l  br label %for.cond201, !llvm.loop !10\l}"];
	Node0x561a2f06b480 -> Node0x561a2f04bb20[tooltip="for.inc212 -> for.cond201\nProbability 100.00%" ];
	Node0x561a2f04be40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70" fontname="Courier",label="{for.end214:\l|  br label %if.end344\l}"];
	Node0x561a2f04be40 -> Node0x561a2f06b900[tooltip="for.end214 -> if.end344\nProbability 100.00%" ];
	Node0x561a2f072890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{if.else215:\l|  %203 = load ptr, ptr %A.addr, align 8\l  %comm = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %203,\l... i32 0, i32 0\l  %204 = load ptr, ptr %comm, align 8\l  %205 = load ptr, ptr %A.addr, align 8\l  %global_num_rows = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct,\l... ptr %205, i32 0, i32 1\l  %206 = load i32, ptr %global_num_rows, align 8\l  %207 = load ptr, ptr %A.addr, align 8\l  %row_starts = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr\l... %207, i32 0, i32 12\l  %208 = load ptr, ptr %row_starts, align 8\l  %call216 = call ptr @hypre_ParVectorCreate(ptr noundef %204, i32 noundef\l... %206, ptr noundef %208)\l  store ptr %call216, ptr %ds, align 8\l  %209 = load ptr, ptr %ds, align 8\l  %call217 = call i32 @hypre_ParVectorInitialize(ptr noundef %209)\l  %210 = load ptr, ptr %ds, align 8\l  %call218 = call i32 @hypre_ParVectorSetPartitioningOwner(ptr noundef %210,\l... i32 noundef 0)\l  %211 = load ptr, ptr %ds, align 8\l  %local_vector219 = getelementptr inbounds %struct.hypre_ParVector_struct,\l... ptr %211, i32 0, i32 6\l  %212 = load ptr, ptr %local_vector219, align 8\l  %data220 = getelementptr inbounds %struct.hypre_Vector, ptr %212, i32 0, i32\l... 0\l  %213 = load ptr, ptr %data220, align 8\l  store ptr %213, ptr %ds_data, align 8\l  %214 = load ptr, ptr %A.addr, align 8\l  %comm221 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr\l... %214, i32 0, i32 0\l  %215 = load ptr, ptr %comm221, align 8\l  %216 = load ptr, ptr %A.addr, align 8\l  %global_num_rows222 = getelementptr inbounds\l... %struct.hypre_ParCSRMatrix_struct, ptr %216, i32 0, i32 1\l  %217 = load i32, ptr %global_num_rows222, align 8\l  %218 = load ptr, ptr %A.addr, align 8\l  %row_starts223 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct,\l... ptr %218, i32 0, i32 12\l  %219 = load ptr, ptr %row_starts223, align 8\l  %call224 = call ptr @hypre_ParVectorCreate(ptr noundef %215, i32 noundef\l... %217, ptr noundef %219)\l  store ptr %call224, ptr %tmp_vec, align 8\l  %220 = load ptr, ptr %tmp_vec, align 8\l  %call225 = call i32 @hypre_ParVectorInitialize(ptr noundef %220)\l  %221 = load ptr, ptr %tmp_vec, align 8\l  %call226 = call i32 @hypre_ParVectorSetPartitioningOwner(ptr noundef %221,\l... i32 noundef 0)\l  %222 = load ptr, ptr %tmp_vec, align 8\l  %local_vector227 = getelementptr inbounds %struct.hypre_ParVector_struct,\l... ptr %222, i32 0, i32 6\l  %223 = load ptr, ptr %local_vector227, align 8\l  %data228 = getelementptr inbounds %struct.hypre_Vector, ptr %223, i32 0, i32\l... 0\l  %224 = load ptr, ptr %data228, align 8\l  store ptr %224, ptr %tmp_data, align 8\l  store i32 0, ptr %j, align 4\l  br label %for.cond229\l}"];
	Node0x561a2f072890 -> Node0x561a2f07ef40[tooltip="if.else215 -> for.cond229\nProbability 100.00%" ];
	Node0x561a2f07ef40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.cond229:\l|  %225 = load i32, ptr %j, align 4\l  %226 = load i32, ptr %num_rows, align 4\l  %cmp230 = icmp slt i32 %225, %226\l  br i1 %cmp230, label %for.body232, label %for.end250\l|{<s0>T|<s1>F}}"];
	Node0x561a2f07ef40:s0 -> Node0x561a2f07f1b0[tooltip="for.cond229 -> for.body232\nProbability 96.88%" ];
	Node0x561a2f07ef40:s1 -> Node0x561a2f07f200[tooltip="for.cond229 -> for.end250\nProbability 3.12%" ];
	Node0x561a2f07f1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.body232:\l|  %227 = load ptr, ptr %A_diag_data, align 8\l  %228 = load ptr, ptr %A_diag_i, align 8\l  %229 = load i32, ptr %j, align 4\l  %idxprom233 = sext i32 %229 to i64\l  %arrayidx234 = getelementptr inbounds i32, ptr %228, i64 %idxprom233\l  %230 = load i32, ptr %arrayidx234, align 4\l  %idxprom235 = sext i32 %230 to i64\l  %arrayidx236 = getelementptr inbounds double, ptr %227, i64 %idxprom235\l  %231 = load double, ptr %arrayidx236, align 8\l  store double %231, ptr %diag10, align 8\l  %232 = load double, ptr %diag10, align 8\l  %call237 = call double @sqrt(double noundef %232) #4\l  %div238 = fdiv double 1.000000e+00, %call237\l  %233 = load ptr, ptr %ds_data, align 8\l  %234 = load i32, ptr %j, align 4\l  %idxprom239 = sext i32 %234 to i64\l  %arrayidx240 = getelementptr inbounds double, ptr %233, i64 %idxprom239\l  store double %div238, ptr %arrayidx240, align 8\l  %235 = load ptr, ptr %ds_data, align 8\l  %236 = load i32, ptr %j, align 4\l  %idxprom241 = sext i32 %236 to i64\l  %arrayidx242 = getelementptr inbounds double, ptr %235, i64 %idxprom241\l  %237 = load double, ptr %arrayidx242, align 8\l  %238 = load ptr, ptr %f_data, align 8\l  %239 = load i32, ptr %j, align 4\l  %idxprom243 = sext i32 %239 to i64\l  %arrayidx244 = getelementptr inbounds double, ptr %238, i64 %idxprom243\l  %240 = load double, ptr %arrayidx244, align 8\l  %mul245 = fmul double %237, %240\l  %241 = load ptr, ptr %r_data, align 8\l  %242 = load i32, ptr %j, align 4\l  %idxprom246 = sext i32 %242 to i64\l  %arrayidx247 = getelementptr inbounds double, ptr %241, i64 %idxprom246\l  store double %mul245, ptr %arrayidx247, align 8\l  br label %for.inc248\l}"];
	Node0x561a2f07f1b0 -> Node0x561a2f080840[tooltip="for.body232 -> for.inc248\nProbability 100.00%" ];
	Node0x561a2f080840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.inc248:\l|  %243 = load i32, ptr %j, align 4\l  %inc249 = add nsw i32 %243, 1\l  store i32 %inc249, ptr %j, align 4\l  br label %for.cond229, !llvm.loop !11\l}"];
	Node0x561a2f080840 -> Node0x561a2f07ef40[tooltip="for.inc248 -> for.cond229\nProbability 100.00%" ];
	Node0x561a2f07f200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{for.end250:\l|  %244 = load ptr, ptr %A.addr, align 8\l  %245 = load ptr, ptr %u.addr, align 8\l  %246 = load ptr, ptr %tmp_vec, align 8\l  %call251 = call i32 @hypre_ParCSRMatrixMatvec(double noundef -1.000000e+00,\l... ptr noundef %244, ptr noundef %245, double noundef 0.000000e+00, ptr noundef\l... %246)\l  store i32 0, ptr %j, align 4\l  br label %for.cond252\l}"];
	Node0x561a2f07f200 -> Node0x561a2f0810f0[tooltip="for.end250 -> for.cond252\nProbability 100.00%" ];
	Node0x561a2f0810f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.cond252:\l|  %247 = load i32, ptr %j, align 4\l  %248 = load i32, ptr %num_rows, align 4\l  %cmp253 = icmp slt i32 %247, %248\l  br i1 %cmp253, label %for.body255, label %for.end265\l|{<s0>T|<s1>F}}"];
	Node0x561a2f0810f0:s0 -> Node0x561a2f081340[tooltip="for.cond252 -> for.body255\nProbability 96.88%" ];
	Node0x561a2f0810f0:s1 -> Node0x561a2f081390[tooltip="for.cond252 -> for.end265\nProbability 3.12%" ];
	Node0x561a2f081340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.body255:\l|  %249 = load ptr, ptr %ds_data, align 8\l  %250 = load i32, ptr %j, align 4\l  %idxprom256 = sext i32 %250 to i64\l  %arrayidx257 = getelementptr inbounds double, ptr %249, i64 %idxprom256\l  %251 = load double, ptr %arrayidx257, align 8\l  %252 = load ptr, ptr %tmp_data, align 8\l  %253 = load i32, ptr %j, align 4\l  %idxprom258 = sext i32 %253 to i64\l  %arrayidx259 = getelementptr inbounds double, ptr %252, i64 %idxprom258\l  %254 = load double, ptr %arrayidx259, align 8\l  %255 = load ptr, ptr %r_data, align 8\l  %256 = load i32, ptr %j, align 4\l  %idxprom261 = sext i32 %256 to i64\l  %arrayidx262 = getelementptr inbounds double, ptr %255, i64 %idxprom261\l  %257 = load double, ptr %arrayidx262, align 8\l  %258 = call double @llvm.fmuladd.f64(double %251, double %254, double %257)\l  store double %258, ptr %arrayidx262, align 8\l  br label %for.inc263\l}"];
	Node0x561a2f081340 -> Node0x561a2f082000[tooltip="for.body255 -> for.inc263\nProbability 100.00%" ];
	Node0x561a2f082000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.inc263:\l|  %259 = load i32, ptr %j, align 4\l  %inc264 = add nsw i32 %259, 1\l  store i32 %inc264, ptr %j, align 4\l  br label %for.cond252, !llvm.loop !12\l}"];
	Node0x561a2f082000 -> Node0x561a2f0810f0[tooltip="for.inc263 -> for.cond252\nProbability 100.00%" ];
	Node0x561a2f081390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{for.end265:\l|  store i32 0, ptr %j, align 4\l  br label %for.cond266\l}"];
	Node0x561a2f081390 -> Node0x561a2f0824d0[tooltip="for.end265 -> for.cond266\nProbability 100.00%" ];
	Node0x561a2f0824d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.cond266:\l|  %260 = load i32, ptr %j, align 4\l  %261 = load i32, ptr %num_rows, align 4\l  %cmp267 = icmp slt i32 %260, %261\l  br i1 %cmp267, label %for.body269, label %for.end283\l|{<s0>T|<s1>F}}"];
	Node0x561a2f0824d0:s0 -> Node0x561a2f082720[tooltip="for.cond266 -> for.body269\nProbability 96.88%" ];
	Node0x561a2f0824d0:s1 -> Node0x561a2f0827a0[tooltip="for.cond266 -> for.end283\nProbability 3.12%" ];
	Node0x561a2f082720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.body269:\l|  %262 = load ptr, ptr %u_data, align 8\l  %263 = load i32, ptr %j, align 4\l  %idxprom270 = sext i32 %263 to i64\l  %arrayidx271 = getelementptr inbounds double, ptr %262, i64 %idxprom270\l  %264 = load double, ptr %arrayidx271, align 8\l  %265 = load ptr, ptr %orig_u, align 8\l  %266 = load i32, ptr %j, align 4\l  %idxprom272 = sext i32 %266 to i64\l  %arrayidx273 = getelementptr inbounds double, ptr %265, i64 %idxprom272\l  store double %264, ptr %arrayidx273, align 8\l  %267 = load ptr, ptr %r_data, align 8\l  %268 = load i32, ptr %j, align 4\l  %idxprom274 = sext i32 %268 to i64\l  %arrayidx275 = getelementptr inbounds double, ptr %267, i64 %idxprom274\l  %269 = load double, ptr %arrayidx275, align 8\l  %270 = load i32, ptr %cheby_order, align 4\l  %idxprom276 = sext i32 %270 to i64\l  %arrayidx277 = getelementptr inbounds [5 x double], ptr %coefs, i64 0, i64\l... %idxprom276\l  %271 = load double, ptr %arrayidx277, align 8\l  %mul278 = fmul double %269, %271\l  %272 = load ptr, ptr %u_data, align 8\l  %273 = load i32, ptr %j, align 4\l  %idxprom279 = sext i32 %273 to i64\l  %arrayidx280 = getelementptr inbounds double, ptr %272, i64 %idxprom279\l  store double %mul278, ptr %arrayidx280, align 8\l  br label %for.inc281\l}"];
	Node0x561a2f082720 -> Node0x561a2f083810[tooltip="for.body269 -> for.inc281\nProbability 100.00%" ];
	Node0x561a2f083810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.inc281:\l|  %274 = load i32, ptr %j, align 4\l  %inc282 = add nsw i32 %274, 1\l  store i32 %inc282, ptr %j, align 4\l  br label %for.cond266, !llvm.loop !13\l}"];
	Node0x561a2f083810 -> Node0x561a2f0824d0[tooltip="for.inc281 -> for.cond266\nProbability 100.00%" ];
	Node0x561a2f0827a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{for.end283:\l|  %275 = load i32, ptr %cheby_order, align 4\l  %sub284 = sub nsw i32 %275, 1\l  store i32 %sub284, ptr %i8, align 4\l  br label %for.cond285\l}"];
	Node0x561a2f0827a0 -> Node0x561a2f083e60[tooltip="for.end283 -> for.cond285\nProbability 100.00%" ];
	Node0x561a2f083e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.cond285:\l|  %276 = load i32, ptr %i8, align 4\l  %cmp286 = icmp sge i32 %276, 0\l  br i1 %cmp286, label %for.body288, label %for.end325\l|{<s0>T|<s1>F}}"];
	Node0x561a2f083e60:s0 -> Node0x561a2f084080[tooltip="for.cond285 -> for.body288\nProbability 96.88%" ];
	Node0x561a2f083e60:s1 -> Node0x561a2f084100[tooltip="for.cond285 -> for.end325\nProbability 3.12%" ];
	Node0x561a2f084080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.body288:\l|  store i32 0, ptr %j, align 4\l  br label %for.cond289\l}"];
	Node0x561a2f084080 -> Node0x561a2f0842d0[tooltip="for.body288 -> for.cond289\nProbability 100.00%" ];
	Node0x561a2f0842d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond289:\l|  %277 = load i32, ptr %j, align 4\l  %278 = load i32, ptr %num_rows, align 4\l  %cmp290 = icmp slt i32 %277, %278\l  br i1 %cmp290, label %for.body292, label %for.end302\l|{<s0>T|<s1>F}}"];
	Node0x561a2f0842d0:s0 -> Node0x561a2f084570[tooltip="for.cond289 -> for.body292\nProbability 96.88%" ];
	Node0x561a2f0842d0:s1 -> Node0x561a2f0845f0[tooltip="for.cond289 -> for.end302\nProbability 3.12%" ];
	Node0x561a2f084570 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body292:\l|  %279 = load ptr, ptr %ds_data, align 8\l  %280 = load i32, ptr %j, align 4\l  %idxprom293 = sext i32 %280 to i64\l  %arrayidx294 = getelementptr inbounds double, ptr %279, i64 %idxprom293\l  %281 = load double, ptr %arrayidx294, align 8\l  %282 = load ptr, ptr %u_data, align 8\l  %283 = load i32, ptr %j, align 4\l  %idxprom295 = sext i32 %283 to i64\l  %arrayidx296 = getelementptr inbounds double, ptr %282, i64 %idxprom295\l  %284 = load double, ptr %arrayidx296, align 8\l  %mul297 = fmul double %281, %284\l  %285 = load ptr, ptr %tmp_data, align 8\l  %286 = load i32, ptr %j, align 4\l  %idxprom298 = sext i32 %286 to i64\l  %arrayidx299 = getelementptr inbounds double, ptr %285, i64 %idxprom298\l  store double %mul297, ptr %arrayidx299, align 8\l  br label %for.inc300\l}"];
	Node0x561a2f084570 -> Node0x561a2f0850c0[tooltip="for.body292 -> for.inc300\nProbability 100.00%" ];
	Node0x561a2f0850c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc300:\l|  %287 = load i32, ptr %j, align 4\l  %inc301 = add nsw i32 %287, 1\l  store i32 %inc301, ptr %j, align 4\l  br label %for.cond289, !llvm.loop !14\l}"];
	Node0x561a2f0850c0 -> Node0x561a2f0842d0[tooltip="for.inc300 -> for.cond289\nProbability 100.00%" ];
	Node0x561a2f0845f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end302:\l|  %288 = load ptr, ptr %A.addr, align 8\l  %289 = load ptr, ptr %tmp_vec, align 8\l  %290 = load ptr, ptr %v.addr, align 8\l  %call303 = call i32 @hypre_ParCSRMatrixMatvec(double noundef 1.000000e+00,\l... ptr noundef %288, ptr noundef %289, double noundef 0.000000e+00, ptr noundef\l... %290)\l  %291 = load i32, ptr %i8, align 4\l  %idxprom304 = sext i32 %291 to i64\l  %arrayidx305 = getelementptr inbounds [5 x double], ptr %coefs, i64 0, i64\l... %idxprom304\l  %292 = load double, ptr %arrayidx305, align 8\l  store double %292, ptr %mult, align 8\l  store i32 0, ptr %j, align 4\l  br label %for.cond306\l}"];
	Node0x561a2f0845f0 -> Node0x561a2f085c40[tooltip="for.end302 -> for.cond306\nProbability 100.00%" ];
	Node0x561a2f085c40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond306:\l|  %293 = load i32, ptr %j, align 4\l  %294 = load i32, ptr %num_rows, align 4\l  %cmp307 = icmp slt i32 %293, %294\l  br i1 %cmp307, label %for.body309, label %for.end322\l|{<s0>T|<s1>F}}"];
	Node0x561a2f085c40:s0 -> Node0x561a2f085ec0[tooltip="for.cond306 -> for.body309\nProbability 96.88%" ];
	Node0x561a2f085c40:s1 -> Node0x561a2f085f40[tooltip="for.cond306 -> for.end322\nProbability 3.12%" ];
	Node0x561a2f085ec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body309:\l|  %295 = load ptr, ptr %ds_data, align 8\l  %296 = load i32, ptr %j, align 4\l  %idxprom310 = sext i32 %296 to i64\l  %arrayidx311 = getelementptr inbounds double, ptr %295, i64 %idxprom310\l  %297 = load double, ptr %arrayidx311, align 8\l  %298 = load ptr, ptr %v_data, align 8\l  %299 = load i32, ptr %j, align 4\l  %idxprom312 = sext i32 %299 to i64\l  %arrayidx313 = getelementptr inbounds double, ptr %298, i64 %idxprom312\l  %300 = load double, ptr %arrayidx313, align 8\l  %mul314 = fmul double %297, %300\l  store double %mul314, ptr %tmp_d, align 8\l  %301 = load double, ptr %mult, align 8\l  %302 = load ptr, ptr %r_data, align 8\l  %303 = load i32, ptr %j, align 4\l  %idxprom315 = sext i32 %303 to i64\l  %arrayidx316 = getelementptr inbounds double, ptr %302, i64 %idxprom315\l  %304 = load double, ptr %arrayidx316, align 8\l  %305 = load double, ptr %tmp_d, align 8\l  %306 = call double @llvm.fmuladd.f64(double %301, double %304, double %305)\l  %307 = load ptr, ptr %u_data, align 8\l  %308 = load i32, ptr %j, align 4\l  %idxprom318 = sext i32 %308 to i64\l  %arrayidx319 = getelementptr inbounds double, ptr %307, i64 %idxprom318\l  store double %306, ptr %arrayidx319, align 8\l  br label %for.inc320\l}"];
	Node0x561a2f085ec0 -> Node0x561a2f087010[tooltip="for.body309 -> for.inc320\nProbability 100.00%" ];
	Node0x561a2f087010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc320:\l|  %309 = load i32, ptr %j, align 4\l  %inc321 = add nsw i32 %309, 1\l  store i32 %inc321, ptr %j, align 4\l  br label %for.cond306, !llvm.loop !15\l}"];
	Node0x561a2f087010 -> Node0x561a2f085c40[tooltip="for.inc320 -> for.cond306\nProbability 100.00%" ];
	Node0x561a2f085f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end322:\l|  br label %for.inc323\l}"];
	Node0x561a2f085f40 -> Node0x561a2f087470[tooltip="for.end322 -> for.inc323\nProbability 100.00%" ];
	Node0x561a2f087470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.inc323:\l|  %310 = load i32, ptr %i8, align 4\l  %dec324 = add nsw i32 %310, -1\l  store i32 %dec324, ptr %i8, align 4\l  br label %for.cond285, !llvm.loop !16\l}"];
	Node0x561a2f087470 -> Node0x561a2f083e60[tooltip="for.inc323 -> for.cond285\nProbability 100.00%" ];
	Node0x561a2f084100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{for.end325:\l|  store i32 0, ptr %j, align 4\l  br label %for.cond326\l}"];
	Node0x561a2f084100 -> Node0x561a2f087970[tooltip="for.end325 -> for.cond326\nProbability 100.00%" ];
	Node0x561a2f087970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.cond326:\l|  %311 = load i32, ptr %j, align 4\l  %312 = load i32, ptr %num_rows, align 4\l  %cmp327 = icmp slt i32 %311, %312\l  br i1 %cmp327, label %for.body329, label %for.end341\l|{<s0>T|<s1>F}}"];
	Node0x561a2f087970:s0 -> Node0x561a2f087c10[tooltip="for.cond326 -> for.body329\nProbability 96.88%" ];
	Node0x561a2f087970:s1 -> Node0x561a2f087c90[tooltip="for.cond326 -> for.end341\nProbability 3.12%" ];
	Node0x561a2f087c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.body329:\l|  %313 = load ptr, ptr %orig_u, align 8\l  %314 = load i32, ptr %j, align 4\l  %idxprom330 = sext i32 %314 to i64\l  %arrayidx331 = getelementptr inbounds double, ptr %313, i64 %idxprom330\l  %315 = load double, ptr %arrayidx331, align 8\l  %316 = load ptr, ptr %ds_data, align 8\l  %317 = load i32, ptr %j, align 4\l  %idxprom332 = sext i32 %317 to i64\l  %arrayidx333 = getelementptr inbounds double, ptr %316, i64 %idxprom332\l  %318 = load double, ptr %arrayidx333, align 8\l  %319 = load ptr, ptr %u_data, align 8\l  %320 = load i32, ptr %j, align 4\l  %idxprom334 = sext i32 %320 to i64\l  %arrayidx335 = getelementptr inbounds double, ptr %319, i64 %idxprom334\l  %321 = load double, ptr %arrayidx335, align 8\l  %322 = call double @llvm.fmuladd.f64(double %318, double %321, double %315)\l  %323 = load ptr, ptr %u_data, align 8\l  %324 = load i32, ptr %j, align 4\l  %idxprom337 = sext i32 %324 to i64\l  %arrayidx338 = getelementptr inbounds double, ptr %323, i64 %idxprom337\l  store double %322, ptr %arrayidx338, align 8\l  br label %for.inc339\l}"];
	Node0x561a2f087c10 -> Node0x561a2f088b10[tooltip="for.body329 -> for.inc339\nProbability 100.00%" ];
	Node0x561a2f088b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.inc339:\l|  %325 = load i32, ptr %j, align 4\l  %inc340 = add nsw i32 %325, 1\l  store i32 %inc340, ptr %j, align 4\l  br label %for.cond326, !llvm.loop !17\l}"];
	Node0x561a2f088b10 -> Node0x561a2f087970[tooltip="for.inc339 -> for.cond326\nProbability 100.00%" ];
	Node0x561a2f087c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{for.end341:\l|  %326 = load ptr, ptr %ds, align 8\l  %call342 = call i32 @hypre_ParVectorDestroy(ptr noundef %326)\l  %327 = load ptr, ptr %tmp_vec, align 8\l  %call343 = call i32 @hypre_ParVectorDestroy(ptr noundef %327)\l  br label %if.end344\l}"];
	Node0x561a2f087c90 -> Node0x561a2f06b900[tooltip="for.end341 -> if.end344\nProbability 100.00%" ];
	Node0x561a2f06b900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70" fontname="Courier",label="{if.end344:\l|  %328 = load ptr, ptr %orig_u, align 8\l  call void @hypre_Free(ptr noundef %328)\l  store ptr null, ptr %orig_u, align 8\l  %329 = load i32, ptr @hypre__global_error, align 4\l  ret i32 %329\l}"];
}
