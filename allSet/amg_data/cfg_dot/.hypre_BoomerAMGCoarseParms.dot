digraph "CFG for 'hypre_BoomerAMGCoarseParms' function" {
	label="CFG for 'hypre_BoomerAMGCoarseParms' function";

	Node0x563edf22c900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %comm.addr = alloca ptr, align 8\l  %local_num_variables.addr = alloca i32, align 4\l  %num_functions.addr = alloca i32, align 4\l  %dof_func.addr = alloca ptr, align 8\l  %CF_marker.addr = alloca ptr, align 8\l  %coarse_dof_func_ptr.addr = alloca ptr, align 8\l  %coarse_pnts_global_ptr.addr = alloca ptr, align 8\l  %i = alloca i32, align 4\l  %ierr = alloca i32, align 4\l  %num_procs = alloca i32, align 4\l  %local_coarse_size = alloca i32, align 4\l  %coarse_dof_func = alloca ptr, align 8\l  %coarse_pnts_global = alloca ptr, align 8\l  %scan_recv = alloca i32, align 4\l  store ptr %comm, ptr %comm.addr, align 8\l  store i32 %local_num_variables, ptr %local_num_variables.addr, align 4\l  store i32 %num_functions, ptr %num_functions.addr, align 4\l  store ptr %dof_func, ptr %dof_func.addr, align 8\l  store ptr %CF_marker, ptr %CF_marker.addr, align 8\l  store ptr %coarse_dof_func_ptr, ptr %coarse_dof_func_ptr.addr, align 8\l  store ptr %coarse_pnts_global_ptr, ptr %coarse_pnts_global_ptr.addr, align 8\l  store i32 0, ptr %ierr, align 4\l  store i32 0, ptr %local_coarse_size, align 4\l  %0 = load ptr, ptr %comm.addr, align 8\l  %call = call i32 @hypre_MPI_Comm_size(ptr noundef %0, ptr noundef %num_procs)\l  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x563edf22c900 -> Node0x563edf230410[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x563edf230410 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %1 = load i32, ptr %i, align 4\l  %2 = load i32, ptr %local_num_variables.addr, align 4\l  %cmp = icmp slt i32 %1, %2\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x563edf230410:s0 -> Node0x563edf2309a0[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x563edf230410:s1 -> Node0x563edf2309f0[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x563edf2309a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %3 = load ptr, ptr %CF_marker.addr, align 8\l  %4 = load i32, ptr %i, align 4\l  %idxprom = sext i32 %4 to i64\l  %arrayidx = getelementptr inbounds i32, ptr %3, i64 %idxprom\l  %5 = load i32, ptr %arrayidx, align 4\l  %cmp1 = icmp eq i32 %5, 1\l  br i1 %cmp1, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x563edf2309a0:s0 -> Node0x563edf230ed0[tooltip="for.body -> if.then\nProbability 50.00%" ];
	Node0x563edf2309a0:s1 -> Node0x563edf230f40[tooltip="for.body -> if.end\nProbability 50.00%" ];
	Node0x563edf230ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then:\l|  %6 = load i32, ptr %local_coarse_size, align 4\l  %inc = add nsw i32 %6, 1\l  store i32 %inc, ptr %local_coarse_size, align 4\l  br label %if.end\l}"];
	Node0x563edf230ed0 -> Node0x563edf230f40[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x563edf230f40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end:\l|  br label %for.inc\l}"];
	Node0x563edf230f40 -> Node0x563edf231360[tooltip="if.end -> for.inc\nProbability 100.00%" ];
	Node0x563edf231360 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %7 = load i32, ptr %i, align 4\l  %inc2 = add nsw i32 %7, 1\l  store i32 %inc2, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x563edf231360 -> Node0x563edf230410[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x563edf2309f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  %8 = load i32, ptr %num_functions.addr, align 4\l  %cmp3 = icmp sgt i32 %8, 1\l  br i1 %cmp3, label %if.then4, label %if.end24\l|{<s0>T|<s1>F}}"];
	Node0x563edf2309f0:s0 -> Node0x563edf232310[tooltip="for.end -> if.then4\nProbability 50.00%" ];
	Node0x563edf2309f0:s1 -> Node0x563edf232360[tooltip="for.end -> if.end24\nProbability 50.00%" ];
	Node0x563edf232310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{if.then4:\l|  %9 = load i32, ptr %local_coarse_size, align 4\l  %conv = sext i32 %9 to i64\l  %call5 = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4)\l  store ptr %call5, ptr %coarse_dof_func, align 8\l  store i32 0, ptr %local_coarse_size, align 4\l  store i32 0, ptr %i, align 4\l  br label %for.cond6\l}"];
	Node0x563edf232310 -> Node0x563edf232fc0[tooltip="if.then4 -> for.cond6\nProbability 100.00%" ];
	Node0x563edf232fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{for.cond6:\l|  %10 = load i32, ptr %i, align 4\l  %11 = load i32, ptr %local_num_variables.addr, align 4\l  %cmp7 = icmp slt i32 %10, %11\l  br i1 %cmp7, label %for.body9, label %for.end23\l|{<s0>T|<s1>F}}"];
	Node0x563edf232fc0:s0 -> Node0x563edf233240[tooltip="for.cond6 -> for.body9\nProbability 96.88%" ];
	Node0x563edf232fc0:s1 -> Node0x563edf233290[tooltip="for.cond6 -> for.end23\nProbability 3.12%" ];
	Node0x563edf233240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{for.body9:\l|  %12 = load ptr, ptr %CF_marker.addr, align 8\l  %13 = load i32, ptr %i, align 4\l  %idxprom10 = sext i32 %13 to i64\l  %arrayidx11 = getelementptr inbounds i32, ptr %12, i64 %idxprom10\l  %14 = load i32, ptr %arrayidx11, align 4\l  %cmp12 = icmp eq i32 %14, 1\l  br i1 %cmp12, label %if.then14, label %if.end20\l|{<s0>T|<s1>F}}"];
	Node0x563edf233240:s0 -> Node0x563edf233fa0[tooltip="for.body9 -> if.then14\nProbability 50.00%" ];
	Node0x563edf233240:s1 -> Node0x563edf234020[tooltip="for.body9 -> if.end20\nProbability 50.00%" ];
	Node0x563edf233fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.then14:\l|  %15 = load ptr, ptr %dof_func.addr, align 8\l  %16 = load i32, ptr %i, align 4\l  %idxprom15 = sext i32 %16 to i64\l  %arrayidx16 = getelementptr inbounds i32, ptr %15, i64 %idxprom15\l  %17 = load i32, ptr %arrayidx16, align 4\l  %18 = load ptr, ptr %coarse_dof_func, align 8\l  %19 = load i32, ptr %local_coarse_size, align 4\l  %inc17 = add nsw i32 %19, 1\l  store i32 %inc17, ptr %local_coarse_size, align 4\l  %idxprom18 = sext i32 %19 to i64\l  %arrayidx19 = getelementptr inbounds i32, ptr %18, i64 %idxprom18\l  store i32 %17, ptr %arrayidx19, align 4\l  br label %if.end20\l}"];
	Node0x563edf233fa0 -> Node0x563edf234020[tooltip="if.then14 -> if.end20\nProbability 100.00%" ];
	Node0x563edf234020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.end20:\l|  br label %for.inc21\l}"];
	Node0x563edf234020 -> Node0x563edf234f90[tooltip="if.end20 -> for.inc21\nProbability 100.00%" ];
	Node0x563edf234f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{for.inc21:\l|  %20 = load i32, ptr %i, align 4\l  %inc22 = add nsw i32 %20, 1\l  store i32 %inc22, ptr %i, align 4\l  br label %for.cond6, !llvm.loop !8\l}"];
	Node0x563edf234f90 -> Node0x563edf232fc0[tooltip="for.inc21 -> for.cond6\nProbability 100.00%" ];
	Node0x563edf233290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{for.end23:\l|  %21 = load ptr, ptr %coarse_dof_func, align 8\l  %22 = load ptr, ptr %coarse_dof_func_ptr.addr, align 8\l  store ptr %21, ptr %22, align 8\l  br label %if.end24\l}"];
	Node0x563edf233290 -> Node0x563edf232360[tooltip="for.end23 -> if.end24\nProbability 100.00%" ];
	Node0x563edf232360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.end24:\l|  %call25 = call ptr @hypre_CAlloc(i64 noundef 2, i64 noundef 4)\l  store ptr %call25, ptr %coarse_pnts_global, align 8\l  %23 = load ptr, ptr %comm.addr, align 8\l  %call26 = call i32 @hypre_MPI_Scan(ptr noundef %local_coarse_size, ptr\l... noundef %scan_recv, i32 noundef 1, ptr noundef @ompi_mpi_int, ptr noundef\l... @ompi_mpi_op_sum, ptr noundef %23)\l  %24 = load i32, ptr %scan_recv, align 4\l  %25 = load i32, ptr %local_coarse_size, align 4\l  %sub = sub nsw i32 %24, %25\l  %26 = load ptr, ptr %coarse_pnts_global, align 8\l  %arrayidx27 = getelementptr inbounds i32, ptr %26, i64 0\l  store i32 %sub, ptr %arrayidx27, align 4\l  %27 = load i32, ptr %scan_recv, align 4\l  %28 = load ptr, ptr %coarse_pnts_global, align 8\l  %arrayidx28 = getelementptr inbounds i32, ptr %28, i64 1\l  store i32 %27, ptr %arrayidx28, align 4\l  %29 = load ptr, ptr %coarse_pnts_global, align 8\l  %30 = load ptr, ptr %coarse_pnts_global_ptr.addr, align 8\l  store ptr %29, ptr %30, align 8\l  %31 = load i32, ptr %ierr, align 4\l  ret i32 %31\l}"];
}
