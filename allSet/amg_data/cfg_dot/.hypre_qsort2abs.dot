digraph "CFG for 'hypre_qsort2abs' function" {
	label="CFG for 'hypre_qsort2abs' function";

	Node0x558f7a641270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{entry:\l|  %v.addr = alloca ptr, align 8\l  %w.addr = alloca ptr, align 8\l  %left.addr = alloca i32, align 4\l  %right.addr = alloca i32, align 4\l  %i = alloca i32, align 4\l  %last = alloca i32, align 4\l  store ptr %v, ptr %v.addr, align 8\l  store ptr %w, ptr %w.addr, align 8\l  store i32 %left, ptr %left.addr, align 4\l  store i32 %right, ptr %right.addr, align 4\l  %0 = load i32, ptr %left.addr, align 4\l  %1 = load i32, ptr %right.addr, align 4\l  %cmp = icmp sge i32 %0, %1\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x558f7a641270:s0 -> Node0x558f7a6419a0[tooltip="entry -> if.then\nProbability 50.00%" ];
	Node0x558f7a641270:s1 -> Node0x558f7a641bb0[tooltip="entry -> if.end\nProbability 50.00%" ];
	Node0x558f7a6419a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.then:\l|  br label %return\l}"];
	Node0x558f7a6419a0 -> Node0x558f7a641cd0[tooltip="if.then -> return\nProbability 100.00%" ];
	Node0x558f7a641bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.end:\l|  %2 = load ptr, ptr %v.addr, align 8\l  %3 = load ptr, ptr %w.addr, align 8\l  %4 = load i32, ptr %left.addr, align 4\l  %5 = load i32, ptr %left.addr, align 4\l  %6 = load i32, ptr %right.addr, align 4\l  %add = add nsw i32 %5, %6\l  %div = sdiv i32 %add, 2\l  call void @hypre_swap2(ptr noundef %2, ptr noundef %3, i32 noundef %4, i32\l... noundef %div)\l  %7 = load i32, ptr %left.addr, align 4\l  store i32 %7, ptr %last, align 4\l  %8 = load i32, ptr %left.addr, align 4\l  %add1 = add nsw i32 %8, 1\l  store i32 %add1, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x558f7a641bb0 -> Node0x558f7a6426a0[tooltip="if.end -> for.cond\nProbability 100.00%" ];
	Node0x558f7a6426a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %9 = load i32, ptr %i, align 4\l  %10 = load i32, ptr %right.addr, align 4\l  %cmp2 = icmp sle i32 %9, %10\l  br i1 %cmp2, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x558f7a6426a0:s0 -> Node0x558f7a6428f0[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x558f7a6426a0:s1 -> Node0x558f7a642970[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x558f7a6428f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %11 = load ptr, ptr %w.addr, align 8\l  %12 = load i32, ptr %i, align 4\l  %idxprom = sext i32 %12 to i64\l  %arrayidx = getelementptr inbounds double, ptr %11, i64 %idxprom\l  %13 = load double, ptr %arrayidx, align 8\l  %14 = call double @llvm.fabs.f64(double %13)\l  %15 = load ptr, ptr %w.addr, align 8\l  %16 = load i32, ptr %left.addr, align 4\l  %idxprom3 = sext i32 %16 to i64\l  %arrayidx4 = getelementptr inbounds double, ptr %15, i64 %idxprom3\l  %17 = load double, ptr %arrayidx4, align 8\l  %18 = call double @llvm.fabs.f64(double %17)\l  %cmp5 = fcmp ogt double %14, %18\l  br i1 %cmp5, label %if.then6, label %if.end7\l|{<s0>T|<s1>F}}"];
	Node0x558f7a6428f0:s0 -> Node0x558f7a643470[tooltip="for.body -> if.then6\nProbability 50.00%" ];
	Node0x558f7a6428f0:s1 -> Node0x558f7a6434f0[tooltip="for.body -> if.end7\nProbability 50.00%" ];
	Node0x558f7a643470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then6:\l|  %19 = load ptr, ptr %v.addr, align 8\l  %20 = load ptr, ptr %w.addr, align 8\l  %21 = load i32, ptr %last, align 4\l  %inc = add nsw i32 %21, 1\l  store i32 %inc, ptr %last, align 4\l  %22 = load i32, ptr %i, align 4\l  call void @hypre_swap2(ptr noundef %19, ptr noundef %20, i32 noundef %inc,\l... i32 noundef %22)\l  br label %if.end7\l}"];
	Node0x558f7a643470 -> Node0x558f7a6434f0[tooltip="if.then6 -> if.end7\nProbability 100.00%" ];
	Node0x558f7a6434f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end7:\l|  br label %for.inc\l}"];
	Node0x558f7a6434f0 -> Node0x558f7a643b90[tooltip="if.end7 -> for.inc\nProbability 100.00%" ];
	Node0x558f7a643b90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %23 = load i32, ptr %i, align 4\l  %inc8 = add nsw i32 %23, 1\l  store i32 %inc8, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x558f7a643b90 -> Node0x558f7a6426a0[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x558f7a642970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  %24 = load ptr, ptr %v.addr, align 8\l  %25 = load ptr, ptr %w.addr, align 8\l  %26 = load i32, ptr %left.addr, align 4\l  %27 = load i32, ptr %last, align 4\l  call void @hypre_swap2(ptr noundef %24, ptr noundef %25, i32 noundef %26,\l... i32 noundef %27)\l  %28 = load ptr, ptr %v.addr, align 8\l  %29 = load ptr, ptr %w.addr, align 8\l  %30 = load i32, ptr %left.addr, align 4\l  %31 = load i32, ptr %last, align 4\l  %sub = sub nsw i32 %31, 1\l  call void @hypre_qsort2abs(ptr noundef %28, ptr noundef %29, i32 noundef\l... %30, i32 noundef %sub)\l  %32 = load ptr, ptr %v.addr, align 8\l  %33 = load ptr, ptr %w.addr, align 8\l  %34 = load i32, ptr %last, align 4\l  %add9 = add nsw i32 %34, 1\l  %35 = load i32, ptr %right.addr, align 4\l  call void @hypre_qsort2abs(ptr noundef %32, ptr noundef %33, i32 noundef\l... %add9, i32 noundef %35)\l  br label %return\l}"];
	Node0x558f7a642970 -> Node0x558f7a641cd0[tooltip="for.end -> return\nProbability 100.00%" ];
	Node0x558f7a641cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{return:\l|  ret void\l}"];
}
