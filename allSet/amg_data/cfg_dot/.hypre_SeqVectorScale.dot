digraph "CFG for 'hypre_SeqVectorScale' function" {
	label="CFG for 'hypre_SeqVectorScale' function";

	Node0x559a841891a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %alpha.addr = alloca double, align 8\l  %y.addr = alloca ptr, align 8\l  %y_data = alloca ptr, align 8\l  %size = alloca i32, align 4\l  %i = alloca i32, align 4\l  %ierr = alloca i32, align 4\l  store double %alpha, ptr %alpha.addr, align 8\l  store ptr %y, ptr %y.addr, align 8\l  %0 = load ptr, ptr %y.addr, align 8\l  %data = getelementptr inbounds %struct.hypre_Vector, ptr %0, i32 0, i32 0\l  %1 = load ptr, ptr %data, align 8\l  store ptr %1, ptr %y_data, align 8\l  %2 = load ptr, ptr %y.addr, align 8\l  %size1 = getelementptr inbounds %struct.hypre_Vector, ptr %2, i32 0, i32 1\l  %3 = load i32, ptr %size1, align 8\l  store i32 %3, ptr %size, align 4\l  store i32 0, ptr %ierr, align 4\l  %4 = load ptr, ptr %y.addr, align 8\l  %num_vectors = getelementptr inbounds %struct.hypre_Vector, ptr %4, i32 0,\l... i32 3\l  %5 = load i32, ptr %num_vectors, align 8\l  %6 = load i32, ptr %size, align 4\l  %mul = mul nsw i32 %6, %5\l  store i32 %mul, ptr %size, align 4\l  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x559a841891a0 -> Node0x559a8418a250[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x559a8418a250 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %7 = load i32, ptr %i, align 4\l  %8 = load i32, ptr %size, align 4\l  %cmp = icmp slt i32 %7, %8\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x559a8418a250:s0 -> Node0x559a8418a4f0[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x559a8418a250:s1 -> Node0x559a8418a570[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x559a8418a4f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %9 = load double, ptr %alpha.addr, align 8\l  %10 = load ptr, ptr %y_data, align 8\l  %11 = load i32, ptr %i, align 4\l  %idxprom = sext i32 %11 to i64\l  %arrayidx = getelementptr inbounds double, ptr %10, i64 %idxprom\l  %12 = load double, ptr %arrayidx, align 8\l  %mul2 = fmul double %12, %9\l  store double %mul2, ptr %arrayidx, align 8\l  br label %for.inc\l}"];
	Node0x559a8418a4f0 -> Node0x559a8418ab40[tooltip="for.body -> for.inc\nProbability 100.00%" ];
	Node0x559a8418ab40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %13 = load i32, ptr %i, align 4\l  %inc = add nsw i32 %13, 1\l  store i32 %inc, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x559a8418ab40 -> Node0x559a8418a250[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x559a8418a570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  %14 = load i32, ptr %ierr, align 4\l  ret i32 %14\l}"];
}
