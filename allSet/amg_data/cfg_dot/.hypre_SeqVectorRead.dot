digraph "CFG for 'hypre_SeqVectorRead' function" {
	label="CFG for 'hypre_SeqVectorRead' function";

	Node0x559a84170a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %file_name.addr = alloca ptr, align 8\l  %vector = alloca ptr, align 8\l  %fp = alloca ptr, align 8\l  %data = alloca ptr, align 8\l  %size = alloca i32, align 4\l  %j = alloca i32, align 4\l  store ptr %file_name, ptr %file_name.addr, align 8\l  %0 = load ptr, ptr %file_name.addr, align 8\l  %call = call noalias ptr @fopen(ptr noundef %0, ptr noundef @.str)\l  store ptr %call, ptr %fp, align 8\l  %1 = load ptr, ptr %fp, align 8\l  %call1 = call i32 (ptr, ptr, ...) @hypre_fscanf(ptr noundef %1, ptr noundef\l... @.str.1, ptr noundef %size)\l  %2 = load i32, ptr %size, align 4\l  %call2 = call ptr @hypre_SeqVectorCreate(i32 noundef %2)\l  store ptr %call2, ptr %vector, align 8\l  %3 = load ptr, ptr %vector, align 8\l  %call3 = call i32 @hypre_SeqVectorInitialize(ptr noundef %3)\l  %4 = load ptr, ptr %vector, align 8\l  %data4 = getelementptr inbounds %struct.hypre_Vector, ptr %4, i32 0, i32 0\l  %5 = load ptr, ptr %data4, align 8\l  store ptr %5, ptr %data, align 8\l  store i32 0, ptr %j, align 4\l  br label %for.cond\l}"];
	Node0x559a84170a90 -> Node0x559a84172480[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x559a84172480 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %6 = load i32, ptr %j, align 4\l  %7 = load i32, ptr %size, align 4\l  %cmp = icmp slt i32 %6, %7\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x559a84172480:s0 -> Node0x559a84172750[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x559a84172480:s1 -> Node0x559a841727a0[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x559a84172750 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %8 = load ptr, ptr %fp, align 8\l  %9 = load ptr, ptr %data, align 8\l  %10 = load i32, ptr %j, align 4\l  %idxprom = sext i32 %10 to i64\l  %arrayidx = getelementptr inbounds double, ptr %9, i64 %idxprom\l  %call5 = call i32 (ptr, ptr, ...) @hypre_fscanf(ptr noundef %8, ptr noundef\l... @.str.2, ptr noundef %arrayidx)\l  br label %for.inc\l}"];
	Node0x559a84172750 -> Node0x559a84172c70[tooltip="for.body -> for.inc\nProbability 100.00%" ];
	Node0x559a84172c70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %11 = load i32, ptr %j, align 4\l  %inc = add nsw i32 %11, 1\l  store i32 %inc, ptr %j, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x559a84172c70 -> Node0x559a84172480[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x559a841727a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  %12 = load ptr, ptr %fp, align 8\l  %call6 = call i32 @fclose(ptr noundef %12)\l  %13 = load ptr, ptr %vector, align 8\l  %num_vectors = getelementptr inbounds %struct.hypre_Vector, ptr %13, i32 0,\l... i32 3\l  %14 = load i32, ptr %num_vectors, align 8\l  %cmp7 = icmp eq i32 %14, 1\l  br i1 %cmp7, label %if.end, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x559a841727a0:s0 -> Node0x559a841742c0[tooltip="for.end -> if.end\nProbability 50.00%" ];
	Node0x559a841727a0:s1 -> Node0x559a84174330[tooltip="for.end -> if.then\nProbability 50.00%" ];
	Node0x559a84174330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{if.then:\l|  %15 = load ptr, ptr @stderr, align 8\l  %call8 = call i32 (ptr, ptr, ...) @hypre_fprintf(ptr noundef %15, ptr\l... noundef @.str.3, ptr noundef @.str.4)\l  call void @hypre_error_handler(ptr noundef @.str.5, i32 noundef 166, i32\l... noundef 1, ptr noundef null)\l  br label %if.end\l}"];
	Node0x559a84174330 -> Node0x559a841742c0[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x559a841742c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.end:\l|  %16 = load ptr, ptr %vector, align 8\l  ret ptr %16\l}"];
}
