digraph "CFG for 'hypre_Bisection' function" {
	label="CFG for 'hypre_Bisection' function";

	Node0x55daa0588e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{entry:\l|  %n.addr = alloca i32, align 4\l  %diag.addr = alloca ptr, align 8\l  %offd.addr = alloca ptr, align 8\l  %y.addr = alloca double, align 8\l  %z.addr = alloca double, align 8\l  %tol.addr = alloca double, align 8\l  %k.addr = alloca i32, align 4\l  %ev_ptr.addr = alloca ptr, align 8\l  %x = alloca double, align 8\l  %eigen_value = alloca double, align 8\l  %ierr = alloca i32, align 4\l  %sign_change = alloca i32, align 4\l  %i = alloca i32, align 4\l  %p0 = alloca double, align 8\l  %p1 = alloca double, align 8\l  %p2 = alloca double, align 8\l  store i32 %n, ptr %n.addr, align 4\l  store ptr %diag, ptr %diag.addr, align 8\l  store ptr %offd, ptr %offd.addr, align 8\l  store double %y, ptr %y.addr, align 8\l  store double %z, ptr %z.addr, align 8\l  store double %tol, ptr %tol.addr, align 8\l  store i32 %k, ptr %k.addr, align 4\l  store ptr %ev_ptr, ptr %ev_ptr.addr, align 8\l  store i32 0, ptr %ierr, align 4\l  store i32 0, ptr %sign_change, align 4\l  br label %while.cond\l}"];
	Node0x55daa0588e80 -> Node0x55daa058b5c0[tooltip="entry -> while.cond\nProbability 100.00%" ];
	Node0x55daa058b5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{while.cond:\l|  %0 = load double, ptr %y.addr, align 8\l  %1 = load double, ptr %z.addr, align 8\l  %sub = fsub double %0, %1\l  %2 = call double @llvm.fabs.f64(double %sub)\l  %3 = load double, ptr %tol.addr, align 8\l  %4 = load double, ptr %y.addr, align 8\l  %5 = call double @llvm.fabs.f64(double %4)\l  %6 = load double, ptr %z.addr, align 8\l  %7 = call double @llvm.fabs.f64(double %6)\l  %add = fadd double %5, %7\l  %mul = fmul double %3, %add\l  %cmp = fcmp ogt double %2, %mul\l  br i1 %cmp, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x55daa058b5c0:s0 -> Node0x55daa058bec0[tooltip="while.cond -> while.body\nProbability 96.88%" ];
	Node0x55daa058b5c0:s1 -> Node0x55daa058bf40[tooltip="while.cond -> while.end\nProbability 3.12%" ];
	Node0x55daa058bec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{while.body:\l|  %8 = load double, ptr %y.addr, align 8\l  %9 = load double, ptr %z.addr, align 8\l  %add1 = fadd double %8, %9\l  %div = fdiv double %add1, 2.000000e+00\l  store double %div, ptr %x, align 8\l  store i32 0, ptr %sign_change, align 4\l  store double 1.000000e+00, ptr %p0, align 8\l  %10 = load ptr, ptr %diag.addr, align 8\l  %arrayidx = getelementptr inbounds double, ptr %10, i64 0\l  %11 = load double, ptr %arrayidx, align 8\l  %12 = load double, ptr %x, align 8\l  %sub2 = fsub double %11, %12\l  store double %sub2, ptr %p1, align 8\l  %13 = load double, ptr %p0, align 8\l  %14 = load double, ptr %p1, align 8\l  %mul3 = fmul double %13, %14\l  %cmp4 = fcmp ole double %mul3, 0.000000e+00\l  br i1 %cmp4, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x55daa058bec0:s0 -> Node0x55daa058caf0[tooltip="while.body -> if.then\nProbability 50.00%" ];
	Node0x55daa058bec0:s1 -> Node0x55daa058cb60[tooltip="while.body -> if.end\nProbability 50.00%" ];
	Node0x55daa058caf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{if.then:\l|  %15 = load i32, ptr %sign_change, align 4\l  %inc = add nsw i32 %15, 1\l  store i32 %inc, ptr %sign_change, align 4\l  br label %if.end\l}"];
	Node0x55daa058caf0 -> Node0x55daa058cb60[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x55daa058cb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.end:\l|  store i32 1, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x55daa058cb60 -> Node0x55daa058cf60[tooltip="if.end -> for.cond\nProbability 100.00%" ];
	Node0x55daa058cf60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %16 = load i32, ptr %i, align 4\l  %17 = load i32, ptr %n.addr, align 4\l  %cmp5 = icmp slt i32 %16, %17\l  br i1 %cmp5, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x55daa058cf60:s0 -> Node0x55daa058d200[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x55daa058cf60:s1 -> Node0x55daa058d280[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x55daa058d200 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %18 = load ptr, ptr %diag.addr, align 8\l  %19 = load i32, ptr %i, align 4\l  %idxprom = sext i32 %19 to i64\l  %arrayidx6 = getelementptr inbounds double, ptr %18, i64 %idxprom\l  %20 = load double, ptr %arrayidx6, align 8\l  %21 = load double, ptr %x, align 8\l  %sub7 = fsub double %20, %21\l  %22 = load double, ptr %p1, align 8\l  %23 = load ptr, ptr %offd.addr, align 8\l  %24 = load i32, ptr %i, align 4\l  %idxprom9 = sext i32 %24 to i64\l  %arrayidx10 = getelementptr inbounds double, ptr %23, i64 %idxprom9\l  %25 = load double, ptr %arrayidx10, align 8\l  %26 = load ptr, ptr %offd.addr, align 8\l  %27 = load i32, ptr %i, align 4\l  %idxprom11 = sext i32 %27 to i64\l  %arrayidx12 = getelementptr inbounds double, ptr %26, i64 %idxprom11\l  %28 = load double, ptr %arrayidx12, align 8\l  %mul13 = fmul double %25, %28\l  %29 = load double, ptr %p0, align 8\l  %mul14 = fmul double %mul13, %29\l  %neg = fneg double %mul14\l  %30 = call double @llvm.fmuladd.f64(double %sub7, double %22, double %neg)\l  store double %30, ptr %p2, align 8\l  %31 = load double, ptr %p1, align 8\l  store double %31, ptr %p0, align 8\l  %32 = load double, ptr %p2, align 8\l  store double %32, ptr %p1, align 8\l  %33 = load double, ptr %p0, align 8\l  %34 = load double, ptr %p1, align 8\l  %mul15 = fmul double %33, %34\l  %cmp16 = fcmp ole double %mul15, 0.000000e+00\l  br i1 %cmp16, label %if.then17, label %if.end19\l|{<s0>T|<s1>F}}"];
	Node0x55daa058d200:s0 -> Node0x55daa0577960[tooltip="for.body -> if.then17\nProbability 50.00%" ];
	Node0x55daa058d200:s1 -> Node0x55daa058eab0[tooltip="for.body -> if.end19\nProbability 50.00%" ];
	Node0x55daa0577960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then17:\l|  %35 = load i32, ptr %sign_change, align 4\l  %inc18 = add nsw i32 %35, 1\l  store i32 %inc18, ptr %sign_change, align 4\l  br label %if.end19\l}"];
	Node0x55daa0577960 -> Node0x55daa058eab0[tooltip="if.then17 -> if.end19\nProbability 100.00%" ];
	Node0x55daa058eab0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end19:\l|  br label %for.inc\l}"];
	Node0x55daa058eab0 -> Node0x55daa058edf0[tooltip="if.end19 -> for.inc\nProbability 100.00%" ];
	Node0x55daa058edf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %36 = load i32, ptr %i, align 4\l  %inc20 = add nsw i32 %36, 1\l  store i32 %inc20, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x55daa058edf0 -> Node0x55daa058cf60[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x55daa058d280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  %37 = load i32, ptr %sign_change, align 4\l  %38 = load i32, ptr %k.addr, align 4\l  %cmp21 = icmp sge i32 %37, %38\l  br i1 %cmp21, label %if.then22, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x55daa058d280:s0 -> Node0x55daa058f410[tooltip="for.end -> if.then22\nProbability 50.00%" ];
	Node0x55daa058d280:s1 -> Node0x55daa058f460[tooltip="for.end -> if.else\nProbability 50.00%" ];
	Node0x55daa058f410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{if.then22:\l|  %39 = load double, ptr %x, align 8\l  store double %39, ptr %z.addr, align 8\l  br label %if.end23\l}"];
	Node0x55daa058f410 -> Node0x55daa058f6a0[tooltip="if.then22 -> if.end23\nProbability 100.00%" ];
	Node0x55daa058f460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{if.else:\l|  %40 = load double, ptr %x, align 8\l  store double %40, ptr %y.addr, align 8\l  br label %if.end23\l}"];
	Node0x55daa058f460 -> Node0x55daa058f6a0[tooltip="if.else -> if.end23\nProbability 100.00%" ];
	Node0x55daa058f6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.end23:\l|  br label %while.cond, !llvm.loop !8\l}"];
	Node0x55daa058f6a0 -> Node0x55daa058b5c0[tooltip="if.end23 -> while.cond\nProbability 100.00%" ];
	Node0x55daa058bf40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{while.end:\l|  %41 = load double, ptr %y.addr, align 8\l  %42 = load double, ptr %z.addr, align 8\l  %add24 = fadd double %41, %42\l  %div25 = fdiv double %add24, 2.000000e+00\l  store double %div25, ptr %eigen_value, align 8\l  %43 = load double, ptr %eigen_value, align 8\l  %44 = load ptr, ptr %ev_ptr.addr, align 8\l  store double %43, ptr %44, align 8\l  %45 = load i32, ptr %ierr, align 4\l  ret i32 %45\l}"];
}
