digraph "CFG for 'hypre_UnorderedIntSetCopyToArray' function" {
	label="CFG for 'hypre_UnorderedIntSetCopyToArray' function";

	Node0x55e2c2bcba00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %s.addr = alloca ptr, align 8\l  %len.addr = alloca ptr, align 8\l  %prefix_sum_workspace = alloca ptr, align 8\l  %ret_array = alloca ptr, align 8\l  %n = alloca i32, align 4\l  %i_begin = alloca i32, align 4\l  %i_end = alloca i32, align 4\l  %cnt = alloca i32, align 4\l  %i = alloca i32, align 4\l  store ptr %s, ptr %s.addr, align 8\l  store ptr %len, ptr %len.addr, align 8\l  store ptr null, ptr %ret_array, align 8\l  %call = call ptr @hypre_MAlloc(i64 noundef 8)\l  store ptr %call, ptr %prefix_sum_workspace, align 8\l  %0 = load ptr, ptr %s.addr, align 8\l  %bucketMask = getelementptr inbounds %struct.hypre_UnorderedIntSet, ptr %0,\l... i32 0, i32 1\l  %1 = load volatile i32, ptr %bucketMask, align 4\l  %add = add nsw i32 %1, 4096\l  store i32 %add, ptr %n, align 4\l  %2 = load i32, ptr %n, align 4\l  call void @hypre_GetSimpleThreadPartition(ptr noundef %i_begin, ptr noundef\l... %i_end, i32 noundef %2)\l  store i32 0, ptr %cnt, align 4\l  %3 = load i32, ptr %i_begin, align 4\l  store i32 %3, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x55e2c2bcba00 -> Node0x55e2c2bccc50[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x55e2c2bccc50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %4 = load i32, ptr %i, align 4\l  %5 = load i32, ptr %i_end, align 4\l  %cmp = icmp slt i32 %4, %5\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x55e2c2bccc50:s0 -> Node0x55e2c2bccea0[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x55e2c2bccc50:s1 -> Node0x55e2c2bccef0[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x55e2c2bccea0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %6 = load ptr, ptr %s.addr, align 8\l  %hash = getelementptr inbounds %struct.hypre_UnorderedIntSet, ptr %6, i32 0,\l... i32 4\l  %7 = load volatile ptr, ptr %hash, align 8\l  %8 = load i32, ptr %i, align 4\l  %idxprom = sext i32 %8 to i64\l  %arrayidx = getelementptr inbounds i32, ptr %7, i64 %idxprom\l  %9 = load i32, ptr %arrayidx, align 4\l  %cmp1 = icmp ne i32 0, %9\l  br i1 %cmp1, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x55e2c2bccea0:s0 -> Node0x55e2c2bcd4e0[tooltip="for.body -> if.then\nProbability 50.00%" ];
	Node0x55e2c2bccea0:s1 -> Node0x55e2c2bcd550[tooltip="for.body -> if.end\nProbability 50.00%" ];
	Node0x55e2c2bcd4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then:\l|  %10 = load i32, ptr %cnt, align 4\l  %inc = add nsw i32 %10, 1\l  store i32 %inc, ptr %cnt, align 4\l  br label %if.end\l}"];
	Node0x55e2c2bcd4e0 -> Node0x55e2c2bcd550[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x55e2c2bcd550 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end:\l|  br label %for.inc\l}"];
	Node0x55e2c2bcd550 -> Node0x55e2c2bcdc30[tooltip="if.end -> for.inc\nProbability 100.00%" ];
	Node0x55e2c2bcdc30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %11 = load i32, ptr %i, align 4\l  %inc2 = add nsw i32 %11, 1\l  store i32 %inc2, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x55e2c2bcdc30 -> Node0x55e2c2bccc50[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x55e2c2bccef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  %12 = load ptr, ptr %len.addr, align 8\l  %13 = load ptr, ptr %prefix_sum_workspace, align 8\l  call void @hypre_prefix_sum(ptr noundef %cnt, ptr noundef %12, ptr noundef\l... %13)\l  %14 = load ptr, ptr %len.addr, align 8\l  %15 = load i32, ptr %14, align 4\l  %conv = sext i32 %15 to i64\l  %mul = mul i64 4, %conv\l  %call3 = call ptr @hypre_MAlloc(i64 noundef %mul)\l  store ptr %call3, ptr %ret_array, align 8\l  %16 = load i32, ptr %i_begin, align 4\l  store i32 %16, ptr %i, align 4\l  br label %for.cond4\l}"];
	Node0x55e2c2bccef0 -> Node0x55e2c2bce800[tooltip="for.end -> for.cond4\nProbability 100.00%" ];
	Node0x55e2c2bce800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond4:\l|  %17 = load i32, ptr %i, align 4\l  %18 = load i32, ptr %i_end, align 4\l  %cmp5 = icmp slt i32 %17, %18\l  br i1 %cmp5, label %for.body7, label %for.end22\l|{<s0>T|<s1>F}}"];
	Node0x55e2c2bce800:s0 -> Node0x55e2c2bcea70[tooltip="for.cond4 -> for.body7\nProbability 96.88%" ];
	Node0x55e2c2bce800:s1 -> Node0x55e2c2bceac0[tooltip="for.cond4 -> for.end22\nProbability 3.12%" ];
	Node0x55e2c2bcea70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body7:\l|  %19 = load ptr, ptr %s.addr, align 8\l  %hash8 = getelementptr inbounds %struct.hypre_UnorderedIntSet, ptr %19, i32\l... 0, i32 4\l  %20 = load volatile ptr, ptr %hash8, align 8\l  %21 = load i32, ptr %i, align 4\l  %idxprom9 = sext i32 %21 to i64\l  %arrayidx10 = getelementptr inbounds i32, ptr %20, i64 %idxprom9\l  %22 = load i32, ptr %arrayidx10, align 4\l  %cmp11 = icmp ne i32 0, %22\l  br i1 %cmp11, label %if.then13, label %if.end19\l|{<s0>T|<s1>F}}"];
	Node0x55e2c2bcea70:s0 -> Node0x55e2c2bcf0f0[tooltip="for.body7 -> if.then13\nProbability 50.00%" ];
	Node0x55e2c2bcea70:s1 -> Node0x55e2c2bcf170[tooltip="for.body7 -> if.end19\nProbability 50.00%" ];
	Node0x55e2c2bcf0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then13:\l|  %23 = load ptr, ptr %s.addr, align 8\l  %key = getelementptr inbounds %struct.hypre_UnorderedIntSet, ptr %23, i32 0,\l... i32 2\l  %24 = load volatile ptr, ptr %key, align 8\l  %25 = load i32, ptr %i, align 4\l  %idxprom14 = sext i32 %25 to i64\l  %arrayidx15 = getelementptr inbounds i32, ptr %24, i64 %idxprom14\l  %26 = load i32, ptr %arrayidx15, align 4\l  %27 = load ptr, ptr %ret_array, align 8\l  %28 = load i32, ptr %cnt, align 4\l  %inc16 = add nsw i32 %28, 1\l  store i32 %inc16, ptr %cnt, align 4\l  %idxprom17 = sext i32 %28 to i64\l  %arrayidx18 = getelementptr inbounds i32, ptr %27, i64 %idxprom17\l  store i32 %26, ptr %arrayidx18, align 4\l  br label %if.end19\l}"];
	Node0x55e2c2bcf0f0 -> Node0x55e2c2bcf170[tooltip="if.then13 -> if.end19\nProbability 100.00%" ];
	Node0x55e2c2bcf170 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end19:\l|  br label %for.inc20\l}"];
	Node0x55e2c2bcf170 -> Node0x55e2c2bcfc20[tooltip="if.end19 -> for.inc20\nProbability 100.00%" ];
	Node0x55e2c2bcfc20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc20:\l|  %29 = load i32, ptr %i, align 4\l  %inc21 = add nsw i32 %29, 1\l  store i32 %inc21, ptr %i, align 4\l  br label %for.cond4, !llvm.loop !8\l}"];
	Node0x55e2c2bcfc20 -> Node0x55e2c2bce800[tooltip="for.inc20 -> for.cond4\nProbability 100.00%" ];
	Node0x55e2c2bceac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end22:\l|  %30 = load ptr, ptr %prefix_sum_workspace, align 8\l  call void @hypre_Free(ptr noundef %30)\l  store ptr null, ptr %prefix_sum_workspace, align 8\l  %31 = load ptr, ptr %ret_array, align 8\l  ret ptr %31\l}"];
}
