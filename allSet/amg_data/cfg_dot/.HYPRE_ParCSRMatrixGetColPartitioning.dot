digraph "CFG for 'HYPRE_ParCSRMatrixGetColPartitioning' function" {
	label="CFG for 'HYPRE_ParCSRMatrixGetColPartitioning' function";

	Node0x562ae1c6bc50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{entry:\l|  %retval = alloca i32, align 4\l  %matrix.addr = alloca ptr, align 8\l  %col_partitioning_ptr.addr = alloca ptr, align 8\l  %col_partitioning = alloca ptr, align 8\l  %col_starts = alloca ptr, align 8\l  %num_procs = alloca i32, align 4\l  %i = alloca i32, align 4\l  store ptr %matrix, ptr %matrix.addr, align 8\l  store ptr %col_partitioning_ptr, ptr %col_partitioning_ptr.addr, align 8\l  %0 = load ptr, ptr %matrix.addr, align 8\l  %tobool = icmp ne ptr %0, null\l  br i1 %tobool, label %if.end, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x562ae1c6bc50:s0 -> Node0x562ae1c6c2f0[tooltip="entry -> if.end\nProbability 62.50%" ];
	Node0x562ae1c6bc50:s1 -> Node0x562ae1c6c360[tooltip="entry -> if.then\nProbability 37.50%" ];
	Node0x562ae1c6c360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.then:\l|  call void @hypre_error_handler(ptr noundef @.str, i32 noundef 185, i32\l... noundef 12, ptr noundef null)\l  %1 = load i32, ptr @hypre__global_error, align 4\l  store i32 %1, ptr %retval, align 4\l  br label %return\l}"];
	Node0x562ae1c6c360 -> Node0x562ae1c6c800[tooltip="if.then -> return\nProbability 100.00%" ];
	Node0x562ae1c6c2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{if.end:\l|  %2 = load ptr, ptr %matrix.addr, align 8\l  %comm = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %2,\l... i32 0, i32 0\l  %3 = load ptr, ptr %comm, align 8\l  %call = call i32 @hypre_MPI_Comm_size(ptr noundef %3, ptr noundef %num_procs)\l  %4 = load ptr, ptr %matrix.addr, align 8\l  %col_starts1 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr\l... %4, i32 0, i32 13\l  %5 = load ptr, ptr %col_starts1, align 8\l  store ptr %5, ptr %col_starts, align 8\l  %6 = load ptr, ptr %col_starts, align 8\l  %tobool2 = icmp ne ptr %6, null\l  br i1 %tobool2, label %if.end4, label %if.then3\l|{<s0>T|<s1>F}}"];
	Node0x562ae1c6c2f0:s0 -> Node0x562ae1c6cf60[tooltip="if.end -> if.end4\nProbability 62.50%" ];
	Node0x562ae1c6c2f0:s1 -> Node0x562ae1c6cfd0[tooltip="if.end -> if.then3\nProbability 37.50%" ];
	Node0x562ae1c6cfd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{if.then3:\l|  store i32 -1, ptr %retval, align 4\l  br label %return\l}"];
	Node0x562ae1c6cfd0 -> Node0x562ae1c6c800[tooltip="if.then3 -> return\nProbability 100.00%" ];
	Node0x562ae1c6cf60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.end4:\l|  %7 = load i32, ptr %num_procs, align 4\l  %add = add nsw i32 %7, 1\l  %conv = sext i32 %add to i64\l  %call5 = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4)\l  store ptr %call5, ptr %col_partitioning, align 8\l  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x562ae1c6cf60 -> Node0x562ae1c6d6f0[tooltip="if.end4 -> for.cond\nProbability 100.00%" ];
	Node0x562ae1c6d6f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %8 = load i32, ptr %i, align 4\l  %9 = load i32, ptr %num_procs, align 4\l  %add6 = add nsw i32 %9, 1\l  %cmp = icmp slt i32 %8, %add6\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x562ae1c6d6f0:s0 -> Node0x562ae1c6dd10[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x562ae1c6d6f0:s1 -> Node0x562ae1c6dd60[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x562ae1c6dd10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %10 = load ptr, ptr %col_starts, align 8\l  %11 = load i32, ptr %i, align 4\l  %idxprom = sext i32 %11 to i64\l  %arrayidx = getelementptr inbounds i32, ptr %10, i64 %idxprom\l  %12 = load i32, ptr %arrayidx, align 4\l  %13 = load ptr, ptr %col_partitioning, align 8\l  %14 = load i32, ptr %i, align 4\l  %idxprom8 = sext i32 %14 to i64\l  %arrayidx9 = getelementptr inbounds i32, ptr %13, i64 %idxprom8\l  store i32 %12, ptr %arrayidx9, align 4\l  br label %for.inc\l}"];
	Node0x562ae1c6dd10 -> Node0x562ae1c6e470[tooltip="for.body -> for.inc\nProbability 100.00%" ];
	Node0x562ae1c6e470 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %15 = load i32, ptr %i, align 4\l  %inc = add nsw i32 %15, 1\l  store i32 %inc, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x562ae1c6e470 -> Node0x562ae1c6d6f0[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x562ae1c6dd60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  %16 = load ptr, ptr %col_partitioning, align 8\l  %17 = load ptr, ptr %col_partitioning_ptr.addr, align 8\l  store ptr %16, ptr %17, align 8\l  %18 = load i32, ptr @hypre__global_error, align 4\l  store i32 %18, ptr %retval, align 4\l  br label %return\l}"];
	Node0x562ae1c6dd60 -> Node0x562ae1c6c800[tooltip="for.end -> return\nProbability 100.00%" ];
	Node0x562ae1c6c800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{return:\l|  %19 = load i32, ptr %retval, align 4\l  ret i32 %19\l}"];
}
