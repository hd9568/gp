digraph "CFG for 'hypre_PCGPrintLogging' function" {
	label="CFG for 'hypre_PCGPrintLogging' function";

	Node0x55706168add0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{entry:\l|  %pcg_vdata.addr = alloca ptr, align 8\l  %myid.addr = alloca i32, align 4\l  %pcg_data = alloca ptr, align 8\l  %num_iterations = alloca i32, align 4\l  %print_level = alloca i32, align 4\l  %norms = alloca ptr, align 8\l  %rel_norms = alloca ptr, align 8\l  %i = alloca i32, align 4\l  store ptr %pcg_vdata, ptr %pcg_vdata.addr, align 8\l  store i32 %myid, ptr %myid.addr, align 4\l  %0 = load ptr, ptr %pcg_vdata.addr, align 8\l  store ptr %0, ptr %pcg_data, align 8\l  %1 = load ptr, ptr %pcg_data, align 8\l  %num_iterations1 = getelementptr inbounds %struct.hypre_PCGData, ptr %1, i32\l... 0, i32 20\l  %2 = load i32, ptr %num_iterations1, align 8\l  store i32 %2, ptr %num_iterations, align 4\l  %3 = load ptr, ptr %pcg_data, align 8\l  %print_level2 = getelementptr inbounds %struct.hypre_PCGData, ptr %3, i32 0,\l... i32 22\l  %4 = load i32, ptr %print_level2, align 8\l  store i32 %4, ptr %print_level, align 4\l  %5 = load ptr, ptr %pcg_data, align 8\l  %norms3 = getelementptr inbounds %struct.hypre_PCGData, ptr %5, i32 0, i32 24\l  %6 = load ptr, ptr %norms3, align 8\l  store ptr %6, ptr %norms, align 8\l  %7 = load ptr, ptr %pcg_data, align 8\l  %rel_norms4 = getelementptr inbounds %struct.hypre_PCGData, ptr %7, i32 0,\l... i32 25\l  %8 = load ptr, ptr %rel_norms4, align 8\l  store ptr %8, ptr %rel_norms, align 8\l  %9 = load i32, ptr %myid.addr, align 4\l  %cmp = icmp eq i32 %9, 0\l  br i1 %cmp, label %if.then, label %if.end11\l|{<s0>T|<s1>F}}"];
	Node0x55706168add0:s0 -> Node0x55706168c2f0[tooltip="entry -> if.then\nProbability 37.50%" ];
	Node0x55706168add0:s1 -> Node0x55706168c360[tooltip="entry -> if.end11\nProbability 62.50%" ];
	Node0x55706168c2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{if.then:\l|  %10 = load i32, ptr %print_level, align 4\l  %cmp5 = icmp sgt i32 %10, 0\l  br i1 %cmp5, label %if.then6, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x55706168c2f0:s0 -> Node0x55706168c620[tooltip="if.then -> if.then6\nProbability 62.50%" ];
	Node0x55706168c2f0:s1 -> Node0x55706168c6a0[tooltip="if.then -> if.end\nProbability 37.50%" ];
	Node0x55706168c620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.then6:\l|  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x55706168c620 -> Node0x55706168c8c0[tooltip="if.then6 -> for.cond\nProbability 100.00%" ];
	Node0x55706168c8c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %11 = load i32, ptr %i, align 4\l  %12 = load i32, ptr %num_iterations, align 4\l  %cmp7 = icmp slt i32 %11, %12\l  br i1 %cmp7, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x55706168c8c0:s0 -> Node0x55706168cb60[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x55706168c8c0:s1 -> Node0x55706168cbe0[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x55706168cb60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %13 = load i32, ptr %i, align 4\l  %14 = load ptr, ptr %norms, align 8\l  %15 = load i32, ptr %i, align 4\l  %idxprom = sext i32 %15 to i64\l  %arrayidx = getelementptr inbounds double, ptr %14, i64 %idxprom\l  %16 = load double, ptr %arrayidx, align 8\l  %call = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.21, i32 noundef\l... %13, double noundef %16)\l  %17 = load i32, ptr %i, align 4\l  %18 = load ptr, ptr %rel_norms, align 8\l  %19 = load i32, ptr %i, align 4\l  %idxprom8 = sext i32 %19 to i64\l  %arrayidx9 = getelementptr inbounds double, ptr %18, i64 %idxprom8\l  %20 = load double, ptr %arrayidx9, align 8\l  %call10 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.22, i32\l... noundef %17, double noundef %20)\l  br label %for.inc\l}"];
	Node0x55706168cb60 -> Node0x55706168d6a0[tooltip="for.body -> for.inc\nProbability 100.00%" ];
	Node0x55706168d6a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %21 = load i32, ptr %i, align 4\l  %inc = add nsw i32 %21, 1\l  store i32 %inc, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x55706168d6a0 -> Node0x55706168c8c0[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x55706168cbe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  br label %if.end\l}"];
	Node0x55706168cbe0 -> Node0x55706168c6a0[tooltip="for.end -> if.end\nProbability 100.00%" ];
	Node0x55706168c6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{if.end:\l|  br label %if.end11\l}"];
	Node0x55706168c6a0 -> Node0x55706168c360[tooltip="if.end -> if.end11\nProbability 100.00%" ];
	Node0x55706168c360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{if.end11:\l|  %22 = load i32, ptr @hypre__global_error, align 4\l  ret i32 %22\l}"];
}
