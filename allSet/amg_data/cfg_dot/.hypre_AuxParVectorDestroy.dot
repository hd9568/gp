digraph "CFG for 'hypre_AuxParVectorDestroy' function" {
	label="CFG for 'hypre_AuxParVectorDestroy' function";

	Node0x55a585fb46c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %vector.addr = alloca ptr, align 8\l  %ierr = alloca i32, align 4\l  store ptr %vector, ptr %vector.addr, align 8\l  store i32 0, ptr %ierr, align 4\l  %0 = load ptr, ptr %vector.addr, align 8\l  %tobool = icmp ne ptr %0, null\l  br i1 %tobool, label %if.then, label %if.end10\l|{<s0>T|<s1>F}}"];
	Node0x55a585fb46c0:s0 -> Node0x55a585fb4a00[tooltip="entry -> if.then\nProbability 62.50%" ];
	Node0x55a585fb46c0:s1 -> Node0x55a585fb4a70[tooltip="entry -> if.end10\nProbability 37.50%" ];
	Node0x55a585fb4a00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.then:\l|  %1 = load ptr, ptr %vector.addr, align 8\l  %off_proc_i = getelementptr inbounds %struct.hypre_AuxParVector, ptr %1, i32\l... 0, i32 2\l  %2 = load ptr, ptr %off_proc_i, align 8\l  %tobool1 = icmp ne ptr %2, null\l  br i1 %tobool1, label %if.then2, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x55a585fb4a00:s0 -> Node0x55a585fb4ea0[tooltip="if.then -> if.then2\nProbability 62.50%" ];
	Node0x55a585fb4a00:s1 -> Node0x55a585fb4f20[tooltip="if.then -> if.end\nProbability 37.50%" ];
	Node0x55a585fb4ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then2:\l|  %3 = load ptr, ptr %vector.addr, align 8\l  %off_proc_i3 = getelementptr inbounds %struct.hypre_AuxParVector, ptr %3,\l... i32 0, i32 2\l  %4 = load ptr, ptr %off_proc_i3, align 8\l  call void @hypre_Free(ptr noundef %4)\l  %5 = load ptr, ptr %vector.addr, align 8\l  %off_proc_i4 = getelementptr inbounds %struct.hypre_AuxParVector, ptr %5,\l... i32 0, i32 2\l  store ptr null, ptr %off_proc_i4, align 8\l  br label %if.end\l}"];
	Node0x55a585fb4ea0 -> Node0x55a585fb4f20[tooltip="if.then2 -> if.end\nProbability 100.00%" ];
	Node0x55a585fb4f20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.end:\l|  %6 = load ptr, ptr %vector.addr, align 8\l  %off_proc_data = getelementptr inbounds %struct.hypre_AuxParVector, ptr %6,\l... i32 0, i32 3\l  %7 = load ptr, ptr %off_proc_data, align 8\l  %tobool5 = icmp ne ptr %7, null\l  br i1 %tobool5, label %if.then6, label %if.end9\l|{<s0>T|<s1>F}}"];
	Node0x55a585fb4f20:s0 -> Node0x55a585fb5ac0[tooltip="if.end -> if.then6\nProbability 62.50%" ];
	Node0x55a585fb4f20:s1 -> Node0x55a585fb5b40[tooltip="if.end -> if.end9\nProbability 37.50%" ];
	Node0x55a585fb5ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then6:\l|  %8 = load ptr, ptr %vector.addr, align 8\l  %off_proc_data7 = getelementptr inbounds %struct.hypre_AuxParVector, ptr %8,\l... i32 0, i32 3\l  %9 = load ptr, ptr %off_proc_data7, align 8\l  call void @hypre_Free(ptr noundef %9)\l  %10 = load ptr, ptr %vector.addr, align 8\l  %off_proc_data8 = getelementptr inbounds %struct.hypre_AuxParVector, ptr\l... %10, i32 0, i32 3\l  store ptr null, ptr %off_proc_data8, align 8\l  br label %if.end9\l}"];
	Node0x55a585fb5ac0 -> Node0x55a585fb5b40[tooltip="if.then6 -> if.end9\nProbability 100.00%" ];
	Node0x55a585fb5b40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.end9:\l|  %11 = load ptr, ptr %vector.addr, align 8\l  call void @hypre_Free(ptr noundef %11)\l  store ptr null, ptr %vector.addr, align 8\l  br label %if.end10\l}"];
	Node0x55a585fb5b40 -> Node0x55a585fb4a70[tooltip="if.end9 -> if.end10\nProbability 100.00%" ];
	Node0x55a585fb4a70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end10:\l|  %12 = load i32, ptr %ierr, align 4\l  ret i32 %12\l}"];
}
