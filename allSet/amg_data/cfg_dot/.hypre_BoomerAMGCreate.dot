digraph "CFG for 'hypre_BoomerAMGCreate' function" {
	label="CFG for 'hypre_BoomerAMGCreate' function";

	Node0x55fa8099fbe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %amg_data = alloca ptr, align 8\l  %max_levels = alloca i32, align 4\l  %max_coarse_size = alloca i32, align 4\l  %min_coarse_size = alloca i32, align 4\l  %strong_threshold = alloca double, align 8\l  %max_row_sum = alloca double, align 8\l  %trunc_factor = alloca double, align 8\l  %agg_trunc_factor = alloca double, align 8\l  %agg_P12_trunc_factor = alloca double, align 8\l  %jacobi_trunc_threshold = alloca double, align 8\l  %S_commpkg_switch = alloca double, align 8\l  %CR_rate = alloca double, align 8\l  %CR_strong_th = alloca double, align 8\l  %interp_type = alloca i32, align 4\l  %sep_weight = alloca i32, align 4\l  %coarsen_type = alloca i32, align 4\l  %measure_type = alloca i32, align 4\l  %setup_type = alloca i32, align 4\l  %P_max_elmts = alloca i32, align 4\l  %num_functions = alloca i32, align 4\l  %nodal = alloca i32, align 4\l  %nodal_levels = alloca i32, align 4\l  %nodal_diag = alloca i32, align 4\l  %num_paths = alloca i32, align 4\l  %agg_num_levels = alloca i32, align 4\l  %agg_interp_type = alloca i32, align 4\l  %agg_P_max_elmts = alloca i32, align 4\l  %agg_P12_max_elmts = alloca i32, align 4\l  %post_interp_type = alloca i32, align 4\l  %seq_threshold = alloca i32, align 4\l  %redundant = alloca i32, align 4\l  %min_iter = alloca i32, align 4\l  %max_iter = alloca i32, align 4\l  %cycle_type = alloca i32, align 4\l  %tol = alloca double, align 8\l  %num_sweeps = alloca i32, align 4\l  %relax_down = alloca i32, align 4\l  %relax_up = alloca i32, align 4\l  %relax_coarse = alloca i32, align 4\l  %relax_order = alloca i32, align 4\l  %relax_wt = alloca double, align 8\l  %outer_wt = alloca double, align 8\l  %nongalerkin_tol = alloca double, align 8\l  %cheby_order = alloca i32, align 4\l  %cheby_eig_est = alloca i32, align 4\l  %cheby_variant = alloca i32, align 4\l  %cheby_scale = alloca i32, align 4\l  %cheby_eig_ratio = alloca double, align 8\l  %additive = alloca i32, align 4\l  %mult_additive = alloca i32, align 4\l  %simple = alloca i32, align 4\l  %add_last_lvl = alloca i32, align 4\l  %add_trunc_factor = alloca double, align 8\l  %add_P_max_elmts = alloca i32, align 4\l  %add_rlx_type = alloca i32, align 4\l  %add_rlx_wt = alloca double, align 8\l  %num_iterations = alloca i32, align 4\l  %cum_num_iterations = alloca i32, align 4\l  %print_level = alloca i32, align 4\l  %logging = alloca i32, align 4\l  %log_file_name = alloca [256 x i8], align 16\l  %debug_flag = alloca i32, align 4\l  %plot_file_name = alloca [251 x i8], align 16\l  call void @llvm.memset.p0.i64(ptr align 16 %plot_file_name, i8 0, i64 251,\l... i1 false)\l  store i32 25, ptr %max_levels, align 4\l  store i32 9, ptr %max_coarse_size, align 4\l  store i32 0, ptr %min_coarse_size, align 4\l  store i32 0, ptr %seq_threshold, align 4\l  store i32 0, ptr %redundant, align 4\l  store double 2.500000e-01, ptr %strong_threshold, align 8\l  store double 9.000000e-01, ptr %max_row_sum, align 8\l  store double 0.000000e+00, ptr %trunc_factor, align 8\l  store double 0.000000e+00, ptr %agg_trunc_factor, align 8\l  store double 0.000000e+00, ptr %agg_P12_trunc_factor, align 8\l  store double 1.000000e-02, ptr %jacobi_trunc_threshold, align 8\l  store double 1.000000e+00, ptr %S_commpkg_switch, align 8\l  store i32 0, ptr %interp_type, align 4\l  store i32 0, ptr %sep_weight, align 4\l  store i32 10, ptr %coarsen_type, align 4\l  store i32 6, ptr %interp_type, align 4\l  store i32 0, ptr %measure_type, align 4\l  store i32 1, ptr %setup_type, align 4\l  store i32 4, ptr %P_max_elmts, align 4\l  store i32 0, ptr %agg_P_max_elmts, align 4\l  store i32 0, ptr %agg_P12_max_elmts, align 4\l  store i32 1, ptr %num_functions, align 4\l  store i32 0, ptr %nodal, align 4\l  %0 = load i32, ptr %max_levels, align 4\l  store i32 %0, ptr %nodal_levels, align 4\l  store i32 0, ptr %nodal_diag, align 4\l  store i32 1, ptr %num_paths, align 4\l  store i32 0, ptr %agg_num_levels, align 4\l  store i32 0, ptr %post_interp_type, align 4\l  store i32 4, ptr %agg_interp_type, align 4\l  store i32 0, ptr %min_iter, align 4\l  store i32 20, ptr %max_iter, align 4\l  store i32 1, ptr %cycle_type, align 4\l  store double 0x3E7AD7F29ABCAF48, ptr %tol, align 8\l  store i32 1, ptr %num_sweeps, align 4\l  store i32 13, ptr %relax_down, align 4\l  store i32 14, ptr %relax_up, align 4\l  store i32 9, ptr %relax_coarse, align 4\l  store i32 0, ptr %relax_order, align 4\l  store double 1.000000e+00, ptr %relax_wt, align 8\l  store double 1.000000e+00, ptr %outer_wt, align 8\l  store i32 2, ptr %cheby_order, align 4\l  store i32 0, ptr %cheby_variant, align 4\l  store i32 1, ptr %cheby_scale, align 4\l  store i32 10, ptr %cheby_eig_est, align 4\l  store double 3.000000e-01, ptr %cheby_eig_ratio, align 8\l  store i32 -1, ptr %additive, align 4\l  store i32 -1, ptr %mult_additive, align 4\l  store i32 -1, ptr %simple, align 4\l  store i32 -1, ptr %add_last_lvl, align 4\l  store double 0.000000e+00, ptr %add_trunc_factor, align 8\l  store i32 0, ptr %add_P_max_elmts, align 4\l  store i32 18, ptr %add_rlx_type, align 4\l  store double 1.000000e+00, ptr %add_rlx_wt, align 8\l  store i32 0, ptr %num_iterations, align 4\l  store i32 0, ptr %cum_num_iterations, align 4\l  store i32 0, ptr %print_level, align 4\l  store i32 0, ptr %logging, align 4\l  %arraydecay = getelementptr inbounds [256 x i8], ptr %log_file_name, i64 0,\l... i64 0\l  %call = call i32 (ptr, ptr, ...) @hypre_sprintf(ptr noundef %arraydecay, ptr\l... noundef @.str, ptr noundef @.str.1)\l  store i32 0, ptr %debug_flag, align 4\l  store double 0.000000e+00, ptr %nongalerkin_tol, align 8\l  %call1 = call ptr @hypre_CAlloc(i64 noundef 1, i64 noundef 992)\l  store ptr %call1, ptr %amg_data, align 8\l  %1 = load i32, ptr %max_levels, align 4\l  %2 = load ptr, ptr %amg_data, align 8\l  %max_levels2 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %2, i32\l... 0, i32 0\l  store i32 %1, ptr %max_levels2, align 8\l  %3 = load ptr, ptr %amg_data, align 8\l  %user_coarse_relax_type = getelementptr inbounds %struct.hypre_ParAMGData,\l... ptr %3, i32 0, i32 33\l  store i32 9, ptr %user_coarse_relax_type, align 4\l  %4 = load ptr, ptr %amg_data, align 8\l  %user_relax_type = getelementptr inbounds %struct.hypre_ParAMGData, ptr %4,\l... i32 0, i32 34\l  store i32 -1, ptr %user_relax_type, align 8\l  %5 = load ptr, ptr %amg_data, align 8\l  %user_num_sweeps = getelementptr inbounds %struct.hypre_ParAMGData, ptr %5,\l... i32 0, i32 35\l  store i32 -1, ptr %user_num_sweeps, align 4\l  %6 = load double, ptr %relax_wt, align 8\l  %7 = load ptr, ptr %amg_data, align 8\l  %user_relax_weight = getelementptr inbounds %struct.hypre_ParAMGData, ptr\l... %7, i32 0, i32 36\l  store double %6, ptr %user_relax_weight, align 8\l  %8 = load double, ptr %outer_wt, align 8\l  %9 = load ptr, ptr %amg_data, align 8\l  %outer_wt3 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %9, i32 0,\l... i32 37\l  store double %8, ptr %outer_wt3, align 8\l  %10 = load ptr, ptr %amg_data, align 8\l  %11 = load i32, ptr %max_coarse_size, align 4\l  %call4 = call i32 @hypre_BoomerAMGSetMaxCoarseSize(ptr noundef %10, i32\l... noundef %11)\l  %12 = load ptr, ptr %amg_data, align 8\l  %13 = load i32, ptr %min_coarse_size, align 4\l  %call5 = call i32 @hypre_BoomerAMGSetMinCoarseSize(ptr noundef %12, i32\l... noundef %13)\l  %14 = load ptr, ptr %amg_data, align 8\l  %15 = load double, ptr %strong_threshold, align 8\l  %call6 = call i32 @hypre_BoomerAMGSetStrongThreshold(ptr noundef %14, double\l... noundef %15)\l  %16 = load ptr, ptr %amg_data, align 8\l  %17 = load double, ptr %max_row_sum, align 8\l  %call7 = call i32 @hypre_BoomerAMGSetMaxRowSum(ptr noundef %16, double\l... noundef %17)\l  %18 = load ptr, ptr %amg_data, align 8\l  %19 = load double, ptr %trunc_factor, align 8\l  %call8 = call i32 @hypre_BoomerAMGSetTruncFactor(ptr noundef %18, double\l... noundef %19)\l  %20 = load ptr, ptr %amg_data, align 8\l  %21 = load double, ptr %agg_trunc_factor, align 8\l  %call9 = call i32 @hypre_BoomerAMGSetAggTruncFactor(ptr noundef %20, double\l... noundef %21)\l  %22 = load ptr, ptr %amg_data, align 8\l  %23 = load double, ptr %agg_P12_trunc_factor, align 8\l  %call10 = call i32 @hypre_BoomerAMGSetAggP12TruncFactor(ptr noundef %22,\l... double noundef %23)\l  %24 = load ptr, ptr %amg_data, align 8\l  %25 = load double, ptr %jacobi_trunc_threshold, align 8\l  %call11 = call i32 @hypre_BoomerAMGSetJacobiTruncThreshold(ptr noundef %24,\l... double noundef %25)\l  %26 = load ptr, ptr %amg_data, align 8\l  %27 = load double, ptr %S_commpkg_switch, align 8\l  %call12 = call i32 @hypre_BoomerAMGSetSCommPkgSwitch(ptr noundef %26, double\l... noundef %27)\l  %28 = load ptr, ptr %amg_data, align 8\l  %29 = load i32, ptr %sep_weight, align 4\l  %call13 = call i32 @hypre_BoomerAMGSetSepWeight(ptr noundef %28, i32 noundef\l... %29)\l  %30 = load ptr, ptr %amg_data, align 8\l  %31 = load i32, ptr %measure_type, align 4\l  %call14 = call i32 @hypre_BoomerAMGSetMeasureType(ptr noundef %30, i32\l... noundef %31)\l  %32 = load ptr, ptr %amg_data, align 8\l  %33 = load i32, ptr %coarsen_type, align 4\l  %call15 = call i32 @hypre_BoomerAMGSetCoarsenType(ptr noundef %32, i32\l... noundef %33)\l  %34 = load ptr, ptr %amg_data, align 8\l  %35 = load i32, ptr %interp_type, align 4\l  %call16 = call i32 @hypre_BoomerAMGSetInterpType(ptr noundef %34, i32\l... noundef %35)\l  %36 = load ptr, ptr %amg_data, align 8\l  %37 = load i32, ptr %setup_type, align 4\l  %call17 = call i32 @hypre_BoomerAMGSetSetupType(ptr noundef %36, i32 noundef\l... %37)\l  %38 = load ptr, ptr %amg_data, align 8\l  %39 = load i32, ptr %P_max_elmts, align 4\l  %call18 = call i32 @hypre_BoomerAMGSetPMaxElmts(ptr noundef %38, i32 noundef\l... %39)\l  %40 = load ptr, ptr %amg_data, align 8\l  %41 = load i32, ptr %agg_P_max_elmts, align 4\l  %call19 = call i32 @hypre_BoomerAMGSetAggPMaxElmts(ptr noundef %40, i32\l... noundef %41)\l  %42 = load ptr, ptr %amg_data, align 8\l  %43 = load i32, ptr %agg_P12_max_elmts, align 4\l  %call20 = call i32 @hypre_BoomerAMGSetAggP12MaxElmts(ptr noundef %42, i32\l... noundef %43)\l  %44 = load ptr, ptr %amg_data, align 8\l  %45 = load i32, ptr %num_functions, align 4\l  %call21 = call i32 @hypre_BoomerAMGSetNumFunctions(ptr noundef %44, i32\l... noundef %45)\l  %46 = load ptr, ptr %amg_data, align 8\l  %47 = load i32, ptr %nodal, align 4\l  %call22 = call i32 @hypre_BoomerAMGSetNodal(ptr noundef %46, i32 noundef %47)\l  %48 = load ptr, ptr %amg_data, align 8\l  %49 = load i32, ptr %nodal_levels, align 4\l  %call23 = call i32 @hypre_BoomerAMGSetNodalLevels(ptr noundef %48, i32\l... noundef %49)\l  %50 = load ptr, ptr %amg_data, align 8\l  %51 = load i32, ptr %nodal_diag, align 4\l  %call24 = call i32 @hypre_BoomerAMGSetNodal(ptr noundef %50, i32 noundef %51)\l  %52 = load ptr, ptr %amg_data, align 8\l  %53 = load i32, ptr %num_paths, align 4\l  %call25 = call i32 @hypre_BoomerAMGSetNumPaths(ptr noundef %52, i32 noundef\l... %53)\l  %54 = load ptr, ptr %amg_data, align 8\l  %55 = load i32, ptr %agg_num_levels, align 4\l  %call26 = call i32 @hypre_BoomerAMGSetAggNumLevels(ptr noundef %54, i32\l... noundef %55)\l  %56 = load ptr, ptr %amg_data, align 8\l  %57 = load i32, ptr %agg_interp_type, align 4\l  %call27 = call i32 @hypre_BoomerAMGSetAggInterpType(ptr noundef %56, i32\l... noundef %57)\l  %58 = load ptr, ptr %amg_data, align 8\l  %59 = load i32, ptr %post_interp_type, align 4\l  %call28 = call i32 @hypre_BoomerAMGSetPostInterpType(ptr noundef %58, i32\l... noundef %59)\l  %60 = load ptr, ptr %amg_data, align 8\l  %61 = load i32, ptr %min_iter, align 4\l  %call29 = call i32 @hypre_BoomerAMGSetMinIter(ptr noundef %60, i32 noundef\l... %61)\l  %62 = load ptr, ptr %amg_data, align 8\l  %63 = load i32, ptr %max_iter, align 4\l  %call30 = call i32 @hypre_BoomerAMGSetMaxIter(ptr noundef %62, i32 noundef\l... %63)\l  %64 = load ptr, ptr %amg_data, align 8\l  %65 = load i32, ptr %cycle_type, align 4\l  %call31 = call i32 @hypre_BoomerAMGSetCycleType(ptr noundef %64, i32 noundef\l... %65)\l  %66 = load ptr, ptr %amg_data, align 8\l  %67 = load double, ptr %tol, align 8\l  %call32 = call i32 @hypre_BoomerAMGSetTol(ptr noundef %66, double noundef\l... %67)\l  %68 = load ptr, ptr %amg_data, align 8\l  %69 = load i32, ptr %num_sweeps, align 4\l  %call33 = call i32 @hypre_BoomerAMGSetNumSweeps(ptr noundef %68, i32 noundef\l... %69)\l  %70 = load ptr, ptr %amg_data, align 8\l  %71 = load i32, ptr %relax_down, align 4\l  %call34 = call i32 @hypre_BoomerAMGSetCycleRelaxType(ptr noundef %70, i32\l... noundef %71, i32 noundef 1)\l  %72 = load ptr, ptr %amg_data, align 8\l  %73 = load i32, ptr %relax_up, align 4\l  %call35 = call i32 @hypre_BoomerAMGSetCycleRelaxType(ptr noundef %72, i32\l... noundef %73, i32 noundef 2)\l  %74 = load ptr, ptr %amg_data, align 8\l  %75 = load i32, ptr %relax_coarse, align 4\l  %call36 = call i32 @hypre_BoomerAMGSetCycleRelaxType(ptr noundef %74, i32\l... noundef %75, i32 noundef 3)\l  %76 = load ptr, ptr %amg_data, align 8\l  %77 = load i32, ptr %relax_order, align 4\l  %call37 = call i32 @hypre_BoomerAMGSetRelaxOrder(ptr noundef %76, i32\l... noundef %77)\l  %78 = load ptr, ptr %amg_data, align 8\l  %79 = load double, ptr %relax_wt, align 8\l  %call38 = call i32 @hypre_BoomerAMGSetRelaxWt(ptr noundef %78, double\l... noundef %79)\l  %80 = load ptr, ptr %amg_data, align 8\l  %81 = load double, ptr %outer_wt, align 8\l  %call39 = call i32 @hypre_BoomerAMGSetOuterWt(ptr noundef %80, double\l... noundef %81)\l  %82 = load ptr, ptr %amg_data, align 8\l  %83 = load i32, ptr %cheby_order, align 4\l  %call40 = call i32 @hypre_BoomerAMGSetChebyOrder(ptr noundef %82, i32\l... noundef %83)\l  %84 = load ptr, ptr %amg_data, align 8\l  %85 = load double, ptr %cheby_eig_ratio, align 8\l  %call41 = call i32 @hypre_BoomerAMGSetChebyFraction(ptr noundef %84, double\l... noundef %85)\l  %86 = load ptr, ptr %amg_data, align 8\l  %87 = load i32, ptr %cheby_eig_est, align 4\l  %call42 = call i32 @hypre_BoomerAMGSetChebyEigEst(ptr noundef %86, i32\l... noundef %87)\l  %88 = load ptr, ptr %amg_data, align 8\l  %89 = load i32, ptr %cheby_variant, align 4\l  %call43 = call i32 @hypre_BoomerAMGSetChebyVariant(ptr noundef %88, i32\l... noundef %89)\l  %90 = load ptr, ptr %amg_data, align 8\l  %91 = load i32, ptr %cheby_scale, align 4\l  %call44 = call i32 @hypre_BoomerAMGSetChebyScale(ptr noundef %90, i32\l... noundef %91)\l  %92 = load ptr, ptr %amg_data, align 8\l  %93 = load i32, ptr %num_iterations, align 4\l  %call45 = call i32 @hypre_BoomerAMGSetNumIterations(ptr noundef %92, i32\l... noundef %93)\l  %94 = load ptr, ptr %amg_data, align 8\l  %95 = load i32, ptr %additive, align 4\l  %call46 = call i32 @hypre_BoomerAMGSetAdditive(ptr noundef %94, i32 noundef\l... %95)\l  %96 = load ptr, ptr %amg_data, align 8\l  %97 = load i32, ptr %mult_additive, align 4\l  %call47 = call i32 @hypre_BoomerAMGSetMultAdditive(ptr noundef %96, i32\l... noundef %97)\l  %98 = load ptr, ptr %amg_data, align 8\l  %99 = load i32, ptr %simple, align 4\l  %call48 = call i32 @hypre_BoomerAMGSetSimple(ptr noundef %98, i32 noundef\l... %99)\l  %100 = load ptr, ptr %amg_data, align 8\l  %101 = load i32, ptr %add_P_max_elmts, align 4\l  %call49 = call i32 @hypre_BoomerAMGSetMultAddPMaxElmts(ptr noundef %100, i32\l... noundef %101)\l  %102 = load ptr, ptr %amg_data, align 8\l  %103 = load double, ptr %add_trunc_factor, align 8\l  %call50 = call i32 @hypre_BoomerAMGSetMultAddTruncFactor(ptr noundef %102,\l... double noundef %103)\l  %104 = load ptr, ptr %amg_data, align 8\l  %105 = load i32, ptr %add_rlx_type, align 4\l  %call51 = call i32 @hypre_BoomerAMGSetAddRelaxType(ptr noundef %104, i32\l... noundef %105)\l  %106 = load ptr, ptr %amg_data, align 8\l  %107 = load double, ptr %add_rlx_wt, align 8\l  %call52 = call i32 @hypre_BoomerAMGSetAddRelaxWt(ptr noundef %106, double\l... noundef %107)\l  %108 = load i32, ptr %add_last_lvl, align 4\l  %109 = load ptr, ptr %amg_data, align 8\l  %add_last_lvl53 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %109,\l... i32 0, i32 103\l  store i32 %108, ptr %add_last_lvl53, align 4\l  %110 = load ptr, ptr %amg_data, align 8\l  %Lambda = getelementptr inbounds %struct.hypre_ParAMGData, ptr %110, i32 0,\l... i32 108\l  store ptr null, ptr %Lambda, align 8\l  %111 = load ptr, ptr %amg_data, align 8\l  %Xtilde = getelementptr inbounds %struct.hypre_ParAMGData, ptr %111, i32 0,\l... i32 111\l  store ptr null, ptr %Xtilde, align 8\l  %112 = load ptr, ptr %amg_data, align 8\l  %Rtilde = getelementptr inbounds %struct.hypre_ParAMGData, ptr %112, i32 0,\l... i32 110\l  store ptr null, ptr %Rtilde, align 8\l  %113 = load ptr, ptr %amg_data, align 8\l  %D_inv = getelementptr inbounds %struct.hypre_ParAMGData, ptr %113, i32 0,\l... i32 112\l  store ptr null, ptr %D_inv, align 8\l  %114 = load i32, ptr %cum_num_iterations, align 4\l  %115 = load ptr, ptr %amg_data, align 8\l  %cum_num_iterations54 = getelementptr inbounds %struct.hypre_ParAMGData, ptr\l... %115, i32 0, i32 85\l  store i32 %114, ptr %cum_num_iterations54, align 8\l  %116 = load ptr, ptr %amg_data, align 8\l  %117 = load i32, ptr %print_level, align 4\l  %call55 = call i32 @hypre_BoomerAMGSetPrintLevel(ptr noundef %116, i32\l... noundef %117)\l  %118 = load ptr, ptr %amg_data, align 8\l  %119 = load i32, ptr %logging, align 4\l  %call56 = call i32 @hypre_BoomerAMGSetLogging(ptr noundef %118, i32 noundef\l... %119)\l  %120 = load ptr, ptr %amg_data, align 8\l  %arraydecay57 = getelementptr inbounds [256 x i8], ptr %log_file_name, i64\l... 0, i64 0\l  %call58 = call i32 @hypre_BoomerAMGSetPrintFileName(ptr noundef %120, ptr\l... noundef %arraydecay57)\l  %121 = load ptr, ptr %amg_data, align 8\l  %122 = load i32, ptr %debug_flag, align 4\l  %call59 = call i32 @hypre_BoomerAMGSetDebugFlag(ptr noundef %121, i32\l... noundef %122)\l  %123 = load ptr, ptr %amg_data, align 8\l  %call60 = call i32 @hypre_BoomerAMGSetRestriction(ptr noundef %123, i32\l... noundef 0)\l  %124 = load ptr, ptr %amg_data, align 8\l  %A_array = getelementptr inbounds %struct.hypre_ParAMGData, ptr %124, i32 0,\l... i32 51\l  store ptr null, ptr %A_array, align 8\l  %125 = load ptr, ptr %amg_data, align 8\l  %P_array = getelementptr inbounds %struct.hypre_ParAMGData, ptr %125, i32 0,\l... i32 54\l  store ptr null, ptr %P_array, align 8\l  %126 = load ptr, ptr %amg_data, align 8\l  %R_array = getelementptr inbounds %struct.hypre_ParAMGData, ptr %126, i32 0,\l... i32 55\l  store ptr null, ptr %R_array, align 8\l  %127 = load ptr, ptr %amg_data, align 8\l  %CF_marker_array = getelementptr inbounds %struct.hypre_ParAMGData, ptr\l... %127, i32 0, i32 56\l  store ptr null, ptr %CF_marker_array, align 8\l  %128 = load ptr, ptr %amg_data, align 8\l  %Vtemp = getelementptr inbounds %struct.hypre_ParAMGData, ptr %128, i32 0,\l... i32 76\l  store ptr null, ptr %Vtemp, align 8\l  %129 = load ptr, ptr %amg_data, align 8\l  %Rtemp = getelementptr inbounds %struct.hypre_ParAMGData, ptr %129, i32 0,\l... i32 80\l  store ptr null, ptr %Rtemp, align 8\l  %130 = load ptr, ptr %amg_data, align 8\l  %Ptemp = getelementptr inbounds %struct.hypre_ParAMGData, ptr %130, i32 0,\l... i32 81\l  store ptr null, ptr %Ptemp, align 8\l  %131 = load ptr, ptr %amg_data, align 8\l  %Ztemp = getelementptr inbounds %struct.hypre_ParAMGData, ptr %131, i32 0,\l... i32 82\l  store ptr null, ptr %Ztemp, align 8\l  %132 = load ptr, ptr %amg_data, align 8\l  %F_array = getelementptr inbounds %struct.hypre_ParAMGData, ptr %132, i32 0,\l... i32 52\l  store ptr null, ptr %F_array, align 8\l  %133 = load ptr, ptr %amg_data, align 8\l  %U_array = getelementptr inbounds %struct.hypre_ParAMGData, ptr %133, i32 0,\l... i32 53\l  store ptr null, ptr %U_array, align 8\l  %134 = load ptr, ptr %amg_data, align 8\l  %dof_func = getelementptr inbounds %struct.hypre_ParAMGData, ptr %134, i32\l... 0, i32 48\l  store ptr null, ptr %dof_func, align 8\l  %135 = load ptr, ptr %amg_data, align 8\l  %dof_func_array = getelementptr inbounds %struct.hypre_ParAMGData, ptr %135,\l... i32 0, i32 57\l  store ptr null, ptr %dof_func_array, align 8\l  %136 = load ptr, ptr %amg_data, align 8\l  %dof_point_array = getelementptr inbounds %struct.hypre_ParAMGData, ptr\l... %136, i32 0, i32 58\l  store ptr null, ptr %dof_point_array, align 8\l  %137 = load ptr, ptr %amg_data, align 8\l  %dof_point_array61 = getelementptr inbounds %struct.hypre_ParAMGData, ptr\l... %137, i32 0, i32 58\l  store ptr null, ptr %dof_point_array61, align 8\l  %138 = load ptr, ptr %amg_data, align 8\l  %point_dof_map_array = getelementptr inbounds %struct.hypre_ParAMGData, ptr\l... %138, i32 0, i32 59\l  store ptr null, ptr %point_dof_map_array, align 8\l  %139 = load ptr, ptr %amg_data, align 8\l  %l1_norms = getelementptr inbounds %struct.hypre_ParAMGData, ptr %139, i32\l... 0, i32 61\l  store ptr null, ptr %l1_norms, align 8\l  %140 = load ptr, ptr %amg_data, align 8\l  %max_eig_est = getelementptr inbounds %struct.hypre_ParAMGData, ptr %140,\l... i32 0, i32 63\l  store ptr null, ptr %max_eig_est, align 8\l  %141 = load ptr, ptr %amg_data, align 8\l  %min_eig_est = getelementptr inbounds %struct.hypre_ParAMGData, ptr %141,\l... i32 0, i32 64\l  store ptr null, ptr %min_eig_est, align 8\l  %142 = load ptr, ptr %amg_data, align 8\l  %cheby_ds = getelementptr inbounds %struct.hypre_ParAMGData, ptr %142, i32\l... 0, i32 70\l  store ptr null, ptr %cheby_ds, align 8\l  %143 = load ptr, ptr %amg_data, align 8\l  %cheby_coefs = getelementptr inbounds %struct.hypre_ParAMGData, ptr %143,\l... i32 0, i32 71\l  store ptr null, ptr %cheby_coefs, align 8\l  %144 = load i32, ptr %seq_threshold, align 4\l  %145 = load ptr, ptr %amg_data, align 8\l  %seq_threshold62 = getelementptr inbounds %struct.hypre_ParAMGData, ptr\l... %145, i32 0, i32 23\l  store i32 %144, ptr %seq_threshold62, align 4\l  %146 = load i32, ptr %redundant, align 4\l  %147 = load ptr, ptr %amg_data, align 8\l  %redundant63 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %147,\l... i32 0, i32 24\l  store i32 %146, ptr %redundant63, align 8\l  %148 = load ptr, ptr %amg_data, align 8\l  %coarse_solver = getelementptr inbounds %struct.hypre_ParAMGData, ptr %148,\l... i32 0, i32 92\l  store ptr null, ptr %coarse_solver, align 8\l  %149 = load ptr, ptr %amg_data, align 8\l  %A_coarse = getelementptr inbounds %struct.hypre_ParAMGData, ptr %149, i32\l... 0, i32 93\l  store ptr null, ptr %A_coarse, align 8\l  %150 = load ptr, ptr %amg_data, align 8\l  %f_coarse = getelementptr inbounds %struct.hypre_ParAMGData, ptr %150, i32\l... 0, i32 94\l  store ptr null, ptr %f_coarse, align 8\l  %151 = load ptr, ptr %amg_data, align 8\l  %u_coarse = getelementptr inbounds %struct.hypre_ParAMGData, ptr %151, i32\l... 0, i32 95\l  store ptr null, ptr %u_coarse, align 8\l  %152 = load ptr, ptr %amg_data, align 8\l  %new_comm = getelementptr inbounds %struct.hypre_ParAMGData, ptr %152, i32\l... 0, i32 96\l  store ptr @ompi_mpi_comm_null, ptr %new_comm, align 8\l  %153 = load ptr, ptr %amg_data, align 8\l  %A_mat = getelementptr inbounds %struct.hypre_ParAMGData, ptr %153, i32 0,\l... i32 97\l  store ptr null, ptr %A_mat, align 8\l  %154 = load ptr, ptr %amg_data, align 8\l  %b_vec = getelementptr inbounds %struct.hypre_ParAMGData, ptr %154, i32 0,\l... i32 98\l  store ptr null, ptr %b_vec, align 8\l  %155 = load ptr, ptr %amg_data, align 8\l  %comm_info = getelementptr inbounds %struct.hypre_ParAMGData, ptr %155, i32\l... 0, i32 99\l  store ptr null, ptr %comm_info, align 8\l  %156 = load double, ptr %nongalerkin_tol, align 8\l  %157 = load ptr, ptr %amg_data, align 8\l  %nongalerkin_tol64 = getelementptr inbounds %struct.hypre_ParAMGData, ptr\l... %157, i32 0, i32 74\l  store double %156, ptr %nongalerkin_tol64, align 8\l  %158 = load ptr, ptr %amg_data, align 8\l  %nongal_tol_array = getelementptr inbounds %struct.hypre_ParAMGData, ptr\l... %158, i32 0, i32 75\l  store ptr null, ptr %nongal_tol_array, align 8\l  %159 = load ptr, ptr %amg_data, align 8\l  %rap2 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %159, i32 0,\l... i32 113\l  store i32 0, ptr %rap2, align 8\l  %160 = load ptr, ptr %amg_data, align 8\l  %keepTranspose = getelementptr inbounds %struct.hypre_ParAMGData, ptr %160,\l... i32 0, i32 114\l  store i32 0, ptr %keepTranspose, align 4\l  %161 = load ptr, ptr %amg_data, align 8\l  ret ptr %161\l}"];
}
