digraph "CFG for 'hypre_AMSFEISetup' function" {
	label="CFG for 'hypre_AMSFEISetup' function";

	Node0x56058d89d6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %solver.addr = alloca ptr, align 8\l  %A.addr = alloca ptr, align 8\l  %b.addr = alloca ptr, align 8\l  %x.addr = alloca ptr, align 8\l  %num_vert.addr = alloca i32, align 4\l  %num_local_vert.addr = alloca i32, align 4\l  %vert_number.addr = alloca ptr, align 8\l  %vert_coord.addr = alloca ptr, align 8\l  %num_edges.addr = alloca i32, align 4\l  %edge_vertex.addr = alloca ptr, align 8\l  %ams_data = alloca ptr, align 8\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %G = alloca ptr, align 8\l  %x_coord = alloca ptr, align 8\l  %y_coord = alloca ptr, align 8\l  %z_coord = alloca ptr, align 8\l  %x_data = alloca ptr, align 8\l  %y_data = alloca ptr, align 8\l  %z_data = alloca ptr, align 8\l  %comm = alloca ptr, align 8\l  %vert_part = alloca ptr, align 8\l  %num_global_vert = alloca i32, align 4\l  %vert_start = alloca i32, align 4\l  %vert_end = alloca i32, align 4\l  %I = alloca ptr, align 8\l  %data58 = alloca ptr, align 8\l  %local = alloca ptr, align 8\l  store ptr %solver, ptr %solver.addr, align 8\l  store ptr %A, ptr %A.addr, align 8\l  store ptr %b, ptr %b.addr, align 8\l  store ptr %x, ptr %x.addr, align 8\l  store i32 %num_vert, ptr %num_vert.addr, align 4\l  store i32 %num_local_vert, ptr %num_local_vert.addr, align 4\l  store ptr %vert_number, ptr %vert_number.addr, align 8\l  store ptr %vert_coord, ptr %vert_coord.addr, align 8\l  store i32 %num_edges, ptr %num_edges.addr, align 4\l  store ptr %edge_vertex, ptr %edge_vertex.addr, align 8\l  %0 = load ptr, ptr %solver.addr, align 8\l  store ptr %0, ptr %ams_data, align 8\l  %1 = load ptr, ptr %A.addr, align 8\l  %comm1 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %1,\l... i32 0, i32 0\l  %2 = load ptr, ptr %comm1, align 8\l  store ptr %2, ptr %comm, align 8\l  %call = call ptr @hypre_MAlloc(i64 noundef 8)\l  store ptr %call, ptr %vert_part, align 8\l  %3 = load ptr, ptr %vert_part, align 8\l  %arrayidx = getelementptr inbounds i32, ptr %3, i64 1\l  %4 = load ptr, ptr %comm, align 8\l  %call2 = call i32 @hypre_MPI_Scan(ptr noundef %num_local_vert.addr, ptr\l... noundef %arrayidx, i32 noundef 1, ptr noundef @ompi_mpi_int, ptr noundef\l... @ompi_mpi_op_sum, ptr noundef %4)\l  %5 = load ptr, ptr %vert_part, align 8\l  %arrayidx3 = getelementptr inbounds i32, ptr %5, i64 1\l  %6 = load i32, ptr %arrayidx3, align 4\l  %7 = load i32, ptr %num_local_vert.addr, align 4\l  %sub = sub nsw i32 %6, %7\l  %8 = load ptr, ptr %vert_part, align 8\l  %arrayidx4 = getelementptr inbounds i32, ptr %8, i64 0\l  store i32 %sub, ptr %arrayidx4, align 4\l  %9 = load ptr, ptr %comm, align 8\l  %call5 = call i32 @hypre_MPI_Allreduce(ptr noundef %num_local_vert.addr, ptr\l... noundef %num_global_vert, i32 noundef 1, ptr noundef @ompi_mpi_int, ptr\l... noundef @ompi_mpi_op_sum, ptr noundef %9)\l  %10 = load ptr, ptr %comm, align 8\l  %11 = load i32, ptr %num_global_vert, align 4\l  %12 = load ptr, ptr %vert_part, align 8\l  %call6 = call ptr @hypre_ParVectorCreate(ptr noundef %10, i32 noundef %11,\l... ptr noundef %12)\l  store ptr %call6, ptr %x_coord, align 8\l  %13 = load ptr, ptr %x_coord, align 8\l  %call7 = call i32 @hypre_ParVectorInitialize(ptr noundef %13)\l  %14 = load ptr, ptr %x_coord, align 8\l  %owns_data = getelementptr inbounds %struct.hypre_ParVector_struct, ptr %14,\l... i32 0, i32 7\l  store i32 1, ptr %owns_data, align 8\l  %15 = load ptr, ptr %x_coord, align 8\l  %owns_partitioning = getelementptr inbounds %struct.hypre_ParVector_struct,\l... ptr %15, i32 0, i32 8\l  store i32 0, ptr %owns_partitioning, align 4\l  %16 = load ptr, ptr %x_coord, align 8\l  %local_vector = getelementptr inbounds %struct.hypre_ParVector_struct, ptr\l... %16, i32 0, i32 6\l  %17 = load ptr, ptr %local_vector, align 8\l  %data = getelementptr inbounds %struct.hypre_Vector, ptr %17, i32 0, i32 0\l  %18 = load ptr, ptr %data, align 8\l  store ptr %18, ptr %x_data, align 8\l  %19 = load ptr, ptr %comm, align 8\l  %20 = load i32, ptr %num_global_vert, align 4\l  %21 = load ptr, ptr %vert_part, align 8\l  %call8 = call ptr @hypre_ParVectorCreate(ptr noundef %19, i32 noundef %20,\l... ptr noundef %21)\l  store ptr %call8, ptr %y_coord, align 8\l  %22 = load ptr, ptr %y_coord, align 8\l  %call9 = call i32 @hypre_ParVectorInitialize(ptr noundef %22)\l  %23 = load ptr, ptr %y_coord, align 8\l  %owns_data10 = getelementptr inbounds %struct.hypre_ParVector_struct, ptr\l... %23, i32 0, i32 7\l  store i32 1, ptr %owns_data10, align 8\l  %24 = load ptr, ptr %y_coord, align 8\l  %owns_partitioning11 = getelementptr inbounds\l... %struct.hypre_ParVector_struct, ptr %24, i32 0, i32 8\l  store i32 0, ptr %owns_partitioning11, align 4\l  %25 = load ptr, ptr %y_coord, align 8\l  %local_vector12 = getelementptr inbounds %struct.hypre_ParVector_struct, ptr\l... %25, i32 0, i32 6\l  %26 = load ptr, ptr %local_vector12, align 8\l  %data13 = getelementptr inbounds %struct.hypre_Vector, ptr %26, i32 0, i32 0\l  %27 = load ptr, ptr %data13, align 8\l  store ptr %27, ptr %y_data, align 8\l  %28 = load ptr, ptr %comm, align 8\l  %29 = load i32, ptr %num_global_vert, align 4\l  %30 = load ptr, ptr %vert_part, align 8\l  %call14 = call ptr @hypre_ParVectorCreate(ptr noundef %28, i32 noundef %29,\l... ptr noundef %30)\l  store ptr %call14, ptr %z_coord, align 8\l  %31 = load ptr, ptr %z_coord, align 8\l  %call15 = call i32 @hypre_ParVectorInitialize(ptr noundef %31)\l  %32 = load ptr, ptr %z_coord, align 8\l  %owns_data16 = getelementptr inbounds %struct.hypre_ParVector_struct, ptr\l... %32, i32 0, i32 7\l  store i32 1, ptr %owns_data16, align 8\l  %33 = load ptr, ptr %z_coord, align 8\l  %owns_partitioning17 = getelementptr inbounds\l... %struct.hypre_ParVector_struct, ptr %33, i32 0, i32 8\l  store i32 0, ptr %owns_partitioning17, align 4\l  %34 = load ptr, ptr %z_coord, align 8\l  %local_vector18 = getelementptr inbounds %struct.hypre_ParVector_struct, ptr\l... %34, i32 0, i32 6\l  %35 = load ptr, ptr %local_vector18, align 8\l  %data19 = getelementptr inbounds %struct.hypre_Vector, ptr %35, i32 0, i32 0\l  %36 = load ptr, ptr %data19, align 8\l  store ptr %36, ptr %z_data, align 8\l  %37 = load ptr, ptr %x_coord, align 8\l  %first_index = getelementptr inbounds %struct.hypre_ParVector_struct, ptr\l... %37, i32 0, i32 2\l  %38 = load i32, ptr %first_index, align 4\l  store i32 %38, ptr %vert_start, align 4\l  %39 = load ptr, ptr %x_coord, align 8\l  %last_index = getelementptr inbounds %struct.hypre_ParVector_struct, ptr\l... %39, i32 0, i32 3\l  %40 = load i32, ptr %last_index, align 8\l  store i32 %40, ptr %vert_end, align 4\l  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x56058d89d6c0 -> Node0x56058d8a8110[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x56058d8a8110 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %41 = load i32, ptr %i, align 4\l  %42 = load i32, ptr %num_vert.addr, align 4\l  %cmp = icmp slt i32 %41, %42\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x56058d8a8110:s0 -> Node0x56058d8a8320[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x56058d8a8110:s1 -> Node0x56058d8a8370[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x56058d8a8320 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %43 = load ptr, ptr %vert_number.addr, align 8\l  %44 = load i32, ptr %i, align 4\l  %idxprom = sext i32 %44 to i64\l  %arrayidx20 = getelementptr inbounds i32, ptr %43, i64 %idxprom\l  %45 = load i32, ptr %arrayidx20, align 4\l  %46 = load i32, ptr %vert_start, align 4\l  %cmp21 = icmp sge i32 %45, %46\l  br i1 %cmp21, label %land.lhs.true, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x56058d8a8320:s0 -> Node0x56058d8a88d0[tooltip="for.body -> land.lhs.true\nProbability 50.00%" ];
	Node0x56058d8a8320:s1 -> Node0x56058d8a8920[tooltip="for.body -> if.end\nProbability 50.00%" ];
	Node0x56058d8a88d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{land.lhs.true:\l|  %47 = load ptr, ptr %vert_number.addr, align 8\l  %48 = load i32, ptr %i, align 4\l  %idxprom22 = sext i32 %48 to i64\l  %arrayidx23 = getelementptr inbounds i32, ptr %47, i64 %idxprom22\l  %49 = load i32, ptr %arrayidx23, align 4\l  %50 = load i32, ptr %vert_end, align 4\l  %cmp24 = icmp sle i32 %49, %50\l  br i1 %cmp24, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x56058d8a88d0:s0 -> Node0x56058d8a9670[tooltip="land.lhs.true -> if.then\nProbability 50.00%" ];
	Node0x56058d8a88d0:s1 -> Node0x56058d8a8920[tooltip="land.lhs.true -> if.end\nProbability 50.00%" ];
	Node0x56058d8a9670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.then:\l|  %51 = load ptr, ptr %vert_number.addr, align 8\l  %52 = load i32, ptr %i, align 4\l  %idxprom25 = sext i32 %52 to i64\l  %arrayidx26 = getelementptr inbounds i32, ptr %51, i64 %idxprom25\l  %53 = load i32, ptr %arrayidx26, align 4\l  %54 = load i32, ptr %vert_start, align 4\l  %sub27 = sub nsw i32 %53, %54\l  store i32 %sub27, ptr %j, align 4\l  %55 = load ptr, ptr %vert_coord.addr, align 8\l  %56 = load i32, ptr %i, align 4\l  %mul = mul nsw i32 3, %56\l  %idxprom28 = sext i32 %mul to i64\l  %arrayidx29 = getelementptr inbounds double, ptr %55, i64 %idxprom28\l  %57 = load double, ptr %arrayidx29, align 8\l  %58 = load ptr, ptr %x_data, align 8\l  %59 = load i32, ptr %j, align 4\l  %idxprom30 = sext i32 %59 to i64\l  %arrayidx31 = getelementptr inbounds double, ptr %58, i64 %idxprom30\l  store double %57, ptr %arrayidx31, align 8\l  %60 = load ptr, ptr %vert_coord.addr, align 8\l  %61 = load i32, ptr %i, align 4\l  %mul32 = mul nsw i32 3, %61\l  %add = add nsw i32 %mul32, 1\l  %idxprom33 = sext i32 %add to i64\l  %arrayidx34 = getelementptr inbounds double, ptr %60, i64 %idxprom33\l  %62 = load double, ptr %arrayidx34, align 8\l  %63 = load ptr, ptr %y_data, align 8\l  %64 = load i32, ptr %j, align 4\l  %idxprom35 = sext i32 %64 to i64\l  %arrayidx36 = getelementptr inbounds double, ptr %63, i64 %idxprom35\l  store double %62, ptr %arrayidx36, align 8\l  %65 = load ptr, ptr %vert_coord.addr, align 8\l  %66 = load i32, ptr %i, align 4\l  %mul37 = mul nsw i32 3, %66\l  %add38 = add nsw i32 %mul37, 2\l  %idxprom39 = sext i32 %add38 to i64\l  %arrayidx40 = getelementptr inbounds double, ptr %65, i64 %idxprom39\l  %67 = load double, ptr %arrayidx40, align 8\l  %68 = load ptr, ptr %z_data, align 8\l  %69 = load i32, ptr %j, align 4\l  %idxprom41 = sext i32 %69 to i64\l  %arrayidx42 = getelementptr inbounds double, ptr %68, i64 %idxprom41\l  store double %67, ptr %arrayidx42, align 8\l  br label %if.end\l}"];
	Node0x56058d8a9670 -> Node0x56058d8a8920[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x56058d8a8920 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end:\l|  br label %for.inc\l}"];
	Node0x56058d8a8920 -> Node0x56058d8a5b80[tooltip="if.end -> for.inc\nProbability 100.00%" ];
	Node0x56058d8a5b80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %70 = load i32, ptr %i, align 4\l  %inc = add nsw i32 %70, 1\l  store i32 %inc, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x56058d8a5b80 -> Node0x56058d8a8110[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x56058d8a8370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  store i32 0, ptr %i, align 4\l  br label %for.cond43\l}"];
	Node0x56058d8a8370 -> Node0x56058d8abd50[tooltip="for.end -> for.cond43\nProbability 100.00%" ];
	Node0x56058d8abd50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond43:\l|  %71 = load i32, ptr %i, align 4\l  %72 = load i32, ptr %num_edges.addr, align 4\l  %mul44 = mul nsw i32 2, %72\l  %cmp45 = icmp slt i32 %71, %mul44\l  br i1 %cmp45, label %for.body46, label %for.end55\l|{<s0>T|<s1>F}}"];
	Node0x56058d8abd50:s0 -> Node0x56058d8ac0a0[tooltip="for.cond43 -> for.body46\nProbability 96.88%" ];
	Node0x56058d8abd50:s1 -> Node0x56058d8ac120[tooltip="for.cond43 -> for.end55\nProbability 3.12%" ];
	Node0x56058d8ac0a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body46:\l|  %73 = load ptr, ptr %vert_number.addr, align 8\l  %74 = load ptr, ptr %edge_vertex.addr, align 8\l  %75 = load i32, ptr %i, align 4\l  %idxprom47 = sext i32 %75 to i64\l  %arrayidx48 = getelementptr inbounds i32, ptr %74, i64 %idxprom47\l  %76 = load i32, ptr %arrayidx48, align 4\l  %idxprom49 = sext i32 %76 to i64\l  %arrayidx50 = getelementptr inbounds i32, ptr %73, i64 %idxprom49\l  %77 = load i32, ptr %arrayidx50, align 4\l  %78 = load ptr, ptr %edge_vertex.addr, align 8\l  %79 = load i32, ptr %i, align 4\l  %idxprom51 = sext i32 %79 to i64\l  %arrayidx52 = getelementptr inbounds i32, ptr %78, i64 %idxprom51\l  store i32 %77, ptr %arrayidx52, align 4\l  br label %for.inc53\l}"];
	Node0x56058d8ac0a0 -> Node0x56058d8acac0[tooltip="for.body46 -> for.inc53\nProbability 100.00%" ];
	Node0x56058d8acac0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc53:\l|  %80 = load i32, ptr %i, align 4\l  %inc54 = add nsw i32 %80, 1\l  store i32 %inc54, ptr %i, align 4\l  br label %for.cond43, !llvm.loop !8\l}"];
	Node0x56058d8acac0 -> Node0x56058d8abd50[tooltip="for.inc53 -> for.cond43\nProbability 100.00%" ];
	Node0x56058d8ac120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end55:\l|  %81 = load i32, ptr %num_edges.addr, align 4\l  %add56 = add nsw i32 %81, 1\l  %conv = sext i32 %add56 to i64\l  %call57 = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4)\l  store ptr %call57, ptr %I, align 8\l  %82 = load i32, ptr %num_edges.addr, align 4\l  %mul59 = mul nsw i32 2, %82\l  %conv60 = sext i32 %mul59 to i64\l  %call61 = call ptr @hypre_CAlloc(i64 noundef %conv60, i64 noundef 8)\l  store ptr %call61, ptr %data58, align 8\l  %83 = load i32, ptr %num_edges.addr, align 4\l  %84 = load i32, ptr %num_global_vert, align 4\l  %85 = load i32, ptr %num_edges.addr, align 4\l  %mul62 = mul nsw i32 2, %85\l  %call63 = call ptr @hypre_CSRMatrixCreate(i32 noundef %83, i32 noundef %84,\l... i32 noundef %mul62)\l  store ptr %call63, ptr %local, align 8\l  store i32 0, ptr %i, align 4\l  br label %for.cond64\l}"];
	Node0x56058d8ac120 -> Node0x56058d8adba0[tooltip="for.end55 -> for.cond64\nProbability 100.00%" ];
	Node0x56058d8adba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond64:\l|  %86 = load i32, ptr %i, align 4\l  %87 = load i32, ptr %num_edges.addr, align 4\l  %cmp65 = icmp sle i32 %86, %87\l  br i1 %cmp65, label %for.body67, label %for.end73\l|{<s0>T|<s1>F}}"];
	Node0x56058d8adba0:s0 -> Node0x56058d8addf0[tooltip="for.cond64 -> for.body67\nProbability 96.88%" ];
	Node0x56058d8adba0:s1 -> Node0x56058d8ade40[tooltip="for.cond64 -> for.end73\nProbability 3.12%" ];
	Node0x56058d8addf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body67:\l|  %88 = load i32, ptr %i, align 4\l  %mul68 = mul nsw i32 2, %88\l  %89 = load ptr, ptr %I, align 8\l  %90 = load i32, ptr %i, align 4\l  %idxprom69 = sext i32 %90 to i64\l  %arrayidx70 = getelementptr inbounds i32, ptr %89, i64 %idxprom69\l  store i32 %mul68, ptr %arrayidx70, align 4\l  br label %for.inc71\l}"];
	Node0x56058d8addf0 -> Node0x56058d8ae3b0[tooltip="for.body67 -> for.inc71\nProbability 100.00%" ];
	Node0x56058d8ae3b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc71:\l|  %91 = load i32, ptr %i, align 4\l  %inc72 = add nsw i32 %91, 1\l  store i32 %inc72, ptr %i, align 4\l  br label %for.cond64, !llvm.loop !9\l}"];
	Node0x56058d8ae3b0 -> Node0x56058d8adba0[tooltip="for.inc71 -> for.cond64\nProbability 100.00%" ];
	Node0x56058d8ade40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end73:\l|  store i32 0, ptr %i, align 4\l  br label %for.cond74\l}"];
	Node0x56058d8ade40 -> Node0x56058d8ae8d0[tooltip="for.end73 -> for.cond74\nProbability 100.00%" ];
	Node0x56058d8ae8d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond74:\l|  %92 = load i32, ptr %i, align 4\l  %93 = load i32, ptr %num_edges.addr, align 4\l  %mul75 = mul nsw i32 2, %93\l  %cmp76 = icmp slt i32 %92, %mul75\l  br i1 %cmp76, label %for.body78, label %for.end86\l|{<s0>T|<s1>F}}"];
	Node0x56058d8ae8d0:s0 -> Node0x56058d8aec20[tooltip="for.cond74 -> for.body78\nProbability 96.88%" ];
	Node0x56058d8ae8d0:s1 -> Node0x56058d8aeca0[tooltip="for.cond74 -> for.end86\nProbability 3.12%" ];
	Node0x56058d8aec20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body78:\l|  %94 = load ptr, ptr %data58, align 8\l  %95 = load i32, ptr %i, align 4\l  %idxprom79 = sext i32 %95 to i64\l  %arrayidx80 = getelementptr inbounds double, ptr %94, i64 %idxprom79\l  store double 1.000000e+00, ptr %arrayidx80, align 8\l  %96 = load ptr, ptr %data58, align 8\l  %97 = load i32, ptr %i, align 4\l  %add81 = add nsw i32 %97, 1\l  %idxprom82 = sext i32 %add81 to i64\l  %arrayidx83 = getelementptr inbounds double, ptr %96, i64 %idxprom82\l  store double -1.000000e+00, ptr %arrayidx83, align 8\l  br label %for.inc84\l}"];
	Node0x56058d8aec20 -> Node0x56058d8a9110[tooltip="for.body78 -> for.inc84\nProbability 100.00%" ];
	Node0x56058d8a9110 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc84:\l|  %98 = load i32, ptr %i, align 4\l  %add85 = add nsw i32 %98, 2\l  store i32 %add85, ptr %i, align 4\l  br label %for.cond74, !llvm.loop !10\l}"];
	Node0x56058d8a9110 -> Node0x56058d8ae8d0[tooltip="for.inc84 -> for.cond74\nProbability 100.00%" ];
	Node0x56058d8aeca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end86:\l|  %99 = load ptr, ptr %I, align 8\l  %100 = load ptr, ptr %local, align 8\l  %i87 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %100, i32 0, i32 0\l  store ptr %99, ptr %i87, align 8\l  %101 = load ptr, ptr %edge_vertex.addr, align 8\l  %102 = load ptr, ptr %local, align 8\l  %j88 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %102, i32 0, i32 1\l  store ptr %101, ptr %j88, align 8\l  %103 = load ptr, ptr %data58, align 8\l  %104 = load ptr, ptr %local, align 8\l  %data89 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %104, i32 0,\l... i32 6\l  store ptr %103, ptr %data89, align 8\l  %105 = load ptr, ptr %local, align 8\l  %rownnz = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %105, i32 0,\l... i32 7\l  store ptr null, ptr %rownnz, align 8\l  %106 = load ptr, ptr %local, align 8\l  %owns_data90 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %106, i32\l... 0, i32 5\l  store i32 1, ptr %owns_data90, align 4\l  %107 = load i32, ptr %num_edges.addr, align 4\l  %108 = load ptr, ptr %local, align 8\l  %num_rownnz = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %108, i32\l... 0, i32 8\l  store i32 %107, ptr %num_rownnz, align 8\l  %109 = load ptr, ptr %comm, align 8\l  %110 = load ptr, ptr %A.addr, align 8\l  %global_num_rows = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct,\l... ptr %110, i32 0, i32 1\l  %111 = load i32, ptr %global_num_rows, align 8\l  %112 = load i32, ptr %num_global_vert, align 4\l  %113 = load ptr, ptr %A.addr, align 8\l  %row_starts = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr\l... %113, i32 0, i32 12\l  %114 = load ptr, ptr %row_starts, align 8\l  %115 = load ptr, ptr %vert_part, align 8\l  %call91 = call ptr @hypre_ParCSRMatrixCreate(ptr noundef %109, i32 noundef\l... %111, i32 noundef %112, ptr noundef %114, ptr noundef %115, i32 noundef 0,\l... i32 noundef 0, i32 noundef 0)\l  store ptr %call91, ptr %G, align 8\l  %116 = load ptr, ptr %G, align 8\l  %owns_row_starts = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct,\l... ptr %116, i32 0, i32 17\l  store i32 0, ptr %owns_row_starts, align 4\l  %117 = load ptr, ptr %G, align 8\l  %owns_col_starts = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct,\l... ptr %117, i32 0, i32 18\l  store i32 1, ptr %owns_col_starts, align 8\l  %118 = load ptr, ptr %local, align 8\l  %119 = load ptr, ptr %G, align 8\l  %120 = load i32, ptr %vert_start, align 4\l  %121 = load i32, ptr %vert_end, align 4\l  %call92 = call i32 @GenerateDiagAndOffd(ptr noundef %118, ptr noundef %119,\l... i32 noundef %120, i32 noundef %121)\l  %122 = load ptr, ptr %local, align 8\l  %j93 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %122, i32 0, i32 1\l  store ptr null, ptr %j93, align 8\l  %123 = load ptr, ptr %local, align 8\l  %call94 = call i32 @hypre_CSRMatrixDestroy(ptr noundef %123)\l  %124 = load ptr, ptr %G, align 8\l  %125 = load ptr, ptr %ams_data, align 8\l  %G95 = getelementptr inbounds %struct.hypre_AMSData, ptr %125, i32 0, i32 2\l  store ptr %124, ptr %G95, align 8\l  %126 = load ptr, ptr %x_coord, align 8\l  %127 = load ptr, ptr %ams_data, align 8\l  %x96 = getelementptr inbounds %struct.hypre_AMSData, ptr %127, i32 0, i32 21\l  store ptr %126, ptr %x96, align 8\l  %128 = load ptr, ptr %y_coord, align 8\l  %129 = load ptr, ptr %ams_data, align 8\l  %y = getelementptr inbounds %struct.hypre_AMSData, ptr %129, i32 0, i32 22\l  store ptr %128, ptr %y, align 8\l  %130 = load ptr, ptr %z_coord, align 8\l  %131 = load ptr, ptr %ams_data, align 8\l  %z = getelementptr inbounds %struct.hypre_AMSData, ptr %131, i32 0, i32 23\l  store ptr %130, ptr %z, align 8\l  %132 = load i32, ptr @hypre__global_error, align 4\l  ret i32 %132\l}"];
}
