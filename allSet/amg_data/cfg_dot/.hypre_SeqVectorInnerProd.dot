digraph "CFG for 'hypre_SeqVectorInnerProd' function" {
	label="CFG for 'hypre_SeqVectorInnerProd' function";

	Node0x559a8418deb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %x.addr = alloca ptr, align 8\l  %y.addr = alloca ptr, align 8\l  %x_data = alloca ptr, align 8\l  %y_data = alloca ptr, align 8\l  %size = alloca i32, align 4\l  %i = alloca i32, align 4\l  %result = alloca double, align 8\l  store ptr %x, ptr %x.addr, align 8\l  store ptr %y, ptr %y.addr, align 8\l  %0 = load ptr, ptr %x.addr, align 8\l  %data = getelementptr inbounds %struct.hypre_Vector, ptr %0, i32 0, i32 0\l  %1 = load ptr, ptr %data, align 8\l  store ptr %1, ptr %x_data, align 8\l  %2 = load ptr, ptr %y.addr, align 8\l  %data1 = getelementptr inbounds %struct.hypre_Vector, ptr %2, i32 0, i32 0\l  %3 = load ptr, ptr %data1, align 8\l  store ptr %3, ptr %y_data, align 8\l  %4 = load ptr, ptr %x.addr, align 8\l  %size2 = getelementptr inbounds %struct.hypre_Vector, ptr %4, i32 0, i32 1\l  %5 = load i32, ptr %size2, align 8\l  store i32 %5, ptr %size, align 4\l  store double 0.000000e+00, ptr %result, align 8\l  %6 = load ptr, ptr %x.addr, align 8\l  %num_vectors = getelementptr inbounds %struct.hypre_Vector, ptr %6, i32 0,\l... i32 3\l  %7 = load i32, ptr %num_vectors, align 8\l  %8 = load i32, ptr %size, align 4\l  %mul = mul nsw i32 %8, %7\l  store i32 %mul, ptr %size, align 4\l  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x559a8418deb0 -> Node0x559a8418f2d0[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x559a8418f2d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %9 = load i32, ptr %i, align 4\l  %10 = load i32, ptr %size, align 4\l  %cmp = icmp slt i32 %9, %10\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x559a8418f2d0:s0 -> Node0x559a8418f540[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x559a8418f2d0:s1 -> Node0x559a8418f5c0[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x559a8418f540 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %11 = load ptr, ptr %y_data, align 8\l  %12 = load i32, ptr %i, align 4\l  %idxprom = sext i32 %12 to i64\l  %arrayidx = getelementptr inbounds double, ptr %11, i64 %idxprom\l  %13 = load double, ptr %arrayidx, align 8\l  %14 = load ptr, ptr %x_data, align 8\l  %15 = load i32, ptr %i, align 4\l  %idxprom3 = sext i32 %15 to i64\l  %arrayidx4 = getelementptr inbounds double, ptr %14, i64 %idxprom3\l  %16 = load double, ptr %arrayidx4, align 8\l  %17 = load double, ptr %result, align 8\l  %18 = call double @llvm.fmuladd.f64(double %13, double %16, double %17)\l  store double %18, ptr %result, align 8\l  br label %for.inc\l}"];
	Node0x559a8418f540 -> Node0x559a8418fec0[tooltip="for.body -> for.inc\nProbability 100.00%" ];
	Node0x559a8418fec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %19 = load i32, ptr %i, align 4\l  %inc = add nsw i32 %19, 1\l  store i32 %inc, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x559a8418fec0 -> Node0x559a8418f2d0[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x559a8418f5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  %20 = load double, ptr %result, align 8\l  ret double %20\l}"];
}
