digraph "CFG for '_ZL22CalcSoundSpeedForElemsR6DomainPddS1_S1_S1_S1_diPi' function" {
	label="CFG for '_ZL22CalcSoundSpeedForElemsR6DomainPddS1_S1_S1_S1_diPi' function";

	Node0x561418cd73c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %domain.addr = alloca ptr, align 8\l  %vnewc.addr = alloca ptr, align 8\l  %rho0.addr = alloca double, align 8\l  %enewc.addr = alloca ptr, align 8\l  %pnewc.addr = alloca ptr, align 8\l  %pbvc.addr = alloca ptr, align 8\l  %bvc.addr = alloca ptr, align 8\l  %ss4o3.addr = alloca double, align 8\l  %len.addr = alloca i32, align 4\l  %regElemList.addr = alloca ptr, align 8\l  %i = alloca i32, align 4\l  %ielem = alloca i32, align 4\l  %ssTmp = alloca double, align 8\l  store ptr %domain, ptr %domain.addr, align 8\l  store ptr %vnewc, ptr %vnewc.addr, align 8\l  store double %rho0, ptr %rho0.addr, align 8\l  store ptr %enewc, ptr %enewc.addr, align 8\l  store ptr %pnewc, ptr %pnewc.addr, align 8\l  store ptr %pbvc, ptr %pbvc.addr, align 8\l  store ptr %bvc, ptr %bvc.addr, align 8\l  store double %ss4o3, ptr %ss4o3.addr, align 8\l  store i32 %len, ptr %len.addr, align 4\l  store ptr %regElemList, ptr %regElemList.addr, align 8\l  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x561418cd73c0 -> Node0x561418cd8560[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x561418cd8560 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %0 = load i32, ptr %i, align 4\l  %1 = load i32, ptr %len.addr, align 4\l  %cmp = icmp slt i32 %0, %1\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x561418cd8560:s0 -> Node0x561418cd8a60[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x561418cd8560:s1 -> Node0x561418cd8ab0[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x561418cd8a60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %2 = load ptr, ptr %regElemList.addr, align 8\l  %3 = load i32, ptr %i, align 4\l  %idxprom = sext i32 %3 to i64\l  %arrayidx = getelementptr inbounds i32, ptr %2, i64 %idxprom\l  %4 = load i32, ptr %arrayidx, align 4\l  store i32 %4, ptr %ielem, align 4\l  %5 = load ptr, ptr %pbvc.addr, align 8\l  %6 = load i32, ptr %i, align 4\l  %idxprom1 = sext i32 %6 to i64\l  %arrayidx2 = getelementptr inbounds double, ptr %5, i64 %idxprom1\l  %7 = load double, ptr %arrayidx2, align 8\l  %8 = load ptr, ptr %enewc.addr, align 8\l  %9 = load i32, ptr %i, align 4\l  %idxprom3 = sext i32 %9 to i64\l  %arrayidx4 = getelementptr inbounds double, ptr %8, i64 %idxprom3\l  %10 = load double, ptr %arrayidx4, align 8\l  %11 = load ptr, ptr %vnewc.addr, align 8\l  %12 = load i32, ptr %ielem, align 4\l  %idxprom5 = sext i32 %12 to i64\l  %arrayidx6 = getelementptr inbounds double, ptr %11, i64 %idxprom5\l  %13 = load double, ptr %arrayidx6, align 8\l  %14 = load ptr, ptr %vnewc.addr, align 8\l  %15 = load i32, ptr %ielem, align 4\l  %idxprom7 = sext i32 %15 to i64\l  %arrayidx8 = getelementptr inbounds double, ptr %14, i64 %idxprom7\l  %16 = load double, ptr %arrayidx8, align 8\l  %mul9 = fmul double %13, %16\l  %17 = load ptr, ptr %bvc.addr, align 8\l  %18 = load i32, ptr %i, align 4\l  %idxprom10 = sext i32 %18 to i64\l  %arrayidx11 = getelementptr inbounds double, ptr %17, i64 %idxprom10\l  %19 = load double, ptr %arrayidx11, align 8\l  %mul12 = fmul double %mul9, %19\l  %20 = load ptr, ptr %pnewc.addr, align 8\l  %21 = load i32, ptr %i, align 4\l  %idxprom13 = sext i32 %21 to i64\l  %arrayidx14 = getelementptr inbounds double, ptr %20, i64 %idxprom13\l  %22 = load double, ptr %arrayidx14, align 8\l  %mul15 = fmul double %mul12, %22\l  %23 = call double @llvm.fmuladd.f64(double %7, double %10, double %mul15)\l  %24 = load double, ptr %rho0.addr, align 8\l  %div = fdiv double %23, %24\l  store double %div, ptr %ssTmp, align 8\l  %25 = load double, ptr %ssTmp, align 8\l  %cmp16 = fcmp ole double %25, 0x3842E7922A37D1A0\l  br i1 %cmp16, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x561418cd8a60:s0 -> Node0x561418ce0920[tooltip="for.body -> if.then\nProbability 50.00%" ];
	Node0x561418cd8a60:s1 -> Node0x561418ce0990[tooltip="for.body -> if.else\nProbability 50.00%" ];
	Node0x561418ce0920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then:\l|  store double 0x3C18987CEE7F439D, ptr %ssTmp, align 8\l  br label %if.end\l}"];
	Node0x561418ce0920 -> Node0x561418cd8700[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x561418ce0990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.else:\l|  %26 = load double, ptr %ssTmp, align 8\l  %call = call noundef double @_Z4SQRTd(double noundef %26)\l  store double %call, ptr %ssTmp, align 8\l  br label %if.end\l}"];
	Node0x561418ce0990 -> Node0x561418cd8700[tooltip="if.else -> if.end\nProbability 100.00%" ];
	Node0x561418cd8700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end:\l|  %27 = load double, ptr %ssTmp, align 8\l  %28 = load ptr, ptr %domain.addr, align 8\l  %29 = load i32, ptr %ielem, align 4\l  %call17 = call noundef nonnull align 8 dereferenceable(8) ptr\l... @_ZN6Domain2ssEi(ptr noundef nonnull align 8 dereferenceable(1744) %28, i32\l... noundef %29)\l  store double %27, ptr %call17, align 8\l  br label %for.inc\l}"];
	Node0x561418cd8700 -> Node0x561418ce1540[tooltip="if.end -> for.inc\nProbability 100.00%" ];
	Node0x561418ce1540 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %30 = load i32, ptr %i, align 4\l  %inc = add nsw i32 %30, 1\l  store i32 %inc, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x561418ce1540 -> Node0x561418cd8560[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x561418cd8ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  ret void\l}"];
}
