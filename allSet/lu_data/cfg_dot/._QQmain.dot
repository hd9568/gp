digraph "CFG for '_QQmain' function" {
	label="CFG for '_QQmain' function";

	Node0x55c72cabfdc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{0:\l|  %1 = alloca i32, i64 1, align 4\l  %2 = alloca i32, i64 1, align 4\l  %3 = alloca i32, i64 1, align 4\l  %4 = alloca i32, i64 1, align 4\l  %5 = alloca i32, i64 1, align 4\l  %6 = alloca i32, i64 1, align 4\l  %7 = alloca i32, i64 1, align 4\l  %8 = alloca i32, i64 1, align 4\l  %9 = alloca i32, i64 1, align 4\l  %10 = alloca i32, i64 1, align 4\l  %11 = alloca i32, i64 1, align 4\l  %12 = alloca i32, i64 1, align 4\l  %13 = alloca [6 x i8], i64 1, align 1\l  %14 = alloca [3 x i8], i64 1, align 1\l  %15 = alloca [3 x i8], i64 1, align 1\l  %16 = alloca [46 x i8], i64 1, align 1\l  %17 = alloca [46 x i8], i64 1, align 1\l  %18 = alloca [9 x i8], i64 1, align 1\l  %19 = alloca [13 x i8], i64 1, align 1\l  %20 = alloca [11 x i8], i64 1, align 1\l  %21 = alloca [5 x i8], i64 1, align 1\l  %22 = alloca [24 x i8], i64 1, align 1\l  %23 = alloca i32, i64 1, align 4\l  %24 = alloca [2 x i8], i64 1, align 1\l  %25 = alloca i32, i64 1, align 4\l  %26 = alloca [1 x i8], i64 1, align 1\l  %27 = alloca i32, i64 1, align 4\l  %28 = alloca i32, i64 1, align 4\l  %29 = alloca double, i64 1, align 8\l  %30 = alloca i32, i64 1, align 4\l  call void @init_comm_()\l  call void @read_input_()\l  br label %31\l}"];
	Node0x55c72cabfdc0 -> Node0x55c72cac1490[tooltip="0 -> 31\nProbability 100.00%" ];
	Node0x55c72cac1490 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{31:\l|  %32 = phi i32 [ %37, %35 ], [ 1, %0 ]\l  %33 = phi i64 [ %38, %35 ], [ 10, %0 ]\l  %34 = icmp sgt i64 %33, 0\l  br i1 %34, label %35, label %39\l|{<s0>T|<s1>F}}"];
	Node0x55c72cac1490:s0 -> Node0x55c72cac1580[tooltip="31 -> 35\nProbability 96.88%" ];
	Node0x55c72cac1490:s1 -> Node0x55c72cac18f0[tooltip="31 -> 39\nProbability 3.12%" ];
	Node0x55c72cac1580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{35:\l|  store i32 %32, ptr %27, align 4\l  call void @timer_clear_(ptr %27)\l  %36 = load i32, ptr %27, align 4\l  %37 = add i32 %36, 1\l  %38 = sub i64 %33, 1\l  br label %31\l}"];
	Node0x55c72cac1580 -> Node0x55c72cac1490[tooltip="35 -> 31\nProbability 100.00%" ];
	Node0x55c72cac18f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{39:\l|  store i32 %32, ptr %27, align 4\l  call void @proc_grid_()\l  call void @neighbors_()\l  call void @subdomain_()\l  call void @setcoeff_()\l  call void @setbv_()\l  call void @setiv_()\l  call void @erhs_()\l  store i32 1, ptr %25, align 4\l  call void @ssor_(ptr %25)\l  call void @setbv_()\l  call void @setiv_()\l  call void @ssor_(ptr getelementptr (i8, ptr @ctscon_, i64 152))\l  call void @error_()\l  call void @pintgr_()\l  %40 = load i32, ptr @dim_, align 4\l  %41 = icmp eq i32 %40, 0\l  br i1 %41, label %42, label %120\l|{<s0>T|<s1>F}}"];
	Node0x55c72cac18f0:s0 -> Node0x55c72cad2900[tooltip="39 -> 42\nProbability 37.50%" ];
	Node0x55c72cac18f0:s1 -> Node0x55c72cad2950[tooltip="39 -> 120\nProbability 62.50%" ];
	Node0x55c72cad2900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70" fontname="Courier",label="{42:\l|  %43 = insertvalue \{ ptr, i64 \} undef, ptr %26, 0\l  %44 = insertvalue \{ ptr, i64 \} %43, i64 1, 1\l  %45 = extractvalue \{ ptr, i64 \} %44, 0\l  %46 = extractvalue \{ ptr, i64 \} %44, 1\l  call void @verify_(ptr getelementptr (i8, ptr @ctscon_, i64 56), ptr\l... getelementptr (i8, ptr @ctscon_, i64 96), ptr getelementptr (i8, ptr\l... @ctscon_, i64 136), ptr %45, ptr %30, i64 %46)\l  %47 = load i32, ptr getelementptr (i8, ptr @ctscon_, i64 152), align 4\l  %48 = sitofp i32 %47 to float\l  %49 = load i32, ptr getelementptr (i8, ptr @cgcon_, i64 108), align 4\l  %50 = sitofp i32 %49 to float\l  %51 = fmul contract float %50, 0x409F031480000000\l  %52 = load i32, ptr getelementptr (i8, ptr @cgcon_, i64 112), align 4\l  %53 = sitofp i32 %52 to float\l  %54 = fmul contract float %51, %53\l  %55 = load i32, ptr getelementptr (i8, ptr @cgcon_, i64 116), align 4\l  %56 = sitofp i32 %55 to float\l  %57 = fmul contract float %54, %56\l  %58 = add i32 %49, %52\l  %59 = add i32 %58, %55\l  %60 = sitofp i32 %59 to float\l  %61 = fdiv contract float %60, 3.000000e+00\l  %62 = call contract float @llvm.powi.f32.i32(float %61, i32 2)\l  %63 = fmul contract float %62, 0x40C555A660000000\l  %64 = fsub contract float %57, %63\l  %65 = fmul contract float %60, 0x40DB1EB9A0000000\l  %66 = fdiv contract float %65, 3.000000e+00\l  %67 = fadd contract float %64, %66\l  %68 = fsub contract float %67, 1.440100e+05\l  %69 = fmul contract float %48, %68\l  %70 = fpext float %69 to double\l  %71 = load double, ptr @timer_, align 8\l  %72 = fmul contract double %71, 1.000000e+06\l  %73 = fdiv contract double %70, %72\l  store double %73, ptr %29, align 8\l  call void @llvm.memmove.p0.p0.i64(ptr %24, ptr @_QQclX4C55, i64 2, i1 false)\l  %74 = insertvalue \{ ptr, i64 \} undef, ptr %24, 0\l  %75 = insertvalue \{ ptr, i64 \} %74, i64 2, 1\l  store i32 28, ptr %23, align 4\l  call void @llvm.memmove.p0.p0.i64(ptr %22, ptr\l... @_QQclX20202020202020202020666C6F6174696E6720706F696E74, i64 24, i1 false)\l  %76 = insertvalue \{ ptr, i64 \} undef, ptr %22, 0\l  %77 = insertvalue \{ ptr, i64 \} %76, i64 24, 1\l  call void @llvm.memmove.p0.p0.i64(ptr %21, ptr @_QQclX332E332E31, i64 5, i1\l... false)\l  %78 = insertvalue \{ ptr, i64 \} undef, ptr %21, 0\l  %79 = insertvalue \{ ptr, i64 \} %78, i64 5, 1\l  call void @llvm.memmove.p0.p0.i64(ptr %20, ptr\l... @_QQclX3136204D61722032303234, i64 11, i1 false)\l  %80 = insertvalue \{ ptr, i64 \} undef, ptr %20, 0\l  %81 = insertvalue \{ ptr, i64 \} %80, i64 11, 1\l  call void @llvm.memmove.p0.p0.i64(ptr %19, ptr\l... @_QQclX73636F726570206D7069663737, i64 13, i1 false)\l  %82 = insertvalue \{ ptr, i64 \} undef, ptr %19, 0\l  %83 = insertvalue \{ ptr, i64 \} %82, i64 13, 1\l  call void @llvm.memmove.p0.p0.i64(ptr %18, ptr @_QQclX24284D504946373729,\l... i64 9, i1 false)\l  %84 = insertvalue \{ ptr, i64 \} undef, ptr %18, 0\l  %85 = insertvalue \{ ptr, i64 \} %84, i64 9, 1\l  call void @llvm.memmove.p0.p0.i64(ptr %17, ptr\l... @_QQclXf6dabc6d3b5a7aff9af52aa171b46103, i64 46, i1 false)\l  %86 = insertvalue \{ ptr, i64 \} undef, ptr %17, 0\l  %87 = insertvalue \{ ptr, i64 \} %86, i64 46, 1\l  call void @llvm.memmove.p0.p0.i64(ptr %16, ptr\l... @_QQclXb490bd2da170f0c3c5b588f8f453ea2d, i64 46, i1 false)\l  %88 = insertvalue \{ ptr, i64 \} undef, ptr %16, 0\l  %89 = insertvalue \{ ptr, i64 \} %88, i64 46, 1\l  call void @llvm.memmove.p0.p0.i64(ptr %15, ptr @_QQclX2D4F33, i64 3, i1\l... false)\l  %90 = insertvalue \{ ptr, i64 \} undef, ptr %15, 0\l  %91 = insertvalue \{ ptr, i64 \} %90, i64 3, 1\l  call void @llvm.memmove.p0.p0.i64(ptr %14, ptr @_QQclX2D4F33, i64 3, i1\l... false)\l  %92 = insertvalue \{ ptr, i64 \} undef, ptr %14, 0\l  %93 = insertvalue \{ ptr, i64 \} %92, i64 3, 1\l  call void @llvm.memmove.p0.p0.i64(ptr %13, ptr @_QQclX286E6F6E6529, i64 6,\l... i1 false)\l  %94 = insertvalue \{ ptr, i64 \} undef, ptr %13, 0\l  %95 = insertvalue \{ ptr, i64 \} %94, i64 6, 1\l  %96 = extractvalue \{ ptr, i64 \} %75, 0\l  %97 = extractvalue \{ ptr, i64 \} %75, 1\l  %98 = extractvalue \{ ptr, i64 \} %44, 0\l  %99 = extractvalue \{ ptr, i64 \} %44, 1\l  %100 = extractvalue \{ ptr, i64 \} %77, 0\l  %101 = extractvalue \{ ptr, i64 \} %77, 1\l  %102 = extractvalue \{ ptr, i64 \} %79, 0\l  %103 = extractvalue \{ ptr, i64 \} %79, 1\l  %104 = extractvalue \{ ptr, i64 \} %81, 0\l  %105 = extractvalue \{ ptr, i64 \} %81, 1\l  %106 = extractvalue \{ ptr, i64 \} %83, 0\l  %107 = extractvalue \{ ptr, i64 \} %83, 1\l  %108 = extractvalue \{ ptr, i64 \} %85, 0\l  %109 = extractvalue \{ ptr, i64 \} %85, 1\l  %110 = extractvalue \{ ptr, i64 \} %87, 0\l  %111 = extractvalue \{ ptr, i64 \} %87, 1\l  %112 = extractvalue \{ ptr, i64 \} %89, 0\l  %113 = extractvalue \{ ptr, i64 \} %89, 1\l  %114 = extractvalue \{ ptr, i64 \} %91, 0\l  %115 = extractvalue \{ ptr, i64 \} %91, 1\l  %116 = extractvalue \{ ptr, i64 \} %93, 0\l  %117 = extractvalue \{ ptr, i64 \} %93, 1\l  %118 = extractvalue \{ ptr, i64 \} %95, 0\l  %119 = extractvalue \{ ptr, i64 \} %95, 1\l  call void @print_results_(ptr %96, ptr %98, ptr getelementptr (i8, ptr\l... @cgcon_, i64 108), ptr getelementptr (i8, ptr @cgcon_, i64 112), ptr\l... getelementptr (i8, ptr @cgcon_, i64 116), ptr getelementptr (i8, ptr\l... @ctscon_, i64 152), ptr %23, ptr getelementptr (i8, ptr @dim_, i64 8), ptr\l... @timer_, ptr %29, ptr %100, ptr %30, ptr %102, ptr %104, ptr %106, ptr %108,\l... ptr %110, ptr %112, ptr %114, ptr %116, ptr %118, i64 %97, i64 %99, i64 %101,\l... i64 %103, i64 %105, i64 %107, i64 %109, i64 %111, i64 %113, i64 %115, i64\l... %117, i64 %119)\l  br label %120\l}"];
	Node0x55c72cad2900 -> Node0x55c72cad2950[tooltip="42 -> 120\nProbability 100.00%" ];
	Node0x55c72cad2950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{120:\l|  %121 = load i32, ptr getelementptr (i8, ptr @timer_, i64 8), align 4\l  %122 = icmp ne i32 %121, 0\l  br i1 %122, label %123, label %219\l|{<s0>T|<s1>F}}"];
	Node0x55c72cad2950:s0 -> Node0x55c72cad96f0[tooltip="120 -> 123\nProbability 62.50%" ];
	Node0x55c72cad2950:s1 -> Node0x55c72cad9740[tooltip="120 -> 219\nProbability 37.50%" ];
	Node0x55c72cad96f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{123:\l|  %124 = phi i32 [ %137, %127 ], [ 1, %120 ]\l  %125 = phi i64 [ %138, %127 ], [ 10, %120 ]\l  %126 = icmp sgt i64 %125, 0\l  br i1 %126, label %127, label %139\l|{<s0>T|<s1>F}}"];
	Node0x55c72cad96f0:s0 -> Node0x55c72cad9840[tooltip="123 -> 127\nProbability 96.88%" ];
	Node0x55c72cad96f0:s1 -> Node0x55c72cad9a50[tooltip="123 -> 139\nProbability 3.12%" ];
	Node0x55c72cad9840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{127:\l|  store i32 %124, ptr %27, align 4\l  %128 = call contract double @timer_read_(ptr %27)\l  %129 = load i32, ptr %27, align 4\l  %130 = sext i32 %129 to i64\l  %131 = sub nsw i64 %130, 1\l  %132 = mul nsw i64 %131, 1\l  %133 = mul nsw i64 %132, 1\l  %134 = add nsw i64 %133, 0\l  %135 = getelementptr double, ptr @_QFEt1, i64 %134\l  store double %128, ptr %135, align 8\l  %136 = load i32, ptr %27, align 4\l  %137 = add i32 %136, 1\l  %138 = sub i64 %125, 1\l  br label %123\l}"];
	Node0x55c72cad9840 -> Node0x55c72cad96f0[tooltip="127 -> 123\nProbability 100.00%" ];
	Node0x55c72cad9a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670" fontname="Courier",label="{139:\l|  store i32 %124, ptr %27, align 4\l  %140 = load double, ptr getelementptr (double, ptr @_QFEt1, i64 1), align 8\l  %141 = load double, ptr getelementptr (double, ptr @_QFEt1, i64 6), align 8\l  %142 = fsub contract double %140, %141\l  store double %142, ptr getelementptr (double, ptr @_QFEt1, i64 1), align 8\l  %143 = load double, ptr getelementptr (double, ptr @_QFEt1, i64 7), align 8\l  %144 = load double, ptr getelementptr (double, ptr @_QFEt1, i64 8), align 8\l  %145 = fadd contract double %143, %144\l  %146 = load double, ptr getelementptr (double, ptr @_QFEt1, i64 9), align 8\l  %147 = fadd contract double %145, %146\l  %148 = load double, ptr getelementptr (double, ptr @_QFEt1, i64 6), align 8\l  %149 = fadd contract double %147, %148\l  store double %149, ptr getelementptr (double, ptr @_QFEt1, i64 11), align 8\l  %150 = load double, ptr @_QFEt1, align 8\l  %151 = load double, ptr getelementptr (double, ptr @_QFEt1, i64 11), align 8\l  %152 = fsub contract double %150, %151\l  store double %152, ptr getelementptr (double, ptr @_QFEt1, i64 10), align 8\l  store i32 12, ptr %12, align 4\l  store i32 3, ptr %11, align 4\l  store i32 0, ptr %10, align 4\l  store i32 0, ptr %9, align 4\l  call void @mpi_reduce_(ptr @_QFEt1, ptr @_QFEtsum, ptr %12, ptr\l... getelementptr (i8, ptr @mpistuff_, i64 24), ptr %11, ptr %10, ptr %9, ptr %28)\l  store i32 12, ptr %8, align 4\l  store i32 2, ptr %7, align 4\l  store i32 0, ptr %6, align 4\l  store i32 0, ptr %5, align 4\l  call void @mpi_reduce_(ptr @_QFEt1, ptr @_QFEtming, ptr %8, ptr\l... getelementptr (i8, ptr @mpistuff_, i64 24), ptr %7, ptr %6, ptr %5, ptr %28)\l  store i32 12, ptr %4, align 4\l  store i32 1, ptr %3, align 4\l  store i32 0, ptr %2, align 4\l  store i32 0, ptr %1, align 4\l  call void @mpi_reduce_(ptr @_QFEt1, ptr @_QFEtmaxg, ptr %4, ptr\l... getelementptr (i8, ptr @mpistuff_, i64 24), ptr %3, ptr %2, ptr %1, ptr %28)\l  %153 = load i32, ptr @dim_, align 4\l  %154 = icmp eq i32 %153, 0\l  br i1 %154, label %155, label %219\l|{<s0>T|<s1>F}}"];
	Node0x55c72cad9a50:s0 -> Node0x55c72cadc030[tooltip="139 -> 155\nProbability 37.50%" ];
	Node0x55c72cad9a50:s1 -> Node0x55c72cad9740[tooltip="139 -> 219\nProbability 62.50%" ];
	Node0x55c72cadc030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170" fontname="Courier",label="{155:\l|  %156 = call ptr @_FortranAioBeginExternalFormattedOutput(ptr\l... @_QQclX601c9fd1b030e20a5b0ad94b36f6ec3b, i64 56, ptr null, i32 6, ptr\l... @_QQclX1bfebbcb0bfef9c1471ca8988900d794, i32 185)\l  %157 = load i32, ptr getelementptr (i8, ptr @dim_, i64 8), align 4\l  %158 = call i1 @_FortranAioOutputInteger32(ptr %156, i32 %157)\l  %159 = call i32 @_FortranAioEndIoStatement(ptr %156)\l  br label %160\l}"];
	Node0x55c72cadc030 -> Node0x55c72cadc8a0[tooltip="155 -> 160\nProbability 100.00%" ];
	Node0x55c72cadc8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{160:\l|  %161 = phi i32 [ %216, %164 ], [ 1, %155 ]\l  %162 = phi i64 [ %217, %164 ], [ 12, %155 ]\l  %163 = icmp sgt i64 %162, 0\l  br i1 %163, label %164, label %218\l|{<s0>T|<s1>F}}"];
	Node0x55c72cadc8a0:s0 -> Node0x55c72cadc960[tooltip="160 -> 164\nProbability 96.88%" ];
	Node0x55c72cadc8a0:s1 -> Node0x55c72cadcc20[tooltip="160 -> 218\nProbability 3.12%" ];
	Node0x55c72cadc960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{164:\l|  store i32 %161, ptr %27, align 4\l  %165 = load i32, ptr %27, align 4\l  %166 = sext i32 %165 to i64\l  %167 = sub nsw i64 %166, 1\l  %168 = mul nsw i64 %167, 1\l  %169 = mul nsw i64 %168, 1\l  %170 = add nsw i64 %169, 0\l  %171 = getelementptr double, ptr @_QFEtsum, i64 %170\l  %172 = load double, ptr %171, align 8\l  %173 = load i32, ptr getelementptr (i8, ptr @dim_, i64 8), align 4\l  %174 = sitofp i32 %173 to double\l  %175 = fdiv contract double %172, %174\l  store double %175, ptr %171, align 8\l  %176 = call ptr @_FortranAioBeginExternalFormattedOutput(ptr\l... @_QQclXa2e069320e4ac236b7286edf618ceb41, i64 39, ptr null, i32 6, ptr\l... @_QQclX1bfebbcb0bfef9c1471ca8988900d794, i32 188)\l  %177 = load i32, ptr %27, align 4\l  %178 = call i1 @_FortranAioOutputInteger32(ptr %176, i32 %177)\l  %179 = load i32, ptr %27, align 4\l  %180 = sext i32 %179 to i64\l  %181 = sub nsw i64 %180, 1\l  %182 = mul nsw i64 %181, 1\l  %183 = mul nsw i64 %182, 1\l  %184 = add nsw i64 %183, 0\l  %185 = getelementptr [8 x i8], ptr @_QFEt_recs, i64 %184\l  %186 = call i1 @_FortranAioOutputAscii(ptr %176, ptr %185, i64 8)\l  %187 = load i32, ptr %27, align 4\l  %188 = sext i32 %187 to i64\l  %189 = sub nsw i64 %188, 1\l  %190 = mul nsw i64 %189, 1\l  %191 = mul nsw i64 %190, 1\l  %192 = add nsw i64 %191, 0\l  %193 = getelementptr double, ptr @_QFEtming, i64 %192\l  %194 = load double, ptr %193, align 8\l  %195 = call i1 @_FortranAioOutputReal64(ptr %176, double %194)\l  %196 = load i32, ptr %27, align 4\l  %197 = sext i32 %196 to i64\l  %198 = sub nsw i64 %197, 1\l  %199 = mul nsw i64 %198, 1\l  %200 = mul nsw i64 %199, 1\l  %201 = add nsw i64 %200, 0\l  %202 = getelementptr double, ptr @_QFEtmaxg, i64 %201\l  %203 = load double, ptr %202, align 8\l  %204 = call i1 @_FortranAioOutputReal64(ptr %176, double %203)\l  %205 = load i32, ptr %27, align 4\l  %206 = sext i32 %205 to i64\l  %207 = sub nsw i64 %206, 1\l  %208 = mul nsw i64 %207, 1\l  %209 = mul nsw i64 %208, 1\l  %210 = add nsw i64 %209, 0\l  %211 = getelementptr double, ptr @_QFEtsum, i64 %210\l  %212 = load double, ptr %211, align 8\l  %213 = call i1 @_FortranAioOutputReal64(ptr %176, double %212)\l  %214 = call i32 @_FortranAioEndIoStatement(ptr %176)\l  %215 = load i32, ptr %27, align 4\l  %216 = add i32 %215, 1\l  %217 = sub i64 %162, 1\l  br label %160\l}"];
	Node0x55c72cadc960 -> Node0x55c72cadc8a0[tooltip="164 -> 160\nProbability 100.00%" ];
	Node0x55c72cadcc20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170" fontname="Courier",label="{218:\l|  store i32 %161, ptr %27, align 4\l  br label %219\l}"];
	Node0x55c72cadcc20 -> Node0x55c72cad9740[tooltip="218 -> 219\nProbability 100.00%" ];
	Node0x55c72cad9740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{219:\l|  call void @mpi_finalize_(ptr %28)\l  ret void\l}"];
}
