digraph "CFG for '_ZN7PolyGas15calcStateAtHalfEPKdS1_S1_S1_S1_S1_dPdS2_ii' function" {
	label="CFG for '_ZN7PolyGas15calcStateAtHalfEPKdS1_S1_S1_S1_S1_dPdS2_ii' function";

	Node0x56345fcaa8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %zr0.addr = alloca ptr, align 8\l  %zvolp.addr = alloca ptr, align 8\l  %zvol0.addr = alloca ptr, align 8\l  %ze.addr = alloca ptr, align 8\l  %zwrate.addr = alloca ptr, align 8\l  %zm.addr = alloca ptr, align 8\l  %dt.addr = alloca double, align 8\l  %zp.addr = alloca ptr, align 8\l  %zss.addr = alloca ptr, align 8\l  %zfirst.addr = alloca i32, align 4\l  %zlast.addr = alloca i32, align 4\l  %z0per = alloca ptr, align 8\l  %dth = alloca double, align 8\l  %z = alloca i32, align 4\l  %z0 = alloca i32, align 4\l  %zminv = alloca double, align 8\l  %dv = alloca double, align 8\l  %bulk = alloca double, align 8\l  %denom = alloca double, align 8\l  %src = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store ptr %zr0, ptr %zr0.addr, align 8\l  store ptr %zvolp, ptr %zvolp.addr, align 8\l  store ptr %zvol0, ptr %zvol0.addr, align 8\l  store ptr %ze, ptr %ze.addr, align 8\l  store ptr %zwrate, ptr %zwrate.addr, align 8\l  store ptr %zm, ptr %zm.addr, align 8\l  store double %dt, ptr %dt.addr, align 8\l  store ptr %zp, ptr %zp.addr, align 8\l  store ptr %zss, ptr %zss.addr, align 8\l  store i32 %zfirst, ptr %zfirst.addr, align 4\l  store i32 %zlast, ptr %zlast.addr, align 4\l  %this1 = load ptr, ptr %this.addr, align 8\l  %0 = load i32, ptr %zlast.addr, align 4\l  %1 = load i32, ptr %zfirst.addr, align 4\l  %sub = sub nsw i32 %0, %1\l  %call = call noundef ptr @_ZN6Memory5allocIdEEPT_i(i32 noundef %sub)\l  store ptr %call, ptr %z0per, align 8\l  %2 = load double, ptr %dt.addr, align 8\l  %mul = fmul double 5.000000e-01, %2\l  store double %mul, ptr %dth, align 8\l  %3 = load ptr, ptr %zr0.addr, align 8\l  %4 = load ptr, ptr %ze.addr, align 8\l  %5 = load ptr, ptr %zp.addr, align 8\l  %6 = load ptr, ptr %z0per, align 8\l  %7 = load ptr, ptr %zss.addr, align 8\l  %8 = load i32, ptr %zfirst.addr, align 4\l  %9 = load i32, ptr %zlast.addr, align 4\l  call void @_ZN7PolyGas7calcEOSEPKdS1_PdS2_S2_ii(ptr noundef nonnull align 8\l... dereferenceable(24) %this1, ptr noundef %3, ptr noundef %4, ptr noundef %5,\l... ptr noundef %6, ptr noundef %7, i32 noundef %8, i32 noundef %9)\l  %10 = load i32, ptr %zfirst.addr, align 4\l  store i32 %10, ptr %z, align 4\l  br label %for.cond\l}"];
	Node0x56345fcaa8c0 -> Node0x56345fcad6f0[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x56345fcad6f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %11 = load i32, ptr %z, align 4\l  %12 = load i32, ptr %zlast.addr, align 4\l  %cmp = icmp slt i32 %11, %12\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x56345fcad6f0:s0 -> Node0x56345fcad8b0[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x56345fcad6f0:s1 -> Node0x56345fcad930[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x56345fcad8b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %13 = load i32, ptr %z, align 4\l  %14 = load i32, ptr %zfirst.addr, align 4\l  %sub2 = sub nsw i32 %13, %14\l  store i32 %sub2, ptr %z0, align 4\l  %15 = load ptr, ptr %zm.addr, align 8\l  %16 = load i32, ptr %z, align 4\l  %idxprom = sext i32 %16 to i64\l  %arrayidx = getelementptr inbounds double, ptr %15, i64 %idxprom\l  %17 = load double, ptr %arrayidx, align 8\l  %div = fdiv double 1.000000e+00, %17\l  store double %div, ptr %zminv, align 8\l  %18 = load ptr, ptr %zvolp.addr, align 8\l  %19 = load i32, ptr %z, align 4\l  %idxprom3 = sext i32 %19 to i64\l  %arrayidx4 = getelementptr inbounds double, ptr %18, i64 %idxprom3\l  %20 = load double, ptr %arrayidx4, align 8\l  %21 = load ptr, ptr %zvol0.addr, align 8\l  %22 = load i32, ptr %z, align 4\l  %idxprom5 = sext i32 %22 to i64\l  %arrayidx6 = getelementptr inbounds double, ptr %21, i64 %idxprom5\l  %23 = load double, ptr %arrayidx6, align 8\l  %sub7 = fsub double %20, %23\l  %24 = load double, ptr %zminv, align 8\l  %mul8 = fmul double %sub7, %24\l  store double %mul8, ptr %dv, align 8\l  %25 = load ptr, ptr %zr0.addr, align 8\l  %26 = load i32, ptr %z, align 4\l  %idxprom9 = sext i32 %26 to i64\l  %arrayidx10 = getelementptr inbounds double, ptr %25, i64 %idxprom9\l  %27 = load double, ptr %arrayidx10, align 8\l  %28 = load ptr, ptr %zss.addr, align 8\l  %29 = load i32, ptr %z, align 4\l  %idxprom11 = sext i32 %29 to i64\l  %arrayidx12 = getelementptr inbounds double, ptr %28, i64 %idxprom11\l  %30 = load double, ptr %arrayidx12, align 8\l  %mul13 = fmul double %27, %30\l  %31 = load ptr, ptr %zss.addr, align 8\l  %32 = load i32, ptr %z, align 4\l  %idxprom14 = sext i32 %32 to i64\l  %arrayidx15 = getelementptr inbounds double, ptr %31, i64 %idxprom14\l  %33 = load double, ptr %arrayidx15, align 8\l  %mul16 = fmul double %mul13, %33\l  store double %mul16, ptr %bulk, align 8\l  %34 = load ptr, ptr %z0per, align 8\l  %35 = load i32, ptr %z0, align 4\l  %idxprom17 = sext i32 %35 to i64\l  %arrayidx18 = getelementptr inbounds double, ptr %34, i64 %idxprom17\l  %36 = load double, ptr %arrayidx18, align 8\l  %mul19 = fmul double 5.000000e-01, %36\l  %37 = load double, ptr %dv, align 8\l  %38 = call double @llvm.fmuladd.f64(double %mul19, double %37, double\l... 1.000000e+00)\l  store double %38, ptr %denom, align 8\l  %39 = load ptr, ptr %zwrate.addr, align 8\l  %40 = load i32, ptr %z, align 4\l  %idxprom21 = sext i32 %40 to i64\l  %arrayidx22 = getelementptr inbounds double, ptr %39, i64 %idxprom21\l  %41 = load double, ptr %arrayidx22, align 8\l  %42 = load double, ptr %dth, align 8\l  %mul23 = fmul double %41, %42\l  %43 = load double, ptr %zminv, align 8\l  %mul24 = fmul double %mul23, %43\l  store double %mul24, ptr %src, align 8\l  %44 = load ptr, ptr %z0per, align 8\l  %45 = load i32, ptr %z0, align 4\l  %idxprom25 = sext i32 %45 to i64\l  %arrayidx26 = getelementptr inbounds double, ptr %44, i64 %idxprom25\l  %46 = load double, ptr %arrayidx26, align 8\l  %47 = load double, ptr %src, align 8\l  %48 = load ptr, ptr %zr0.addr, align 8\l  %49 = load i32, ptr %z, align 4\l  %idxprom28 = sext i32 %49 to i64\l  %arrayidx29 = getelementptr inbounds double, ptr %48, i64 %idxprom28\l  %50 = load double, ptr %arrayidx29, align 8\l  %51 = load double, ptr %bulk, align 8\l  %mul30 = fmul double %50, %51\l  %52 = load double, ptr %dv, align 8\l  %mul31 = fmul double %mul30, %52\l  %neg = fneg double %mul31\l  %53 = call double @llvm.fmuladd.f64(double %46, double %47, double %neg)\l  %54 = load double, ptr %denom, align 8\l  %div32 = fdiv double %53, %54\l  %55 = load ptr, ptr %zp.addr, align 8\l  %56 = load i32, ptr %z, align 4\l  %idxprom33 = sext i32 %56 to i64\l  %arrayidx34 = getelementptr inbounds double, ptr %55, i64 %idxprom33\l  %57 = load double, ptr %arrayidx34, align 8\l  %add = fadd double %57, %div32\l  store double %add, ptr %arrayidx34, align 8\l  br label %for.inc\l}"];
	Node0x56345fcad8b0 -> Node0x56345fcb1d60[tooltip="for.body -> for.inc\nProbability 100.00%" ];
	Node0x56345fcb1d60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %58 = load i32, ptr %z, align 4\l  %inc = add nsw i32 %58, 1\l  store i32 %inc, ptr %z, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x56345fcb1d60 -> Node0x56345fcad6f0[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x56345fcad930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  %59 = load ptr, ptr %z0per, align 8\l  call void @_ZN6Memory4freeIdEEvPT_(ptr noundef %59)\l  ret void\l}"];
}
