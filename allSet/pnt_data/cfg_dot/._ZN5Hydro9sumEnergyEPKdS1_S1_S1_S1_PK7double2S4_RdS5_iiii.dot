digraph "CFG for '_ZN5Hydro9sumEnergyEPKdS1_S1_S1_S1_PK7double2S4_RdS5_iiii' function" {
	label="CFG for '_ZN5Hydro9sumEnergyEPKdS1_S1_S1_S1_PK7double2S4_RdS5_iiii' function";

	Node0x5618698f38d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %this.addr = alloca ptr, align 8\l  %zetot.addr = alloca ptr, align 8\l  %zarea.addr = alloca ptr, align 8\l  %zvol.addr = alloca ptr, align 8\l  %zm.addr = alloca ptr, align 8\l  %smf.addr = alloca ptr, align 8\l  %px.addr = alloca ptr, align 8\l  %pu.addr = alloca ptr, align 8\l  %ei.addr = alloca ptr, align 8\l  %ek.addr = alloca ptr, align 8\l  %zfirst.addr = alloca i32, align 4\l  %zlast.addr = alloca i32, align 4\l  %sfirst.addr = alloca i32, align 4\l  %slast.addr = alloca i32, align 4\l  %sumi = alloca double, align 8\l  %z = alloca i32, align 4\l  %sumk = alloca double, align 8\l  %s = alloca i32, align 4\l  %s3 = alloca i32, align 4\l  %p1 = alloca i32, align 4\l  %z11 = alloca i32, align 4\l  %cvol = alloca double, align 8\l  %cke = alloca double, align 8\l  store ptr %this, ptr %this.addr, align 8\l  store ptr %zetot, ptr %zetot.addr, align 8\l  store ptr %zarea, ptr %zarea.addr, align 8\l  store ptr %zvol, ptr %zvol.addr, align 8\l  store ptr %zm, ptr %zm.addr, align 8\l  store ptr %smf, ptr %smf.addr, align 8\l  store ptr %px, ptr %px.addr, align 8\l  store ptr %pu, ptr %pu.addr, align 8\l  store ptr %ei, ptr %ei.addr, align 8\l  store ptr %ek, ptr %ek.addr, align 8\l  store i32 %zfirst, ptr %zfirst.addr, align 4\l  store i32 %zlast, ptr %zlast.addr, align 4\l  store i32 %sfirst, ptr %sfirst.addr, align 4\l  store i32 %slast, ptr %slast.addr, align 4\l  %this1 = load ptr, ptr %this.addr, align 8\l  store double 0.000000e+00, ptr %sumi, align 8\l  %0 = load i32, ptr %zfirst.addr, align 4\l  store i32 %0, ptr %z, align 4\l  br label %for.cond\l}"];
	Node0x5618698f38d0 -> Node0x5618698f5a00[tooltip="entry -> for.cond\nProbability 100.00%" ];
	Node0x5618698f5a00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %1 = load i32, ptr %z, align 4\l  %2 = load i32, ptr %zlast.addr, align 4\l  %cmp = icmp slt i32 %1, %2\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5618698f5a00:s0 -> Node0x5618698f5c10[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x5618698f5a00:s1 -> Node0x5618698f5c90[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x5618698f5c10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %3 = load ptr, ptr %zetot.addr, align 8\l  %4 = load i32, ptr %z, align 4\l  %idxprom = sext i32 %4 to i64\l  %arrayidx = getelementptr inbounds double, ptr %3, i64 %idxprom\l  %5 = load double, ptr %arrayidx, align 8\l  %6 = load double, ptr %sumi, align 8\l  %add = fadd double %6, %5\l  store double %add, ptr %sumi, align 8\l  br label %for.inc\l}"];
	Node0x5618698f5c10 -> Node0x5618698f61d0[tooltip="for.body -> for.inc\nProbability 100.00%" ];
	Node0x5618698f61d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %7 = load i32, ptr %z, align 4\l  %inc = add nsw i32 %7, 1\l  store i32 %inc, ptr %z, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x5618698f61d0 -> Node0x5618698f5a00[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x5618698f5c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  %8 = load double, ptr %sumi, align 8\l  %mul = fmul double %8, 2.000000e+00\l  %9 = load ptr, ptr %ei.addr, align 8\l  %10 = load double, ptr %9, align 8\l  %11 = call double @llvm.fmuladd.f64(double %mul, double 0x400921FB54442D18,\l... double %10)\l  store double %11, ptr %9, align 8\l  store double 0.000000e+00, ptr %sumk, align 8\l  %12 = load i32, ptr %sfirst.addr, align 4\l  store i32 %12, ptr %s, align 4\l  br label %for.cond3\l}"];
	Node0x5618698f5c90 -> Node0x5618698f47c0[tooltip="for.end -> for.cond3\nProbability 100.00%" ];
	Node0x5618698f47c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond3:\l|  %13 = load i32, ptr %s, align 4\l  %14 = load i32, ptr %slast.addr, align 4\l  %cmp4 = icmp slt i32 %13, %14\l  br i1 %cmp4, label %for.body5, label %for.end39\l|{<s0>T|<s1>F}}"];
	Node0x5618698f47c0:s0 -> Node0x5618698f7190[tooltip="for.cond3 -> for.body5\nProbability 96.88%" ];
	Node0x5618698f47c0:s1 -> Node0x5618698f71e0[tooltip="for.cond3 -> for.end39\nProbability 3.12%" ];
	Node0x5618698f7190 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body5:\l|  %mesh = getelementptr inbounds %class.Hydro, ptr %this1, i32 0, i32 0\l  %15 = load ptr, ptr %mesh, align 8\l  %mapss3 = getelementptr inbounds %class.Mesh, ptr %15, i32 0, i32 17\l  %16 = load ptr, ptr %mapss3, align 8\l  %17 = load i32, ptr %s, align 4\l  %idxprom6 = sext i32 %17 to i64\l  %arrayidx7 = getelementptr inbounds i32, ptr %16, i64 %idxprom6\l  %18 = load i32, ptr %arrayidx7, align 4\l  store i32 %18, ptr %s3, align 4\l  %mesh8 = getelementptr inbounds %class.Hydro, ptr %this1, i32 0, i32 0\l  %19 = load ptr, ptr %mesh8, align 8\l  %mapsp1 = getelementptr inbounds %class.Mesh, ptr %19, i32 0, i32 13\l  %20 = load ptr, ptr %mapsp1, align 8\l  %21 = load i32, ptr %s, align 4\l  %idxprom9 = sext i32 %21 to i64\l  %arrayidx10 = getelementptr inbounds i32, ptr %20, i64 %idxprom9\l  %22 = load i32, ptr %arrayidx10, align 4\l  store i32 %22, ptr %p1, align 4\l  %mesh12 = getelementptr inbounds %class.Hydro, ptr %this1, i32 0, i32 0\l  %23 = load ptr, ptr %mesh12, align 8\l  %mapsz = getelementptr inbounds %class.Mesh, ptr %23, i32 0, i32 15\l  %24 = load ptr, ptr %mapsz, align 8\l  %25 = load i32, ptr %s, align 4\l  %idxprom13 = sext i32 %25 to i64\l  %arrayidx14 = getelementptr inbounds i32, ptr %24, i64 %idxprom13\l  %26 = load i32, ptr %arrayidx14, align 4\l  store i32 %26, ptr %z11, align 4\l  %27 = load ptr, ptr %zarea.addr, align 8\l  %28 = load i32, ptr %z11, align 4\l  %idxprom15 = sext i32 %28 to i64\l  %arrayidx16 = getelementptr inbounds double, ptr %27, i64 %idxprom15\l  %29 = load double, ptr %arrayidx16, align 8\l  %30 = load ptr, ptr %px.addr, align 8\l  %31 = load i32, ptr %p1, align 4\l  %idxprom17 = sext i32 %31 to i64\l  %arrayidx18 = getelementptr inbounds %struct.double2, ptr %30, i64 %idxprom17\l  %x = getelementptr inbounds %struct.double2, ptr %arrayidx18, i32 0, i32 0\l  %32 = load double, ptr %x, align 8\l  %mul19 = fmul double %29, %32\l  %mul20 = fmul double %mul19, 5.000000e-01\l  %33 = load ptr, ptr %smf.addr, align 8\l  %34 = load i32, ptr %s, align 4\l  %idxprom21 = sext i32 %34 to i64\l  %arrayidx22 = getelementptr inbounds double, ptr %33, i64 %idxprom21\l  %35 = load double, ptr %arrayidx22, align 8\l  %36 = load ptr, ptr %smf.addr, align 8\l  %37 = load i32, ptr %s3, align 4\l  %idxprom23 = sext i32 %37 to i64\l  %arrayidx24 = getelementptr inbounds double, ptr %36, i64 %idxprom23\l  %38 = load double, ptr %arrayidx24, align 8\l  %add25 = fadd double %35, %38\l  %mul26 = fmul double %mul20, %add25\l  store double %mul26, ptr %cvol, align 8\l  %39 = load ptr, ptr %zm.addr, align 8\l  %40 = load i32, ptr %z11, align 4\l  %idxprom27 = sext i32 %40 to i64\l  %arrayidx28 = getelementptr inbounds double, ptr %39, i64 %idxprom27\l  %41 = load double, ptr %arrayidx28, align 8\l  %42 = load double, ptr %cvol, align 8\l  %mul29 = fmul double %41, %42\l  %43 = load ptr, ptr %zvol.addr, align 8\l  %44 = load i32, ptr %z11, align 4\l  %idxprom30 = sext i32 %44 to i64\l  %arrayidx31 = getelementptr inbounds double, ptr %43, i64 %idxprom30\l  %45 = load double, ptr %arrayidx31, align 8\l  %div = fdiv double %mul29, %45\l  %mul32 = fmul double %div, 5.000000e-01\l  %46 = load ptr, ptr %pu.addr, align 8\l  %47 = load i32, ptr %p1, align 4\l  %idxprom33 = sext i32 %47 to i64\l  %arrayidx34 = getelementptr inbounds %struct.double2, ptr %46, i64 %idxprom33\l  %call = call noundef double @_Z7length2RK7double2(ptr noundef nonnull align\l... 8 dereferenceable(16) %arrayidx34)\l  %mul35 = fmul double %mul32, %call\l  store double %mul35, ptr %cke, align 8\l  %48 = load double, ptr %cke, align 8\l  %49 = load double, ptr %sumk, align 8\l  %add36 = fadd double %49, %48\l  store double %add36, ptr %sumk, align 8\l  br label %for.inc37\l}"];
	Node0x5618698f7190 -> Node0x5618698facd0[tooltip="for.body5 -> for.inc37\nProbability 100.00%" ];
	Node0x5618698facd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc37:\l|  %50 = load i32, ptr %s, align 4\l  %inc38 = add nsw i32 %50, 1\l  store i32 %inc38, ptr %s, align 4\l  br label %for.cond3, !llvm.loop !8\l}"];
	Node0x5618698facd0 -> Node0x5618698f47c0[tooltip="for.inc37 -> for.cond3\nProbability 100.00%" ];
	Node0x5618698f71e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end39:\l|  %51 = load double, ptr %sumk, align 8\l  %mul40 = fmul double %51, 2.000000e+00\l  %52 = load ptr, ptr %ek.addr, align 8\l  %53 = load double, ptr %52, align 8\l  %54 = call double @llvm.fmuladd.f64(double %mul40, double\l... 0x400921FB54442D18, double %53)\l  store double %54, ptr %52, align 8\l  ret void\l}"];
}
