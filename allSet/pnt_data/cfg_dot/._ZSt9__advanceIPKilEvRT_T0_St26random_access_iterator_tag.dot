digraph "CFG for '_ZSt9__advanceIPKilEvRT_T0_St26random_access_iterator_tag' function" {
	label="CFG for '_ZSt9__advanceIPKilEvRT_T0_St26random_access_iterator_tag' function";

	Node0x56307d783ee0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{entry:\l|  %0 = alloca %\"struct.std::random_access_iterator_tag\", align 1\l  %__i.addr = alloca ptr, align 8\l  %__n.addr = alloca i64, align 8\l  store ptr %__i, ptr %__i.addr, align 8\l  store i64 %__n, ptr %__n.addr, align 8\l  %1 = load i64, ptr %__n.addr, align 8\l  %2 = call i1 @llvm.is.constant.i64(i64 %1)\l  br i1 %2, label %land.lhs.true, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x56307d783ee0:s0 -> Node0x56307d784630[tooltip="entry -> land.lhs.true\nProbability 50.00%" ];
	Node0x56307d783ee0:s1 -> Node0x56307d784680[tooltip="entry -> if.else\nProbability 50.00%" ];
	Node0x56307d784630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{land.lhs.true:\l|  %3 = load i64, ptr %__n.addr, align 8\l  %cmp = icmp eq i64 %3, 1\l  br i1 %cmp, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x56307d784630:s0 -> Node0x56307d7848d0[tooltip="land.lhs.true -> if.then\nProbability 50.00%" ];
	Node0x56307d784630:s1 -> Node0x56307d784680[tooltip="land.lhs.true -> if.else\nProbability 50.00%" ];
	Node0x56307d7848d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{if.then:\l|  %4 = load ptr, ptr %__i.addr, align 8\l  %5 = load ptr, ptr %4, align 8\l  %incdec.ptr = getelementptr inbounds i32, ptr %5, i32 1\l  store ptr %incdec.ptr, ptr %4, align 8\l  br label %if.end6\l}"];
	Node0x56307d7848d0 -> Node0x56307d784c60[tooltip="if.then -> if.end6\nProbability 100.00%" ];
	Node0x56307d784680 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.else:\l|  %6 = load i64, ptr %__n.addr, align 8\l  %7 = call i1 @llvm.is.constant.i64(i64 %6)\l  br i1 %7, label %land.lhs.true1, label %if.else5\l|{<s0>T|<s1>F}}"];
	Node0x56307d784680:s0 -> Node0x56307d784f30[tooltip="if.else -> land.lhs.true1\nProbability 50.00%" ];
	Node0x56307d784680:s1 -> Node0x56307d784f80[tooltip="if.else -> if.else5\nProbability 50.00%" ];
	Node0x56307d784f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{land.lhs.true1:\l|  %8 = load i64, ptr %__n.addr, align 8\l  %cmp2 = icmp eq i64 %8, -1\l  br i1 %cmp2, label %if.then3, label %if.else5\l|{<s0>T|<s1>F}}"];
	Node0x56307d784f30:s0 -> Node0x56307d785390[tooltip="land.lhs.true1 -> if.then3\nProbability 37.50%" ];
	Node0x56307d784f30:s1 -> Node0x56307d784f80[tooltip="land.lhs.true1 -> if.else5\nProbability 62.50%" ];
	Node0x56307d785390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{if.then3:\l|  %9 = load ptr, ptr %__i.addr, align 8\l  %10 = load ptr, ptr %9, align 8\l  %incdec.ptr4 = getelementptr inbounds i32, ptr %10, i32 -1\l  store ptr %incdec.ptr4, ptr %9, align 8\l  br label %if.end\l}"];
	Node0x56307d785390 -> Node0x56307d785730[tooltip="if.then3 -> if.end\nProbability 100.00%" ];
	Node0x56307d784f80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.else5:\l|  %11 = load i64, ptr %__n.addr, align 8\l  %12 = load ptr, ptr %__i.addr, align 8\l  %13 = load ptr, ptr %12, align 8\l  %add.ptr = getelementptr inbounds i32, ptr %13, i64 %11\l  store ptr %add.ptr, ptr %12, align 8\l  br label %if.end\l}"];
	Node0x56307d784f80 -> Node0x56307d785730[tooltip="if.else5 -> if.end\nProbability 100.00%" ];
	Node0x56307d785730 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.end:\l|  br label %if.end6\l}"];
	Node0x56307d785730 -> Node0x56307d784c60[tooltip="if.end -> if.end6\nProbability 100.00%" ];
	Node0x56307d784c60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end6:\l|  ret void\l}"];
}
