digraph "CFG for 'showall_' function" {
	label="CFG for 'showall_' function";

	Node0x559626e18190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670" fontname="Courier",label="{4:\l|  %5 = alloca i32, i64 1, align 4\l  %6 = alloca i32, i64 1, align 4\l  %7 = alloca i32, i64 1, align 4\l  %8 = alloca i32, i64 1, align 4\l  %9 = alloca i32, i64 1, align 4\l  %10 = alloca i32, i64 1, align 4\l  %11 = alloca i32, i64 1, align 4\l  %12 = alloca i32, i64 1, align 4\l  %13 = alloca i32, i64 1, align 4\l  %14 = load i32, ptr %1, align 4\l  %15 = sext i32 %14 to i64\l  %16 = icmp sgt i64 %15, 0\l  %17 = select i1 %16, i64 %15, i64 0\l  %18 = load i32, ptr %2, align 4\l  %19 = sext i32 %18 to i64\l  %20 = icmp sgt i64 %19, 0\l  %21 = select i1 %20, i64 %19, i64 0\l  %22 = load i32, ptr %3, align 4\l  %23 = sext i32 %22 to i64\l  %24 = icmp sgt i64 %23, 0\l  %25 = select i1 %24, i64 %23, i64 0\l  %26 = load i32, ptr %1, align 4\l  %27 = icmp slt i32 %26, 18\l  %28 = select i1 %27, i32 %26, i32 18\l  store i32 %28, ptr %11, align 4\l  %29 = load i32, ptr %2, align 4\l  %30 = icmp slt i32 %29, 14\l  %31 = select i1 %30, i32 %29, i32 14\l  store i32 %31, ptr %12, align 4\l  %32 = load i32, ptr %3, align 4\l  %33 = icmp slt i32 %32, 18\l  %34 = select i1 %33, i32 %32, i32 18\l  store i32 %34, ptr %13, align 4\l  %35 = call ptr @_FortranAioBeginExternalListOutput(i32 6, ptr\l... @_QQclX208326b0ffd491e6ba4a97888e146312, i32 2364)\l  %36 = call i1 @_FortranAioOutputAscii(ptr %35, ptr @_QQclX2020, i64 2)\l  %37 = call i32 @_FortranAioEndIoStatement(ptr %35)\l  %38 = load i32, ptr getelementptr (i8, ptr @mpistuff_, i64 4), align 4\l  %39 = sub i32 %38, 1\l  %40 = sext i32 %39 to i64\l  %41 = add i64 %40, 1\l  br label %42\l}"];
	Node0x559626e18190 -> Node0x559626e1aa70[tooltip="4 -> 42\nProbability 100.00%" ];
	Node0x559626e1aa70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70" fontname="Courier",label="{42:\l|  %43 = phi i32 [ %124, %122 ], [ 0, %4 ]\l  %44 = phi i64 [ %125, %122 ], [ %41, %4 ]\l  %45 = icmp sgt i64 %44, 0\l  br i1 %45, label %46, label %126\l|{<s0>T|<s1>F}}"];
	Node0x559626e1aa70:s0 -> Node0x559626e1ad30[tooltip="42 -> 46\nProbability 96.88%" ];
	Node0x559626e1aa70:s1 -> Node0x559626e1ad80[tooltip="42 -> 126\nProbability 3.12%" ];
	Node0x559626e1ad30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70" fontname="Courier",label="{46:\l|  store i32 %43, ptr %6, align 4\l  %47 = load i32, ptr @mpistuff_, align 4\l  %48 = load i32, ptr %6, align 4\l  %49 = icmp eq i32 %47, %48\l  br i1 %49, label %50, label %122\l|{<s0>T|<s1>F}}"];
	Node0x559626e1ad30:s0 -> Node0x559626e1b0b0[tooltip="46 -> 50\nProbability 50.00%" ];
	Node0x559626e1ad30:s1 -> Node0x559626e1ab30[tooltip="46 -> 122\nProbability 50.00%" ];
	Node0x559626e1b0b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570" fontname="Courier",label="{50:\l|  %51 = call ptr @_FortranAioBeginExternalListOutput(i32 6, ptr\l... @_QQclX208326b0ffd491e6ba4a97888e146312, i32 2367)\l  %52 = call i1 @_FortranAioOutputAscii(ptr %51, ptr @_QQclX206964203D20, i64\l... 6)\l  %53 = load i32, ptr @mpistuff_, align 4\l  %54 = call i1 @_FortranAioOutputInteger32(ptr %51, i32 %53)\l  %55 = call i32 @_FortranAioEndIoStatement(ptr %51)\l  %56 = load i32, ptr %13, align 4\l  %57 = sext i32 %56 to i64\l  br label %58\l}"];
	Node0x559626e1b0b0 -> Node0x559626e239f0[tooltip="50 -> 58\nProbability 100.00%" ];
	Node0x559626e239f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{58:\l|  %59 = phi i32 [ %116, %111 ], [ 1, %50 ]\l  %60 = phi i64 [ %117, %111 ], [ %57, %50 ]\l  %61 = icmp sgt i64 %60, 0\l  br i1 %61, label %62, label %118\l|{<s0>T|<s1>F}}"];
	Node0x559626e239f0:s0 -> Node0x559626e23d10[tooltip="58 -> 62\nProbability 96.88%" ];
	Node0x559626e239f0:s1 -> Node0x559626e23d60[tooltip="58 -> 118\nProbability 3.12%" ];
	Node0x559626e23d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{62:\l|  store i32 %59, ptr %9, align 4\l  %63 = load i32, ptr %11, align 4\l  %64 = sext i32 %63 to i64\l  br label %65\l}"];
	Node0x559626e23d10 -> Node0x559626e23ff0[tooltip="62 -> 65\nProbability 100.00%" ];
	Node0x559626e23ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{65:\l|  %66 = phi i32 [ %109, %105 ], [ 1, %62 ]\l  %67 = phi i64 [ %110, %105 ], [ %64, %62 ]\l  %68 = icmp sgt i64 %67, 0\l  br i1 %68, label %69, label %111\l|{<s0>T|<s1>F}}"];
	Node0x559626e23ff0:s0 -> Node0x559626e24340[tooltip="65 -> 69\nProbability 96.88%" ];
	Node0x559626e23ff0:s1 -> Node0x559626e23ab0[tooltip="65 -> 111\nProbability 3.12%" ];
	Node0x559626e24340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{69:\l|  store i32 %66, ptr %7, align 4\l  %70 = call ptr @_FortranAioBeginExternalFormattedOutput(ptr\l... @_QQclX28313566362E3329, i64 8, ptr null, i32 6, ptr\l... @_QQclX208326b0ffd491e6ba4a97888e146312, i32 2370)\l  %71 = load i32, ptr %12, align 4\l  %72 = sext i32 %71 to i64\l  br label %73\l}"];
	Node0x559626e24340 -> Node0x559626e247f0[tooltip="69 -> 73\nProbability 100.00%" ];
	Node0x559626e247f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{73:\l|  %74 = phi i64 [ %103, %77 ], [ 1, %69 ]\l  %75 = phi i64 [ %104, %77 ], [ %72, %69 ]\l  %76 = icmp sgt i64 %75, 0\l  br i1 %76, label %77, label %105\l|{<s0>T|<s1>F}}"];
	Node0x559626e247f0:s0 -> Node0x559626e248b0[tooltip="73 -> 77\nProbability 96.88%" ];
	Node0x559626e247f0:s1 -> Node0x559626e240b0[tooltip="73 -> 105\nProbability 3.12%" ];
	Node0x559626e248b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{77:\l|  %78 = trunc i64 %74 to i32\l  store i32 %78, ptr %8, align 4\l  %79 = load i32, ptr %7, align 4\l  %80 = sext i32 %79 to i64\l  %81 = load i32, ptr %8, align 4\l  %82 = sext i32 %81 to i64\l  %83 = load i32, ptr %9, align 4\l  %84 = sext i32 %83 to i64\l  %85 = sub nsw i64 %80, 1\l  %86 = mul nsw i64 %85, 1\l  %87 = mul nsw i64 %86, 1\l  %88 = add nsw i64 %87, 0\l  %89 = mul nsw i64 1, %17\l  %90 = sub nsw i64 %82, 1\l  %91 = mul nsw i64 %90, 1\l  %92 = mul nsw i64 %91, %89\l  %93 = add nsw i64 %92, %88\l  %94 = mul nsw i64 %89, %21\l  %95 = sub nsw i64 %84, 1\l  %96 = mul nsw i64 %95, 1\l  %97 = mul nsw i64 %96, %94\l  %98 = add nsw i64 %97, %93\l  %99 = mul nsw i64 %94, %25\l  %100 = getelementptr double, ptr %0, i64 %98\l  %101 = load double, ptr %100, align 8\l  %102 = call i1 @_FortranAioOutputReal64(ptr %70, double %101)\l  %103 = add i64 %74, 1\l  %104 = sub i64 %75, 1\l  br label %73\l}"];
	Node0x559626e248b0 -> Node0x559626e247f0[tooltip="77 -> 73\nProbability 100.00%" ];
	Node0x559626e240b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{105:\l|  %106 = trunc i64 %74 to i32\l  store i32 %106, ptr %8, align 4\l  %107 = call i32 @_FortranAioEndIoStatement(ptr %70)\l  %108 = load i32, ptr %7, align 4\l  %109 = add i32 %108, 1\l  %110 = sub i64 %67, 1\l  br label %65\l}"];
	Node0x559626e240b0 -> Node0x559626e23ff0[tooltip="105 -> 65\nProbability 100.00%" ];
	Node0x559626e23ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{111:\l|  store i32 %66, ptr %7, align 4\l  %112 = call ptr @_FortranAioBeginExternalListOutput(i32 6, ptr\l... @_QQclX208326b0ffd491e6ba4a97888e146312, i32 2372)\l  %113 = call i1 @_FortranAioOutputAscii(ptr %112, ptr\l... @_QQclX202D202D202D202D202D202D202D20, i64 15)\l  %114 = call i32 @_FortranAioEndIoStatement(ptr %112)\l  %115 = load i32, ptr %9, align 4\l  %116 = add i32 %115, 1\l  %117 = sub i64 %60, 1\l  br label %58\l}"];
	Node0x559626e23ab0 -> Node0x559626e239f0[tooltip="111 -> 58\nProbability 100.00%" ];
	Node0x559626e23d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570" fontname="Courier",label="{118:\l|  store i32 %59, ptr %9, align 4\l  %119 = call ptr @_FortranAioBeginExternalListOutput(i32 6, ptr\l... @_QQclX208326b0ffd491e6ba4a97888e146312, i32 2374)\l  %120 = call i1 @_FortranAioOutputAscii(ptr %119, ptr @_QQclX2020, i64 2)\l  %121 = call i32 @_FortranAioEndIoStatement(ptr %119)\l  br label %122\l}"];
	Node0x559626e23d60 -> Node0x559626e1ab30[tooltip="118 -> 122\nProbability 100.00%" ];
	Node0x559626e1ab30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70" fontname="Courier",label="{122:\l|  store i32 0, ptr %5, align 4\l  call void @mpi_barrier_(ptr %5, ptr %10)\l  %123 = load i32, ptr %6, align 4\l  %124 = add i32 %123, 1\l  %125 = sub i64 %44, 1\l  br label %42\l}"];
	Node0x559626e1ab30 -> Node0x559626e1aa70[tooltip="122 -> 42\nProbability 100.00%" ];
	Node0x559626e1ad80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670" fontname="Courier",label="{126:\l|  store i32 %43, ptr %6, align 4\l  ret void\l}"];
}
