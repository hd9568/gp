digraph "CFG for 'zwgljd_' function" {
	label="CFG for 'zwgljd_' function";

	Node0x55ec172f1ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{5:\l|  %6 = alloca double, i64 1, align 8\l  %7 = alloca double, i64 1, align 8\l  %8 = alloca i32, i64 1, align 4\l  %9 = alloca i32, i64 1, align 4\l  %10 = alloca i32, i64 1, align 4\l  %11 = alloca double, i64 1, align 8\l  %12 = alloca double, i64 1, align 8\l  %13 = alloca double, i64 1, align 8\l  %14 = alloca double, i64 1, align 8\l  %15 = alloca double, i64 1, align 8\l  %16 = alloca double, i64 1, align 8\l  %17 = alloca double, i64 1, align 8\l  %18 = alloca double, i64 1, align 8\l  %19 = load i32, ptr %2, align 4\l  %20 = sext i32 %19 to i64\l  %21 = icmp sgt i64 %20, 0\l  %22 = select i1 %21, i64 %20, i64 0\l  %23 = load i32, ptr %2, align 4\l  %24 = sext i32 %23 to i64\l  %25 = icmp sgt i64 %24, 0\l  %26 = select i1 %25, i64 %24, i64 0\l  %27 = load i32, ptr %2, align 4\l  %28 = sub i32 %27, 1\l  store i32 %28, ptr %9, align 4\l  %29 = load i32, ptr %9, align 4\l  %30 = sub i32 %29, 1\l  store i32 %30, ptr %10, align 4\l  store double 1.000000e+00, ptr %11, align 8\l  store double 2.000000e+00, ptr %18, align 8\l  %31 = load i32, ptr %2, align 4\l  %32 = icmp sle i32 %31, 1\l  br i1 %32, label %33, label %46\l|{<s0>T|<s1>F}}"];
	Node0x55ec172f1ca0:s0 -> Node0x55ec172f3ce0[tooltip="5 -> 33\nProbability 50.00%" ];
	Node0x55ec172f1ca0:s1 -> Node0x55ec172f3d30[tooltip="5 -> 46\nProbability 50.00%" ];
	Node0x55ec172f3ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{33:\l|  %34 = call ptr @_FortranAioBeginExternalListOutput(i32 6, ptr\l... @_QQclX6df6c54bf30b3a33893f70a74f4e2f22, i32 256)\l  %35 = call i1 @_FortranAioOutputAscii(ptr %34, ptr\l... @_QQclX25d8dda135e5b8a0e00c9f404e50133a, i64 51)\l  %36 = call i32 @_FortranAioEndIoStatement(ptr %34)\l  %37 = call ptr @_FortranAioBeginExternalListOutput(i32 6, ptr\l... @_QQclX6df6c54bf30b3a33893f70a74f4e2f22, i32 257)\l  %38 = call i1 @_FortranAioOutputAscii(ptr %37, ptr\l... @_QQclX5A57474C4A443A20616C7068612C626574613A, i64 19)\l  %39 = load double, ptr %3, align 8\l  %40 = call i1 @_FortranAioOutputReal64(ptr %37, double %39)\l  %41 = load double, ptr %4, align 8\l  %42 = call i1 @_FortranAioOutputReal64(ptr %37, double %41)\l  %43 = load i32, ptr %2, align 4\l  %44 = call i1 @_FortranAioOutputInteger32(ptr %37, i32 %43)\l  %45 = call i32 @_FortranAioEndIoStatement(ptr %37)\l  call void @exitt_()\l  br label %46\l}"];
	Node0x55ec172f3ce0 -> Node0x55ec172f3d30[tooltip="33 -> 46\nProbability 100.00%" ];
	Node0x55ec172f3d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{46:\l|  %47 = load double, ptr %3, align 8\l  %48 = load double, ptr %11, align 8\l  %49 = fneg contract double %48\l  %50 = fcmp contract ole double %47, %49\l  %51 = load double, ptr %4, align 8\l  %52 = fcmp contract ole double %51, %49\l  %53 = or i1 %50, %52\l  br i1 %53, label %54, label %58\l|{<s0>T|<s1>F}}"];
	Node0x55ec172f3d30:s0 -> Node0x55ec172f57f0[tooltip="46 -> 54\nProbability 50.00%" ];
	Node0x55ec172f3d30:s1 -> Node0x55ec172f5840[tooltip="46 -> 58\nProbability 50.00%" ];
	Node0x55ec172f57f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{54:\l|  %55 = call ptr @_FortranAioBeginExternalListOutput(i32 6, ptr\l... @_QQclX6df6c54bf30b3a33893f70a74f4e2f22, i32 261)\l  %56 = call i1 @_FortranAioOutputAscii(ptr %55, ptr\l... @_QQclX1e683068d45e8e7135272a23774357fc, i64 46)\l  %57 = call i32 @_FortranAioEndIoStatement(ptr %55)\l  call void @exitt_()\l  br label %58\l}"];
	Node0x55ec172f57f0 -> Node0x55ec172f5840[tooltip="54 -> 58\nProbability 100.00%" ];
	Node0x55ec172f5840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{58:\l|  %59 = load i32, ptr %10, align 4\l  %60 = icmp sgt i32 %59, 0\l  br i1 %60, label %61, label %72\l|{<s0>T|<s1>F}}"];
	Node0x55ec172f5840:s0 -> Node0x55ec172f5f40[tooltip="58 -> 61\nProbability 62.50%" ];
	Node0x55ec172f5840:s1 -> Node0x55ec172f5f90[tooltip="58 -> 72\nProbability 37.50%" ];
	Node0x55ec172f5f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670" fontname="Courier",label="{61:\l|  %62 = load double, ptr %3, align 8\l  %63 = load double, ptr %11, align 8\l  %64 = fadd contract double %62, %63\l  store double %64, ptr %6, align 8\l  %65 = load double, ptr %4, align 8\l  %66 = load double, ptr %11, align 8\l  %67 = fadd contract double %65, %66\l  store double %67, ptr %7, align 8\l  %68 = mul nsw i64 1, %26\l  %69 = getelementptr double, ptr %0, i64 1\l  %70 = mul nsw i64 1, %22\l  %71 = getelementptr double, ptr %1, i64 1\l  call void @zwgjd_(ptr %69, ptr %71, ptr %10, ptr %6, ptr %7)\l  br label %72\l}"];
	Node0x55ec172f5f40 -> Node0x55ec172f5f90[tooltip="61 -> 72\nProbability 100.00%" ];
	Node0x55ec172f5f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{72:\l|  %73 = load double, ptr %11, align 8\l  %74 = fneg contract double %73\l  %75 = mul nsw i64 1, %26\l  %76 = getelementptr double, ptr %0, i64 0\l  store double %74, ptr %76, align 8\l  %77 = load double, ptr %11, align 8\l  %78 = load i32, ptr %2, align 4\l  %79 = sext i32 %78 to i64\l  %80 = sub nsw i64 %79, 1\l  %81 = mul nsw i64 %80, 1\l  %82 = mul nsw i64 %81, 1\l  %83 = add nsw i64 %82, 0\l  %84 = mul nsw i64 1, %26\l  %85 = getelementptr double, ptr %0, i64 %83\l  store double %77, ptr %85, align 8\l  %86 = load i32, ptr %2, align 4\l  %87 = sub i32 %86, 1\l  %88 = sext i32 %87 to i64\l  %89 = add i64 %88, -1\l  br label %90\l}"];
	Node0x55ec172f5f90 -> Node0x55ec172f7380[tooltip="72 -> 90\nProbability 100.00%" ];
	Node0x55ec172f7380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{90:\l|  %91 = phi i32 [ %116, %94 ], [ 2, %72 ]\l  %92 = phi i64 [ %117, %94 ], [ %89, %72 ]\l  %93 = icmp sgt i64 %92, 0\l  br i1 %93, label %94, label %118\l|{<s0>T|<s1>F}}"];
	Node0x55ec172f7380:s0 -> Node0x55ec172f7440[tooltip="90 -> 94\nProbability 96.88%" ];
	Node0x55ec172f7380:s1 -> Node0x55ec172f76d0[tooltip="90 -> 118\nProbability 3.12%" ];
	Node0x55ec172f7440 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{94:\l|  store i32 %91, ptr %8, align 4\l  %95 = load i32, ptr %8, align 4\l  %96 = sext i32 %95 to i64\l  %97 = sub nsw i64 %96, 1\l  %98 = mul nsw i64 %97, 1\l  %99 = mul nsw i64 %98, 1\l  %100 = add nsw i64 %99, 0\l  %101 = mul nsw i64 1, %22\l  %102 = getelementptr double, ptr %1, i64 %100\l  %103 = load double, ptr %102, align 8\l  %104 = load double, ptr %11, align 8\l  %105 = sub nsw i64 %96, 1\l  %106 = mul nsw i64 %105, 1\l  %107 = mul nsw i64 %106, 1\l  %108 = add nsw i64 %107, 0\l  %109 = mul nsw i64 1, %26\l  %110 = getelementptr double, ptr %0, i64 %108\l  %111 = load double, ptr %110, align 8\l  %112 = call contract double @llvm.powi.f64.i32(double %111, i32 2)\l  %113 = fsub contract double %104, %112\l  %114 = fdiv contract double %103, %113\l  store double %114, ptr %102, align 8\l  %115 = load i32, ptr %8, align 4\l  %116 = add i32 %115, 1\l  %117 = sub i64 %92, 1\l  br label %90\l}"];
	Node0x55ec172f7440 -> Node0x55ec172f7380[tooltip="94 -> 90\nProbability 100.00%" ];
	Node0x55ec172f76d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{118:\l|  store i32 %91, ptr %8, align 4\l  call void @jacobf_(ptr %12, ptr %13, ptr %16, ptr %14, ptr %17, ptr %15, ptr\l... %9, ptr %3, ptr %4, ptr %76)\l  %119 = call contract double @endw1_(ptr %9, ptr %3, ptr %4)\l  %120 = load double, ptr %18, align 8\l  %121 = load double, ptr %13, align 8\l  %122 = fmul contract double %120, %121\l  %123 = fdiv contract double %119, %122\l  %124 = mul nsw i64 1, %22\l  %125 = getelementptr double, ptr %1, i64 0\l  store double %123, ptr %125, align 8\l  %126 = load i32, ptr %2, align 4\l  %127 = sext i32 %126 to i64\l  %128 = sub nsw i64 %127, 1\l  %129 = mul nsw i64 %128, 1\l  %130 = mul nsw i64 %129, 1\l  %131 = add nsw i64 %130, 0\l  %132 = mul nsw i64 1, %26\l  %133 = getelementptr double, ptr %0, i64 %131\l  call void @jacobf_(ptr %12, ptr %13, ptr %16, ptr %14, ptr %17, ptr %15, ptr\l... %9, ptr %3, ptr %4, ptr %133)\l  %134 = call contract double @endw2_(ptr %9, ptr %3, ptr %4)\l  %135 = load double, ptr %18, align 8\l  %136 = load double, ptr %13, align 8\l  %137 = fmul contract double %135, %136\l  %138 = fdiv contract double %134, %137\l  %139 = load i32, ptr %2, align 4\l  %140 = sext i32 %139 to i64\l  %141 = sub nsw i64 %140, 1\l  %142 = mul nsw i64 %141, 1\l  %143 = mul nsw i64 %142, 1\l  %144 = add nsw i64 %143, 0\l  %145 = mul nsw i64 1, %22\l  %146 = getelementptr double, ptr %1, i64 %144\l  store double %138, ptr %146, align 8\l  ret void\l}"];
}
