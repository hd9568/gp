digraph "CFG for 'hglj_' function" {
	label="CFG for 'hglj_' function";

	Node0x55ec17329220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{6:\l|  %7 = alloca float, i64 1, align 4\l  %8 = alloca float, i64 1, align 4\l  %9 = alloca float, i64 1, align 4\l  %10 = alloca i32, i64 1, align 4\l  %11 = alloca i32, i64 1, align 4\l  %12 = alloca double, i64 1, align 8\l  %13 = alloca [84 x double], i64 1, align 8\l  store i32 84, ptr %11, align 4\l  %14 = load i32, ptr %3, align 4\l  %15 = load i32, ptr %11, align 4\l  %16 = icmp sgt i32 %14, %15\l  br i1 %16, label %17, label %30\l|{<s0>T|<s1>F}}"];
	Node0x55ec17329220:s0 -> Node0x55ec17329a00[tooltip="6 -> 17\nProbability 50.00%" ];
	Node0x55ec17329220:s1 -> Node0x55ec17329a50[tooltip="6 -> 30\nProbability 50.00%" ];
	Node0x55ec17329a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{17:\l|  %18 = call ptr @_FortranAioBeginExternalListOutput(i32 6, ptr\l... @_QQclX6df6c54bf30b3a33893f70a74f4e2f22, i32 587)\l  %19 = call i1 @_FortranAioOutputAscii(ptr %18, ptr\l... @_QQclXf84d498378cdbf9adacba97532b37119, i64 35)\l  %20 = call i32 @_FortranAioEndIoStatement(ptr %18)\l  %21 = call ptr @_FortranAioBeginExternalListOutput(i32 6, ptr\l... @_QQclX6df6c54bf30b3a33893f70a74f4e2f22, i32 588)\l  %22 = call i1 @_FortranAioOutputAscii(ptr %21, ptr\l... @_QQclX4D6178696D756D20706F6C796E6F6D69616C20646567726565206973, i64 28)\l  %23 = call i1 @_FortranAioOutputInteger32(ptr %21, i32 84)\l  %24 = call i32 @_FortranAioEndIoStatement(ptr %21)\l  %25 = call ptr @_FortranAioBeginExternalListOutput(i32 6, ptr\l... @_QQclX6df6c54bf30b3a33893f70a74f4e2f22, i32 589)\l  %26 = call i1 @_FortranAioOutputAscii(ptr %25, ptr @_QQclX48657265204E503D,\l... i64 8)\l  %27 = load i32, ptr %3, align 4\l  %28 = call i1 @_FortranAioOutputInteger32(ptr %25, i32 %27)\l  %29 = call i32 @_FortranAioEndIoStatement(ptr %25)\l  call void @exitt_()\l  br label %30\l}"];
	Node0x55ec17329a00 -> Node0x55ec17329a50[tooltip="17 -> 30\nProbability 100.00%" ];
	Node0x55ec17329a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{30:\l|  %31 = load float, ptr %1, align 4\l  %32 = fpext float %31 to double\l  store double %32, ptr %12, align 8\l  %33 = load i32, ptr %3, align 4\l  %34 = sext i32 %33 to i64\l  br label %35\l}"];
	Node0x55ec17329a50 -> Node0x55ec1732acb0[tooltip="30 -> 35\nProbability 100.00%" ];
	Node0x55ec1732acb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{35:\l|  %36 = phi i32 [ %55, %39 ], [ 1, %30 ]\l  %37 = phi i64 [ %56, %39 ], [ %34, %30 ]\l  %38 = icmp sgt i64 %37, 0\l  br i1 %38, label %39, label %57\l|{<s0>T|<s1>F}}"];
	Node0x55ec1732acb0:s0 -> Node0x55ec1732ad70[tooltip="35 -> 39\nProbability 96.88%" ];
	Node0x55ec1732acb0:s1 -> Node0x55ec1732af70[tooltip="35 -> 57\nProbability 3.12%" ];
	Node0x55ec1732ad70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{39:\l|  store i32 %36, ptr %10, align 4\l  %40 = load i32, ptr %10, align 4\l  %41 = sext i32 %40 to i64\l  %42 = sub nsw i64 %41, 1\l  %43 = mul nsw i64 %42, 1\l  %44 = mul nsw i64 %43, 1\l  %45 = add nsw i64 %44, 0\l  %46 = getelementptr float, ptr %2, i64 %45\l  %47 = load float, ptr %46, align 4\l  %48 = fpext float %47 to double\l  %49 = sub nsw i64 %41, 1\l  %50 = mul nsw i64 %49, 1\l  %51 = mul nsw i64 %50, 1\l  %52 = add nsw i64 %51, 0\l  %53 = getelementptr double, ptr %13, i64 %52\l  store double %48, ptr %53, align 8\l  %54 = load i32, ptr %10, align 4\l  %55 = add i32 %54, 1\l  %56 = sub i64 %37, 1\l  br label %35\l}"];
	Node0x55ec1732ad70 -> Node0x55ec1732acb0[tooltip="39 -> 35\nProbability 100.00%" ];
	Node0x55ec1732af70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{57:\l|  store i32 %36, ptr %10, align 4\l  %58 = load float, ptr %4, align 4\l  store float %58, ptr %7, align 4\l  %59 = load float, ptr %5, align 4\l  store float %59, ptr %8, align 4\l  %60 = call contract double @hgljd_(ptr %0, ptr %12, ptr %13, ptr %3, ptr %7,\l... ptr %8)\l  %61 = fptrunc double %60 to float\l  store float %61, ptr %9, align 4\l  %62 = load float, ptr %9, align 4\l  ret float %62\l}"];
}
