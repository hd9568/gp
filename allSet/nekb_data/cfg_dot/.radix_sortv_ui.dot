digraph "CFG for 'radix_sortv_ui' function" {
	label="CFG for 'radix_sortv_ui' function";

	Node0x5564aada4920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{entry:\l|  %out.addr = alloca ptr, align 8\l  %A.addr = alloca ptr, align 8\l  %n.addr = alloca i32, align 4\l  %stride.addr = alloca i32, align 4\l  %work.addr = alloca ptr, align 8\l  %count.addr = alloca ptr, align 8\l  %end = alloca ptr, align 8\l  %bitorkey = alloca i32, align 4\l  %shift = alloca [4 x i32], align 16\l  %offsets = alloca [4 x ptr], align 16\l  %digits = alloca i32, align 4\l  %src = alloca ptr, align 8\l  %dst = alloca ptr, align 8\l  %d = alloca i32, align 4\l  %t = alloca ptr, align 8\l  store ptr %out, ptr %out.addr, align 8\l  store ptr %A, ptr %A.addr, align 8\l  store i32 %n, ptr %n.addr, align 4\l  store i32 %stride, ptr %stride.addr, align 4\l  store ptr %work, ptr %work.addr, align 8\l  store ptr %count, ptr %count.addr, align 8\l  %0 = load ptr, ptr %A.addr, align 8\l  %1 = load i32, ptr %n.addr, align 4\l  %2 = load i32, ptr %stride.addr, align 4\l  %mul = mul i32 %1, %2\l  %idx.ext = zext i32 %mul to i64\l  %add.ptr = getelementptr inbounds i8, ptr %0, i64 %idx.ext\l  store ptr %add.ptr, ptr %end, align 8\l  %3 = load ptr, ptr %count.addr, align 8\l  %4 = load ptr, ptr %A.addr, align 8\l  %5 = load ptr, ptr %end, align 8\l  %6 = load i32, ptr %stride.addr, align 4\l  %call = call i32 @radix_count_ui(ptr noundef %3, ptr noundef %4, ptr noundef\l... %5, i32 noundef %6)\l  store i32 %call, ptr %bitorkey, align 4\l  %7 = load i32, ptr %bitorkey, align 4\l  %8 = load ptr, ptr %count.addr, align 8\l  %arraydecay = getelementptr inbounds [4 x i32], ptr %shift, i64 0, i64 0\l  %arraydecay1 = getelementptr inbounds [4 x ptr], ptr %offsets, i64 0, i64 0\l  %call2 = call i32 @radix_zeros_ui(i32 noundef %7, ptr noundef %8, ptr\l... noundef %arraydecay, ptr noundef %arraydecay1)\l  store i32 %call2, ptr %digits, align 4\l  %9 = load i32, ptr %digits, align 4\l  %cmp = icmp eq i32 %9, 0\l  br i1 %cmp, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x5564aada4920:s0 -> Node0x5564aad98da0[tooltip="entry -> if.then\nProbability 37.50%" ];
	Node0x5564aada4920:s1 -> Node0x5564aad98e10[tooltip="entry -> if.else\nProbability 62.50%" ];
	Node0x5564aad98da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{if.then:\l|  %10 = load ptr, ptr %out.addr, align 8\l  %11 = load i32, ptr %n.addr, align 4\l  %conv = zext i32 %11 to i64\l  %mul3 = mul i64 %conv, 4\l  call void @llvm.memset.p0.i64(ptr align 4 %10, i8 0, i64 %mul3, i1 false)\l  br label %if.end24\l}"];
	Node0x5564aad98da0 -> Node0x5564aad99430[tooltip="if.then -> if.end24\nProbability 100.00%" ];
	Node0x5564aad98e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.else:\l|  %12 = load ptr, ptr %out.addr, align 8\l  %13 = load ptr, ptr %A.addr, align 8\l  %cmp4 = icmp eq ptr %12, %13\l  br i1 %cmp4, label %if.then8, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x5564aad98e10:s0 -> Node0x5564aad99680[tooltip="if.else -> if.then8\nProbability 37.50%" ];
	Node0x5564aad98e10:s1 -> Node0x5564aad996d0[tooltip="if.else -> lor.lhs.false\nProbability 62.50%" ];
	Node0x5564aad996d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670" fontname="Courier",label="{lor.lhs.false:\l|  %14 = load i32, ptr %digits, align 4\l  %and = and i32 %14, 1\l  %cmp6 = icmp eq i32 %and, 0\l  br i1 %cmp6, label %if.then8, label %if.else9\l|{<s0>T|<s1>F}}"];
	Node0x5564aad996d0:s0 -> Node0x5564aad99680[tooltip="lor.lhs.false -> if.then8\nProbability 50.00%" ];
	Node0x5564aad996d0:s1 -> Node0x5564aadaf650[tooltip="lor.lhs.false -> if.else9\nProbability 50.00%" ];
	Node0x5564aad99680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670" fontname="Courier",label="{if.then8:\l|  %15 = load ptr, ptr %out.addr, align 8\l  store ptr %15, ptr %dst, align 8\l  %16 = load ptr, ptr %work.addr, align 8\l  store ptr %16, ptr %src, align 8\l  br label %if.end\l}"];
	Node0x5564aad99680 -> Node0x5564aadaf990[tooltip="if.then8 -> if.end\nProbability 100.00%" ];
	Node0x5564aadaf650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70" fontname="Courier",label="{if.else9:\l|  %17 = load ptr, ptr %out.addr, align 8\l  store ptr %17, ptr %src, align 8\l  %18 = load ptr, ptr %work.addr, align 8\l  store ptr %18, ptr %dst, align 8\l  br label %if.end\l}"];
	Node0x5564aadaf650 -> Node0x5564aadaf990[tooltip="if.else9 -> if.end\nProbability 100.00%" ];
	Node0x5564aadaf990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.end:\l|  %19 = load ptr, ptr %A.addr, align 8\l  %20 = load ptr, ptr %end, align 8\l  %21 = load i32, ptr %stride.addr, align 4\l  %arrayidx = getelementptr inbounds [4 x i32], ptr %shift, i64 0, i64 0\l  %22 = load i32, ptr %arrayidx, align 16\l  %arrayidx10 = getelementptr inbounds [4 x ptr], ptr %offsets, i64 0, i64 0\l  %23 = load ptr, ptr %arrayidx10, align 16\l  %24 = load ptr, ptr %src, align 8\l  call void @radix_passv_ui(ptr noundef %19, ptr noundef %20, i32 noundef %21,\l... i32 noundef %22, ptr noundef %23, ptr noundef %24)\l  store i32 1, ptr %d, align 4\l  br label %for.cond\l}"];
	Node0x5564aadaf990 -> Node0x5564aadb0520[tooltip="if.end -> for.cond\nProbability 100.00%" ];
	Node0x5564aadb0520 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %25 = load i32, ptr %d, align 4\l  %26 = load i32, ptr %digits, align 4\l  %cmp11 = icmp ne i32 %25, %26\l  br i1 %cmp11, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5564aadb0520:s0 -> Node0x5564aadb0770[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x5564aadb0520:s1 -> Node0x5564aadb07f0[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x5564aadb0770 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %27 = load ptr, ptr %src, align 8\l  %28 = load ptr, ptr %src, align 8\l  %29 = load i32, ptr %n.addr, align 4\l  %idx.ext13 = zext i32 %29 to i64\l  %add.ptr14 = getelementptr inbounds i32, ptr %28, i64 %idx.ext13\l  %30 = load i32, ptr %d, align 4\l  %idxprom = zext i32 %30 to i64\l  %arrayidx15 = getelementptr inbounds [4 x i32], ptr %shift, i64 0, i64\l... %idxprom\l  %31 = load i32, ptr %arrayidx15, align 4\l  %32 = load i32, ptr %d, align 4\l  %idxprom16 = zext i32 %32 to i64\l  %arrayidx17 = getelementptr inbounds [4 x ptr], ptr %offsets, i64 0, i64\l... %idxprom16\l  %33 = load ptr, ptr %arrayidx17, align 8\l  %34 = load ptr, ptr %dst, align 8\l  call void @radix_passv_ui(ptr noundef %27, ptr noundef %add.ptr14, i32\l... noundef 4, i32 noundef %31, ptr noundef %33, ptr noundef %34)\l  %35 = load ptr, ptr %src, align 8\l  store ptr %35, ptr %t, align 8\l  %36 = load ptr, ptr %dst, align 8\l  store ptr %36, ptr %src, align 8\l  %37 = load ptr, ptr %t, align 8\l  store ptr %37, ptr %dst, align 8\l  br label %for.inc\l}"];
	Node0x5564aadb0770 -> Node0x5564aadb1d20[tooltip="for.body -> for.inc\nProbability 100.00%" ];
	Node0x5564aadb1d20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %38 = load i32, ptr %d, align 4\l  %inc = add i32 %38, 1\l  store i32 %inc, ptr %d, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x5564aadb1d20 -> Node0x5564aadb0520[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x5564aadb07f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  %39 = load ptr, ptr %src, align 8\l  %40 = load ptr, ptr %out.addr, align 8\l  %cmp18 = icmp ne ptr %39, %40\l  br i1 %cmp18, label %if.then20, label %if.end23\l|{<s0>T|<s1>F}}"];
	Node0x5564aadb07f0:s0 -> Node0x5564aadb2300[tooltip="for.end -> if.then20\nProbability 62.50%" ];
	Node0x5564aadb07f0:s1 -> Node0x5564aadb2350[tooltip="for.end -> if.end23\nProbability 37.50%" ];
	Node0x5564aadb2300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670" fontname="Courier",label="{if.then20:\l|  %41 = load ptr, ptr %out.addr, align 8\l  %42 = load ptr, ptr %src, align 8\l  %43 = load i32, ptr %n.addr, align 4\l  %conv21 = zext i32 %43 to i64\l  %mul22 = mul i64 %conv21, 4\l  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %41, ptr align 4 %42, i64\l... %mul22, i1 false)\l  br label %if.end23\l}"];
	Node0x5564aadb2300 -> Node0x5564aadb2350[tooltip="if.then20 -> if.end23\nProbability 100.00%" ];
	Node0x5564aadb2350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.end23:\l|  br label %if.end24\l}"];
	Node0x5564aadb2350 -> Node0x5564aad99430[tooltip="if.end23 -> if.end24\nProbability 100.00%" ];
	Node0x5564aad99430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{if.end24:\l|  ret void\l}"];
}
