digraph "CFG for 'radix_zeros_ui' function" {
	label="CFG for 'radix_zeros_ui' function";

	Node0x5564aadfb660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %bitorkey.addr = alloca i32, align 4\l  %count.addr = alloca ptr, align 8\l  %shift.addr = alloca ptr, align 8\l  %offsets.addr = alloca ptr, align 8\l  %digits = alloca i32, align 4\l  %sh = alloca i32, align 4\l  %c = alloca ptr, align 8\l  store i32 %bitorkey, ptr %bitorkey.addr, align 4\l  store ptr %count, ptr %count.addr, align 8\l  store ptr %shift, ptr %shift.addr, align 8\l  store ptr %offsets, ptr %offsets.addr, align 8\l  store i32 0, ptr %digits, align 4\l  store i32 0, ptr %sh, align 4\l  %0 = load ptr, ptr %count.addr, align 8\l  %arrayidx = getelementptr inbounds [256 x i32], ptr %0, i64 0\l  %arrayidx1 = getelementptr inbounds [256 x i32], ptr %arrayidx, i64 0, i64 0\l  store ptr %arrayidx1, ptr %c, align 8\l  br label %do.body\l}"];
	Node0x5564aadfb660 -> Node0x5564aadfc220[tooltip="entry -> do.body\nProbability 100.00%" ];
	Node0x5564aadfc220 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{do.body:\l|  %1 = load i32, ptr %bitorkey.addr, align 4\l  %and = and i32 %1, 255\l  %tobool = icmp ne i32 %and, 0\l  br i1 %tobool, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5564aadfc220:s0 -> Node0x5564aadfc4c0[tooltip="do.body -> if.then\nProbability 62.50%" ];
	Node0x5564aadfc220:s1 -> Node0x5564aadfc530[tooltip="do.body -> if.end\nProbability 37.50%" ];
	Node0x5564aadfc4c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{if.then:\l|  %2 = load i32, ptr %sh, align 4\l  %3 = load ptr, ptr %shift.addr, align 8\l  %incdec.ptr = getelementptr inbounds i32, ptr %3, i32 1\l  store ptr %incdec.ptr, ptr %shift.addr, align 8\l  store i32 %2, ptr %3, align 4\l  %4 = load ptr, ptr %c, align 8\l  %5 = load ptr, ptr %offsets.addr, align 8\l  %incdec.ptr2 = getelementptr inbounds ptr, ptr %5, i32 1\l  store ptr %incdec.ptr2, ptr %offsets.addr, align 8\l  store ptr %4, ptr %5, align 8\l  %6 = load i32, ptr %digits, align 4\l  %inc = add i32 %6, 1\l  store i32 %inc, ptr %digits, align 4\l  %7 = load ptr, ptr %c, align 8\l  call void @radix_offsets_ui(ptr noundef %7)\l  br label %if.end\l}"];
	Node0x5564aadfc4c0 -> Node0x5564aadfc530[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x5564aadfc530 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end:\l|  br label %do.cond\l}"];
	Node0x5564aadfc530 -> Node0x5564aadfd0f0[tooltip="if.end -> do.cond\nProbability 100.00%" ];
	Node0x5564aadfd0f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{do.cond:\l|  %8 = load i32, ptr %bitorkey.addr, align 4\l  %shr = lshr i32 %8, 8\l  store i32 %shr, ptr %bitorkey.addr, align 4\l  %9 = load i32, ptr %sh, align 4\l  %add = add i32 %9, 8\l  store i32 %add, ptr %sh, align 4\l  %10 = load ptr, ptr %c, align 8\l  %add.ptr = getelementptr inbounds i32, ptr %10, i64 256\l  store ptr %add.ptr, ptr %c, align 8\l  %11 = load i32, ptr %sh, align 4\l  %conv = zext i32 %11 to i64\l  %cmp = icmp ne i64 %conv, 32\l  br i1 %cmp, label %do.body, label %do.end, !llvm.loop !6\l|{<s0>T|<s1>F}}"];
	Node0x5564aadfd0f0:s0 -> Node0x5564aadfc220[tooltip="do.cond -> do.body\nProbability 96.88%" ];
	Node0x5564aadfd0f0:s1 -> Node0x5564aadfdad0[tooltip="do.cond -> do.end\nProbability 3.12%" ];
	Node0x5564aadfdad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{do.end:\l|  %12 = load i32, ptr %digits, align 4\l  ret i32 %12\l}"];
}
