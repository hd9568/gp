digraph "CFG for 'crotg_' function" {
	label="CFG for 'crotg_' function";

	Node0x55ee0fd22c30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{4:\l|  %5 = alloca \{ float, float \}, i64 1, align 8\l  %6 = alloca float, i64 1, align 4\l  %7 = alloca float, i64 1, align 4\l  %8 = load \{ float, float \}, ptr %0, align 4\l  %9 = call ptr @llvm.stacksave.p0()\l  %10 = alloca \<2 x float\>, i64 1, align 8\l  store \{ float, float \} %8, ptr %10, align 4\l  %11 = load \<2 x float\>, ptr %10, align 8\l  %12 = call float @cabsf(\<2 x float\> %11)\l  call void @llvm.stackrestore.p0(ptr %9)\l  %13 = fcmp contract une float %12, 0.000000e+00\l  %14 = xor i1 %13, true\l  br i1 %14, label %15, label %17\l|{<s0>T|<s1>F}}"];
	Node0x55ee0fd22c30:s0 -> Node0x55ee0fd236b0[tooltip="4 -> 15\nProbability 50.00%" ];
	Node0x55ee0fd22c30:s1 -> Node0x55ee0fd23700[tooltip="4 -> 17\nProbability 50.00%" ];
	Node0x55ee0fd236b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{15:\l|  store float 0.000000e+00, ptr %2, align 4\l  store \{ float, float \} \{ float 1.000000e+00, float 0.000000e+00 \}, ptr %3,\l... align 4\l  %16 = load \{ float, float \}, ptr %1, align 4\l  store \{ float, float \} %16, ptr %0, align 4\l  br label %132\l}"];
	Node0x55ee0fd236b0 -> Node0x55ee0fd23a80[tooltip="15 -> 132\nProbability 100.00%" ];
	Node0x55ee0fd23700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{17:\l|  %18 = load \{ float, float \}, ptr %0, align 4\l  %19 = call ptr @llvm.stacksave.p0()\l  %20 = alloca \<2 x float\>, i64 1, align 8\l  store \{ float, float \} %18, ptr %20, align 4\l  %21 = load \<2 x float\>, ptr %20, align 8\l  %22 = call float @cabsf(\<2 x float\> %21)\l  call void @llvm.stackrestore.p0(ptr %19)\l  %23 = load \{ float, float \}, ptr %1, align 4\l  %24 = call ptr @llvm.stacksave.p0()\l  %25 = alloca \<2 x float\>, i64 1, align 8\l  store \{ float, float \} %23, ptr %25, align 4\l  %26 = load \<2 x float\>, ptr %25, align 8\l  %27 = call float @cabsf(\<2 x float\> %26)\l  call void @llvm.stackrestore.p0(ptr %24)\l  %28 = fadd contract float %22, %27\l  store float %28, ptr %7, align 4\l  %29 = load float, ptr %7, align 4\l  %30 = load \{ float, float \}, ptr %0, align 4\l  %31 = insertvalue \{ float, float \} undef, float %29, 0\l  %32 = insertvalue \{ float, float \} %31, float 0.000000e+00, 1\l  %33 = extractvalue \{ float, float \} %30, 0\l  %34 = extractvalue \{ float, float \} %30, 1\l  %35 = extractvalue \{ float, float \} %32, 0\l  %36 = extractvalue \{ float, float \} %32, 1\l  %37 = call \<2 x float\> @__divsc3(float %33, float %34, float %35, float %36)\l  %38 = call ptr @llvm.stacksave.p0()\l  %39 = alloca \<2 x float\>, i64 1, align 8\l  store \<2 x float\> %37, ptr %39, align 8\l  %40 = load \{ float, float \}, ptr %39, align 4\l  call void @llvm.stackrestore.p0(ptr %38)\l  %41 = call ptr @llvm.stacksave.p0()\l  %42 = alloca \<2 x float\>, i64 1, align 8\l  store \{ float, float \} %40, ptr %42, align 4\l  %43 = load \<2 x float\>, ptr %42, align 8\l  %44 = call float @cabsf(\<2 x float\> %43)\l  call void @llvm.stackrestore.p0(ptr %41)\l  %45 = call contract float @llvm.powi.f32.i32(float %44, i32 2)\l  %46 = load \{ float, float \}, ptr %1, align 4\l  %47 = load float, ptr %7, align 4\l  %48 = insertvalue \{ float, float \} undef, float %47, 0\l  %49 = insertvalue \{ float, float \} %48, float 0.000000e+00, 1\l  %50 = extractvalue \{ float, float \} %46, 0\l  %51 = extractvalue \{ float, float \} %46, 1\l  %52 = extractvalue \{ float, float \} %49, 0\l  %53 = extractvalue \{ float, float \} %49, 1\l  %54 = call \<2 x float\> @__divsc3(float %50, float %51, float %52, float %53)\l  %55 = call ptr @llvm.stacksave.p0()\l  %56 = alloca \<2 x float\>, i64 1, align 8\l  store \<2 x float\> %54, ptr %56, align 8\l  %57 = load \{ float, float \}, ptr %56, align 4\l  call void @llvm.stackrestore.p0(ptr %55)\l  %58 = call ptr @llvm.stacksave.p0()\l  %59 = alloca \<2 x float\>, i64 1, align 8\l  store \{ float, float \} %57, ptr %59, align 4\l  %60 = load \<2 x float\>, ptr %59, align 8\l  %61 = call float @cabsf(\<2 x float\> %60)\l  call void @llvm.stackrestore.p0(ptr %58)\l  %62 = call contract float @llvm.powi.f32.i32(float %61, i32 2)\l  %63 = fadd contract float %45, %62\l  %64 = call contract float @llvm.sqrt.f32(float %63)\l  %65 = fmul contract float %29, %64\l  store float %65, ptr %6, align 4\l  %66 = load \{ float, float \}, ptr %0, align 4\l  %67 = call ptr @llvm.stacksave.p0()\l  %68 = alloca \<2 x float\>, i64 1, align 8\l  store \{ float, float \} %66, ptr %68, align 4\l  %69 = load \<2 x float\>, ptr %68, align 8\l  %70 = call float @cabsf(\<2 x float\> %69)\l  call void @llvm.stackrestore.p0(ptr %67)\l  %71 = insertvalue \{ float, float \} undef, float %70, 0\l  %72 = insertvalue \{ float, float \} %71, float 0.000000e+00, 1\l  %73 = extractvalue \{ float, float \} %66, 0\l  %74 = extractvalue \{ float, float \} %66, 1\l  %75 = extractvalue \{ float, float \} %72, 0\l  %76 = extractvalue \{ float, float \} %72, 1\l  %77 = call \<2 x float\> @__divsc3(float %73, float %74, float %75, float %76)\l  %78 = call ptr @llvm.stacksave.p0()\l  %79 = alloca \<2 x float\>, i64 1, align 8\l  store \<2 x float\> %77, ptr %79, align 8\l  %80 = load \{ float, float \}, ptr %79, align 4\l  call void @llvm.stackrestore.p0(ptr %78)\l  store \{ float, float \} %80, ptr %5, align 4\l  %81 = load \{ float, float \}, ptr %0, align 4\l  %82 = call ptr @llvm.stacksave.p0()\l  %83 = alloca \<2 x float\>, i64 1, align 8\l  store \{ float, float \} %81, ptr %83, align 4\l  %84 = load \<2 x float\>, ptr %83, align 8\l  %85 = call float @cabsf(\<2 x float\> %84)\l  call void @llvm.stackrestore.p0(ptr %82)\l  %86 = load float, ptr %6, align 4\l  %87 = fdiv contract float %85, %86\l  store float %87, ptr %2, align 4\l  %88 = load \{ float, float \}, ptr %5, align 4\l  %89 = load \{ float, float \}, ptr %1, align 4\l  %90 = extractvalue \{ float, float \} %89, 1\l  %91 = fneg contract float %90\l  %92 = insertvalue \{ float, float \} %89, float %91, 1\l  %93 = extractvalue \{ float, float \} %88, 0\l  %94 = extractvalue \{ float, float \} %88, 1\l  %95 = extractvalue \{ float, float \} %92, 0\l  %96 = extractvalue \{ float, float \} %92, 1\l  %97 = fmul contract float %93, %95\l  %98 = fmul contract float %94, %95\l  %99 = fmul contract float %93, %96\l  %100 = fadd contract float %99, %98\l  %101 = fmul contract float %94, %96\l  %102 = fsub contract float %97, %101\l  %103 = insertvalue \{ float, float \} undef, float %102, 0\l  %104 = insertvalue \{ float, float \} %103, float %100, 1\l  %105 = load float, ptr %6, align 4\l  %106 = insertvalue \{ float, float \} undef, float %105, 0\l  %107 = insertvalue \{ float, float \} %106, float 0.000000e+00, 1\l  %108 = extractvalue \{ float, float \} %104, 0\l  %109 = extractvalue \{ float, float \} %104, 1\l  %110 = extractvalue \{ float, float \} %107, 0\l  %111 = extractvalue \{ float, float \} %107, 1\l  %112 = call \<2 x float\> @__divsc3(float %108, float %109, float %110, float\l... %111)\l  %113 = call ptr @llvm.stacksave.p0()\l  %114 = alloca \<2 x float\>, i64 1, align 8\l  store \<2 x float\> %112, ptr %114, align 8\l  %115 = load \{ float, float \}, ptr %114, align 4\l  call void @llvm.stackrestore.p0(ptr %113)\l  store \{ float, float \} %115, ptr %3, align 4\l  %116 = load \{ float, float \}, ptr %5, align 4\l  %117 = load float, ptr %6, align 4\l  %118 = insertvalue \{ float, float \} undef, float %117, 0\l  %119 = insertvalue \{ float, float \} %118, float 0.000000e+00, 1\l  %120 = extractvalue \{ float, float \} %116, 0\l  %121 = extractvalue \{ float, float \} %116, 1\l  %122 = extractvalue \{ float, float \} %119, 0\l  %123 = extractvalue \{ float, float \} %119, 1\l  %124 = fmul contract float %120, %122\l  %125 = fmul contract float %121, %122\l  %126 = fmul contract float %120, %123\l  %127 = fadd contract float %126, %125\l  %128 = fmul contract float %121, %123\l  %129 = fsub contract float %124, %128\l  %130 = insertvalue \{ float, float \} undef, float %129, 0\l  %131 = insertvalue \{ float, float \} %130, float %127, 1\l  store \{ float, float \} %131, ptr %0, align 4\l  br label %132\l}"];
	Node0x55ee0fd23700 -> Node0x55ee0fd23a80[tooltip="17 -> 132\nProbability 100.00%" ];
	Node0x55ee0fd23a80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{132:\l|  ret void\l}"];
}
