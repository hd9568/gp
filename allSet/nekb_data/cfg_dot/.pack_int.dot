digraph "CFG for 'pack_int' function" {
	label="CFG for 'pack_int' function";

	Node0x5641933e7ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %data.addr = alloca ptr, align 8\l  %row_size.addr = alloca i32, align 4\l  %id.addr = alloca i32, align 4\l  %input.addr = alloca ptr, align 8\l  %n.addr = alloca i32, align 4\l  %size.addr = alloca i32, align 4\l  %p_off.addr = alloca i32, align 4\l  %perm.addr = alloca ptr, align 8\l  %after = alloca i32, align 4\l  %after_len = alloca i32, align 4\l  %dummy = alloca i32, align 4\l  %len_ptr = alloca ptr, align 8\l  %i = alloca i32, align 4\l  %p = alloca i32, align 4\l  %lp = alloca i32, align 4\l  %len = alloca i32, align 4\l  %out = alloca ptr, align 8\l  %row = alloca ptr, align 8\l  store ptr %data, ptr %data.addr, align 8\l  store i32 %row_size, ptr %row_size.addr, align 4\l  store i32 %id, ptr %id.addr, align 4\l  store ptr %input, ptr %input.addr, align 8\l  store i32 %n, ptr %n.addr, align 4\l  store i32 %size, ptr %size.addr, align 4\l  store i32 %p_off, ptr %p_off.addr, align 4\l  store ptr %perm, ptr %perm.addr, align 8\l  %0 = load i32, ptr %p_off.addr, align 4\l  %conv = zext i32 %0 to i64\l  %add = add i64 %conv, 4\l  %conv1 = trunc i64 %add to i32\l  store i32 %conv1, ptr %after, align 4\l  %1 = load i32, ptr %size.addr, align 4\l  %2 = load i32, ptr %after, align 4\l  %sub = sub i32 %1, %2\l  store i32 %sub, ptr %after_len, align 4\l  br label %do.body\l}"];
	Node0x5641933e7ef0 -> Node0x5641933f4cd0[tooltip="entry -> do.body\nProbability 100.00%" ];
	Node0x5641933f4cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{do.body:\l|  store ptr %dummy, ptr %len_ptr, align 8\l  store i32 -1, ptr %lp, align 4\l  store i32 0, ptr %len, align 4\l  %3 = load ptr, ptr %data.addr, align 8\l  %4 = load i32, ptr %n.addr, align 4\l  %5 = load i32, ptr %row_size.addr, align 4\l  %add2 = add i32 %5, 3\l  %mul = mul i32 %4, %add2\l  %conv3 = zext i32 %mul to i64\l  %mul4 = mul i64 %conv3, 4\l  %call = call ptr @array_reserve_(ptr noundef %3, i64 noundef %mul4, i64\l... noundef 1, ptr noundef @.str, i32 noundef 48)\l  store ptr %call, ptr %out, align 8\l  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x5641933f4cd0 -> Node0x5641933f5760[tooltip="do.body -> for.cond\nProbability 100.00%" ];
	Node0x5641933f5760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %6 = load i32, ptr %i, align 4\l  %7 = load i32, ptr %n.addr, align 4\l  %cmp = icmp ult i32 %6, %7\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5641933f5760:s0 -> Node0x5641933f59b0[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x5641933f5760:s1 -> Node0x5641933f5a30[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x5641933f59b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %8 = load ptr, ptr %input.addr, align 8\l  %9 = load i32, ptr %size.addr, align 4\l  %10 = load ptr, ptr %perm.addr, align 8\l  %11 = load i32, ptr %i, align 4\l  %idxprom = zext i32 %11 to i64\l  %arrayidx = getelementptr inbounds i32, ptr %10, i64 %idxprom\l  %12 = load i32, ptr %arrayidx, align 4\l  %mul6 = mul i32 %9, %12\l  %idx.ext = zext i32 %mul6 to i64\l  %add.ptr = getelementptr inbounds i8, ptr %8, i64 %idx.ext\l  store ptr %add.ptr, ptr %row, align 8\l  %13 = load ptr, ptr %row, align 8\l  %14 = load i32, ptr %p_off.addr, align 4\l  %idx.ext7 = zext i32 %14 to i64\l  %add.ptr8 = getelementptr inbounds i8, ptr %13, i64 %idx.ext7\l  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %p, ptr align 1 %add.ptr8, i64\l... 4, i1 false)\l  %15 = load i32, ptr %p, align 4\l  %16 = load i32, ptr %lp, align 4\l  %cmp9 = icmp ne i32 %15, %16\l  br i1 %cmp9, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5641933f59b0:s0 -> Node0x5641933f6f30[tooltip="for.body -> if.then\nProbability 50.00%" ];
	Node0x5641933f59b0:s1 -> Node0x5641933f6fa0[tooltip="for.body -> if.end\nProbability 50.00%" ];
	Node0x5641933f6f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then:\l|  %17 = load i32, ptr %p, align 4\l  store i32 %17, ptr %lp, align 4\l  %18 = load i32, ptr %len, align 4\l  %19 = load ptr, ptr %len_ptr, align 8\l  store i32 %18, ptr %19, align 4\l  %20 = load i32, ptr %p, align 4\l  %21 = load ptr, ptr %out, align 8\l  %incdec.ptr = getelementptr inbounds i32, ptr %21, i32 1\l  store ptr %incdec.ptr, ptr %out, align 8\l  store i32 %20, ptr %21, align 4\l  %22 = load i32, ptr %id.addr, align 4\l  %23 = load ptr, ptr %out, align 8\l  %incdec.ptr11 = getelementptr inbounds i32, ptr %23, i32 1\l  store ptr %incdec.ptr11, ptr %out, align 8\l  store i32 %22, ptr %23, align 4\l  %24 = load ptr, ptr %out, align 8\l  %incdec.ptr12 = getelementptr inbounds i32, ptr %24, i32 1\l  store ptr %incdec.ptr12, ptr %out, align 8\l  store ptr %24, ptr %len_ptr, align 8\l  store i32 0, ptr %len, align 4\l  br label %if.end\l}"];
	Node0x5641933f6f30 -> Node0x5641933f6fa0[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x5641933f6fa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end:\l|  %25 = load ptr, ptr %out, align 8\l  %26 = load ptr, ptr %row, align 8\l  %27 = load i32, ptr %p_off.addr, align 4\l  %conv13 = zext i32 %27 to i64\l  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %25, ptr align 1 %26, i64\l... %conv13, i1 false)\l  %28 = load ptr, ptr %out, align 8\l  %29 = load i32, ptr %p_off.addr, align 4\l  %idx.ext14 = zext i32 %29 to i64\l  %add.ptr15 = getelementptr inbounds i8, ptr %28, i64 %idx.ext14\l  %30 = load ptr, ptr %row, align 8\l  %31 = load i32, ptr %after, align 4\l  %idx.ext16 = zext i32 %31 to i64\l  %add.ptr17 = getelementptr inbounds i8, ptr %30, i64 %idx.ext16\l  %32 = load i32, ptr %after_len, align 4\l  %conv18 = zext i32 %32 to i64\l  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %add.ptr15, ptr align 1\l... %add.ptr17, i64 %conv18, i1 false)\l  %33 = load i32, ptr %row_size.addr, align 4\l  %34 = load ptr, ptr %out, align 8\l  %idx.ext19 = zext i32 %33 to i64\l  %add.ptr20 = getelementptr inbounds i32, ptr %34, i64 %idx.ext19\l  store ptr %add.ptr20, ptr %out, align 8\l  %35 = load i32, ptr %row_size.addr, align 4\l  %36 = load i32, ptr %len, align 4\l  %add21 = add i32 %36, %35\l  store i32 %add21, ptr %len, align 4\l  br label %for.inc\l}"];
	Node0x5641933f6fa0 -> Node0x5641933f8d00[tooltip="if.end -> for.inc\nProbability 100.00%" ];
	Node0x5641933f8d00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %37 = load i32, ptr %i, align 4\l  %inc = add i32 %37, 1\l  store i32 %inc, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x5641933f8d00 -> Node0x5641933f5760[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x5641933f5a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  %38 = load i32, ptr %len, align 4\l  %39 = load ptr, ptr %len_ptr, align 8\l  store i32 %38, ptr %39, align 4\l  %40 = load ptr, ptr %out, align 8\l  %41 = load ptr, ptr %data.addr, align 8\l  %ptr = getelementptr inbounds %struct.array, ptr %41, i32 0, i32 0\l  %42 = load ptr, ptr %ptr, align 8\l  %sub.ptr.lhs.cast = ptrtoint ptr %40 to i64\l  %sub.ptr.rhs.cast = ptrtoint ptr %42 to i64\l  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast\l  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4\l  %43 = load ptr, ptr %data.addr, align 8\l  %n22 = getelementptr inbounds %struct.array, ptr %43, i32 0, i32 1\l  store i64 %sub.ptr.div, ptr %n22, align 8\l  br label %do.end\l}"];
	Node0x5641933f5a30 -> Node0x5641933f9a40[tooltip="for.end -> do.end\nProbability 100.00%" ];
	Node0x5641933f9a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{do.end:\l|  ret void\l}"];
}
